ARM GAS  C:\Users\Robert\AppData\Local\Temp\cc3EfiAs.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"CapSense_1_CSHL.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.comm	CapSense_1_rawFilterData1,16,4
  19              		.comm	CapSense_1_sensorBaseline,16,4
  20              		.comm	CapSense_1_sensorBaselineLow,8,4
  21              		.comm	CapSense_1_sensorSignal,8,4
  22              		.comm	CapSense_1_sensorOnMask,1,4
  23              		.comm	CapSense_1_lowBaselineResetCnt,8,4
  24              		.global	CapSense_1_fingerThreshold
  25              		.section	.rodata
  26              		.align	2
  27              		.type	CapSense_1_fingerThreshold, %object
  28              		.size	CapSense_1_fingerThreshold, 8
  29              	CapSense_1_fingerThreshold:
  30 0000 64       		.byte	100
  31 0001 64       		.byte	100
  32 0002 64       		.byte	100
  33 0003 64       		.byte	100
  34 0004 64       		.byte	100
  35 0005 64       		.byte	100
  36 0006 64       		.byte	100
  37 0007 64       		.byte	100
  38              		.global	CapSense_1_noiseThreshold
  39              		.align	2
  40              		.type	CapSense_1_noiseThreshold, %object
  41              		.size	CapSense_1_noiseThreshold, 8
  42              	CapSense_1_noiseThreshold:
  43 0008 14       		.byte	20
  44 0009 14       		.byte	20
  45 000a 14       		.byte	20
  46 000b 14       		.byte	20
  47 000c 14       		.byte	20
  48 000d 14       		.byte	20
  49 000e 14       		.byte	20
  50 000f 14       		.byte	20
  51              		.global	CapSense_1_hysteresis
  52              		.align	2
  53              		.type	CapSense_1_hysteresis, %object
  54              		.size	CapSense_1_hysteresis, 8
  55              	CapSense_1_hysteresis:
  56 0010 0A       		.byte	10
  57 0011 0A       		.byte	10
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cc3EfiAs.s 			page 2


  58 0012 0A       		.byte	10
  59 0013 0A       		.byte	10
  60 0014 0A       		.byte	10
  61 0015 0A       		.byte	10
  62 0016 0A       		.byte	10
  63 0017 0A       		.byte	10
  64              		.global	CapSense_1_debounce
  65              		.align	2
  66              		.type	CapSense_1_debounce, %object
  67              		.size	CapSense_1_debounce, 8
  68              	CapSense_1_debounce:
  69 0018 05       		.byte	5
  70 0019 05       		.byte	5
  71 001a 05       		.byte	5
  72 001b 05       		.byte	5
  73 001c 05       		.byte	5
  74 001d 05       		.byte	5
  75 001e 05       		.byte	5
  76 001f 05       		.byte	5
  77              		.global	CapSense_1_debounceCounter
  78              		.bss
  79              		.align	2
  80              		.type	CapSense_1_debounceCounter, %object
  81              		.size	CapSense_1_debounceCounter, 9
  82              	CapSense_1_debounceCounter:
  83 0000 00000000 		.space	9
  83      00000000 
  83      00
  84              		.global	CapSense_1_rawDataIndex
  85 0009 000000   		.section	.rodata
  86              		.align	2
  87              		.type	CapSense_1_rawDataIndex, %object
  88              		.size	CapSense_1_rawDataIndex, 8
  89              	CapSense_1_rawDataIndex:
  90 0020 00       		.byte	0
  91 0021 01       		.byte	1
  92 0022 02       		.byte	2
  93 0023 03       		.byte	3
  94 0024 04       		.byte	4
  95 0025 05       		.byte	5
  96 0026 06       		.byte	6
  97 0027 07       		.byte	7
  98              		.global	CapSense_1_numberOfSensors
  99              		.align	2
 100              		.type	CapSense_1_numberOfSensors, %object
 101              		.size	CapSense_1_numberOfSensors, 8
 102              	CapSense_1_numberOfSensors:
 103 0028 01       		.byte	1
 104 0029 01       		.byte	1
 105 002a 01       		.byte	1
 106 002b 01       		.byte	1
 107 002c 01       		.byte	1
 108 002d 01       		.byte	1
 109 002e 01       		.byte	1
 110 002f 01       		.byte	1
 111              		.section	.text.CapSense_1_BaseInit,"ax",%progbits
 112              		.align	2
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cc3EfiAs.s 			page 3


 113              		.global	CapSense_1_BaseInit
 114              		.thumb
 115              		.thumb_func
 116              		.type	CapSense_1_BaseInit, %function
 117              	CapSense_1_BaseInit:
 118              	.LFB0:
 119              		.file 1 ".\\Generated_Source\\PSoC5\\CapSense_1_CSHL.c"
   1:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** /*******************************************************************************
   2:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** * File Name: CapSense_1_CSHL.c
   3:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** * Version 3.40
   4:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *
   5:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** * Description:
   6:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  This file provides the source code to the High Level APIs for the CapSesne
   7:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  CSD component.
   8:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *
   9:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** * Note:
  10:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *
  11:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** ********************************************************************************
  12:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** * Copyright 2008-2013, Cypress Semiconductor Corporation.  All rights reserved.
  13:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** * You may use this file only in accordance with the license, terms, conditions,
  14:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** * disclaimers, and limitations in the end user license agreement accompanying
  15:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** * the software package with which this file was provided.
  16:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *******************************************************************************/
  17:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
  18:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** #include "CapSense_1_CSHL.h"
  19:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
  20:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** /* Storage of filters data */
  21:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** #if ( (CapSense_1_RAW_FILTER_MASK & CapSense_1_MEDIAN_FILTER) | \
  22:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****       (CapSense_1_RAW_FILTER_MASK & CapSense_1_AVERAGING_FILTER) )
  23:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
  24:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     uint16 CapSense_1_rawFilterData1[CapSense_1_TOTAL_SENSOR_COUNT];
  25:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     uint16 CapSense_1_rawFilterData2[CapSense_1_TOTAL_SENSOR_COUNT];
  26:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
  27:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** #elif ( (CapSense_1_RAW_FILTER_MASK & CapSense_1_IIR2_FILTER)   | \
  28:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         (CapSense_1_RAW_FILTER_MASK & CapSense_1_IIR4_FILTER)   | \
  29:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         (CapSense_1_RAW_FILTER_MASK & CapSense_1_JITTER_FILTER) | \
  30:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         (CapSense_1_RAW_FILTER_MASK & CapSense_1_IIR8_FILTER)   | \
  31:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         (CapSense_1_RAW_FILTER_MASK & CapSense_1_IIR16_FILTER) )
  32:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         
  33:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     uint16 CapSense_1_rawFilterData1[CapSense_1_TOTAL_SENSOR_COUNT];
  34:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
  35:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** #else
  36:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     /* No Raw filters */
  37:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** #endif  /* ( (CapSense_1_RAW_FILTER_MASK & CapSense_1_MEDIAN_FILTER) || \
  38:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         *    (CapSense_1_RAW_FILTER_MASK & CapSense_1_AVERAGING_FILTER) )
  39:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         */
  40:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
  41:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** uint16 CapSense_1_sensorBaseline[CapSense_1_TOTAL_SENSOR_COUNT];
  42:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** uint8 CapSense_1_sensorBaselineLow[CapSense_1_TOTAL_SENSOR_COUNT];
  43:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** uint8 CapSense_1_sensorSignal[CapSense_1_TOTAL_SENSOR_COUNT];
  44:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** uint8 CapSense_1_sensorOnMask[(((CapSense_1_TOTAL_SENSOR_COUNT - 1u) / 8u) + 1u)];
  45:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
  46:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** uint8 CapSense_1_lowBaselineResetCnt[CapSense_1_TOTAL_SENSOR_COUNT];
  47:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
  48:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** const uint8 CYCODE CapSense_1_fingerThreshold[] = {
  49:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     100u, 100u, 100u, 100u, 100u, 100u, 100u, 100u, 
  50:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** };
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cc3EfiAs.s 			page 4


  51:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
  52:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** const uint8 CYCODE CapSense_1_noiseThreshold[] = {
  53:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     20u, 20u, 20u, 20u, 20u, 20u, 20u, 20u, 
  54:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** };
  55:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
  56:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** const uint8 CYCODE CapSense_1_hysteresis[] = {
  57:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     10u, 10u, 10u, 10u, 10u, 10u, 10u, 10u, 
  58:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** };
  59:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
  60:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** const uint8 CYCODE CapSense_1_debounce[] = {
  61:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     5u, 5u, 5u, 5u, 5u, 5u, 5u, 5u, 
  62:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** };
  63:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
  64:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** uint8 CapSense_1_debounceCounter[] = {
  65:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     0u, 0u, 0u, 0u, 0u, 0u, 0u, 0u, 0u, 
  66:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** };
  67:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
  68:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** const uint8 CYCODE CapSense_1_rawDataIndex[] = {
  69:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     0u, /* Button0__BTN */
  70:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     1u, /* Button1__BTN */
  71:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     2u, /* Button2__BTN */
  72:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     3u, /* Button3__BTN */
  73:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     4u, /* Button4__BTN */
  74:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     5u, /* Button5__BTN */
  75:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     6u, /* Button6__BTN */
  76:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     7u, /* Button7__BTN */
  77:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
  78:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** };
  79:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
  80:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** const uint8 CYCODE CapSense_1_numberOfSensors[] = {
  81:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     1u, /* Button0__BTN */
  82:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     1u, /* Button1__BTN */
  83:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     1u, /* Button2__BTN */
  84:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     1u, /* Button3__BTN */
  85:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     1u, /* Button4__BTN */
  86:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     1u, /* Button5__BTN */
  87:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     1u, /* Button6__BTN */
  88:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     1u, /* Button7__BTN */
  89:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
  90:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** };
  91:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
  92:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
  93:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
  94:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
  95:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** /*******************************************************************************
  96:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** * Function Name: CapSense_1_BaseInit
  97:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** ********************************************************************************
  98:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *
  99:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** * Summary:
 100:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  Loads the CapSense_1_sensorBaseline[sensor] array element with an 
 101:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  initial value which is equal to raw count value. 
 102:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  Resets to zero CapSense_1_sensorBaselineLow[sensor] and 
 103:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  CapSense_1_sensorSignal[sensor] array element.
 104:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  Loads CapSense_1_debounceCounter[sensor] array element with initial 
 105:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  value equal CapSense_1_debounce[].
 106:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  Loads the CapSense_1_rawFilterData2[sensor] and 
 107:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  CapSense_1_rawFilterData2[sensor] array element with an 
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cc3EfiAs.s 			page 5


 108:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  initial value which is equal raw count value if raw data filter is enabled.
 109:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *
 110:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** * Parameters:
 111:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  sensor:  Sensor number.
 112:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *
 113:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** * Return:
 114:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  None
 115:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *
 116:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** * Global Variables:
 117:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  CapSense_1_sensorBaseline[]    - used to store baseline value.
 118:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  CapSense_1_sensorBaselineLow[] - used to store fraction byte of 
 119:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  baseline value.
 120:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  CapSense_1_sensorSignal[]      - used to store diffence between 
 121:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  current value of raw data and previous value of baseline.
 122:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  CapSense_1_debounceCounter[]   - used to store current debounce 
 123:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  counter of sensor. Widget which has this parameter are buttons, matrix 
 124:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  buttons, proximity, guard. All other widgets haven't debounce parameter
 125:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  and use the last element of this array with value 0 (it means no debounce).
 126:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  CapSense_1_rawFilterData1[]    - used to store previous sample of 
 127:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  any enabled raw data filter.
 128:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  CapSense_1_rawFilterData2[]    - used to store before previous sample
 129:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  of enabled raw data filter. Only required for median or average filters.
 130:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *
 131:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** * Reentrant:
 132:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  No
 133:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *
 134:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *******************************************************************************/
 135:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** void CapSense_1_BaseInit(uint8 sensor) 
 136:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** {
 120              		.loc 1 136 0
 121              		.cfi_startproc
 122              		@ args = 0, pretend = 0, frame = 16
 123              		@ frame_needed = 1, uses_anonymous_args = 0
 124              		@ link register save eliminated.
 125 0000 80B4     		push	{r7}
 126              		.cfi_def_cfa_offset 4
 127              		.cfi_offset 7, -4
 128 0002 85B0     		sub	sp, sp, #20
 129              		.cfi_def_cfa_offset 24
 130 0004 00AF     		add	r7, sp, #0
 131              		.cfi_def_cfa_register 7
 132 0006 0346     		mov	r3, r0
 133 0008 FB71     		strb	r3, [r7, #7]
 137:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     #if ((CapSense_1_TOTAL_BUTTONS_COUNT) || (CapSense_1_TOTAL_MATRIX_BUTTONS_COUNT) || \
 138:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****          (CapSense_1_TOTAL_GENERICS_COUNT))
 139:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         uint8 widget = CapSense_1_widgetNumber[sensor];
 134              		.loc 1 139 0
 135 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 136 000c 124A     		ldr	r2, .L2
 137 000e D35C     		ldrb	r3, [r2, r3]
 138 0010 FB73     		strb	r3, [r7, #15]
 140:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     #endif /* ((CapSense_1_TOTAL_MATRIX_BUTTONS_COUNT) || (CapSense_1_TOTAL_MATRIX_BUTTONS_COUNT)) 
 141:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     
 142:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     #if (CapSense_1_TOTAL_MATRIX_BUTTONS_COUNT)
 143:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         uint8 debounceIndex;
 144:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     #endif  /* (CapSense_1_TOTAL_MATRIX_BUTTONS_COUNT) */
 145:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cc3EfiAs.s 			page 6


 146:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     #if (CapSense_1_TOTAL_GENERICS_COUNT)
 147:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         /* Exclude generic widget */
 148:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         if(widget < CapSense_1_END_OF_WIDGETS_INDEX)
 149:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         {
 150:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     #endif  /* CapSense_1_TOTAL_GENERICS_COUNT */
 151:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     
 152:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     /* Initialize Baseline */
 153:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     CapSense_1_sensorBaseline[sensor] = CapSense_1_sensorRaw[sensor];
 139              		.loc 1 153 0
 140 0012 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 141 0014 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 142 0016 1149     		ldr	r1, .L2+4
 143 0018 31F81210 		ldrh	r1, [r1, r2, lsl #1]
 144 001c 104A     		ldr	r2, .L2+8
 145 001e 22F81310 		strh	r1, [r2, r3, lsl #1]	@ movhi
 154:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     CapSense_1_sensorBaselineLow[sensor] = 0u;
 146              		.loc 1 154 0
 147 0022 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 148 0024 0F4A     		ldr	r2, .L2+12
 149 0026 0021     		movs	r1, #0
 150 0028 D154     		strb	r1, [r2, r3]
 155:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     CapSense_1_sensorSignal[sensor] = 0u;
 151              		.loc 1 155 0
 152 002a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 153 002c 0E4A     		ldr	r2, .L2+16
 154 002e 0021     		movs	r1, #0
 155 0030 D154     		strb	r1, [r2, r3]
 156:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         
 157:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     CapSense_1_debounceCounter[widget] =  CapSense_1_debounce[widget];
 156              		.loc 1 157 0
 157 0032 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 158 0034 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 159 0036 0D49     		ldr	r1, .L2+20
 160 0038 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
 161 003a 0D4A     		ldr	r2, .L2+24
 162 003c D154     		strb	r1, [r2, r3]
 158:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
 159:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     
 160:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     #if ((CapSense_1_RAW_FILTER_MASK & CapSense_1_MEDIAN_FILTER) |\
 161:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****          (CapSense_1_RAW_FILTER_MASK & CapSense_1_AVERAGING_FILTER))
 162:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
 163:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         CapSense_1_rawFilterData1[sensor] = CapSense_1_sensorRaw[sensor];
 164:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         CapSense_1_rawFilterData2[sensor] = CapSense_1_sensorRaw[sensor];
 165:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     
 166:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     #elif ((CapSense_1_RAW_FILTER_MASK & CapSense_1_IIR2_FILTER) |\
 167:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****            (CapSense_1_RAW_FILTER_MASK & CapSense_1_IIR4_FILTER) |\
 168:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****            (CapSense_1_RAW_FILTER_MASK & CapSense_1_JITTER_FILTER) |\
 169:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****            (CapSense_1_RAW_FILTER_MASK & CapSense_1_IIR8_FILTER) |\
 170:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****            (CapSense_1_RAW_FILTER_MASK & CapSense_1_IIR16_FILTER))
 171:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             
 172:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         CapSense_1_rawFilterData1[sensor] = CapSense_1_sensorRaw[sensor];
 163              		.loc 1 172 0
 164 003e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 165 0040 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 166 0042 0649     		ldr	r1, .L2+4
 167 0044 31F81210 		ldrh	r1, [r1, r2, lsl #1]
 168 0048 0A4A     		ldr	r2, .L2+28
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cc3EfiAs.s 			page 7


 169 004a 22F81310 		strh	r1, [r2, r3, lsl #1]	@ movhi
 173:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     
 174:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     #else
 175:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         /* No Raw filters */
 176:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     #endif  /* ((CapSense_1_RAW_FILTER_MASK & CapSense_1_MEDIAN_FILTER) | \
 177:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             *   (CapSense_1_RAW_FILTER_MASK & CapSense_1_AVERAGING_FILTER))
 178:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             */
 179:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     
 180:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     #if (CapSense_1_TOTAL_GENERICS_COUNT)
 181:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         /* Exclude generic widget */
 182:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         }
 183:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     #endif  /* CapSense_1_TOTAL_GENERICS_COUNT */
 184:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** }
 170              		.loc 1 184 0
 171 004e 1437     		adds	r7, r7, #20
 172              		.cfi_def_cfa_offset 4
 173 0050 BD46     		mov	sp, r7
 174              		.cfi_def_cfa_register 13
 175              		@ sp needed
 176 0052 5DF8047B 		ldr	r7, [sp], #4
 177              		.cfi_restore 7
 178              		.cfi_def_cfa_offset 0
 179 0056 7047     		bx	lr
 180              	.L3:
 181              		.align	2
 182              	.L2:
 183 0058 00000000 		.word	CapSense_1_widgetNumber
 184 005c 00000000 		.word	CapSense_1_sensorRaw
 185 0060 00000000 		.word	CapSense_1_sensorBaseline
 186 0064 00000000 		.word	CapSense_1_sensorBaselineLow
 187 0068 00000000 		.word	CapSense_1_sensorSignal
 188 006c 00000000 		.word	CapSense_1_debounce
 189 0070 00000000 		.word	CapSense_1_debounceCounter
 190 0074 00000000 		.word	CapSense_1_rawFilterData1
 191              		.cfi_endproc
 192              	.LFE0:
 193              		.size	CapSense_1_BaseInit, .-CapSense_1_BaseInit
 194              		.section	.text.CapSense_1_InitializeSensorBaseline,"ax",%progbits
 195              		.align	2
 196              		.global	CapSense_1_InitializeSensorBaseline
 197              		.thumb
 198              		.thumb_func
 199              		.type	CapSense_1_InitializeSensorBaseline, %function
 200              	CapSense_1_InitializeSensorBaseline:
 201              	.LFB1:
 185:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
 186:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
 187:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** /*******************************************************************************
 188:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** * Function Name: CapSense_1_InitializeSensorBaseline
 189:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** ********************************************************************************
 190:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *
 191:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** * Summary:
 192:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  Loads the CapSense_1_sensorBaseline[sensor] array element with an 
 193:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  initial value by scanning the selected sensor (one channel design) or pair 
 194:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  of sensors (two channels designs). The raw count value is copied into the 
 195:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  baseline array for each sensor. The raw data filters are initialized if 
 196:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  enabled.
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cc3EfiAs.s 			page 8


 197:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *
 198:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** * Parameters:
 199:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  sensor:  Sensor number.
 200:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *
 201:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** * Return:
 202:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  None
 203:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *
 204:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** * Reentrant:
 205:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  No
 206:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *
 207:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *******************************************************************************/
 208:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** void CapSense_1_InitializeSensorBaseline(uint8 sensor)
 209:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                           
 210:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** {
 202              		.loc 1 210 0
 203              		.cfi_startproc
 204              		@ args = 0, pretend = 0, frame = 8
 205              		@ frame_needed = 1, uses_anonymous_args = 0
 206 0000 80B5     		push	{r7, lr}
 207              		.cfi_def_cfa_offset 8
 208              		.cfi_offset 7, -8
 209              		.cfi_offset 14, -4
 210 0002 82B0     		sub	sp, sp, #8
 211              		.cfi_def_cfa_offset 16
 212 0004 00AF     		add	r7, sp, #0
 213              		.cfi_def_cfa_register 7
 214 0006 0346     		mov	r3, r0
 215 0008 FB71     		strb	r3, [r7, #7]
 211:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     /* Scan sensor */
 212:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     CapSense_1_ScanSensor(sensor);
 216              		.loc 1 212 0
 217 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 218 000c 1846     		mov	r0, r3
 219 000e FFF7FEFF 		bl	CapSense_1_ScanSensor
 213:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     while(CapSense_1_IsBusy() != 0u)
 220              		.loc 1 213 0
 221 0012 00BF     		nop
 222              	.L5:
 223              		.loc 1 213 0 is_stmt 0 discriminator 1
 224 0014 FFF7FEFF 		bl	CapSense_1_IsBusy
 225 0018 0346     		mov	r3, r0
 226 001a 002B     		cmp	r3, #0
 227 001c FAD1     		bne	.L5
 214:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     {
 215:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         /* Wait while busy */
 216:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     }
 217:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     
 218:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     #if (CapSense_1_DESIGN_TYPE == CapSense_1_ONE_CHANNEL_DESIGN)
 219:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         /* Initialize Baseline, Signal and debounce counters */       
 220:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         CapSense_1_BaseInit(sensor);
 228              		.loc 1 220 0 is_stmt 1
 229 001e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 230 0020 1846     		mov	r0, r3
 231 0022 FFF7FEFF 		bl	CapSense_1_BaseInit
 221:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         
 222:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     #else
 223:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cc3EfiAs.s 			page 9


 224:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         if(sensor < CapSense_1_TOTAL_SENSOR_COUNT__CH0)
 225:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         {
 226:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             /* Initialize Baseline, Signal and debounce counters */ 
 227:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             CapSense_1_BaseInit(sensor);
 228:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         }
 229:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         
 230:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         if(sensor < CapSense_1_TOTAL_SENSOR_COUNT__CH1)
 231:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         {
 232:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             /* Initialize Baseline, Signal and debounce counters */
 233:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             CapSense_1_BaseInit(sensor + CapSense_1_TOTAL_SENSOR_COUNT__CH0);
 234:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         }
 235:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     
 236:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     #endif  /* (CapSense_1_DESIGN_TYPE == CapSense_1_ONE_CHANNEL_DESIGN) */
 237:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** }
 232              		.loc 1 237 0
 233 0026 0837     		adds	r7, r7, #8
 234              		.cfi_def_cfa_offset 8
 235 0028 BD46     		mov	sp, r7
 236              		.cfi_def_cfa_register 13
 237              		@ sp needed
 238 002a 80BD     		pop	{r7, pc}
 239              		.cfi_endproc
 240              	.LFE1:
 241              		.size	CapSense_1_InitializeSensorBaseline, .-CapSense_1_InitializeSensorBaseline
 242              		.section	.text.CapSense_1_InitializeAllBaselines,"ax",%progbits
 243              		.align	2
 244              		.global	CapSense_1_InitializeAllBaselines
 245              		.thumb
 246              		.thumb_func
 247              		.type	CapSense_1_InitializeAllBaselines, %function
 248              	CapSense_1_InitializeAllBaselines:
 249              	.LFB2:
 238:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
 239:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
 240:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** /*******************************************************************************
 241:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** * Function Name: CapSense_1_InitializeAllBaselines
 242:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** ********************************************************************************
 243:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *
 244:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** * Summary:
 245:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  Uses the CapSense_1_InitializeSensorBaseline function to loads the 
 246:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  CapSense_1_sensorBaseline[] array with an initial values by scanning 
 247:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  all sensors. The raw count values are copied into the baseline array for 
 248:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  all sensors. The raw data filters are initialized if enabled.
 249:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *
 250:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** * Parameters:
 251:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  None
 252:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *
 253:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** * Return:
 254:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  None
 255:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *
 256:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** * Reentrant:
 257:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  No
 258:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *
 259:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *******************************************************************************/
 260:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** void CapSense_1_InitializeAllBaselines(void)
 261:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                           
 262:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** {
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cc3EfiAs.s 			page 10


 250              		.loc 1 262 0
 251              		.cfi_startproc
 252              		@ args = 0, pretend = 0, frame = 8
 253              		@ frame_needed = 1, uses_anonymous_args = 0
 254 0000 80B5     		push	{r7, lr}
 255              		.cfi_def_cfa_offset 8
 256              		.cfi_offset 7, -8
 257              		.cfi_offset 14, -4
 258 0002 82B0     		sub	sp, sp, #8
 259              		.cfi_def_cfa_offset 16
 260 0004 00AF     		add	r7, sp, #0
 261              		.cfi_def_cfa_register 7
 263:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     uint8 i;
 264:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     
 265:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     /* The baseline initialize by sensor of sensor pair */
 266:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     for(i = 0u; i < CapSense_1_TOTAL_SCANSLOT_COUNT; i++)
 262              		.loc 1 266 0
 263 0006 0023     		movs	r3, #0
 264 0008 FB71     		strb	r3, [r7, #7]
 265 000a 06E0     		b	.L7
 266              	.L8:
 267:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     {
 268:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         CapSense_1_InitializeSensorBaseline(i);
 267              		.loc 1 268 0 discriminator 3
 268 000c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 269 000e 1846     		mov	r0, r3
 270 0010 FFF7FEFF 		bl	CapSense_1_InitializeSensorBaseline
 266:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     {
 271              		.loc 1 266 0 discriminator 3
 272 0014 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 273 0016 0133     		adds	r3, r3, #1
 274 0018 FB71     		strb	r3, [r7, #7]
 275              	.L7:
 266:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     {
 276              		.loc 1 266 0 is_stmt 0 discriminator 1
 277 001a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 278 001c 072B     		cmp	r3, #7
 279 001e F5D9     		bls	.L8
 269:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     }
 270:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** }
 280              		.loc 1 270 0 is_stmt 1
 281 0020 0837     		adds	r7, r7, #8
 282              		.cfi_def_cfa_offset 8
 283 0022 BD46     		mov	sp, r7
 284              		.cfi_def_cfa_register 13
 285              		@ sp needed
 286 0024 80BD     		pop	{r7, pc}
 287              		.cfi_endproc
 288              	.LFE2:
 289              		.size	CapSense_1_InitializeAllBaselines, .-CapSense_1_InitializeAllBaselines
 290 0026 00BF     		.section	.text.CapSense_1_InitializeEnabledBaselines,"ax",%progbits
 291              		.align	2
 292              		.global	CapSense_1_InitializeEnabledBaselines
 293              		.thumb
 294              		.thumb_func
 295              		.type	CapSense_1_InitializeEnabledBaselines, %function
 296              	CapSense_1_InitializeEnabledBaselines:
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cc3EfiAs.s 			page 11


 297              	.LFB3:
 271:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
 272:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
 273:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** /*******************************************************************************
 274:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** * Function Name: CapSense_1_InitializeEnabledBaselines
 275:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** ********************************************************************************
 276:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *
 277:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** * Summary:
 278:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  Scans all enabled widgets and the raw count values are copied into the 
 279:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  baseline array for all sensors enabled in scanning process. Baselines 
 280:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  initialize with zero values for sensors disabled from scanning process. 
 281:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  The raw data filters are initialized if enabled.
 282:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *
 283:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** * Parameters:
 284:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  None
 285:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *
 286:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** * Return:
 287:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  None
 288:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *
 289:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** * Reentrant:
 290:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  No
 291:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *
 292:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *******************************************************************************/
 293:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** void CapSense_1_InitializeEnabledBaselines(void)
 294:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                              
 295:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** {
 298              		.loc 1 295 0
 299              		.cfi_startproc
 300              		@ args = 0, pretend = 0, frame = 8
 301              		@ frame_needed = 1, uses_anonymous_args = 0
 302 0000 80B5     		push	{r7, lr}
 303              		.cfi_def_cfa_offset 8
 304              		.cfi_offset 7, -8
 305              		.cfi_offset 14, -4
 306 0002 82B0     		sub	sp, sp, #8
 307              		.cfi_def_cfa_offset 16
 308 0004 00AF     		add	r7, sp, #0
 309              		.cfi_def_cfa_register 7
 296:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     uint8 i;
 297:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     uint8 pos;
 298:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     uint8 enMask;
 299:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     
 300:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     CapSense_1_ScanEnabledWidgets();
 310              		.loc 1 300 0
 311 0006 FFF7FEFF 		bl	CapSense_1_ScanEnabledWidgets
 301:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     while(CapSense_1_IsBusy() != 0u)
 312              		.loc 1 301 0
 313 000a 00BF     		nop
 314              	.L10:
 315              		.loc 1 301 0 is_stmt 0 discriminator 1
 316 000c FFF7FEFF 		bl	CapSense_1_IsBusy
 317 0010 0346     		mov	r3, r0
 318 0012 002B     		cmp	r3, #0
 319 0014 FAD1     		bne	.L10
 302:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     {
 303:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         /* Wait while busy */
 304:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     }
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cc3EfiAs.s 			page 12


 305:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     
 306:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     for(i = 0u; i < CapSense_1_TOTAL_SENSOR_COUNT; i++)
 320              		.loc 1 306 0 is_stmt 1
 321 0016 0023     		movs	r3, #0
 322 0018 FB71     		strb	r3, [r7, #7]
 323 001a 1DE0     		b	.L11
 324              	.L13:
 307:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     {
 308:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         pos = (i >> 3u);
 325              		.loc 1 308 0
 326 001c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 327 001e DB08     		lsrs	r3, r3, #3
 328 0020 BB71     		strb	r3, [r7, #6]
 309:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         enMask = 0x01u << (i & 0x07u);
 329              		.loc 1 309 0
 330 0022 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 331 0024 03F00703 		and	r3, r3, #7
 332 0028 0122     		movs	r2, #1
 333 002a 02FA03F3 		lsl	r3, r2, r3
 334 002e 7B71     		strb	r3, [r7, #5]
 310:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         
 311:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         /* Clear raw data if sensor is disabled from scanning process */
 312:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         if((CapSense_1_sensorEnableMask[pos] & enMask) == 0u)
 335              		.loc 1 312 0
 336 0030 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 337 0032 0C4A     		ldr	r2, .L14
 338 0034 D25C     		ldrb	r2, [r2, r3]	@ zero_extendqisi2
 339 0036 7B79     		ldrb	r3, [r7, #5]
 340 0038 1340     		ands	r3, r3, r2
 341 003a DBB2     		uxtb	r3, r3
 342 003c 002B     		cmp	r3, #0
 343 003e 04D1     		bne	.L12
 313:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         {
 314:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             CapSense_1_sensorRaw[i] = 0u;
 344              		.loc 1 314 0
 345 0040 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 346 0042 094A     		ldr	r2, .L14+4
 347 0044 0021     		movs	r1, #0
 348 0046 22F81310 		strh	r1, [r2, r3, lsl #1]	@ movhi
 349              	.L12:
 315:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         }
 316:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         
 317:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         /* Initialize baselines */
 318:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         CapSense_1_BaseInit(i);
 350              		.loc 1 318 0 discriminator 2
 351 004a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 352 004c 1846     		mov	r0, r3
 353 004e FFF7FEFF 		bl	CapSense_1_BaseInit
 306:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     {
 354              		.loc 1 306 0 discriminator 2
 355 0052 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 356 0054 0133     		adds	r3, r3, #1
 357 0056 FB71     		strb	r3, [r7, #7]
 358              	.L11:
 306:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     {
 359              		.loc 1 306 0 is_stmt 0 discriminator 1
 360 0058 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cc3EfiAs.s 			page 13


 361 005a 072B     		cmp	r3, #7
 362 005c DED9     		bls	.L13
 319:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     }
 320:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** }  
 363              		.loc 1 320 0 is_stmt 1
 364 005e 0837     		adds	r7, r7, #8
 365              		.cfi_def_cfa_offset 8
 366 0060 BD46     		mov	sp, r7
 367              		.cfi_def_cfa_register 13
 368              		@ sp needed
 369 0062 80BD     		pop	{r7, pc}
 370              	.L15:
 371              		.align	2
 372              	.L14:
 373 0064 00000000 		.word	CapSense_1_sensorEnableMask
 374 0068 00000000 		.word	CapSense_1_sensorRaw
 375              		.cfi_endproc
 376              	.LFE3:
 377              		.size	CapSense_1_InitializeEnabledBaselines, .-CapSense_1_InitializeEnabledBaselines
 378              		.section	.text.CapSense_1_UpdateSensorBaseline,"ax",%progbits
 379              		.align	2
 380              		.global	CapSense_1_UpdateSensorBaseline
 381              		.thumb
 382              		.thumb_func
 383              		.type	CapSense_1_UpdateSensorBaseline, %function
 384              	CapSense_1_UpdateSensorBaseline:
 385              	.LFB4:
 321:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
 322:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
 323:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** /*******************************************************************************
 324:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** * Function Name: CapSense_1_UpdateSensorBaseline
 325:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** ********************************************************************************
 326:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *
 327:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** * Summary:
 328:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  Updates the CapSense_1_sensorBaseline[sensor] array element using the 
 329:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  LP filter with k = 256. The signal calculates the difference of count by 
 330:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  subtracting the previous baseline from the current raw count value and stores
 331:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  it in CapSense_1_SensorSignal[sensor]. 
 332:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  If auto reset option is enabled the baseline updated regards noise threshold. 
 333:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  If auto reset option is disabled the baseline stops updating if signal is 
 334:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  greater that zero and baseline loads with raw count value if signal is less 
 335:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  that noise threshold.
 336:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  Raw data filters are applied to the values if enabled before baseline 
 337:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  calculation.
 338:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *
 339:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** * Parameters:
 340:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  sensor:  Sensor number.
 341:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *
 342:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** * Return:
 343:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  None
 344:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *
 345:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** * Global Variables:
 346:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  CapSense_1_sensorBaseline[]    - used to store baseline value.
 347:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  CapSense_1_sensorBaselineLow[] - used to store fraction byte of 
 348:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  baseline value.
 349:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  CapSense_1_sensorSignal[]      - used to store diffence between 
 350:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  current value of raw data and previous value of baseline.
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cc3EfiAs.s 			page 14


 351:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  CapSense_1_rawFilterData1[]    - used to store previous sample of 
 352:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  any enabled raw data filter.
 353:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  CapSense_1_rawFilterData2[]    - used to store before previous sample
 354:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  of enabled raw data filter. Only required for median or average filters.
 355:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *
 356:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** * Reentrant:
 357:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  No
 358:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *
 359:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *******************************************************************************/
 360:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****  void CapSense_1_UpdateSensorBaseline(uint8 sensor)
 361:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                  
 362:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** {
 386              		.loc 1 362 0
 387              		.cfi_startproc
 388              		@ args = 0, pretend = 0, frame = 24
 389              		@ frame_needed = 1, uses_anonymous_args = 0
 390 0000 80B5     		push	{r7, lr}
 391              		.cfi_def_cfa_offset 8
 392              		.cfi_offset 7, -8
 393              		.cfi_offset 14, -4
 394 0002 86B0     		sub	sp, sp, #24
 395              		.cfi_def_cfa_offset 32
 396 0004 00AF     		add	r7, sp, #0
 397              		.cfi_def_cfa_register 7
 398 0006 0346     		mov	r3, r0
 399 0008 FB71     		strb	r3, [r7, #7]
 363:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     uint32 calc;
 364:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     uint16 tempRaw;
 365:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     uint16 filteredRawData;
 366:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     uint8 widget = CapSense_1_widgetNumber[sensor];
 400              		.loc 1 366 0
 401 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 402 000c 514A     		ldr	r2, .L28
 403 000e D35C     		ldrb	r3, [r2, r3]
 404 0010 7B75     		strb	r3, [r7, #21]
 367:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     uint8 noiseThreshold = CapSense_1_noiseThreshold[widget];
 405              		.loc 1 367 0
 406 0012 7B7D     		ldrb	r3, [r7, #21]	@ zero_extendqisi2
 407 0014 504A     		ldr	r2, .L28+4
 408 0016 D35C     		ldrb	r3, [r2, r3]
 409 0018 3B75     		strb	r3, [r7, #20]
 368:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     
 369:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     #if (CapSense_1_TOTAL_GENERICS_COUNT)
 370:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         /* Exclude generic widget */
 371:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         if(widget < CapSense_1_END_OF_WIDGETS_INDEX)
 372:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         {
 373:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     #endif  /* CapSense_1_TOTAL_GENERICS_COUNT */
 374:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     
 375:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     filteredRawData = CapSense_1_sensorRaw[sensor];
 410              		.loc 1 375 0
 411 001a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 412 001c 4F4A     		ldr	r2, .L28+8
 413 001e 32F81330 		ldrh	r3, [r2, r3, lsl #1]	@ movhi
 414 0022 7B82     		strh	r3, [r7, #18]	@ movhi
 376:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     
 377:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     #if (CapSense_1_RAW_FILTER_MASK & CapSense_1_MEDIAN_FILTER)
 378:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         tempRaw = filteredRawData;
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cc3EfiAs.s 			page 15


 379:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         filteredRawData = CapSense_1_MedianFilter(filteredRawData, CapSense_1_rawFilterData1[sensor
 380:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                                         CapSense_1_rawFilterData2[sensor]);
 381:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         CapSense_1_rawFilterData2[sensor] = CapSense_1_rawFilterData1[sensor];
 382:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         CapSense_1_rawFilterData1[sensor] = tempRaw;
 383:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         
 384:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     #elif (CapSense_1_RAW_FILTER_MASK & CapSense_1_AVERAGING_FILTER)
 385:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         tempRaw = filteredRawData;
 386:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         filteredRawData = CapSense_1_AveragingFilter(filteredRawData, CapSense_1_rawFilterData1[sen
 387:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                                            CapSense_1_rawFilterData2[sensor]);
 388:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         CapSense_1_rawFilterData2[sensor] = CapSense_1_rawFilterData1[sensor];
 389:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         CapSense_1_rawFilterData1[sensor] = tempRaw;
 390:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         
 391:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     #elif (CapSense_1_RAW_FILTER_MASK & CapSense_1_IIR2_FILTER)
 392:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         filteredRawData = CapSense_1_IIR2Filter(filteredRawData, CapSense_1_rawFilterData1[sensor])
 393:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         CapSense_1_rawFilterData1[sensor] = filteredRawData;
 394:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         
 395:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     #elif (CapSense_1_RAW_FILTER_MASK & CapSense_1_IIR4_FILTER)
 396:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         filteredRawData = CapSense_1_IIR4Filter(filteredRawData, CapSense_1_rawFilterData1[sensor])
 415              		.loc 1 396 0
 416 0024 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 417 0026 4E4A     		ldr	r2, .L28+12
 418 0028 32F81330 		ldrh	r3, [r2, r3, lsl #1]
 419 002c 7A8A     		ldrh	r2, [r7, #18]
 420 002e 1046     		mov	r0, r2
 421 0030 1946     		mov	r1, r3
 422 0032 FFF7FEFF 		bl	CapSense_1_IIR4Filter
 423 0036 0346     		mov	r3, r0
 424 0038 7B82     		strh	r3, [r7, #18]	@ movhi
 397:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         CapSense_1_rawFilterData1[sensor] = filteredRawData;
 425              		.loc 1 397 0
 426 003a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 427 003c 4849     		ldr	r1, .L28+12
 428 003e 7A8A     		ldrh	r2, [r7, #18]	@ movhi
 429 0040 21F81320 		strh	r2, [r1, r3, lsl #1]	@ movhi
 398:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             
 399:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     #elif (CapSense_1_RAW_FILTER_MASK & CapSense_1_JITTER_FILTER)
 400:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         filteredRawData = CapSense_1_JitterFilter(filteredRawData, CapSense_1_rawFilterData1[sensor
 401:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         CapSense_1_rawFilterData1[sensor] = filteredRawData;
 402:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         
 403:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     #elif (CapSense_1_RAW_FILTER_MASK & CapSense_1_IIR8_FILTER)
 404:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         filteredRawData = CapSense_1_IIR8Filter(filteredRawData, CapSense_1_rawFilterData1[sensor])
 405:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         CapSense_1_rawFilterData1[sensor] = filteredRawData;
 406:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         
 407:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     #elif (CapSense_1_RAW_FILTER_MASK & CapSense_1_IIR16_FILTER)
 408:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         filteredRawData = CapSense_1_IIR16Filter(filteredRawData, CapSense_1_rawFilterData1[sensor]
 409:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         CapSense_1_rawFilterData1[sensor] = filteredRawData;
 410:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         
 411:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     #else
 412:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         /* No Raw filters */
 413:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     #endif  /* (CapSense_1_RAW_FILTER_MASK & CapSense_1_MEDIAN_FILTER) */
 414:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     
 415:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     #if (CapSense_1_TUNING_METHOD == CapSense_1_AUTO_TUNING)
 416:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         CapSense_1_CalculateThresholds(sensor);
 417:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     #endif /* (CapSense_1_TUNING_METHOD == CapSense_1_AUTO_TUNING) */
 418:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
 419:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
 420:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     /* Baseline calculation */
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cc3EfiAs.s 			page 16


 421:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     /* Calculate difference RawData[cur] - Baseline[prev] */
 422:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     if(filteredRawData >= CapSense_1_sensorBaseline[sensor])
 430              		.loc 1 422 0
 431 0044 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 432 0046 474A     		ldr	r2, .L28+16
 433 0048 32F81330 		ldrh	r3, [r2, r3, lsl #1]
 434 004c 7A8A     		ldrh	r2, [r7, #18]
 435 004e 9A42     		cmp	r2, r3
 436 0050 09D3     		bcc	.L17
 423:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     {
 424:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         tempRaw = filteredRawData - CapSense_1_sensorBaseline[sensor];
 437              		.loc 1 424 0
 438 0052 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 439 0054 434A     		ldr	r2, .L28+16
 440 0056 32F81330 		ldrh	r3, [r2, r3, lsl #1]
 441 005a 7A8A     		ldrh	r2, [r7, #18]	@ movhi
 442 005c D31A     		subs	r3, r2, r3
 443 005e FB82     		strh	r3, [r7, #22]	@ movhi
 425:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         widget = 1u;    /* Positive difference - Calculate the Signal */
 444              		.loc 1 425 0
 445 0060 0123     		movs	r3, #1
 446 0062 7B75     		strb	r3, [r7, #21]
 447 0064 08E0     		b	.L18
 448              	.L17:
 426:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     }
 427:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     else
 428:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     {
 429:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         tempRaw = CapSense_1_sensorBaseline[sensor] - filteredRawData;
 449              		.loc 1 429 0
 450 0066 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 451 0068 3E4A     		ldr	r2, .L28+16
 452 006a 32F81320 		ldrh	r2, [r2, r3, lsl #1]
 453 006e 7B8A     		ldrh	r3, [r7, #18]	@ movhi
 454 0070 D31A     		subs	r3, r2, r3
 455 0072 FB82     		strh	r3, [r7, #22]	@ movhi
 430:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         widget = 0u;    /* Negative difference - Do NOT calculate the Signal */
 456              		.loc 1 430 0
 457 0074 0023     		movs	r3, #0
 458 0076 7B75     		strb	r3, [r7, #21]
 459              	.L18:
 431:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     }
 432:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
 433:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     if((widget == 0u) && (tempRaw > (uint16) CapSense_1_NEGATIVE_NOISE_THRESHOLD))
 460              		.loc 1 433 0
 461 0078 7B7D     		ldrb	r3, [r7, #21]	@ zero_extendqisi2
 462 007a 002B     		cmp	r3, #0
 463 007c 18D1     		bne	.L19
 464              		.loc 1 433 0 is_stmt 0 discriminator 1
 465 007e FB8A     		ldrh	r3, [r7, #22]
 466 0080 7D2B     		cmp	r3, #125
 467 0082 15D9     		bls	.L19
 434:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     {
 435:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         if(CapSense_1_lowBaselineResetCnt[sensor] >= CapSense_1_LOW_BASELINE_RESET)
 468              		.loc 1 435 0 is_stmt 1
 469 0084 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 470 0086 384A     		ldr	r2, .L28+20
 471 0088 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cc3EfiAs.s 			page 17


 472 008a 042B     		cmp	r3, #4
 473 008c 08D9     		bls	.L20
 436:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         {
 437:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             CapSense_1_BaseInit(sensor);
 474              		.loc 1 437 0
 475 008e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 476 0090 1846     		mov	r0, r3
 477 0092 FFF7FEFF 		bl	CapSense_1_BaseInit
 438:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             CapSense_1_lowBaselineResetCnt[sensor] = 0u;
 478              		.loc 1 438 0
 479 0096 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 480 0098 334A     		ldr	r2, .L28+20
 481 009a 0021     		movs	r1, #0
 482 009c D154     		strb	r1, [r2, r3]
 435:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         {
 483              		.loc 1 435 0
 484 009e 3BE0     		b	.L22
 485              	.L20:
 439:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         }
 440:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         else
 441:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         {
 442:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             CapSense_1_lowBaselineResetCnt[sensor]++;
 486              		.loc 1 442 0
 487 00a0 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 488 00a2 314A     		ldr	r2, .L28+20
 489 00a4 D25C     		ldrb	r2, [r2, r3]	@ zero_extendqisi2
 490 00a6 0132     		adds	r2, r2, #1
 491 00a8 D1B2     		uxtb	r1, r2
 492 00aa 2F4A     		ldr	r2, .L28+20
 493 00ac D154     		strb	r1, [r2, r3]
 435:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         {
 494              		.loc 1 435 0
 495 00ae 33E0     		b	.L22
 496              	.L19:
 443:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         }
 444:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     }
 445:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     else
 446:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     {
 447:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         #if (CapSense_1_AUTO_RESET == CapSense_1_AUTO_RESET_DISABLE)
 448:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             /* Update Baseline if lower that noiseThreshold */
 449:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             if ( (tempRaw <= (uint16) noiseThreshold) || 
 497              		.loc 1 449 0
 498 00b0 3B7D     		ldrb	r3, [r7, #20]	@ zero_extendqisi2
 499 00b2 9BB2     		uxth	r3, r3
 500 00b4 FA8A     		ldrh	r2, [r7, #22]
 501 00b6 9A42     		cmp	r2, r3
 502 00b8 05D9     		bls	.L23
 503              		.loc 1 449 0 is_stmt 0 discriminator 1
 504 00ba FB8A     		ldrh	r3, [r7, #22]
 505 00bc 7C2B     		cmp	r3, #124
 506 00be 2BD8     		bhi	.L22
 450:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                  ((tempRaw < (uint16) CapSense_1_NEGATIVE_NOISE_THRESHOLD)
 451:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                    && (widget == 0u)))
 507              		.loc 1 451 0 is_stmt 1
 508 00c0 7B7D     		ldrb	r3, [r7, #21]	@ zero_extendqisi2
 509 00c2 002B     		cmp	r3, #0
 510 00c4 28D1     		bne	.L22
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cc3EfiAs.s 			page 18


 511              	.L23:
 452:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             {
 453:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         #endif /* (CapSense_1_AUTO_RESET == CapSense_1_AUTO_RESET_DISABLE) */
 454:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 /* Make full Baseline 23 bits */
 455:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 calc = (uint32) CapSense_1_sensorBaseline[sensor] << 8u;
 512              		.loc 1 455 0
 513 00c6 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 514 00c8 264A     		ldr	r2, .L28+16
 515 00ca 32F81330 		ldrh	r3, [r2, r3, lsl #1]
 516 00ce 1B02     		lsls	r3, r3, #8
 517 00d0 FB60     		str	r3, [r7, #12]
 456:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 calc |= (uint32) CapSense_1_sensorBaselineLow[sensor];
 518              		.loc 1 456 0
 519 00d2 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 520 00d4 254A     		ldr	r2, .L28+24
 521 00d6 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 522 00d8 1A46     		mov	r2, r3
 523 00da FB68     		ldr	r3, [r7, #12]
 524 00dc 1343     		orrs	r3, r3, r2
 525 00de FB60     		str	r3, [r7, #12]
 457:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
 458:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 /* Add Raw Data to Baseline */
 459:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 calc += filteredRawData;
 526              		.loc 1 459 0
 527 00e0 7B8A     		ldrh	r3, [r7, #18]
 528 00e2 FA68     		ldr	r2, [r7, #12]
 529 00e4 1344     		add	r3, r3, r2
 530 00e6 FB60     		str	r3, [r7, #12]
 460:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
 461:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 /* Sub the high Baseline */
 462:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 calc -= CapSense_1_sensorBaseline[sensor];
 531              		.loc 1 462 0
 532 00e8 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 533 00ea 1E4A     		ldr	r2, .L28+16
 534 00ec 32F81330 		ldrh	r3, [r2, r3, lsl #1]
 535 00f0 1A46     		mov	r2, r3
 536 00f2 FB68     		ldr	r3, [r7, #12]
 537 00f4 9B1A     		subs	r3, r3, r2
 538 00f6 FB60     		str	r3, [r7, #12]
 463:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
 464:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 /* Put Baseline and BaselineLow */
 465:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 CapSense_1_sensorBaseline[sensor] = ((uint16) (calc >> 8u));
 539              		.loc 1 465 0
 540 00f8 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 541 00fa FA68     		ldr	r2, [r7, #12]
 542 00fc 120A     		lsrs	r2, r2, #8
 543 00fe 91B2     		uxth	r1, r2
 544 0100 184A     		ldr	r2, .L28+16
 545 0102 22F81310 		strh	r1, [r2, r3, lsl #1]	@ movhi
 466:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 CapSense_1_sensorBaselineLow[sensor] = ((uint8) calc);
 546              		.loc 1 466 0
 547 0106 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 548 0108 FA68     		ldr	r2, [r7, #12]
 549 010a D1B2     		uxtb	r1, r2
 550 010c 174A     		ldr	r2, .L28+24
 551 010e D154     		strb	r1, [r2, r3]
 467:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cc3EfiAs.s 			page 19


 468:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 CapSense_1_lowBaselineResetCnt[sensor] = 0u;
 552              		.loc 1 468 0
 553 0110 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 554 0112 154A     		ldr	r2, .L28+20
 555 0114 0021     		movs	r1, #0
 556 0116 D154     		strb	r1, [r2, r3]
 557              	.L22:
 469:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         #if (CapSense_1_AUTO_RESET == CapSense_1_AUTO_RESET_DISABLE)
 470:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             }
 471:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         #endif /* (CapSense_1_AUTO_RESET == CapSense_1_AUTO_RESET_DISABLE) */
 472:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     }
 473:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
 474:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     /* Calculate Signal if possitive difference > noiseThreshold */
 475:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     if((tempRaw > (uint16) noiseThreshold) && (widget != 0u))
 558              		.loc 1 475 0
 559 0118 3B7D     		ldrb	r3, [r7, #20]	@ zero_extendqisi2
 560 011a 9BB2     		uxth	r3, r3
 561 011c FA8A     		ldrh	r2, [r7, #22]
 562 011e 9A42     		cmp	r2, r3
 563 0120 10D9     		bls	.L24
 564              		.loc 1 475 0 is_stmt 0 discriminator 1
 565 0122 7B7D     		ldrb	r3, [r7, #21]	@ zero_extendqisi2
 566 0124 002B     		cmp	r3, #0
 567 0126 0DD0     		beq	.L24
 476:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     {
 477:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         #if (CapSense_1_SIGNAL_SIZE == CapSense_1_SIGNAL_SIZE_UINT8)
 478:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             /* Over flow defence for uint8 */
 479:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             if (tempRaw > 0xFFu)
 568              		.loc 1 479 0 is_stmt 1
 569 0128 FB8A     		ldrh	r3, [r7, #22]
 570 012a FF2B     		cmp	r3, #255
 571 012c 04D9     		bls	.L25
 480:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             {
 481:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 CapSense_1_sensorSignal[sensor] = 0xFFu;
 572              		.loc 1 481 0
 573 012e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 574 0130 0F4A     		ldr	r2, .L28+28
 575 0132 FF21     		movs	r1, #255
 576 0134 D154     		strb	r1, [r2, r3]
 479:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             {
 577              		.loc 1 479 0
 578 0136 09E0     		b	.L16
 579              	.L25:
 482:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             }    
 483:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             else 
 484:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             {
 485:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 CapSense_1_sensorSignal[sensor] = ((uint8) tempRaw);
 580              		.loc 1 485 0
 581 0138 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 582 013a FA8A     		ldrh	r2, [r7, #22]	@ movhi
 583 013c D1B2     		uxtb	r1, r2
 584 013e 0C4A     		ldr	r2, .L28+28
 585 0140 D154     		strb	r1, [r2, r3]
 479:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             {
 586              		.loc 1 479 0
 587 0142 03E0     		b	.L16
 588              	.L24:
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cc3EfiAs.s 			page 20


 486:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             }
 487:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         #else
 488:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             CapSense_1_sensorSignal[sensor] = ((uint16) tempRaw);
 489:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         #endif  /* (CapSense_1_SIGNAL_SIZE == CapSense_1_SIGNAL_SIZE_UINT8) */
 490:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     }
 491:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     else
 492:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     {
 493:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         /* Signal is zero */
 494:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         CapSense_1_sensorSignal[sensor] = 0u;
 589              		.loc 1 494 0
 590 0144 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 591 0146 0A4A     		ldr	r2, .L28+28
 592 0148 0021     		movs	r1, #0
 593 014a D154     		strb	r1, [r2, r3]
 594              	.L16:
 495:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     }
 496:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
 497:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     #if (CapSense_1_TOTAL_GENERICS_COUNT)
 498:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         /* Exclude generic widget */
 499:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         }
 500:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     #endif  /* CapSense_1_TOTAL_GENERICS_COUNT */
 501:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** }
 595              		.loc 1 501 0
 596 014c 1837     		adds	r7, r7, #24
 597              		.cfi_def_cfa_offset 8
 598 014e BD46     		mov	sp, r7
 599              		.cfi_def_cfa_register 13
 600              		@ sp needed
 601 0150 80BD     		pop	{r7, pc}
 602              	.L29:
 603 0152 00BF     		.align	2
 604              	.L28:
 605 0154 00000000 		.word	CapSense_1_widgetNumber
 606 0158 00000000 		.word	CapSense_1_noiseThreshold
 607 015c 00000000 		.word	CapSense_1_sensorRaw
 608 0160 00000000 		.word	CapSense_1_rawFilterData1
 609 0164 00000000 		.word	CapSense_1_sensorBaseline
 610 0168 00000000 		.word	CapSense_1_lowBaselineResetCnt
 611 016c 00000000 		.word	CapSense_1_sensorBaselineLow
 612 0170 00000000 		.word	CapSense_1_sensorSignal
 613              		.cfi_endproc
 614              	.LFE4:
 615              		.size	CapSense_1_UpdateSensorBaseline, .-CapSense_1_UpdateSensorBaseline
 616              		.section	.text.CapSense_1_UpdateEnabledBaselines,"ax",%progbits
 617              		.align	2
 618              		.global	CapSense_1_UpdateEnabledBaselines
 619              		.thumb
 620              		.thumb_func
 621              		.type	CapSense_1_UpdateEnabledBaselines, %function
 622              	CapSense_1_UpdateEnabledBaselines:
 623              	.LFB5:
 502:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
 503:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
 504:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** /*******************************************************************************
 505:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** * Function Name: CapSense_1_UpdateEnabledBaselines
 506:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** ********************************************************************************
 507:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cc3EfiAs.s 			page 21


 508:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** * Summary:
 509:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  Checks CapSense_1_sensorEnableMask[] array and calls the 
 510:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  CapSense_1_UpdateSensorBaseline function to update the baselines 
 511:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  for enabled sensors.
 512:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *
 513:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** * Parameters:
 514:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  None
 515:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *
 516:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** * Return:
 517:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  None
 518:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *
 519:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** * Global Variables:
 520:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  CapSense_1_sensorEnableMask[] - used to store the sensor scanning 
 521:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  state.
 522:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  CapSense_1_sensorEnableMask[0] contains the masked bits for sensors 
 523:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *   0 through 7 (sensor 0 is bit 0, sensor 1 is bit 1).
 524:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  CapSense_1_sensorEnableMask[1] contains the masked bits for 
 525:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  sensors 8 through 15 (if needed), and so on.
 526:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  0 - sensor doesn't scan by CapSense_1_ScanEnabledWidgets().
 527:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  1 - sensor scans by CapSense_1_ScanEnabledWidgets().
 528:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *
 529:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** * Reentrant:
 530:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  No
 531:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *
 532:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *******************************************************************************/
 533:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****  void CapSense_1_UpdateEnabledBaselines(void)
 534:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                  
 535:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** {
 624              		.loc 1 535 0
 625              		.cfi_startproc
 626              		@ args = 0, pretend = 0, frame = 8
 627              		@ frame_needed = 1, uses_anonymous_args = 0
 628 0000 80B5     		push	{r7, lr}
 629              		.cfi_def_cfa_offset 8
 630              		.cfi_offset 7, -8
 631              		.cfi_offset 14, -4
 632 0002 82B0     		sub	sp, sp, #8
 633              		.cfi_def_cfa_offset 16
 634 0004 00AF     		add	r7, sp, #0
 635              		.cfi_def_cfa_register 7
 536:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     uint8 i;
 537:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     uint8 pos;
 538:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     uint8 enMask;
 539:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     
 540:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     for(i = 0u; i < CapSense_1_TOTAL_SENSOR_COUNT; i++)
 636              		.loc 1 540 0
 637 0006 0023     		movs	r3, #0
 638 0008 FB71     		strb	r3, [r7, #7]
 639 000a 18E0     		b	.L31
 640              	.L33:
 541:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     {
 542:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         pos = (i >> 3u);
 641              		.loc 1 542 0
 642 000c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 643 000e DB08     		lsrs	r3, r3, #3
 644 0010 BB71     		strb	r3, [r7, #6]
 543:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         enMask = (uint8)(0x01u << (i & 0x07u));
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cc3EfiAs.s 			page 22


 645              		.loc 1 543 0
 646 0012 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 647 0014 03F00703 		and	r3, r3, #7
 648 0018 0122     		movs	r2, #1
 649 001a 02FA03F3 		lsl	r3, r2, r3
 650 001e 7B71     		strb	r3, [r7, #5]
 544:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         if((CapSense_1_sensorEnableMask[pos] & enMask) != 0u)
 651              		.loc 1 544 0
 652 0020 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 653 0022 0A4A     		ldr	r2, .L34
 654 0024 D25C     		ldrb	r2, [r2, r3]	@ zero_extendqisi2
 655 0026 7B79     		ldrb	r3, [r7, #5]
 656 0028 1340     		ands	r3, r3, r2
 657 002a DBB2     		uxtb	r3, r3
 658 002c 002B     		cmp	r3, #0
 659 002e 03D0     		beq	.L32
 545:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         {
 546:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             CapSense_1_UpdateSensorBaseline(i);
 660              		.loc 1 546 0
 661 0030 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 662 0032 1846     		mov	r0, r3
 663 0034 FFF7FEFF 		bl	CapSense_1_UpdateSensorBaseline
 664              	.L32:
 540:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     {
 665              		.loc 1 540 0 discriminator 2
 666 0038 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 667 003a 0133     		adds	r3, r3, #1
 668 003c FB71     		strb	r3, [r7, #7]
 669              	.L31:
 540:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     {
 670              		.loc 1 540 0 is_stmt 0 discriminator 1
 671 003e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 672 0040 072B     		cmp	r3, #7
 673 0042 E3D9     		bls	.L33
 547:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         }
 548:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     }
 549:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** }
 674              		.loc 1 549 0 is_stmt 1
 675 0044 0837     		adds	r7, r7, #8
 676              		.cfi_def_cfa_offset 8
 677 0046 BD46     		mov	sp, r7
 678              		.cfi_def_cfa_register 13
 679              		@ sp needed
 680 0048 80BD     		pop	{r7, pc}
 681              	.L35:
 682 004a 00BF     		.align	2
 683              	.L34:
 684 004c 00000000 		.word	CapSense_1_sensorEnableMask
 685              		.cfi_endproc
 686              	.LFE5:
 687              		.size	CapSense_1_UpdateEnabledBaselines, .-CapSense_1_UpdateEnabledBaselines
 688              		.section	.text.CapSense_1_CheckIsSensorActive,"ax",%progbits
 689              		.align	2
 690              		.global	CapSense_1_CheckIsSensorActive
 691              		.thumb
 692              		.thumb_func
 693              		.type	CapSense_1_CheckIsSensorActive, %function
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cc3EfiAs.s 			page 23


 694              	CapSense_1_CheckIsSensorActive:
 695              	.LFB6:
 550:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
 551:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
 552:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** /*******************************************************************************
 553:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** * Function Name: CapSense_1_CheckIsSensorActive
 554:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** ********************************************************************************
 555:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *
 556:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** * Summary:
 557:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  Compares the CapSense_1_SensorSignal[sensor] array element to finger
 558:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  threshold of widget it belongs to. The hysteresis and debounce are taken into 
 559:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  account. The hysteresis is added or subtracted from the finger threshold 
 560:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  based on whether the sensor is currently active. 
 561:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  If the sensor is active, the threshold is lowered by the hysteresis amount.
 562:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  If the sensor is inactive, the threshold is raised by the hysteresis amount.
 563:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  The debounce counter added to the sensor active transition.
 564:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  This function updates CapSense_1_SensorOnMask[] array element.
 565:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *
 566:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** * Parameters:
 567:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  sensor:  Sensor number.
 568:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *
 569:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** * Return:
 570:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  Returns sensor state 1 if active, 0 if not active.
 571:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *
 572:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** * Global Variables:
 573:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  CapSense_1_sensorSignal[]      - used to store diffence between 
 574:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  current value of raw data and previous value of baseline.
 575:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  CapSense_1_debounceCounter[]   - used to store current debounce 
 576:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  counter of sensor. Widget which has this parameter are buttons, matrix 
 577:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  buttons, proximity, guard. All other widgets haven't debounce parameter
 578:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  and use the last element of this array with value 0 (it means no debounce).
 579:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  CapSense_1_sensorOnMask[] - used to store sensors on/off state.
 580:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  CapSense_1_sensorOnMask[0] contains the masked bits for sensors 
 581:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *   0 through 7 (sensor 0 is bit 0, sensor 1 is bit 1).
 582:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  CapSense_1_sensorEnableMask[1] contains the masked bits for 
 583:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  sensors 8 through 15 (if needed), and so on.
 584:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  0 - sensor is inactive.
 585:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  1 - sensor is active.
 586:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *
 587:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** * Reentrant:
 588:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  No
 589:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *
 590:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *******************************************************************************/
 591:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** uint8 CapSense_1_CheckIsSensorActive(uint8 sensor)
 592:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                   
 593:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** {
 696              		.loc 1 593 0
 697              		.cfi_startproc
 698              		@ args = 0, pretend = 0, frame = 16
 699              		@ frame_needed = 1, uses_anonymous_args = 0
 700              		@ link register save eliminated.
 701 0000 80B4     		push	{r7}
 702              		.cfi_def_cfa_offset 4
 703              		.cfi_offset 7, -4
 704 0002 85B0     		sub	sp, sp, #20
 705              		.cfi_def_cfa_offset 24
 706 0004 00AF     		add	r7, sp, #0
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cc3EfiAs.s 			page 24


 707              		.cfi_def_cfa_register 7
 708 0006 0346     		mov	r3, r0
 709 0008 FB71     		strb	r3, [r7, #7]
 594:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     uint8 debounceIndex;
 595:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     /* Get On/Off mask */
 596:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     uint8 pos = (sensor >> 3u);
 710              		.loc 1 596 0
 711 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 712 000c DB08     		lsrs	r3, r3, #3
 713 000e FB73     		strb	r3, [r7, #15]
 597:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     uint8 onMask = 0x01u << (sensor & 0x07u);
 714              		.loc 1 597 0
 715 0010 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 716 0012 03F00703 		and	r3, r3, #7
 717 0016 0122     		movs	r2, #1
 718 0018 02FA03F3 		lsl	r3, r2, r3
 719 001c BB73     		strb	r3, [r7, #14]
 598:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     /* Prepare to find debounce counter index */
 599:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     uint8 widget = CapSense_1_widgetNumber[sensor];
 720              		.loc 1 599 0
 721 001e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 722 0020 324A     		ldr	r2, .L45
 723 0022 D35C     		ldrb	r3, [r2, r3]
 724 0024 7B73     		strb	r3, [r7, #13]
 600:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     uint8 fingerThreshold = CapSense_1_fingerThreshold[widget];
 725              		.loc 1 600 0
 726 0026 7B7B     		ldrb	r3, [r7, #13]	@ zero_extendqisi2
 727 0028 314A     		ldr	r2, .L45+4
 728 002a D35C     		ldrb	r3, [r2, r3]
 729 002c 3B73     		strb	r3, [r7, #12]
 601:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     uint8 hysteresis = CapSense_1_hysteresis[widget];
 730              		.loc 1 601 0
 731 002e 7B7B     		ldrb	r3, [r7, #13]	@ zero_extendqisi2
 732 0030 304A     		ldr	r2, .L45+8
 733 0032 D35C     		ldrb	r3, [r2, r3]
 734 0034 FB72     		strb	r3, [r7, #11]
 602:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     uint8 debounce = CapSense_1_debounce[widget];
 735              		.loc 1 602 0
 736 0036 7B7B     		ldrb	r3, [r7, #13]	@ zero_extendqisi2
 737 0038 2F4A     		ldr	r2, .L45+12
 738 003a D35C     		ldrb	r3, [r2, r3]
 739 003c BB72     		strb	r3, [r7, #10]
 603:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     
 604:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     debounceIndex = widget;
 740              		.loc 1 604 0
 741 003e 7B7B     		ldrb	r3, [r7, #13]
 742 0040 7B72     		strb	r3, [r7, #9]
 605:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
 606:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     
 607:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     /* Was on */
 608:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     if (0u != (CapSense_1_sensorOnMask[pos] & onMask))
 743              		.loc 1 608 0
 744 0042 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 745 0044 2D4A     		ldr	r2, .L45+16
 746 0046 D25C     		ldrb	r2, [r2, r3]	@ zero_extendqisi2
 747 0048 BB7B     		ldrb	r3, [r7, #14]
 748 004a 1340     		ands	r3, r3, r2
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cc3EfiAs.s 			page 25


 749 004c DBB2     		uxtb	r3, r3
 750 004e 002B     		cmp	r3, #0
 751 0050 18D0     		beq	.L37
 609:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     {
 610:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         /* Hysteresis minus */
 611:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         if (CapSense_1_sensorSignal[sensor] < (fingerThreshold - hysteresis))
 752              		.loc 1 611 0
 753 0052 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 754 0054 2A4A     		ldr	r2, .L45+20
 755 0056 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 756 0058 1946     		mov	r1, r3
 757 005a 3A7B     		ldrb	r2, [r7, #12]	@ zero_extendqisi2
 758 005c FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 759 005e D31A     		subs	r3, r2, r3
 760 0060 9942     		cmp	r1, r3
 761 0062 32DA     		bge	.L39
 612:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         {
 613:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             CapSense_1_sensorOnMask[pos] &= (uint8)~onMask;
 762              		.loc 1 613 0
 763 0064 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 764 0066 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 765 0068 2449     		ldr	r1, .L45+16
 766 006a 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
 767 006c BA7B     		ldrb	r2, [r7, #14]
 768 006e D243     		mvns	r2, r2
 769 0070 D2B2     		uxtb	r2, r2
 770 0072 0A40     		ands	r2, r2, r1
 771 0074 D1B2     		uxtb	r1, r2
 772 0076 214A     		ldr	r2, .L45+16
 773 0078 D154     		strb	r1, [r2, r3]
 614:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             CapSense_1_debounceCounter[debounceIndex] = debounce; 
 774              		.loc 1 614 0
 775 007a 7B7A     		ldrb	r3, [r7, #9]	@ zero_extendqisi2
 776 007c 2149     		ldr	r1, .L45+24
 777 007e BA7A     		ldrb	r2, [r7, #10]
 778 0080 CA54     		strb	r2, [r1, r3]
 779 0082 22E0     		b	.L39
 780              	.L37:
 615:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         }
 616:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     }
 617:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     else    /* Was off */
 618:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     {
 619:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         /* Hysteresis plus */
 620:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         if (CapSense_1_sensorSignal[sensor] > (fingerThreshold + hysteresis))
 781              		.loc 1 620 0
 782 0084 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 783 0086 1E4A     		ldr	r2, .L45+20
 784 0088 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 785 008a 1946     		mov	r1, r3
 786 008c 3A7B     		ldrb	r2, [r7, #12]	@ zero_extendqisi2
 787 008e FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 788 0090 1344     		add	r3, r3, r2
 789 0092 9942     		cmp	r1, r3
 790 0094 15DD     		ble	.L40
 621:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         {
 622:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             /* Sensor active, decrement debounce counter */
 623:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             if (CapSense_1_debounceCounter[debounceIndex] <= 1u)
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cc3EfiAs.s 			page 26


 791              		.loc 1 623 0
 792 0096 7B7A     		ldrb	r3, [r7, #9]	@ zero_extendqisi2
 793 0098 1A4A     		ldr	r2, .L45+24
 794 009a D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 795 009c 012B     		cmp	r3, #1
 796 009e 08D8     		bhi	.L41
 624:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             {
 625:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 CapSense_1_sensorOnMask[pos] |= onMask; 
 797              		.loc 1 625 0
 798 00a0 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 799 00a2 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 800 00a4 1549     		ldr	r1, .L45+16
 801 00a6 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
 802 00a8 BA7B     		ldrb	r2, [r7, #14]
 803 00aa 0A43     		orrs	r2, r2, r1
 804 00ac D1B2     		uxtb	r1, r2
 805 00ae 134A     		ldr	r2, .L45+16
 806 00b0 D154     		strb	r1, [r2, r3]
 807              	.L41:
 626:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             }
 627:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             CapSense_1_debounceCounter[debounceIndex]--;
 808              		.loc 1 627 0
 809 00b2 7B7A     		ldrb	r3, [r7, #9]	@ zero_extendqisi2
 810 00b4 134A     		ldr	r2, .L45+24
 811 00b6 D25C     		ldrb	r2, [r2, r3]	@ zero_extendqisi2
 812 00b8 013A     		subs	r2, r2, #1
 813 00ba D1B2     		uxtb	r1, r2
 814 00bc 114A     		ldr	r2, .L45+24
 815 00be D154     		strb	r1, [r2, r3]
 816 00c0 03E0     		b	.L39
 817              	.L40:
 628:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         }
 629:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         else
 630:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         {
 631:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             /* Sensor inactive - reset Debounce counter */
 632:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             CapSense_1_debounceCounter[debounceIndex] = debounce;
 818              		.loc 1 632 0
 819 00c2 7B7A     		ldrb	r3, [r7, #9]	@ zero_extendqisi2
 820 00c4 0F49     		ldr	r1, .L45+24
 821 00c6 BA7A     		ldrb	r2, [r7, #10]
 822 00c8 CA54     		strb	r2, [r1, r3]
 823              	.L39:
 633:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         }
 634:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     }
 635:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     
 636:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     return (((CapSense_1_sensorOnMask[pos] & onMask) != 0u) ? 1u : 0u);
 824              		.loc 1 636 0
 825 00ca FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 826 00cc 0B4A     		ldr	r2, .L45+16
 827 00ce D25C     		ldrb	r2, [r2, r3]	@ zero_extendqisi2
 828 00d0 BB7B     		ldrb	r3, [r7, #14]
 829 00d2 1340     		ands	r3, r3, r2
 830 00d4 DBB2     		uxtb	r3, r3
 831 00d6 002B     		cmp	r3, #0
 832 00d8 01D0     		beq	.L42
 833              		.loc 1 636 0 is_stmt 0 discriminator 1
 834 00da 0123     		movs	r3, #1
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cc3EfiAs.s 			page 27


 835 00dc 00E0     		b	.L43
 836              	.L42:
 837              		.loc 1 636 0 discriminator 2
 838 00de 0023     		movs	r3, #0
 839              	.L43:
 637:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** }
 840              		.loc 1 637 0 is_stmt 1 discriminator 4
 841 00e0 1846     		mov	r0, r3
 842 00e2 1437     		adds	r7, r7, #20
 843              		.cfi_def_cfa_offset 4
 844 00e4 BD46     		mov	sp, r7
 845              		.cfi_def_cfa_register 13
 846              		@ sp needed
 847 00e6 5DF8047B 		ldr	r7, [sp], #4
 848              		.cfi_restore 7
 849              		.cfi_def_cfa_offset 0
 850 00ea 7047     		bx	lr
 851              	.L46:
 852              		.align	2
 853              	.L45:
 854 00ec 00000000 		.word	CapSense_1_widgetNumber
 855 00f0 00000000 		.word	CapSense_1_fingerThreshold
 856 00f4 00000000 		.word	CapSense_1_hysteresis
 857 00f8 00000000 		.word	CapSense_1_debounce
 858 00fc 00000000 		.word	CapSense_1_sensorOnMask
 859 0100 00000000 		.word	CapSense_1_sensorSignal
 860 0104 00000000 		.word	CapSense_1_debounceCounter
 861              		.cfi_endproc
 862              	.LFE6:
 863              		.size	CapSense_1_CheckIsSensorActive, .-CapSense_1_CheckIsSensorActive
 864              		.section	.text.CapSense_1_CheckIsWidgetActive,"ax",%progbits
 865              		.align	2
 866              		.global	CapSense_1_CheckIsWidgetActive
 867              		.thumb
 868              		.thumb_func
 869              		.type	CapSense_1_CheckIsWidgetActive, %function
 870              	CapSense_1_CheckIsWidgetActive:
 871              	.LFB7:
 638:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
 639:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
 640:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** /*******************************************************************************
 641:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** * Function Name: CapSense_1_CheckIsWidgetActive
 642:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** ********************************************************************************
 643:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *
 644:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** * Summary:
 645:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  Use function CapSense_1_CheckIsSensorActive() to update 
 646:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  CapSense_1_sensorOnMask[] for all sensors within the widget.
 647:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  If one of sensors within widget is active the function return that widget is 
 648:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  active.
 649:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  The touch pad and matrix buttons widgets need to have active sensor within 
 650:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  col and row to return widget active status.
 651:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *
 652:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** * Parameters:
 653:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  widget:  widget number.
 654:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *
 655:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** * Return:
 656:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  Returns widget sensor state 1 if one or more sensors within widget is/are 
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cc3EfiAs.s 			page 28


 657:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  active, 0 if all sensors within widget are inactive.
 658:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *
 659:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** * Reentrant:
 660:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  No
 661:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *
 662:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *******************************************************************************/
 663:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** uint8 CapSense_1_CheckIsWidgetActive(uint8 widget)
 664:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                  
 665:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** {
 872              		.loc 1 665 0
 873              		.cfi_startproc
 874              		@ args = 0, pretend = 0, frame = 16
 875              		@ frame_needed = 1, uses_anonymous_args = 0
 876 0000 80B5     		push	{r7, lr}
 877              		.cfi_def_cfa_offset 8
 878              		.cfi_offset 7, -8
 879              		.cfi_offset 14, -4
 880 0002 84B0     		sub	sp, sp, #16
 881              		.cfi_def_cfa_offset 24
 882 0004 00AF     		add	r7, sp, #0
 883              		.cfi_def_cfa_register 7
 884 0006 0346     		mov	r3, r0
 885 0008 FB71     		strb	r3, [r7, #7]
 666:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     uint8 rawIndex = CapSense_1_rawDataIndex[widget];
 886              		.loc 1 666 0
 887 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 888 000c 0F4A     		ldr	r2, .L51
 889 000e D35C     		ldrb	r3, [r2, r3]
 890 0010 FB73     		strb	r3, [r7, #15]
 667:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     uint8 numberOfSensors = CapSense_1_numberOfSensors[widget] + rawIndex;
 891              		.loc 1 667 0
 892 0012 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 893 0014 0E4A     		ldr	r2, .L51+4
 894 0016 D25C     		ldrb	r2, [r2, r3]	@ zero_extendqisi2
 895 0018 FB7B     		ldrb	r3, [r7, #15]
 896 001a 1344     		add	r3, r3, r2
 897 001c 7B73     		strb	r3, [r7, #13]
 668:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     uint8 state = 0u;
 898              		.loc 1 668 0
 899 001e 0023     		movs	r3, #0
 900 0020 BB73     		strb	r3, [r7, #14]
 901              	.L49:
 669:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
 670:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     /* Check all sensors of the widget */
 671:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     do
 672:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     {
 673:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         if(CapSense_1_CheckIsSensorActive(rawIndex) != 0u)
 902              		.loc 1 673 0
 903 0022 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 904 0024 1846     		mov	r0, r3
 905 0026 FFF7FEFF 		bl	CapSense_1_CheckIsSensorActive
 906 002a 0346     		mov	r3, r0
 907 002c 002B     		cmp	r3, #0
 908 002e 01D0     		beq	.L48
 674:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         {
 675:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             state = CapSense_1_SENSOR_1_IS_ACTIVE;
 909              		.loc 1 675 0
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cc3EfiAs.s 			page 29


 910 0030 0123     		movs	r3, #1
 911 0032 BB73     		strb	r3, [r7, #14]
 912              	.L48:
 676:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         }
 677:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         rawIndex++;
 913              		.loc 1 677 0
 914 0034 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 915 0036 0133     		adds	r3, r3, #1
 916 0038 FB73     		strb	r3, [r7, #15]
 678:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     }
 679:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     while(rawIndex < numberOfSensors);
 917              		.loc 1 679 0
 918 003a FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 919 003c 7B7B     		ldrb	r3, [r7, #13]	@ zero_extendqisi2
 920 003e 9A42     		cmp	r2, r3
 921 0040 EFD3     		bcc	.L49
 680:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     
 681:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
 682:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     
 683:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     return (state);
 922              		.loc 1 683 0
 923 0042 BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 684:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** }
 924              		.loc 1 684 0
 925 0044 1846     		mov	r0, r3
 926 0046 1037     		adds	r7, r7, #16
 927              		.cfi_def_cfa_offset 8
 928 0048 BD46     		mov	sp, r7
 929              		.cfi_def_cfa_register 13
 930              		@ sp needed
 931 004a 80BD     		pop	{r7, pc}
 932              	.L52:
 933              		.align	2
 934              	.L51:
 935 004c 00000000 		.word	CapSense_1_rawDataIndex
 936 0050 00000000 		.word	CapSense_1_numberOfSensors
 937              		.cfi_endproc
 938              	.LFE7:
 939              		.size	CapSense_1_CheckIsWidgetActive, .-CapSense_1_CheckIsWidgetActive
 940              		.section	.text.CapSense_1_CheckIsAnyWidgetActive,"ax",%progbits
 941              		.align	2
 942              		.global	CapSense_1_CheckIsAnyWidgetActive
 943              		.thumb
 944              		.thumb_func
 945              		.type	CapSense_1_CheckIsAnyWidgetActive, %function
 946              	CapSense_1_CheckIsAnyWidgetActive:
 947              	.LFB8:
 685:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
 686:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
 687:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** /*******************************************************************************
 688:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** * Function Name: CapSense_1_CheckIsAnyWidgetActive
 689:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** ********************************************************************************
 690:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *
 691:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** * Summary:
 692:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  Compares all sensors of the CapSense_1_signal[] array to their finger 
 693:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  threshold. Calls CapSense_1_CheckIsWidgetActive() for each widget so 
 694:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  the CapSense_1_SensorOnMask[] array is up to date after calling this 
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cc3EfiAs.s 			page 30


 695:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  function.
 696:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *
 697:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** * Parameters:
 698:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  widget:  widget number.
 699:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *
 700:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** * Return:
 701:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  Returns 1 if any widget is active, 0 none of widgets are active.
 702:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *
 703:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** * Reentrant:
 704:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  No
 705:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *
 706:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *******************************************************************************/
 707:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** uint8 CapSense_1_CheckIsAnyWidgetActive(void)
 708:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                  
 709:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** {
 948              		.loc 1 709 0
 949              		.cfi_startproc
 950              		@ args = 0, pretend = 0, frame = 8
 951              		@ frame_needed = 1, uses_anonymous_args = 0
 952 0000 80B5     		push	{r7, lr}
 953              		.cfi_def_cfa_offset 8
 954              		.cfi_offset 7, -8
 955              		.cfi_offset 14, -4
 956 0002 82B0     		sub	sp, sp, #8
 957              		.cfi_def_cfa_offset 16
 958 0004 00AF     		add	r7, sp, #0
 959              		.cfi_def_cfa_register 7
 710:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     uint8 i;
 711:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     uint8 state = 0u;
 960              		.loc 1 711 0
 961 0006 0023     		movs	r3, #0
 962 0008 BB71     		strb	r3, [r7, #6]
 712:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     
 713:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     for(i = 0u; i < CapSense_1_TOTAL_WIDGET_COUNT; i++)
 963              		.loc 1 713 0
 964 000a 0023     		movs	r3, #0
 965 000c FB71     		strb	r3, [r7, #7]
 966 000e 0BE0     		b	.L54
 967              	.L56:
 714:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     {
 715:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         if (CapSense_1_CheckIsWidgetActive(i) != 0u)
 968              		.loc 1 715 0
 969 0010 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 970 0012 1846     		mov	r0, r3
 971 0014 FFF7FEFF 		bl	CapSense_1_CheckIsWidgetActive
 972 0018 0346     		mov	r3, r0
 973 001a 002B     		cmp	r3, #0
 974 001c 01D0     		beq	.L55
 716:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         {
 717:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             state = CapSense_1_WIDGET_IS_ACTIVE;
 975              		.loc 1 717 0
 976 001e 0123     		movs	r3, #1
 977 0020 BB71     		strb	r3, [r7, #6]
 978              	.L55:
 713:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     {
 979              		.loc 1 713 0 discriminator 2
 980 0022 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cc3EfiAs.s 			page 31


 981 0024 0133     		adds	r3, r3, #1
 982 0026 FB71     		strb	r3, [r7, #7]
 983              	.L54:
 713:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     {
 984              		.loc 1 713 0 is_stmt 0 discriminator 1
 985 0028 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 986 002a 072B     		cmp	r3, #7
 987 002c F0D9     		bls	.L56
 718:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         }
 719:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     }
 720:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     
 721:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
 722:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     return (state);
 988              		.loc 1 722 0 is_stmt 1
 989 002e BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 723:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** }
 990              		.loc 1 723 0
 991 0030 1846     		mov	r0, r3
 992 0032 0837     		adds	r7, r7, #8
 993              		.cfi_def_cfa_offset 8
 994 0034 BD46     		mov	sp, r7
 995              		.cfi_def_cfa_register 13
 996              		@ sp needed
 997 0036 80BD     		pop	{r7, pc}
 998              		.cfi_endproc
 999              	.LFE8:
 1000              		.size	CapSense_1_CheckIsAnyWidgetActive, .-CapSense_1_CheckIsAnyWidgetActive
 1001              		.section	.text.CapSense_1_EnableWidget,"ax",%progbits
 1002              		.align	2
 1003              		.global	CapSense_1_EnableWidget
 1004              		.thumb
 1005              		.thumb_func
 1006              		.type	CapSense_1_EnableWidget, %function
 1007              	CapSense_1_EnableWidget:
 1008              	.LFB9:
 724:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
 725:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
 726:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** /*******************************************************************************
 727:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** * Function Name: CapSense_1_EnableWidget
 728:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** ********************************************************************************
 729:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *
 730:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** * Summary:
 731:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  Enable all widget elements (sensors) to scanning process.
 732:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *
 733:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** * Parameters:
 734:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  widget:  widget number.
 735:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *
 736:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** * Return:
 737:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  None
 738:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *
 739:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** * Global Variables:
 740:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  CapSense_1_sensorEnableMask[] - used to store the sensor scanning 
 741:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  state.
 742:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  CapSense_1_sensorEnableMask[0] contains the masked bits for sensors 
 743:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  0 through 7 (sensor 0 is bit 0, sensor 1 is bit 1).
 744:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  CapSense_1_sensorEnableMask[1] contains the masked bits for 
 745:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  sensors 8 through 15 (if needed), and so on.
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cc3EfiAs.s 			page 32


 746:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  0 - sensor doesn't scan by CapSense_1_ScanEnabledWidgets().
 747:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  1 - sensor scans by CapSense_1_ScanEnabledWidgets().
 748:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *
 749:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** * Reentrant:
 750:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  No
 751:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *
 752:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *******************************************************************************/
 753:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** void CapSense_1_EnableWidget(uint8 widget)
 754:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                    
 755:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** {
 1009              		.loc 1 755 0
 1010              		.cfi_startproc
 1011              		@ args = 0, pretend = 0, frame = 16
 1012              		@ frame_needed = 1, uses_anonymous_args = 0
 1013              		@ link register save eliminated.
 1014 0000 80B4     		push	{r7}
 1015              		.cfi_def_cfa_offset 4
 1016              		.cfi_offset 7, -4
 1017 0002 85B0     		sub	sp, sp, #20
 1018              		.cfi_def_cfa_offset 24
 1019 0004 00AF     		add	r7, sp, #0
 1020              		.cfi_def_cfa_register 7
 1021 0006 0346     		mov	r3, r0
 1022 0008 FB71     		strb	r3, [r7, #7]
 756:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     uint8 pos;
 757:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     uint8 enMask;
 758:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     uint8 rawIndex = CapSense_1_rawDataIndex[widget];
 1023              		.loc 1 758 0
 1024 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1025 000c 134A     		ldr	r2, .L60
 1026 000e D35C     		ldrb	r3, [r2, r3]
 1027 0010 FB73     		strb	r3, [r7, #15]
 759:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     uint8 numberOfSensors = CapSense_1_numberOfSensors[widget] + rawIndex;
 1028              		.loc 1 759 0
 1029 0012 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1030 0014 124A     		ldr	r2, .L60+4
 1031 0016 D25C     		ldrb	r2, [r2, r3]	@ zero_extendqisi2
 1032 0018 FB7B     		ldrb	r3, [r7, #15]
 1033 001a 1344     		add	r3, r3, r2
 1034 001c BB73     		strb	r3, [r7, #14]
 1035              	.L59:
 760:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     
 761:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     /* Enable all sensors of the widget */
 762:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     do
 763:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     {
 764:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         pos = (rawIndex >> 3u);
 1036              		.loc 1 764 0 discriminator 1
 1037 001e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1038 0020 DB08     		lsrs	r3, r3, #3
 1039 0022 7B73     		strb	r3, [r7, #13]
 765:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         enMask = 0x01u << (rawIndex & 0x07u);
 1040              		.loc 1 765 0 discriminator 1
 1041 0024 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1042 0026 03F00703 		and	r3, r3, #7
 1043 002a 0122     		movs	r2, #1
 1044 002c 02FA03F3 		lsl	r3, r2, r3
 1045 0030 3B73     		strb	r3, [r7, #12]
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cc3EfiAs.s 			page 33


 766:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         
 767:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         CapSense_1_sensorEnableMask[pos] |= enMask;
 1046              		.loc 1 767 0 discriminator 1
 1047 0032 7B7B     		ldrb	r3, [r7, #13]	@ zero_extendqisi2
 1048 0034 7A7B     		ldrb	r2, [r7, #13]	@ zero_extendqisi2
 1049 0036 0B49     		ldr	r1, .L60+8
 1050 0038 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
 1051 003a 3A7B     		ldrb	r2, [r7, #12]
 1052 003c 0A43     		orrs	r2, r2, r1
 1053 003e D1B2     		uxtb	r1, r2
 1054 0040 084A     		ldr	r2, .L60+8
 1055 0042 D154     		strb	r1, [r2, r3]
 768:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         rawIndex++;
 1056              		.loc 1 768 0 discriminator 1
 1057 0044 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1058 0046 0133     		adds	r3, r3, #1
 1059 0048 FB73     		strb	r3, [r7, #15]
 769:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     }
 770:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     while(rawIndex < numberOfSensors);
 1060              		.loc 1 770 0 discriminator 1
 1061 004a FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 1062 004c BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 1063 004e 9A42     		cmp	r2, r3
 1064 0050 E5D3     		bcc	.L59
 771:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     
 772:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
 773:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** }
 1065              		.loc 1 773 0
 1066 0052 1437     		adds	r7, r7, #20
 1067              		.cfi_def_cfa_offset 4
 1068 0054 BD46     		mov	sp, r7
 1069              		.cfi_def_cfa_register 13
 1070              		@ sp needed
 1071 0056 5DF8047B 		ldr	r7, [sp], #4
 1072              		.cfi_restore 7
 1073              		.cfi_def_cfa_offset 0
 1074 005a 7047     		bx	lr
 1075              	.L61:
 1076              		.align	2
 1077              	.L60:
 1078 005c 00000000 		.word	CapSense_1_rawDataIndex
 1079 0060 00000000 		.word	CapSense_1_numberOfSensors
 1080 0064 00000000 		.word	CapSense_1_sensorEnableMask
 1081              		.cfi_endproc
 1082              	.LFE9:
 1083              		.size	CapSense_1_EnableWidget, .-CapSense_1_EnableWidget
 1084              		.section	.text.CapSense_1_DisableWidget,"ax",%progbits
 1085              		.align	2
 1086              		.global	CapSense_1_DisableWidget
 1087              		.thumb
 1088              		.thumb_func
 1089              		.type	CapSense_1_DisableWidget, %function
 1090              	CapSense_1_DisableWidget:
 1091              	.LFB10:
 774:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
 775:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
 776:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** /*******************************************************************************
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cc3EfiAs.s 			page 34


 777:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** * Function Name: CapSense_1_DisableWidget
 778:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** ********************************************************************************
 779:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *
 780:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** * Summary:
 781:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  Disable all widget elements (sensors) from scanning process.
 782:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *
 783:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** * Parameters:
 784:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  widget:  widget number.
 785:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *
 786:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** * Return:
 787:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  None
 788:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *
 789:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** * Global Variables:
 790:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  CapSense_1_sensorEnableMask[] - used to store the sensor scanning 
 791:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  state.
 792:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  CapSense_1_sensorEnableMask[0] contains the masked bits for sensors 
 793:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  0 through 7 (sensor 0 is bit 0, sensor 1 is bit 1).
 794:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  CapSense_1_sensorEnableMask[1] contains the masked bits for 
 795:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  sensors 8 through 15 (if needed), and so on.
 796:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  0 - sensor doesn't scan by CapSense_1_ScanEnabledWidgets().
 797:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  1 - sensor scans by CapSense_1_ScanEnabledWidgets().
 798:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *
 799:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** * Reentrant:
 800:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  No
 801:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *
 802:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *******************************************************************************/
 803:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** void CapSense_1_DisableWidget(uint8 widget)
 804:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                     
 805:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** {
 1092              		.loc 1 805 0
 1093              		.cfi_startproc
 1094              		@ args = 0, pretend = 0, frame = 16
 1095              		@ frame_needed = 1, uses_anonymous_args = 0
 1096              		@ link register save eliminated.
 1097 0000 80B4     		push	{r7}
 1098              		.cfi_def_cfa_offset 4
 1099              		.cfi_offset 7, -4
 1100 0002 85B0     		sub	sp, sp, #20
 1101              		.cfi_def_cfa_offset 24
 1102 0004 00AF     		add	r7, sp, #0
 1103              		.cfi_def_cfa_register 7
 1104 0006 0346     		mov	r3, r0
 1105 0008 FB71     		strb	r3, [r7, #7]
 806:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     uint8 pos;
 807:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     uint8 enMask;
 808:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     uint8 rawIndex = CapSense_1_rawDataIndex[widget];
 1106              		.loc 1 808 0
 1107 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1108 000c 144A     		ldr	r2, .L64
 1109 000e D35C     		ldrb	r3, [r2, r3]
 1110 0010 FB73     		strb	r3, [r7, #15]
 809:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     uint8 numberOfSensors = CapSense_1_numberOfSensors[widget] + rawIndex;
 1111              		.loc 1 809 0
 1112 0012 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1113 0014 134A     		ldr	r2, .L64+4
 1114 0016 D25C     		ldrb	r2, [r2, r3]	@ zero_extendqisi2
 1115 0018 FB7B     		ldrb	r3, [r7, #15]
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cc3EfiAs.s 			page 35


 1116 001a 1344     		add	r3, r3, r2
 1117 001c BB73     		strb	r3, [r7, #14]
 1118              	.L63:
 810:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****    
 811:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     /* Disable all sensors of the widget */
 812:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     do
 813:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     {
 814:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         pos = (rawIndex >> 3u);
 1119              		.loc 1 814 0 discriminator 1
 1120 001e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1121 0020 DB08     		lsrs	r3, r3, #3
 1122 0022 7B73     		strb	r3, [r7, #13]
 815:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         enMask = 0x01u << (rawIndex & 0x07u);
 1123              		.loc 1 815 0 discriminator 1
 1124 0024 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1125 0026 03F00703 		and	r3, r3, #7
 1126 002a 0122     		movs	r2, #1
 1127 002c 02FA03F3 		lsl	r3, r2, r3
 1128 0030 3B73     		strb	r3, [r7, #12]
 816:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         
 817:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         CapSense_1_sensorEnableMask[pos] &= (uint8)~enMask;
 1129              		.loc 1 817 0 discriminator 1
 1130 0032 7B7B     		ldrb	r3, [r7, #13]	@ zero_extendqisi2
 1131 0034 7A7B     		ldrb	r2, [r7, #13]	@ zero_extendqisi2
 1132 0036 0C49     		ldr	r1, .L64+8
 1133 0038 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
 1134 003a 3A7B     		ldrb	r2, [r7, #12]
 1135 003c D243     		mvns	r2, r2
 1136 003e D2B2     		uxtb	r2, r2
 1137 0040 0A40     		ands	r2, r2, r1
 1138 0042 D1B2     		uxtb	r1, r2
 1139 0044 084A     		ldr	r2, .L64+8
 1140 0046 D154     		strb	r1, [r2, r3]
 818:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         rawIndex++;
 1141              		.loc 1 818 0 discriminator 1
 1142 0048 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1143 004a 0133     		adds	r3, r3, #1
 1144 004c FB73     		strb	r3, [r7, #15]
 819:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     }
 820:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     while(rawIndex < numberOfSensors);
 1145              		.loc 1 820 0 discriminator 1
 1146 004e FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 1147 0050 BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 1148 0052 9A42     		cmp	r2, r3
 1149 0054 E3D3     		bcc	.L63
 821:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     
 822:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
 823:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** }
 1150              		.loc 1 823 0
 1151 0056 1437     		adds	r7, r7, #20
 1152              		.cfi_def_cfa_offset 4
 1153 0058 BD46     		mov	sp, r7
 1154              		.cfi_def_cfa_register 13
 1155              		@ sp needed
 1156 005a 5DF8047B 		ldr	r7, [sp], #4
 1157              		.cfi_restore 7
 1158              		.cfi_def_cfa_offset 0
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cc3EfiAs.s 			page 36


 1159 005e 7047     		bx	lr
 1160              	.L65:
 1161              		.align	2
 1162              	.L64:
 1163 0060 00000000 		.word	CapSense_1_rawDataIndex
 1164 0064 00000000 		.word	CapSense_1_numberOfSensors
 1165 0068 00000000 		.word	CapSense_1_sensorEnableMask
 1166              		.cfi_endproc
 1167              	.LFE10:
 1168              		.size	CapSense_1_DisableWidget, .-CapSense_1_DisableWidget
 1169              		.section	.text.CapSense_1_IIR4Filter,"ax",%progbits
 1170              		.align	2
 1171              		.global	CapSense_1_IIR4Filter
 1172              		.thumb
 1173              		.thumb_func
 1174              		.type	CapSense_1_IIR4Filter, %function
 1175              	CapSense_1_IIR4Filter:
 1176              	.LFB11:
 824:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** #if(CapSense_1_TOTAL_CENTROIDS_COUNT)
 825:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     /*******************************************************************************
 826:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     * Function Name: CapSense_1_FindMaximum
 827:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     ********************************************************************************
 828:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *
 829:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     * Summary:
 830:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  Finds index of maximum element within defined centroid. Checks 
 831:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  CapSense_1_SensorSignal[] within defined cenrtoid and 
 832:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  returns index of maximum element. The values below finger threshold are 
 833:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  ignored.
 834:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  The centrod defines by offset of first element and number of elements - count.
 835:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  The diplexed centroid requires at least consecutive two elements above
 836:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  FingerThreshold to find index of maximum element.
 837:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     * 
 838:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     * Parameters:
 839:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  offset:  Start index of cetroid in CapSense_1_sensorSignal[] array.
 840:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  count:   number of elements within centroid.
 841:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  fingerThreshold:  Finger threshould.
 842:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  diplex:   pointer to diplex table.
 843:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     * 
 844:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     * Return:
 845:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  Returns index of maximum element within defined centroid.
 846:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  If index of maximum element doesn't find the 0xFF returns.
 847:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     * 
 848:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *******************************************************************************/
 849:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     #if (CapSense_1_IS_DIPLEX_SLIDER)
 850:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         uint8 CapSense_1_FindMaximum(uint8 offset, uint8 count, uint8 fingerThreshold, const uint8 
 851:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 	                                       
 852:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     #else 
 853:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         uint8 CapSense_1_FindMaximum(uint8 offset, uint8 count, uint8 fingerThreshold)
 854:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 	                                       
 855:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     #endif /* (CapSense_1_IS_DIPLEX_SLIDER) */
 856:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     {
 857:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         uint8 i;
 858:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         #if (CapSense_1_IS_DIPLEX_SLIDER)        
 859:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             uint8 curPos = 0u;
 860:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             /* No centroid at the Start */
 861:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             uint8 curCntrdSize = 0u;
 862:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             uint8 curCtrdStartPos = 0xFFu;
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cc3EfiAs.s 			page 37


 863:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             /* The biggset centroid is zero */
 864:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             uint8 biggestCtrdSize = 0u;
 865:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             uint8 biggestCtrdStartPos = 0u;
 866:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         #endif /* (CapSense_1_IS_DIPLEX_SLIDER) */
 867:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         uint8 maximum = 0xFFu;
 868:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         uint8 temp = 0u;
 869:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         uint8 *startOfSlider = &CapSense_1_sensorSignal[offset]; 
 870:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
 871:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         #if (CapSense_1_IS_DIPLEX_SLIDER)        
 872:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             if(diplex != 0u)
 873:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             {
 874:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 /* Initialize */
 875:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 i = 0u;
 876:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 
 877:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 /* Make slider x2 as Diplexed */
 878:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 count <<= 1u;
 879:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 while(1u)
 880:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 { 
 881:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     if (startOfSlider[curPos] > 0u)    /* Looking for centroids */
 882:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     {
 883:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         if (curCtrdStartPos == 0xFFu)
 884:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         {
 885:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             /* Start of centroid */
 886:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             curCtrdStartPos = i;
 887:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             curCntrdSize++;
 888:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         }
 889:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         else
 890:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         {
 891:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             curCntrdSize++;
 892:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         }
 893:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     }
 894:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     else   /* Select the bigest and indicate zero start */
 895:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     {          
 896:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         if(curCntrdSize > 0u)
 897:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         {
 898:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             /* We are in the end of current */
 899:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             if(curCntrdSize > biggestCtrdSize)
 900:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             {
 901:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                 biggestCtrdSize = curCntrdSize;
 902:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                 biggestCtrdStartPos = curCtrdStartPos;
 903:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             }
 904:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             
 905:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             curCntrdSize = 0u;
 906:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             curCtrdStartPos = 0xFFu;
 907:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         }
 908:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     }
 909:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     
 910:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     i++; 
 911:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     curPos = diplex[i];
 912:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     if(i == count)
 913:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     {
 914:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         break;
 915:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     }            
 916:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 }
 917:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     
 918:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     /* Find the biggest centroid if two are the same size, last one wins
 919:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                        We are in the end of current */
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cc3EfiAs.s 			page 38


 920:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 if (curCntrdSize >= biggestCtrdSize) 
 921:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 {
 922:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     biggestCtrdSize = curCntrdSize;
 923:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     biggestCtrdStartPos = curCtrdStartPos;
 924:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 }
 925:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             }
 926:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             else
 927:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             {
 928:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 /* Without diplexing */ 
 929:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 biggestCtrdSize = count;
 930:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             }
 931:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         
 932:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
 933:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             /* Check centroid size */
 934:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             #if (CapSense_1_IS_NON_DIPLEX_SLIDER)
 935:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 if((biggestCtrdSize >= 2u) || ((biggestCtrdSize == 1u) && (diplex == 0u)))
 936:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             #else                    
 937:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 if(biggestCtrdSize >= 2u)
 938:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             #endif /* (CapSense_1_IS_NON_DIPLEX_SLIDER) */
 939:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 {
 940:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     for (i = biggestCtrdStartPos; i < (biggestCtrdStartPos + biggestCtrdSize); i++)
 941:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     {
 942:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         #if (CapSense_1_IS_DIPLEX_SLIDER && CapSense_1_IS_NON_DIPLEX_SLIDER)
 943:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             if (diplex == 0u)
 944:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             {
 945:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                 curPos = i;
 946:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             }
 947:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             else
 948:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             {
 949:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                 curPos = diplex[i];
 950:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             }                    
 951:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         #elif (CapSense_1_IS_DIPLEX_SLIDER)                    
 952:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             curPos = diplex[i];                    
 953:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         #endif /* (CapSense_1_IS_DIPLEX_SLIDER && CapSense_1_IS_NON_DIPLEX_SLIDER) 
 954:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         /* Looking for the grater element within centroid */
 955:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         if(startOfSlider[curPos] > fingerThreshold)
 956:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         {
 957:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             if(startOfSlider[curPos] > temp)
 958:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             {
 959:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                 maximum = i;
 960:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                 temp = startOfSlider[curPos];
 961:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             }
 962:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         }
 963:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     }
 964:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 } 
 965:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         #else
 966:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             for (i = 0u; i < count; i++)
 967:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             {                      
 968:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 /* Looking for the grater element within centroid */
 969:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 if(startOfSlider[i] > fingerThreshold)
 970:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 {
 971:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     if(startOfSlider[i] > temp)
 972:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     {
 973:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         maximum = i;
 974:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         temp = startOfSlider[i];
 975:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     }
 976:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 }
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cc3EfiAs.s 			page 39


 977:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             }    
 978:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         #endif /* (CapSense_1_IS_DIPLEX_SLIDER) */
 979:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         return (maximum);
 980:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     }
 981:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     
 982:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     
 983:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     /*******************************************************************************
 984:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     * Function Name: CapSense_1_CalcCentroid
 985:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     ********************************************************************************
 986:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *
 987:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     * Summary:
 988:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  Returns position value calculated accoring index of maximum element and API
 989:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  resolution.
 990:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *
 991:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     * Parameters:
 992:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  type:  widget type.
 993:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  diplex:  pointer to diplex table.
 994:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  maximum:  Index of maximum element within centroid.
 995:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  offset:   Start index of cetroid in CapSense_1_SensorSignal[] array.
 996:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  count:    Number of elements within centroid.
 997:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  resolution:  multiplicator calculated according to centroid type and
 998:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  API resolution.
 999:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  noiseThreshold:  Noise threshould.
1000:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     * 
1001:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     * Return:
1002:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  Returns position value of the slider.
1003:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     * 
1004:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *
1005:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     * Reentrant:
1006:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  No.
1007:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *
1008:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *******************************************************************************/
1009:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     uint8 CapSense_1_CalcCentroid(uint8 maximum, uint8 offset, 
1010:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                         uint8 count, uint16 resolution, uint8 noiseThreshold)
1011:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 	                                    
1012:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     {
1013:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         #if ((CapSense_1_TOTAL_LINEAR_SLIDERS_COUNT > 0u) || (CapSense_1_TOTAL_TOUCH_PADS_COUNT > 0
1014:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             uint8 posPrev = 0u;
1015:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             uint8 posNext = 0u;
1016:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         #endif /* ((CapSense_1_TOTAL_LINEAR_SLIDERS_COUNT>0u) || (CapSense_1_TOTAL_TOUCH_PADS_COUNT
1017:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                
1018:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         #if (CapSense_1_IS_DIPLEX_SLIDER)                
1019:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             uint8 pos;
1020:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         #endif /* (CapSense_1_IS_DIPLEX_SLIDER) */
1021:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         
1022:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         /* Helps while centroid calulation */
1023:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         static uint8 CapSense_1_centroid[3u];
1024:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
1025:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         uint8 position;
1026:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         uint32 numerator;
1027:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         int32 denominator;
1028:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         uint8 *startOfSlider = &CapSense_1_sensorSignal[offset];
1029:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     
1030:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         #if (CapSense_1_ADD_SLIDER_TYPE)
1031:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             if(type == CapSense_1_TYPE_RADIAL_SLIDER)
1032:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             {
1033:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         #endif /* (CapSense_1_ADD_SLIDER_TYPE) */
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cc3EfiAs.s 			page 40


1034:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
1035:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             #if (CapSense_1_TOTAL_RADIAL_SLIDERS_COUNT > 0u)                
1036:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 /* Copy Signal for found centriod */
1037:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 CapSense_1_centroid[CapSense_1_POS] = startOfSlider[maximum];
1038:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                  
1039:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 /* Check borders for ROTARY Slider */
1040:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 if (maximum == 0u)                   /* Start of centroid */
1041:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 { 
1042:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     CapSense_1_centroid[CapSense_1_POS_PREV] = startOfSlider[count - 1u];
1043:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     CapSense_1_centroid[CapSense_1_POS_NEXT] = startOfSlider[1u];
1044:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 }
1045:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 else if (maximum == (count - 1u))    /* End of centroid */
1046:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 {
1047:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     CapSense_1_centroid[CapSense_1_POS_PREV] = startOfSlider[maximum - 1u];
1048:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     CapSense_1_centroid[CapSense_1_POS_NEXT] = startOfSlider[0u];
1049:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 }
1050:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 else                                /* Not first Not last */
1051:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 {
1052:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     CapSense_1_centroid[CapSense_1_POS_PREV] = startOfSlider[maximum - 1u];
1053:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     CapSense_1_centroid[CapSense_1_POS_NEXT] = startOfSlider[maximum + 1u];
1054:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 }
1055:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             #endif /* (CapSense_1_TOTAL_RADIAL_SLIDERS_COUNT > 0u) */
1056:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
1057:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         #if (CapSense_1_ADD_SLIDER_TYPE)
1058:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             }
1059:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             else
1060:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             {
1061:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         #endif /* (CapSense_1_ADD_SLIDER_TYPE) */
1062:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
1063:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             #if ((CapSense_1_TOTAL_LINEAR_SLIDERS_COUNT > 0u) || (CapSense_1_TOTAL_TOUCH_PADS_COUNT
1064:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 #if (CapSense_1_IS_DIPLEX_SLIDER && CapSense_1_IS_NON_DIPLEX_SLIDER)               
1065:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     /* Calculate next and previous near to maximum */
1066:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     if(diplex == 0u)
1067:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     {
1068:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         pos     = maximum;
1069:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         posPrev = maximum - 1u;
1070:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         posNext = maximum + 1u; 
1071:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     }
1072:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     else
1073:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     {
1074:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         pos     = diplex[maximum];
1075:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         posPrev = diplex[maximum - 1u];
1076:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         posNext = diplex[maximum + 1u];
1077:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         count <<= 1u;
1078:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     }                    
1079:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 #elif (CapSense_1_IS_DIPLEX_SLIDER)
1080:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     /* Calculate next and previous near to maximum */
1081:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     pos     = diplex[maximum];
1082:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     posPrev = diplex[maximum - 1u];
1083:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     posNext = diplex[maximum + 1u];
1084:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     count <<= 1u;                    
1085:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 #else                    
1086:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     /* Calculate next and previous near to maximum */
1087:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     if (maximum >= 1u)
1088:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     {
1089:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         posPrev = maximum - 1u;
1090:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     }
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cc3EfiAs.s 			page 41


1091:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     posNext = maximum + 1u; 
1092:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 #endif /* (CapSense_1_IS_DIPLEX_SLIDER && CapSense_1_IS_NON_DIPLEX_SLIDER) */
1093:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         
1094:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 /* Copy Signal for found centriod */
1095:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 #if (CapSense_1_IS_DIPLEX_SLIDER)
1096:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     CapSense_1_centroid[CapSense_1_POS] = startOfSlider[pos];
1097:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 #else
1098:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     CapSense_1_centroid[CapSense_1_POS] = startOfSlider[maximum];
1099:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 #endif /* (CapSense_1_IS_DIPLEX_SLIDER) */
1100:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     
1101:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 /* Check borders for LINEAR Slider */
1102:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 if (maximum == 0u)                   /* Start of centroid */
1103:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 { 
1104:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     CapSense_1_centroid[CapSense_1_POS_PREV] = 0u;
1105:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     CapSense_1_centroid[CapSense_1_POS_NEXT] = startOfSlider[posNext];
1106:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 }
1107:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 else if (maximum == ((count) - 1u)) /* End of centroid */
1108:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 {
1109:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     CapSense_1_centroid[CapSense_1_POS_PREV] = startOfSlider[posPrev];
1110:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     CapSense_1_centroid[CapSense_1_POS_NEXT] = 0u;
1111:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 }
1112:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 else                                /* Not first Not last */
1113:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 {
1114:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     CapSense_1_centroid[CapSense_1_POS_PREV] = startOfSlider[posPrev];
1115:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     CapSense_1_centroid[CapSense_1_POS_NEXT] = startOfSlider[posNext];
1116:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 }
1117:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             #endif /* ((CapSense_1_TOTAL_LINEAR_SLIDERS_COUNT>0u)||(CapSense_1_TOTAL_TOUCH_PADS_COU
1118:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
1119:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         #if (CapSense_1_ADD_SLIDER_TYPE)
1120:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             }
1121:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         #endif /* (CapSense_1_ADD_SLIDER_TYPE) */
1122:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     
1123:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         /* Subtract noiseThreshold */
1124:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         if(CapSense_1_centroid[CapSense_1_POS_PREV] > noiseThreshold)
1125:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         {
1126:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             CapSense_1_centroid[CapSense_1_POS_PREV] -= noiseThreshold;
1127:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         }
1128:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         else
1129:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         {
1130:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             CapSense_1_centroid[CapSense_1_POS_PREV] = 0u;
1131:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         }
1132:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         
1133:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         /* Maximum always grater than fingerThreshold, so grate than noiseThreshold */
1134:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         CapSense_1_centroid[CapSense_1_POS] -= noiseThreshold;
1135:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         
1136:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         /* Subtract noiseThreshold */
1137:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         if(CapSense_1_centroid[CapSense_1_POS_NEXT] > noiseThreshold)
1138:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         {
1139:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             CapSense_1_centroid[CapSense_1_POS_NEXT] -= noiseThreshold;
1140:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         }
1141:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         else
1142:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         {
1143:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             CapSense_1_centroid[CapSense_1_POS_NEXT] = 0u;
1144:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         }
1145:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         
1146:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         
1147:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         /* Si+1 - Si-1 */
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cc3EfiAs.s 			page 42


1148:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         numerator = (uint32) CapSense_1_centroid[CapSense_1_POS_NEXT] -
1149:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     (uint32) CapSense_1_centroid[CapSense_1_POS_PREV];
1150:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
1151:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         /* Si+1 + Si + Si-1 */
1152:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         denominator = (int32) CapSense_1_centroid[CapSense_1_POS_PREV] + 
1153:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                       (int32) CapSense_1_centroid[CapSense_1_POS] + 
1154:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                       (int32) CapSense_1_centroid[CapSense_1_POS_NEXT];
1155:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         
1156:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         /* (numerator/denominator) + maximum */
1157:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         denominator = (((int32)(uint32)((uint32)numerator << 8u)/denominator) + (int32)(uint32)((ui
1158:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
1159:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         #if(CapSense_1_TOTAL_RADIAL_SLIDERS_COUNT > 0u)
1160:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             /* Only required for RADIAL Slider */
1161:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             if(denominator < 0)
1162:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             {
1163:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 denominator += (int32)((uint16)((uint16) count << 8u));
1164:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             }
1165:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         #endif /* (CapSense_1_TOTAL_RADIAL_SLIDERS_COUNT > 0u) */
1166:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
1167:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         denominator *= (int16)resolution;
1168:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
1169:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         /* Round the relust and put it to uint8 */
1170:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         position = ((uint8) HI16((uint32)denominator + CapSense_1_CENTROID_ROUND_VALUE));
1171:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
1172:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         return (position);
1173:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     }    
1174:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** #endif /* (CapSense_1_TOTAL_CENTROIDS_COUNT) */
1175:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
1176:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
1177:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** #if(CapSense_1_TOTAL_LINEAR_SLIDERS_COUNT > 0u)
1178:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     /*******************************************************************************
1179:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     * Function Name: CapSense_1_GetCentroidPos
1180:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     ********************************************************************************
1181:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *
1182:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     * Summary:
1183:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  Checks the CapSense_1_Signal[ ] array for a centroid within
1184:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  slider specified range. The centroid position is calculated to the resolution
1185:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  specified in the CapSense customizer. The position filters are applied to the
1186:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  result if enabled.
1187:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *
1188:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     * Parameters:
1189:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  widget:  Widget number.
1190:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  For every linear slider widget there are defines in this format:
1191:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  #define CapSense_1_LS__"widget_name"            5
1192:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     * 
1193:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     * Return:
1194:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  Returns position value of the linear slider.
1195:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *
1196:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     * Side Effects:
1197:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  If any sensor within the slider widget is active, the function returns values
1198:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  from zero to the API resolution value set in the CapSense customizer. If no
1199:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  sensors are active, the function returns 0xFFFF. If an error occurs during
1200:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  execution of the centroid/diplexing algorithm, the function returns 0xFFFF.
1201:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  There are no checks of widget type argument provided to this function.
1202:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  The unproper widget type provided will cause unexpected position calculations.
1203:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *
1204:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     * Note:
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cc3EfiAs.s 			page 43


1205:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  If noise counts on the slider segments are greater than the noise
1206:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  threshold, this subroutine may generate a false centroid result. The noise
1207:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  threshold should be set carefully (high enough above the noise level) so
1208:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  that noise will not generate a false centroid.
1209:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *
1210:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     * Reentrant:
1211:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  No.
1212:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *
1213:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *******************************************************************************/
1214:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     uint16 CapSense_1_GetCentroidPos(uint8 widget) 
1215:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     {
1216:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         #if (CapSense_1_IS_DIPLEX_SLIDER)
1217:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             const uint8 CYCODE *diplex;
1218:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         #endif /* (CapSense_1_IS_DIPLEX_SLIDER) */
1219:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 
1220:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         #if (0u != CapSense_1_LINEAR_SLIDERS_POS_FILTERS_MASK)
1221:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             uint8 posIndex;
1222:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             uint8 firstTimeIndex = CapSense_1_posFiltersData[widget];
1223:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             uint8 posFiltersMask = CapSense_1_posFiltersMask[widget];  
1224:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         #endif /* (0u != CapSense_1_LINEAR_SLIDERS_POS_FILTERS_MASK) */
1225:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
1226:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         #if ((0u != (CapSense_1_MEDIAN_FILTER & CapSense_1_LINEAR_SLIDERS_POS_FILTERS_MASK)) || \
1227:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****              (0u != (CapSense_1_AVERAGING_FILTER & CapSense_1_LINEAR_SLIDERS_POS_FILTERS_MASK)))
1228:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             uint8 tempPos;
1229:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         #endif /* ((0u != (CapSense_1_MEDIAN_FILTER & CapSense_1_LINEAR_SLIDERS_POS_FILTERS_MASK)) 
1230:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                *   (0u != (CapSense_1_AVERAGING_FILTER & CapSense_1_LINEAR_SLIDERS_POS_FILTERS_MASK
1231:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                */
1232:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
1233:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         uint8 maximum;
1234:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         uint16 position;
1235:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         uint8 offset = CapSense_1_rawDataIndex[widget];
1236:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         uint8 count = CapSense_1_numberOfSensors[widget];
1237:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         
1238:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         #if (CapSense_1_IS_DIPLEX_SLIDER)
1239:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             if(widget < CapSense_1_TOTAL_DIPLEXED_SLIDERS_COUNT)
1240:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             {
1241:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 maximum = CapSense_1_diplexTable[widget];
1242:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 diplex = &CapSense_1_diplexTable[maximum];
1243:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             }
1244:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             else
1245:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             {
1246:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 diplex = 0u;
1247:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             }
1248:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         #endif /* (CapSense_1_IS_DIPLEX_SLIDER) */
1249:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
1250:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         /* Find Maximum within centroid */      
1251:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         #if (CapSense_1_IS_DIPLEX_SLIDER)        
1252:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             maximum = CapSense_1_FindMaximum(offset, count, CapSense_1_fingerThreshold[widget], dip
1253:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         #else
1254:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             maximum = CapSense_1_FindMaximum(offset, count, CapSense_1_fingerThreshold[widget]);
1255:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         #endif /* (CapSense_1_IS_DIPLEX_SLIDER) */
1256:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
1257:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         if (maximum != 0xFFu)
1258:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         {
1259:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             /* Calculate centroid */
1260:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             position = (uint16) CapSense_1_CalcCentroid(maximum, 
1261:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                          offset, count, CapSense_1_centroidMult[widget], CapSense_1_noiseThreshold[
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cc3EfiAs.s 			page 44


1262:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
1263:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             #if (0u != CapSense_1_LINEAR_SLIDERS_POS_FILTERS_MASK)
1264:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 /* Check if this linear slider has enabled filters */
1265:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 if (0u != (posFiltersMask & CapSense_1_ANY_POS_FILTER))
1266:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 {
1267:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     /* Caluclate position to store filters data */
1268:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     posIndex  = firstTimeIndex + 1u;
1269:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     
1270:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     if (0u == CapSense_1_posFiltersData[firstTimeIndex])
1271:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     {
1272:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         /* Init filters */
1273:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         CapSense_1_posFiltersData[posIndex] = (uint8) position;
1274:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         #if ((0u != (CapSense_1_MEDIAN_FILTER & \
1275:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                      CapSense_1_LINEAR_SLIDERS_POS_FILTERS_MASK)) || \
1276:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                              (0u != (CapSense_1_AVERAGING_FILTER & \
1277:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                      CapSense_1_LINEAR_SLIDERS_POS_FILTERS_MASK)))
1278:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
1279:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             if ( (0u != (posFiltersMask & CapSense_1_MEDIAN_FILTER)) || 
1280:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                  (0u != (posFiltersMask & CapSense_1_AVERAGING_FILTER)) )
1281:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             {
1282:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                 CapSense_1_posFiltersData[posIndex + 1u] = (uint8) position;
1283:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             }
1284:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         #endif /* ((0u != (CapSense_1_MEDIAN_FILTER & \
1285:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                *           CapSense_1_LINEAR_SLIDERS_POS_FILTERS_MASK)) || \
1286:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                *   (0u != (CapSense_1_AVERAGING_FILTER & \
1287:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                *           CapSense_1_LINEAR_SLIDERS_POS_FILTERS_MASK)))
1288:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                */
1289:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         
1290:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         CapSense_1_posFiltersData[firstTimeIndex] = 1u;
1291:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     }
1292:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     else
1293:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     {
1294:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         /* Do filtering */
1295:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         #if (0u != (CapSense_1_MEDIAN_FILTER & CapSense_1_LINEAR_SLIDERS_POS_FILTER
1296:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_1_MEDIAN_FILTER))
1297:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             {
1298:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                 tempPos = (uint8) position;
1299:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                 position = CapSense_1_MedianFilter(position,
1300:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                                                 (uint16)CapSense_1_posFiltersData[p
1301:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                                                 (uint16)CapSense_1_posFiltersData[p
1302:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                 CapSense_1_posFiltersData[posIndex + 1u] =
1303:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                                                              CapSense_1_posFiltersD
1304:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                 CapSense_1_posFiltersData[posIndex] = tempPos;
1305:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             }
1306:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         #endif /*(0u != (CapSense_1_MEDIAN_FILTER &
1307:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                *         CapSense_1_LINEAR_SLIDERS_POS_FILTERS_MASK))
1308:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                */
1309:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
1310:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         #if(0u!=(CapSense_1_AVERAGING_FILTER & CapSense_1_LINEAR_SLIDERS_POS_FILTER
1311:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_1_AVERAGING_FILTER)) 
1312:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             {
1313:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                 tempPos = (uint8) position;
1314:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                 position = CapSense_1_AveragingFilter(position,
1315:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                                                 (uint16)CapSense_1_posFiltersData[p
1316:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                                                 (uint16)CapSense_1_posFiltersData[p
1317:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                 CapSense_1_posFiltersData[posIndex+1u]=CapSense_1_posFiltersData[po
1318:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                 CapSense_1_posFiltersData[posIndex] = tempPos;
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cc3EfiAs.s 			page 45


1319:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             }
1320:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         #endif /* (0u != (CapSense_1_AVERAGING_FILTER & \
1321:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                *           CapSense_1_LINEAR_SLIDERS_POS_FILTERS_MASK))
1322:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                */
1323:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
1324:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         #if (0u != (CapSense_1_IIR2_FILTER & CapSense_1_LINEAR_SLIDERS_POS_FILTERS_
1325:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_1_IIR2_FILTER)) 
1326:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             {
1327:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                 position = CapSense_1_IIR2Filter(position,
1328:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                                                     (uint16)CapSense_1_posFiltersDa
1329:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                 CapSense_1_posFiltersData[posIndex] = (uint8) position;
1330:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             }
1331:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         #endif /* (0u != (CapSense_1_IIR2_FILTER & \
1332:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                *          CapSense_1_LINEAR_SLIDERS_POS_FILTERS_MASK))
1333:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                */
1334:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
1335:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         #if (0u != (CapSense_1_IIR4_FILTER & CapSense_1_LINEAR_SLIDERS_POS_FILTERS_
1336:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_1_IIR4_FILTER))
1337:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             {
1338:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                 position = CapSense_1_IIR4Filter(position,
1339:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                                                     (uint16)CapSense_1_posFiltersDa
1340:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                 CapSense_1_posFiltersData[posIndex] = (uint8) position;
1341:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             }                                
1342:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         #endif /* (0u != (CapSense_1_IIR4_FILTER & \
1343:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                *          CapSense_1_LINEAR_SLIDERS_POS_FILTERS_MASK))
1344:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                */
1345:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
1346:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         #if (0u != (CapSense_1_JITTER_FILTER & CapSense_1_LINEAR_SLIDERS_POS_FILTER
1347:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_1_JITTER_FILTER))
1348:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             {
1349:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                 position = CapSense_1_JitterFilter(position,
1350:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                                                     (uint16)CapSense_1_posFiltersDa
1351:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                 CapSense_1_posFiltersData[posIndex] = (uint8) position;
1352:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             }
1353:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         #endif /* (0u != (CapSense_1_JITTER_FILTER & \
1354:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                *           CapSense_1_LINEAR_SLIDERS_POS_FILTERS_MASK))
1355:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                */
1356:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     }
1357:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 }
1358:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             #endif /* (0u != CapSense_1_LINEAR_SLIDERS_POS_FILTERS_MASK) */
1359:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
1360:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         }
1361:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         else
1362:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         {
1363:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             /* The maximum wasn't found */
1364:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             position = 0xFFFFu;
1365:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
1366:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             #if(0u != CapSense_1_LINEAR_SLIDERS_POS_FILTERS_MASK)
1367:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 /* Reset the filters */
1368:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 if(0u != (posFiltersMask & CapSense_1_ANY_POS_FILTER))
1369:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 {
1370:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     CapSense_1_posFiltersData[firstTimeIndex] = 0u;
1371:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 }
1372:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             #endif /* (0u != CapSense_1_LINEAR_SLIDERS_POS_FILTERS_MASK) */
1373:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         }
1374:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
1375:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cc3EfiAs.s 			page 46


1376:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         return (position);
1377:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     }
1378:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** #endif /* (CapSense_1_TOTAL_LINEAR_SLIDERS_COUNT > 0u) */
1379:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
1380:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
1381:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** #if(CapSense_1_TOTAL_RADIAL_SLIDERS_COUNT > 0u)
1382:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     /*******************************************************************************
1383:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     * Function Name: CapSense_1_GetRadialCentroidPos
1384:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     ********************************************************************************
1385:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *
1386:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     * Summary:
1387:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  Checks the CapSense_1_Signal[ ] array for a centroid within
1388:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  slider specified range. The centroid position is calculated to the resolution
1389:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  specified in the CapSense customizer. The position filters are applied to the
1390:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  result if enabled.
1391:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *
1392:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     * Parameters:
1393:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  widget:  Widget number.
1394:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  For every radial slider widget there are defines in this format:
1395:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  #define CapSense_1_RS_"widget_name"            5
1396:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     * 
1397:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     * Return:
1398:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  Returns position value of the radial slider.
1399:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *
1400:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     * Side Effects:
1401:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  If any sensor within the slider widget is active, the function returns values
1402:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  from zero to the API resolution value set in the CapSense customizer. If no
1403:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  sensors are active, the function returns 0xFFFF.
1404:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  There are no checks of widget type argument provided to this function.
1405:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  The unproper widget type provided will cause unexpected position calculations.
1406:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *
1407:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     * Note:
1408:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  If noise counts on the slider segments are greater than the noise
1409:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  threshold, this subroutine may generate a false centroid result. The noise
1410:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  threshold should be set carefully (high enough above the noise level) so 
1411:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  that noise will not generate a false centroid.
1412:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *
1413:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *
1414:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     * Reentrant:
1415:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  No.
1416:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *
1417:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *******************************************************************************/
1418:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****      uint16 CapSense_1_GetRadialCentroidPos(uint8 widget)
1419:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 	                                       
1420:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     {
1421:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         #if (0u != CapSense_1_RADIAL_SLIDERS_POS_FILTERS_MASK)
1422:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             uint8 posIndex;
1423:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             uint8 firstTimeIndex = CapSense_1_posFiltersData[widget];
1424:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             uint8 posFiltersMask = CapSense_1_posFiltersMask[widget]; 
1425:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         #endif /* (0u != CapSense_1_RADIAL_SLIDERS_POS_FILTERS_MASK) */
1426:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
1427:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         #if ((0u != (CapSense_1_MEDIAN_FILTER & CapSense_1_RADIAL_SLIDERS_POS_FILTERS_MASK)) || \
1428:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****              (0u != (CapSense_1_AVERAGING_FILTER & CapSense_1_RADIAL_SLIDERS_POS_FILTERS_MASK)))
1429:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             uint8 tempPos;
1430:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         #endif /* ((0u != (CapSense_1_MEDIAN_FILTER & CapSense_1_RADIAL_SLIDERS_POS_FILTERS_MASK)) 
1431:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                *   (0u != (CapSense_1_AVERAGING_FILTER & CapSense_1_RADIAL_SLIDERS_POS_FILTERS_MASK
1432:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                */
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cc3EfiAs.s 			page 47


1433:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
1434:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         uint8 maximum;
1435:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         uint16 position;
1436:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         uint8 offset = CapSense_1_rawDataIndex[widget];
1437:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         uint8 count = CapSense_1_numberOfSensors[widget];
1438:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         
1439:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         /* Find Maximum within centroid */        
1440:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         #if (CapSense_1_IS_DIPLEX_SLIDER)
1441:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             maximum = CapSense_1_FindMaximum(offset, count, CapSense_1_fingerThreshold[widget], 0u)
1442:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         #else
1443:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             maximum = CapSense_1_FindMaximum(offset, count, CapSense_1_fingerThreshold[widget]);
1444:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         #endif /* (CapSense_1_IS_DIPLEX_SLIDER) */
1445:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         
1446:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         if (maximum != 0xFFu)
1447:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         {
1448:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             /* Calculate centroid */
1449:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             position = (uint16) CapSense_1_CalcCentroid(maximum, 
1450:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                          offset, count, CapSense_1_centroidMult[widget], CapSense_1_noiseThreshold[
1451:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
1452:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             #if (0u != CapSense_1_RADIAL_SLIDERS_POS_FILTERS_MASK)
1453:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 /* Check if this Radial slider has enabled filters */
1454:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 if (0u != (posFiltersMask & CapSense_1_ANY_POS_FILTER))
1455:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 {
1456:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     /* Caluclate position to store filters data */
1457:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     posIndex  = firstTimeIndex + 1u;
1458:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     
1459:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     if (0u == CapSense_1_posFiltersData[firstTimeIndex])
1460:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     {
1461:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         /* Init filters */
1462:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         CapSense_1_posFiltersData[posIndex] = (uint8) position;
1463:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         #if ((0u != (CapSense_1_MEDIAN_FILTER & \
1464:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                      CapSense_1_RADIAL_SLIDERS_POS_FILTERS_MASK)) || \
1465:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                              (0u != (CapSense_1_AVERAGING_FILTER & \
1466:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                      CapSense_1_RADIAL_SLIDERS_POS_FILTERS_MASK)))
1467:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
1468:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             if ( (0u != (posFiltersMask & CapSense_1_MEDIAN_FILTER))  || 
1469:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                  (0u != (posFiltersMask & CapSense_1_AVERAGING_FILTER)) )
1470:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             {
1471:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                 CapSense_1_posFiltersData[posIndex + 1u] = (uint8) position;
1472:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             }
1473:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         #endif /* ((0u != (CapSense_1_MEDIAN_FILTER & \
1474:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                *           CapSense_1_RADIAL_SLIDERS_POS_FILTERS_MASK)) || \
1475:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                *   (0u != (CapSense_1_AVERAGING_FILTER & \
1476:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                *           CapSense_1_RADIAL_SLIDERS_POS_FILTERS_MASK)))
1477:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                */
1478:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         
1479:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         CapSense_1_posFiltersData[firstTimeIndex] = 1u;
1480:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     }
1481:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     else
1482:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     {
1483:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         /* Do filtering */
1484:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         #if (0u != (CapSense_1_MEDIAN_FILTER & CapSense_1_RADIAL_SLIDERS_POS_FILTER
1485:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_1_MEDIAN_FILTER))
1486:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             {
1487:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                 tempPos = (uint8) position;
1488:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                 position = CapSense_1_MedianFilter(position,
1489:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                                                         CapSense_1_posFiltersData[p
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cc3EfiAs.s 			page 48


1490:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                                                         CapSense_1_posFiltersData[p
1491:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                 CapSense_1_posFiltersData[posIndex + 1u] = 
1492:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                                                               CapSense_1_posFilters
1493:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                 CapSense_1_posFiltersData[posIndex] = tempPos;
1494:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             }
1495:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         #endif /* (0u != (CapSense_1_MEDIAN_FILTER & 
1496:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                *          CapSense_1_RADIAL_SLIDERS_POS_FILTERS_MASK))
1497:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                */
1498:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
1499:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         #if (0u != (CapSense_1_AVERAGING_FILTER & \
1500:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                     CapSense_1_RADIAL_SLIDERS_POS_FILTERS_MASK))
1501:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_1_AVERAGING_FILTER))
1502:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             {
1503:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                 tempPos = (uint8) position;
1504:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                 position = CapSense_1_AveragingFilter(position, 
1505:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                                                        CapSense_1_posFiltersData[po
1506:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                                                        CapSense_1_posFiltersData[po
1507:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                 CapSense_1_posFiltersData[posIndex+1u]= CapSense_1_posFiltersData[p
1508:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                 CapSense_1_posFiltersData[posIndex] = tempPos;
1509:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             }
1510:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         #endif /* (0u != (CapSense_1_AVERAGING_FILTER & \
1511:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                *          CapSense_1_RADIAL_SLIDERS_POS_FILTERS_MASK))
1512:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                */
1513:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
1514:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         #if (0u != (CapSense_1_IIR2_FILTER & CapSense_1_RADIAL_SLIDERS_POS_FILTERS_
1515:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_1_IIR2_FILTER))
1516:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             {
1517:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                 position = CapSense_1_IIR2Filter(position,
1518:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                                                     (uint16)CapSense_1_posFiltersDa
1519:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                 CapSense_1_posFiltersData[posIndex] = (uint8) position;
1520:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             }
1521:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         #endif /* (0u != (CapSense_1_IIR2_FILTER & 
1522:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                *          CapSense_1_RADIAL_SLIDERS_POS_FILTERS_MASK))
1523:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                */
1524:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
1525:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         #if (0u != (CapSense_1_IIR4_FILTER & CapSense_1_RADIAL_SLIDERS_POS_FILTERS_
1526:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_1_IIR4_FILTER))
1527:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             {
1528:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                 position = CapSense_1_IIR4Filter(position,
1529:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                                                     (uint16)CapSense_1_posFiltersDa
1530:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                 CapSense_1_posFiltersData[posIndex] = (uint8) position;
1531:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             }
1532:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         #endif /* (0u != (CapSense_1_IIR4_FILTER & 
1533:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                *          CapSense_1_RADIAL_SLIDERS_POS_FILTERS_MASK))
1534:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                */
1535:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
1536:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         #if (0u != (CapSense_1_JITTER_FILTER & CapSense_1_RADIAL_SLIDERS_POS_FILTER
1537:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_1_JITTER_FILTER))
1538:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             {
1539:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                 position = CapSense_1_JitterFilter(position, 
1540:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                                                          CapSense_1_posFiltersData[
1541:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                 CapSense_1_posFiltersData[posIndex] = (uint8) position;
1542:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             }
1543:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         #endif /* (0u != (CapSense_1_JITTER_FILTER &
1544:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                *           CapSense_1_RADIAL_SLIDERS_POS_FILTERS_MASK))
1545:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                */
1546:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     }
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cc3EfiAs.s 			page 49


1547:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 }
1548:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             #endif /* (0u != CapSense_1_RADIAL_SLIDERS_POS_FILTERS_MASK) */
1549:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
1550:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         }
1551:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         else
1552:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         {
1553:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             /* The maximum didn't find */
1554:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             position = 0xFFFFu;
1555:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
1556:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             #if (0u != CapSense_1_RADIAL_SLIDERS_POS_FILTERS_MASK)
1557:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 /* Reset the filters */
1558:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 if((posFiltersMask & CapSense_1_ANY_POS_FILTER) != 0u)
1559:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 {
1560:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     CapSense_1_posFiltersData[firstTimeIndex] = 0u;
1561:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 }
1562:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             #endif /* (0u != CapSense_1_RADIAL_SLIDERS_POS_FILTERS_MASK) */
1563:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         }
1564:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         
1565:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         return (position);
1566:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     }
1567:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** #endif
1568:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
1569:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
1570:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** #if(CapSense_1_TOTAL_TOUCH_PADS_COUNT > 0u)
1571:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     /*******************************************************************************
1572:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     * Function Name: CapSense_1_GetTouchCentroidPos
1573:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     ********************************************************************************
1574:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *
1575:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     * Summary:
1576:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  If a finger is present on touch pad, this function calculates the X and Y
1577:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  position of the finger by calculating the centroids within touch pad specified
1578:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  range. The X and Y positions are calculated to the API resolutions set in the
1579:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  CapSense customizer. Returns a 1 if a finger is on the touchpad.
1580:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  The position filter is applied to the result if enabled.
1581:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  This function is available only if a touch pad is defined by the CapSense
1582:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  customizer.
1583:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *
1584:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     * Parameters:
1585:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  widget:  Widget number. 
1586:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  For every touchpad widget there are defines in this format:
1587:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  #define CapSense_1_TP_"widget_name"            5
1588:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *
1589:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  pos:     Pointer to the array of two uint16 elements, where result
1590:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  result of calculation of X and Y position are stored.
1591:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  pos[0u]  - position of X
1592:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  pos[1u]  - position of Y
1593:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *
1594:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     * Return:
1595:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  Returns a 1 if a finger is on the touch pad, 0 - if not.
1596:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *
1597:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     * Side Effects:
1598:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *   There are no checks of widget type argument provided to this function.
1599:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *   The unproper widget type provided will cause unexpected position
1600:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *   calculations.
1601:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *
1602:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     * Reentrant:
1603:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  No.
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cc3EfiAs.s 			page 50


1604:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *
1605:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *******************************************************************************/
1606:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     uint8 CapSense_1_GetTouchCentroidPos(uint8 widget, uint16* pos)
1607:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 	                                    
1608:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     {
1609:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         #if (0u != CapSense_1_TOUCH_PADS_POS_FILTERS_MASK)
1610:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             uint8 posXIndex;
1611:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             uint8 posYIndex;
1612:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             uint8 firstTimeIndex = CapSense_1_posFiltersData[widget];
1613:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             uint8 posFiltersMask = CapSense_1_posFiltersMask[widget];
1614:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         #endif /* (0u != CapSense_1_TOUCH_PADS_POS_FILTERS_MASK) */
1615:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
1616:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         #if ((0u != (CapSense_1_MEDIAN_FILTER & CapSense_1_TOUCH_PADS_POS_FILTERS_MASK)) || \
1617:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****              (0u != (CapSense_1_AVERAGING_FILTER & CapSense_1_TOUCH_PADS_POS_FILTERS_MASK)))
1618:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             uint16 tempPos;
1619:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         #endif /* ((0u != (CapSense_1_MEDIAN_FILTER & CapSense_1_TOUCH_PADS_POS_FILTERS_MASK)) || \
1620:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                *   (0u != (CapSense_1_AVERAGING_FILTER & CapSense_1_TOUCH_PADS_POS_FILTERS_MASK)))
1621:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                */
1622:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
1623:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         uint8 maxX;
1624:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         uint8 maxY;
1625:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         uint8 posX;
1626:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         uint8 posY;
1627:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         uint8 touch = 0u;
1628:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         uint8 offset = CapSense_1_rawDataIndex[widget];
1629:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         uint8 count = CapSense_1_numberOfSensors[widget];
1630:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         
1631:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         /* Find Maximum within X centroid */
1632:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         #if (CapSense_1_IS_DIPLEX_SLIDER)
1633:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             maxX = CapSense_1_FindMaximum(offset, count, CapSense_1_fingerThreshold[widget], 0u);
1634:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         #else
1635:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             maxX = CapSense_1_FindMaximum(offset, count, CapSense_1_fingerThreshold[widget]);
1636:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         #endif /* (CapSense_1_IS_DIPLEX_SLIDER) */
1637:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
1638:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         if (maxX != 0xFFu)
1639:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         {
1640:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             offset = CapSense_1_rawDataIndex[widget + 1u];
1641:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             count = CapSense_1_numberOfSensors[widget + 1u];
1642:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
1643:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             /* Find Maximum within Y centroid */
1644:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             #if (CapSense_1_IS_DIPLEX_SLIDER)
1645:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 maxY = CapSense_1_FindMaximum(offset, count, CapSense_1_fingerThreshold[widget + 1u
1646:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             #else
1647:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 maxY = CapSense_1_FindMaximum(offset, count, CapSense_1_fingerThreshold[widget + 1u
1648:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             #endif /* (CapSense_1_IS_DIPLEX_SLIDER) */
1649:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
1650:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             if (maxY != 0xFFu)
1651:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             {
1652:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 /* X and Y maximums are found = true touch */
1653:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 touch = 1u;
1654:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 
1655:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 /* Calculate Y centroid */
1656:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 posY = CapSense_1_CalcCentroid(maxY, offset, count, 
1657:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             CapSense_1_centroidMult[widget + 1u], CapSense_1_noiseThreshold[widget 
1658:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 
1659:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 /* Calculate X centroid */
1660:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 offset = CapSense_1_rawDataIndex[widget];
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cc3EfiAs.s 			page 51


1661:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 count = CapSense_1_numberOfSensors[widget];
1662:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 
1663:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 posX = CapSense_1_CalcCentroid(maxX, offset, count, 
1664:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             CapSense_1_centroidMult[widget],CapSense_1_noiseThreshold[widget]);
1665:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     
1666:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 #if (0u != CapSense_1_TOUCH_PADS_POS_FILTERS_MASK)
1667:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     /* Check if this TP has enabled filters */
1668:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     if (0u != (posFiltersMask & CapSense_1_ANY_POS_FILTER))
1669:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     {
1670:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         /* Caluclate position to store filters data */
1671:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         posXIndex  = firstTimeIndex + 1u;
1672:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         posYIndex  = CapSense_1_posFiltersData[widget + 1u];
1673:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         
1674:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         if (0u == CapSense_1_posFiltersData[firstTimeIndex])
1675:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         {
1676:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             /* Init filters */
1677:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             CapSense_1_posFiltersData[posXIndex] = posX;
1678:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             CapSense_1_posFiltersData[posYIndex] = posY;
1679:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
1680:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             #if((0u != (CapSense_1_MEDIAN_FILTER & \
1681:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                         CapSense_1_TOUCH_PADS_POS_FILTERS_MASK))|| \
1682:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                 (0u != (CapSense_1_AVERAGING_FILTER & \
1683:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                         CapSense_1_TOUCH_PADS_POS_FILTERS_MASK)))
1684:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
1685:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                 if ( (0u != (posFiltersMask & CapSense_1_MEDIAN_FILTER)) || 
1686:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                      (0u != (posFiltersMask & CapSense_1_AVERAGING_FILTER)) )
1687:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                 {
1688:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                     CapSense_1_posFiltersData[posXIndex + 1u] = posX;
1689:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                     CapSense_1_posFiltersData[posYIndex + 1u] = posY;
1690:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                 }
1691:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             #endif /* ((0u != (CapSense_1_MEDIAN_FILTER & \
1692:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                    *           CapSense_1_TOUCH_PADS_POS_FILTERS_MASK)) || \
1693:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                    *    (0u != (CapSense_1_AVERAGING_FILTER & \
1694:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                    *            CapSense_1_TOUCH_PADS_POS_FILTERS_MASK)))
1695:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                    */
1696:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             
1697:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             CapSense_1_posFiltersData[firstTimeIndex] = 1u;
1698:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         }
1699:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         else
1700:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         {
1701:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             /* Do filtering */
1702:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             #if (0u != (CapSense_1_MEDIAN_FILTER & CapSense_1_TOUCH_PADS_POS_FILTER
1703:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                 if (0u != (posFiltersMask & CapSense_1_MEDIAN_FILTER))
1704:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                 {
1705:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                     tempPos = posX;
1706:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                     posX = (uint8) CapSense_1_MedianFilter(posX,
1707:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                                                       CapSense_1_posFiltersData[pos
1708:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                                                       CapSense_1_posFiltersData[pos
1709:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                     CapSense_1_posFiltersData[posXIndex + 1u] = 
1710:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                                                              CapSense_1_posFiltersD
1711:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                     CapSense_1_posFiltersData[posXIndex] = tempPos;
1712:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                     
1713:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                     tempPos = posY;
1714:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                     posY = (uint8) CapSense_1_MedianFilter(posY,
1715:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                                                        CapSense_1_posFiltersData[po
1716:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                                                        CapSense_1_posFiltersData[po
1717:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                     CapSense_1_posFiltersData[posYIndex + 1u] = 
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cc3EfiAs.s 			page 52


1718:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                                                              CapSense_1_posFiltersD
1719:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                     CapSense_1_posFiltersData[posYIndex] = tempPos;
1720:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                 }
1721:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                 
1722:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             #endif /* (0u != (CapSense_1_MEDIAN_FILTER & \
1723:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                    *          CapSense_1_TOUCH_PADS_POS_FILTERS_MASK))
1724:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                    */
1725:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
1726:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             #if(0u !=(CapSense_1_AVERAGING_FILTER & CapSense_1_TOUCH_PADS_POS_FILTE
1727:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                 if (0u != (posFiltersMask & CapSense_1_AVERAGING_FILTER))
1728:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                 {
1729:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                     tempPos = posX;
1730:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                     posX = (uint8) CapSense_1_AveragingFilter(posX,
1731:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                                                        CapSense_1_posFiltersData[po
1732:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                                                        CapSense_1_posFiltersData[po
1733:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                     CapSense_1_posFiltersData[posXIndex + 1u] = 
1734:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                                                              CapSense_1_posFiltersD
1735:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                     CapSense_1_posFiltersData[posXIndex] = tempPos;
1736:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                     
1737:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                     tempPos = posY;
1738:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                     posY = (uint8) CapSense_1_AveragingFilter(posY, 
1739:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                                                       CapSense_1_posFiltersData[pos
1740:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                                                       CapSense_1_posFiltersData[pos
1741:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                     CapSense_1_posFiltersData[posYIndex + 1u] = 
1742:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                                                             CapSense_1_posFiltersDa
1743:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                     CapSense_1_posFiltersData[posYIndex] = tempPos;
1744:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                 }
1745:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
1746:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             #endif /* (0u != (CapSense_1_AVERAGING_FILTER & \
1747:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                    *           CapSense_1_TOUCH_PADS_POS_FILTERS_MASK))
1748:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                    */
1749:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
1750:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             #if (0u != (CapSense_1_IIR2_FILTER & CapSense_1_TOUCH_PADS_POS_FILTERS_
1751:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                 if (0u != (posFiltersMask & CapSense_1_IIR2_FILTER))
1752:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                 {
1753:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                     posX = (uint8) CapSense_1_IIR2Filter(posX, 
1754:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                                                            CapSense_1_posFiltersDat
1755:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                     CapSense_1_posFiltersData[posXIndex] = posX;
1756:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                     
1757:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                     posY = (uint8) CapSense_1_IIR2Filter(posY, 
1758:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                                                             CapSense_1_posFiltersDa
1759:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                     CapSense_1_posFiltersData[posYIndex] = posY;
1760:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                 }
1761:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                 
1762:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             #endif /* (0u != (CapSense_1_IIR2_FILTER & \
1763:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                    *          CapSense_1_TOUCH_PADS_POS_FILTERS_MASK))
1764:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                    */
1765:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
1766:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             #if (0u != (CapSense_1_IIR4_FILTER & CapSense_1_TOUCH_PADS_POS_FILTERS_
1767:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                 if (0u != (posFiltersMask & CapSense_1_IIR4_FILTER))
1768:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                 {
1769:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                     posX = (uint8) CapSense_1_IIR4Filter((uint16)posX,
1770:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                                                     (uint16)CapSense_1_posFiltersDa
1771:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                     CapSense_1_posFiltersData[posXIndex] = posX;
1772:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
1773:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                     posY = (uint8) CapSense_1_IIR4Filter((uint16)posY,
1774:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                                                     (uint16)CapSense_1_posFiltersDa
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cc3EfiAs.s 			page 53


1775:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                     CapSense_1_posFiltersData[posYIndex] = posY;
1776:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                 }
1777:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                 
1778:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             #endif /* (0u != (CapSense_1_IIR4_FILTER & \
1779:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                    *           CapSense_1_TOUCH_PADS_POS_FILTERS_MASK))
1780:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                    */
1781:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
1782:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             #if (0u != (CapSense_1_JITTER_FILTER & CapSense_1_TOUCH_PADS_POS_FILTER
1783:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                 if (0u != (posFiltersMask & CapSense_1_JITTER_FILTER))
1784:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                     {
1785:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                         posX = (uint8) CapSense_1_JitterFilter(posX, 
1786:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                                                             CapSense_1_posFiltersDa
1787:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                         CapSense_1_posFiltersData[posXIndex] = posX;
1788:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                         
1789:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                         posY = (uint8) CapSense_1_JitterFilter(posY, 
1790:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                                                             CapSense_1_posFiltersDa
1791:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                         CapSense_1_posFiltersData[posYIndex] = posY;
1792:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                     }
1793:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             #endif /* (0u != (CapSense_1_JITTER_FILTER & \
1794:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                    *           CapSense_1_TOUCH_PADS_POS_FILTERS_MASK))
1795:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                    */
1796:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         }
1797:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     }
1798:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 #endif /* (0u != CapSense_1_TOUCH_PADS_POS_FILTERS_MASK) */
1799:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
1800:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 /* Save positions */
1801:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 pos[0u] = posX;
1802:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 pos[1u] = posY;
1803:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             }
1804:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         }
1805:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
1806:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         #if (0u != CapSense_1_TOUCH_PADS_POS_FILTERS_MASK)
1807:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             if(touch == 0u)
1808:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             {
1809:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 /* Reset the filters */
1810:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 if ((posFiltersMask & CapSense_1_ANY_POS_FILTER) != 0u)
1811:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 {
1812:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     CapSense_1_posFiltersData[firstTimeIndex] = 0u;
1813:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 }
1814:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             }
1815:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         #endif /* (0u != CapSense_1_TOUCH_PADS_POS_FILTERS_MASK) */
1816:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         
1817:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         return (touch);
1818:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     }
1819:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** #endif /* (CapSense_1_TOTAL_TOUCH_PADS_COUNT > 0u) */
1820:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
1821:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
1822:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** #if ( (CapSense_1_RAW_FILTER_MASK & CapSense_1_MEDIAN_FILTER) | \
1823:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****       (CapSense_1_POS_FILTERS_MASK & CapSense_1_MEDIAN_FILTER) )
1824:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     /*******************************************************************************
1825:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     * Function Name: CapSense_1_MedianFilter
1826:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     ********************************************************************************
1827:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *
1828:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     * Summary:
1829:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  Median filter function. 
1830:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  The median filter looks at the three most recent samples and reports the 
1831:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  median value.
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cc3EfiAs.s 			page 54


1832:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *
1833:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     * Parameters:
1834:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  x1:  Current value.
1835:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  x2:  Previous value.
1836:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  x3:  Before previous value.
1837:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *
1838:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     * Return:
1839:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  Returns filtered value.
1840:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *
1841:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *******************************************************************************/
1842:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     uint16 CapSense_1_MedianFilter(uint16 x1, uint16 x2, uint16 x3)
1843:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                          
1844:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     {
1845:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         uint16 tmp;
1846:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         
1847:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         if (x1 > x2)
1848:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         {
1849:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             tmp = x2;
1850:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             x2 = x1;
1851:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             x1 = tmp;
1852:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         }
1853:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         
1854:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         if (x2 > x3)
1855:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         {
1856:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             x2 = x3;
1857:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         }
1858:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         
1859:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         return ((x1 > x2) ? x1 : x2);
1860:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     }
1861:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** #endif /* ( (CapSense_1_RAW_FILTER_MASK & CapSense_1_MEDIAN_FILTER) | \
1862:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****        *    (CapSense_1_POS_FILTERS_MASK & CapSense_1_MEDIAN_FILTER) )
1863:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****        */
1864:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
1865:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
1866:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** #if ( (CapSense_1_RAW_FILTER_MASK & CapSense_1_AVERAGING_FILTER) | \
1867:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****       (CapSense_1_POS_FILTERS_MASK & CapSense_1_AVERAGING_FILTER) )
1868:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     /*******************************************************************************
1869:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     * Function Name: CapSense_1_AveragingFilter
1870:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     ********************************************************************************
1871:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *
1872:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     * Summary:
1873:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  Averaging filter function.
1874:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  The averaging filter looks at the three most recent samples of position and
1875:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  reports the averaging value.
1876:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *
1877:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     * Parameters:
1878:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  x1:  Current value.
1879:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  x2:  Previous value.
1880:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  x3:  Before previous value.
1881:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *
1882:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     * Return:
1883:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  Returns filtered value.
1884:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *
1885:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *******************************************************************************/
1886:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     uint16 CapSense_1_AveragingFilter(uint16 x1, uint16 x2, uint16 x3)
1887:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                             
1888:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     {
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cc3EfiAs.s 			page 55


1889:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         uint32 tmp = ((uint32)x1 + (uint32)x2 + (uint32)x3) / 3u;
1890:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         
1891:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         return ((uint16) tmp);
1892:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     }
1893:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** #endif /* ( (CapSense_1_RAW_FILTER_MASK & CapSense_1_AVERAGING_FILTER) | \
1894:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****        *    (CapSense_1_POS_FILTERS_MASK & CapSense_1_AVERAGING_FILTER) )
1895:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****        */
1896:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
1897:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
1898:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** #if ( (CapSense_1_RAW_FILTER_MASK & CapSense_1_IIR2_FILTER) | \
1899:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****       (CapSense_1_POS_FILTERS_MASK & CapSense_1_IIR2_FILTER) )
1900:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     /*******************************************************************************
1901:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     * Function Name: CapSense_1_IIR2Filter
1902:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     ********************************************************************************
1903:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *
1904:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     * Summary:
1905:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  IIR1/2 filter function. IIR1/2 = 1/2current + 1/2previous.
1906:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *
1907:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     * Parameters:
1908:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  x1:  Current value.
1909:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  x2:  Previous value.
1910:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *
1911:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     * Return:
1912:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  Returns filtered value.
1913:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *
1914:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *******************************************************************************/
1915:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     uint16 CapSense_1_IIR2Filter(uint16 x1, uint16 x2)
1916:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                        
1917:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     {
1918:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         uint32 tmp;
1919:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         
1920:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         /* IIR = 1/2 Current Value+ 1/2 Previous Value */
1921:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         tmp = (uint32)x1 + (uint32)x2;
1922:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         tmp >>= 1u;
1923:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     
1924:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         return ((uint16) tmp);
1925:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     }
1926:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** #endif /* ( (CapSense_1_RAW_FILTER_MASK & CapSense_1_IIR2_FILTER) | \
1927:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****        *    (CapSense_1_POS_FILTERS_MASK & CapSense_1_IIR2_FILTER) )
1928:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****        */
1929:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
1930:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
1931:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** #if ( (CapSense_1_RAW_FILTER_MASK & CapSense_1_IIR4_FILTER) | \
1932:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****       (CapSense_1_POS_FILTERS_MASK & CapSense_1_IIR4_FILTER) )
1933:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     /*******************************************************************************
1934:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     * Function Name: CapSense_1_IIR4Filter
1935:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     ********************************************************************************
1936:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *
1937:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     * Summary:
1938:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  IIR1/4 filter function. IIR1/4 = 1/4current + 3/4previous.
1939:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *
1940:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     * Parameters:
1941:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  x1:  Current value.
1942:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  x2:  Previous value.
1943:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *
1944:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     * Return:
1945:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  Returns filtered value.
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cc3EfiAs.s 			page 56


1946:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *
1947:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *******************************************************************************/
1948:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     uint16 CapSense_1_IIR4Filter(uint16 x1, uint16 x2)
1949:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                        
1950:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     {
 1177              		.loc 1 1950 0
 1178              		.cfi_startproc
 1179              		@ args = 0, pretend = 0, frame = 16
 1180              		@ frame_needed = 1, uses_anonymous_args = 0
 1181              		@ link register save eliminated.
 1182 0000 80B4     		push	{r7}
 1183              		.cfi_def_cfa_offset 4
 1184              		.cfi_offset 7, -4
 1185 0002 85B0     		sub	sp, sp, #20
 1186              		.cfi_def_cfa_offset 24
 1187 0004 00AF     		add	r7, sp, #0
 1188              		.cfi_def_cfa_register 7
 1189 0006 0346     		mov	r3, r0
 1190 0008 0A46     		mov	r2, r1
 1191 000a FB80     		strh	r3, [r7, #6]	@ movhi
 1192 000c 1346     		mov	r3, r2	@ movhi
 1193 000e BB80     		strh	r3, [r7, #4]	@ movhi
1951:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         uint32 tmp;
1952:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         
1953:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         /* IIR = 1/4 Current Value + 3/4 Previous Value */
1954:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         tmp = (uint32)x1 + (uint32)x2;
 1194              		.loc 1 1954 0
 1195 0010 FA88     		ldrh	r2, [r7, #6]
 1196 0012 BB88     		ldrh	r3, [r7, #4]
 1197 0014 1344     		add	r3, r3, r2
 1198 0016 FB60     		str	r3, [r7, #12]
1955:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         tmp += ((uint32)x2 << 1u);
 1199              		.loc 1 1955 0
 1200 0018 BB88     		ldrh	r3, [r7, #4]
 1201 001a 5B00     		lsls	r3, r3, #1
 1202 001c FA68     		ldr	r2, [r7, #12]
 1203 001e 1344     		add	r3, r3, r2
 1204 0020 FB60     		str	r3, [r7, #12]
1956:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         tmp >>= 2u;
 1205              		.loc 1 1956 0
 1206 0022 FB68     		ldr	r3, [r7, #12]
 1207 0024 9B08     		lsrs	r3, r3, #2
 1208 0026 FB60     		str	r3, [r7, #12]
1957:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         
1958:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         return ((uint16) tmp);
 1209              		.loc 1 1958 0
 1210 0028 FB68     		ldr	r3, [r7, #12]
 1211 002a 9BB2     		uxth	r3, r3
1959:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     }
 1212              		.loc 1 1959 0
 1213 002c 1846     		mov	r0, r3
 1214 002e 1437     		adds	r7, r7, #20
 1215              		.cfi_def_cfa_offset 4
 1216 0030 BD46     		mov	sp, r7
 1217              		.cfi_def_cfa_register 13
 1218              		@ sp needed
 1219 0032 5DF8047B 		ldr	r7, [sp], #4
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cc3EfiAs.s 			page 57


 1220              		.cfi_restore 7
 1221              		.cfi_def_cfa_offset 0
 1222 0036 7047     		bx	lr
 1223              		.cfi_endproc
 1224              	.LFE11:
 1225              		.size	CapSense_1_IIR4Filter, .-CapSense_1_IIR4Filter
 1226              		.text
 1227              	.Letext0:
 1228              		.file 2 ".\\Generated_Source\\PSoC5\\cytypes.h"
 1229              		.file 3 ".\\Generated_Source\\PSoC5\\CapSense_1.h"
 1230              		.file 4 ".\\Generated_Source\\PSoC5\\CapSense_1_CSHL.h"
 1231              		.section	.debug_info,"",%progbits
 1232              	.Ldebug_info0:
 1233 0000 A3050000 		.4byte	0x5a3
 1234 0004 0400     		.2byte	0x4
 1235 0006 00000000 		.4byte	.Ldebug_abbrev0
 1236 000a 04       		.byte	0x4
 1237 000b 01       		.uleb128 0x1
 1238 000c FC020000 		.4byte	.LASF59
 1239 0010 01       		.byte	0x1
 1240 0011 8D010000 		.4byte	.LASF60
 1241 0015 27000000 		.4byte	.LASF61
 1242 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1243 001d 00000000 		.4byte	0
 1244 0021 00000000 		.4byte	.Ldebug_line0
 1245 0025 02       		.uleb128 0x2
 1246 0026 01       		.byte	0x1
 1247 0027 06       		.byte	0x6
 1248 0028 33010000 		.4byte	.LASF0
 1249 002c 02       		.uleb128 0x2
 1250 002d 01       		.byte	0x1
 1251 002e 08       		.byte	0x8
 1252 002f 25040000 		.4byte	.LASF1
 1253 0033 02       		.uleb128 0x2
 1254 0034 02       		.byte	0x2
 1255 0035 05       		.byte	0x5
 1256 0036 68040000 		.4byte	.LASF2
 1257 003a 02       		.uleb128 0x2
 1258 003b 02       		.byte	0x2
 1259 003c 07       		.byte	0x7
 1260 003d 32020000 		.4byte	.LASF3
 1261 0041 02       		.uleb128 0x2
 1262 0042 04       		.byte	0x4
 1263 0043 05       		.byte	0x5
 1264 0044 5E010000 		.4byte	.LASF4
 1265 0048 02       		.uleb128 0x2
 1266 0049 04       		.byte	0x4
 1267 004a 07       		.byte	0x7
 1268 004b 20020000 		.4byte	.LASF5
 1269 004f 02       		.uleb128 0x2
 1270 0050 08       		.byte	0x8
 1271 0051 05       		.byte	0x5
 1272 0052 25010000 		.4byte	.LASF6
 1273 0056 02       		.uleb128 0x2
 1274 0057 08       		.byte	0x8
 1275 0058 07       		.byte	0x7
 1276 0059 94000000 		.4byte	.LASF7
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cc3EfiAs.s 			page 58


 1277 005d 03       		.uleb128 0x3
 1278 005e 04       		.byte	0x4
 1279 005f 05       		.byte	0x5
 1280 0060 696E7400 		.ascii	"int\000"
 1281 0064 02       		.uleb128 0x2
 1282 0065 04       		.byte	0x4
 1283 0066 07       		.byte	0x7
 1284 0067 13020000 		.4byte	.LASF8
 1285 006b 04       		.uleb128 0x4
 1286 006c 80010000 		.4byte	.LASF9
 1287 0070 02       		.byte	0x2
 1288 0071 A1       		.byte	0xa1
 1289 0072 2C000000 		.4byte	0x2c
 1290 0076 04       		.uleb128 0x4
 1291 0077 00000000 		.4byte	.LASF10
 1292 007b 02       		.byte	0x2
 1293 007c A2       		.byte	0xa2
 1294 007d 3A000000 		.4byte	0x3a
 1295 0081 04       		.uleb128 0x4
 1296 0082 B8010000 		.4byte	.LASF11
 1297 0086 02       		.byte	0x2
 1298 0087 A3       		.byte	0xa3
 1299 0088 48000000 		.4byte	0x48
 1300 008c 02       		.uleb128 0x2
 1301 008d 04       		.byte	0x4
 1302 008e 04       		.byte	0x4
 1303 008f AC030000 		.4byte	.LASF12
 1304 0093 02       		.uleb128 0x2
 1305 0094 08       		.byte	0x8
 1306 0095 04       		.byte	0x4
 1307 0096 86010000 		.4byte	.LASF13
 1308 009a 02       		.uleb128 0x2
 1309 009b 01       		.byte	0x1
 1310 009c 08       		.byte	0x8
 1311 009d D3040000 		.4byte	.LASF14
 1312 00a1 02       		.uleb128 0x2
 1313 00a2 04       		.byte	0x4
 1314 00a3 07       		.byte	0x7
 1315 00a4 98020000 		.4byte	.LASF15
 1316 00a8 05       		.uleb128 0x5
 1317 00a9 80000000 		.4byte	.LASF16
 1318 00ad 01       		.byte	0x1
 1319 00ae 87       		.byte	0x87
 1320 00af 00000000 		.4byte	.LFB0
 1321 00b3 78000000 		.4byte	.LFE0-.LFB0
 1322 00b7 01       		.uleb128 0x1
 1323 00b8 9C       		.byte	0x9c
 1324 00b9 DA000000 		.4byte	0xda
 1325 00bd 06       		.uleb128 0x6
 1326 00be 45020000 		.4byte	.LASF18
 1327 00c2 01       		.byte	0x1
 1328 00c3 87       		.byte	0x87
 1329 00c4 6B000000 		.4byte	0x6b
 1330 00c8 02       		.uleb128 0x2
 1331 00c9 91       		.byte	0x91
 1332 00ca 6F       		.sleb128 -17
 1333 00cb 07       		.uleb128 0x7
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cc3EfiAs.s 			page 59


 1334 00cc 72040000 		.4byte	.LASF20
 1335 00d0 01       		.byte	0x1
 1336 00d1 8B       		.byte	0x8b
 1337 00d2 6B000000 		.4byte	0x6b
 1338 00d6 02       		.uleb128 0x2
 1339 00d7 91       		.byte	0x91
 1340 00d8 77       		.sleb128 -9
 1341 00d9 00       		.byte	0
 1342 00da 08       		.uleb128 0x8
 1343 00db D8020000 		.4byte	.LASF17
 1344 00df 01       		.byte	0x1
 1345 00e0 D0       		.byte	0xd0
 1346 00e1 00000000 		.4byte	.LFB1
 1347 00e5 2C000000 		.4byte	.LFE1-.LFB1
 1348 00e9 01       		.uleb128 0x1
 1349 00ea 9C       		.byte	0x9c
 1350 00eb FE000000 		.4byte	0xfe
 1351 00ef 06       		.uleb128 0x6
 1352 00f0 45020000 		.4byte	.LASF18
 1353 00f4 01       		.byte	0x1
 1354 00f5 D0       		.byte	0xd0
 1355 00f6 6B000000 		.4byte	0x6b
 1356 00fa 02       		.uleb128 0x2
 1357 00fb 91       		.byte	0x91
 1358 00fc 77       		.sleb128 -9
 1359 00fd 00       		.byte	0
 1360 00fe 09       		.uleb128 0x9
 1361 00ff 5E000000 		.4byte	.LASF19
 1362 0103 01       		.byte	0x1
 1363 0104 0401     		.2byte	0x104
 1364 0106 00000000 		.4byte	.LFB2
 1365 010a 26000000 		.4byte	.LFE2-.LFB2
 1366 010e 01       		.uleb128 0x1
 1367 010f 9C       		.byte	0x9c
 1368 0110 22010000 		.4byte	0x122
 1369 0114 0A       		.uleb128 0xa
 1370 0115 6900     		.ascii	"i\000"
 1371 0117 01       		.byte	0x1
 1372 0118 0701     		.2byte	0x107
 1373 011a 6B000000 		.4byte	0x6b
 1374 011e 02       		.uleb128 0x2
 1375 011f 91       		.byte	0x91
 1376 0120 77       		.sleb128 -9
 1377 0121 00       		.byte	0
 1378 0122 09       		.uleb128 0x9
 1379 0123 33040000 		.4byte	.LASF21
 1380 0127 01       		.byte	0x1
 1381 0128 2501     		.2byte	0x125
 1382 012a 00000000 		.4byte	.LFB3
 1383 012e 6C000000 		.4byte	.LFE3-.LFB3
 1384 0132 01       		.uleb128 0x1
 1385 0133 9C       		.byte	0x9c
 1386 0134 64010000 		.4byte	0x164
 1387 0138 0A       		.uleb128 0xa
 1388 0139 6900     		.ascii	"i\000"
 1389 013b 01       		.byte	0x1
 1390 013c 2801     		.2byte	0x128
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cc3EfiAs.s 			page 60


 1391 013e 6B000000 		.4byte	0x6b
 1392 0142 02       		.uleb128 0x2
 1393 0143 91       		.byte	0x91
 1394 0144 77       		.sleb128 -9
 1395 0145 0A       		.uleb128 0xa
 1396 0146 706F7300 		.ascii	"pos\000"
 1397 014a 01       		.byte	0x1
 1398 014b 2901     		.2byte	0x129
 1399 014d 6B000000 		.4byte	0x6b
 1400 0151 02       		.uleb128 0x2
 1401 0152 91       		.byte	0x91
 1402 0153 76       		.sleb128 -10
 1403 0154 0B       		.uleb128 0xb
 1404 0155 91020000 		.4byte	.LASF22
 1405 0159 01       		.byte	0x1
 1406 015a 2A01     		.2byte	0x12a
 1407 015c 6B000000 		.4byte	0x6b
 1408 0160 02       		.uleb128 0x2
 1409 0161 91       		.byte	0x91
 1410 0162 75       		.sleb128 -11
 1411 0163 00       		.byte	0
 1412 0164 09       		.uleb128 0x9
 1413 0165 80040000 		.4byte	.LASF23
 1414 0169 01       		.byte	0x1
 1415 016a 6801     		.2byte	0x168
 1416 016c 00000000 		.4byte	.LFB4
 1417 0170 74010000 		.4byte	.LFE4-.LFB4
 1418 0174 01       		.uleb128 0x1
 1419 0175 9C       		.byte	0x9c
 1420 0176 D5010000 		.4byte	0x1d5
 1421 017a 0C       		.uleb128 0xc
 1422 017b 45020000 		.4byte	.LASF18
 1423 017f 01       		.byte	0x1
 1424 0180 6801     		.2byte	0x168
 1425 0182 6B000000 		.4byte	0x6b
 1426 0186 02       		.uleb128 0x2
 1427 0187 91       		.byte	0x91
 1428 0188 67       		.sleb128 -25
 1429 0189 0B       		.uleb128 0xb
 1430 018a 67020000 		.4byte	.LASF24
 1431 018e 01       		.byte	0x1
 1432 018f 6B01     		.2byte	0x16b
 1433 0191 81000000 		.4byte	0x81
 1434 0195 02       		.uleb128 0x2
 1435 0196 91       		.byte	0x91
 1436 0197 6C       		.sleb128 -20
 1437 0198 0B       		.uleb128 0xb
 1438 0199 33050000 		.4byte	.LASF25
 1439 019d 01       		.byte	0x1
 1440 019e 6C01     		.2byte	0x16c
 1441 01a0 76000000 		.4byte	0x76
 1442 01a4 02       		.uleb128 0x2
 1443 01a5 91       		.byte	0x91
 1444 01a6 76       		.sleb128 -10
 1445 01a7 0B       		.uleb128 0xb
 1446 01a8 07000000 		.4byte	.LASF26
 1447 01ac 01       		.byte	0x1
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cc3EfiAs.s 			page 61


 1448 01ad 6D01     		.2byte	0x16d
 1449 01af 76000000 		.4byte	0x76
 1450 01b3 02       		.uleb128 0x2
 1451 01b4 91       		.byte	0x91
 1452 01b5 72       		.sleb128 -14
 1453 01b6 0B       		.uleb128 0xb
 1454 01b7 72040000 		.4byte	.LASF20
 1455 01bb 01       		.byte	0x1
 1456 01bc 6E01     		.2byte	0x16e
 1457 01be 6B000000 		.4byte	0x6b
 1458 01c2 02       		.uleb128 0x2
 1459 01c3 91       		.byte	0x91
 1460 01c4 75       		.sleb128 -11
 1461 01c5 0B       		.uleb128 0xb
 1462 01c6 59040000 		.4byte	.LASF27
 1463 01ca 01       		.byte	0x1
 1464 01cb 6F01     		.2byte	0x16f
 1465 01cd 6B000000 		.4byte	0x6b
 1466 01d1 02       		.uleb128 0x2
 1467 01d2 91       		.byte	0x91
 1468 01d3 74       		.sleb128 -12
 1469 01d4 00       		.byte	0
 1470 01d5 09       		.uleb128 0x9
 1471 01d6 8A030000 		.4byte	.LASF28
 1472 01da 01       		.byte	0x1
 1473 01db 1502     		.2byte	0x215
 1474 01dd 00000000 		.4byte	.LFB5
 1475 01e1 50000000 		.4byte	.LFE5-.LFB5
 1476 01e5 01       		.uleb128 0x1
 1477 01e6 9C       		.byte	0x9c
 1478 01e7 17020000 		.4byte	0x217
 1479 01eb 0A       		.uleb128 0xa
 1480 01ec 6900     		.ascii	"i\000"
 1481 01ee 01       		.byte	0x1
 1482 01ef 1802     		.2byte	0x218
 1483 01f1 6B000000 		.4byte	0x6b
 1484 01f5 02       		.uleb128 0x2
 1485 01f6 91       		.byte	0x91
 1486 01f7 77       		.sleb128 -9
 1487 01f8 0A       		.uleb128 0xa
 1488 01f9 706F7300 		.ascii	"pos\000"
 1489 01fd 01       		.byte	0x1
 1490 01fe 1902     		.2byte	0x219
 1491 0200 6B000000 		.4byte	0x6b
 1492 0204 02       		.uleb128 0x2
 1493 0205 91       		.byte	0x91
 1494 0206 76       		.sleb128 -10
 1495 0207 0B       		.uleb128 0xb
 1496 0208 91020000 		.4byte	.LASF22
 1497 020c 01       		.byte	0x1
 1498 020d 1A02     		.2byte	0x21a
 1499 020f 6B000000 		.4byte	0x6b
 1500 0213 02       		.uleb128 0x2
 1501 0214 91       		.byte	0x91
 1502 0215 75       		.sleb128 -11
 1503 0216 00       		.byte	0
 1504 0217 0D       		.uleb128 0xd
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cc3EfiAs.s 			page 62


 1505 0218 E4030000 		.4byte	.LASF34
 1506 021c 01       		.byte	0x1
 1507 021d 4F02     		.2byte	0x24f
 1508 021f 6B000000 		.4byte	0x6b
 1509 0223 00000000 		.4byte	.LFB6
 1510 0227 08010000 		.4byte	.LFE6-.LFB6
 1511 022b 01       		.uleb128 0x1
 1512 022c 9C       		.byte	0x9c
 1513 022d AA020000 		.4byte	0x2aa
 1514 0231 0C       		.uleb128 0xc
 1515 0232 45020000 		.4byte	.LASF18
 1516 0236 01       		.byte	0x1
 1517 0237 4F02     		.2byte	0x24f
 1518 0239 6B000000 		.4byte	0x6b
 1519 023d 02       		.uleb128 0x2
 1520 023e 91       		.byte	0x91
 1521 023f 6F       		.sleb128 -17
 1522 0240 0B       		.uleb128 0xb
 1523 0241 F5040000 		.4byte	.LASF29
 1524 0245 01       		.byte	0x1
 1525 0246 5202     		.2byte	0x252
 1526 0248 6B000000 		.4byte	0x6b
 1527 024c 02       		.uleb128 0x2
 1528 024d 91       		.byte	0x91
 1529 024e 71       		.sleb128 -15
 1530 024f 0A       		.uleb128 0xa
 1531 0250 706F7300 		.ascii	"pos\000"
 1532 0254 01       		.byte	0x1
 1533 0255 5402     		.2byte	0x254
 1534 0257 6B000000 		.4byte	0x6b
 1535 025b 02       		.uleb128 0x2
 1536 025c 91       		.byte	0x91
 1537 025d 77       		.sleb128 -9
 1538 025e 0B       		.uleb128 0xb
 1539 025f 79040000 		.4byte	.LASF30
 1540 0263 01       		.byte	0x1
 1541 0264 5502     		.2byte	0x255
 1542 0266 6B000000 		.4byte	0x6b
 1543 026a 02       		.uleb128 0x2
 1544 026b 91       		.byte	0x91
 1545 026c 76       		.sleb128 -10
 1546 026d 0B       		.uleb128 0xb
 1547 026e 72040000 		.4byte	.LASF20
 1548 0272 01       		.byte	0x1
 1549 0273 5702     		.2byte	0x257
 1550 0275 6B000000 		.4byte	0x6b
 1551 0279 02       		.uleb128 0x2
 1552 027a 91       		.byte	0x91
 1553 027b 75       		.sleb128 -11
 1554 027c 0B       		.uleb128 0xb
 1555 027d 17000000 		.4byte	.LASF31
 1556 0281 01       		.byte	0x1
 1557 0282 5802     		.2byte	0x258
 1558 0284 6B000000 		.4byte	0x6b
 1559 0288 02       		.uleb128 0x2
 1560 0289 91       		.byte	0x91
 1561 028a 74       		.sleb128 -12
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cc3EfiAs.s 			page 63


 1562 028b 0B       		.uleb128 0xb
 1563 028c BF010000 		.4byte	.LASF32
 1564 0290 01       		.byte	0x1
 1565 0291 5902     		.2byte	0x259
 1566 0293 6B000000 		.4byte	0x6b
 1567 0297 02       		.uleb128 0x2
 1568 0298 91       		.byte	0x91
 1569 0299 73       		.sleb128 -13
 1570 029a 0B       		.uleb128 0xb
 1571 029b 88020000 		.4byte	.LASF33
 1572 029f 01       		.byte	0x1
 1573 02a0 5A02     		.2byte	0x25a
 1574 02a2 6B000000 		.4byte	0x6b
 1575 02a6 02       		.uleb128 0x2
 1576 02a7 91       		.byte	0x91
 1577 02a8 72       		.sleb128 -14
 1578 02a9 00       		.byte	0
 1579 02aa 0E       		.uleb128 0xe
 1580 02ab C3000000 		.4byte	.LASF35
 1581 02af 01       		.byte	0x1
 1582 02b0 9702     		.2byte	0x297
 1583 02b2 6B000000 		.4byte	0x6b
 1584 02b6 00000000 		.4byte	.LFB7
 1585 02ba 54000000 		.4byte	.LFE7-.LFB7
 1586 02be 01       		.uleb128 0x1
 1587 02bf 9C       		.byte	0x9c
 1588 02c0 01030000 		.4byte	0x301
 1589 02c4 0C       		.uleb128 0xc
 1590 02c5 72040000 		.4byte	.LASF20
 1591 02c9 01       		.byte	0x1
 1592 02ca 9702     		.2byte	0x297
 1593 02cc 6B000000 		.4byte	0x6b
 1594 02d0 02       		.uleb128 0x2
 1595 02d1 91       		.byte	0x91
 1596 02d2 6F       		.sleb128 -17
 1597 02d3 0B       		.uleb128 0xb
 1598 02d4 3F010000 		.4byte	.LASF36
 1599 02d8 01       		.byte	0x1
 1600 02d9 9A02     		.2byte	0x29a
 1601 02db 6B000000 		.4byte	0x6b
 1602 02df 02       		.uleb128 0x2
 1603 02e0 91       		.byte	0x91
 1604 02e1 77       		.sleb128 -9
 1605 02e2 0B       		.uleb128 0xb
 1606 02e3 48010000 		.4byte	.LASF37
 1607 02e7 01       		.byte	0x1
 1608 02e8 9B02     		.2byte	0x29b
 1609 02ea 6B000000 		.4byte	0x6b
 1610 02ee 02       		.uleb128 0x2
 1611 02ef 91       		.byte	0x91
 1612 02f0 75       		.sleb128 -11
 1613 02f1 0B       		.uleb128 0xb
 1614 02f2 58010000 		.4byte	.LASF38
 1615 02f6 01       		.byte	0x1
 1616 02f7 9C02     		.2byte	0x29c
 1617 02f9 6B000000 		.4byte	0x6b
 1618 02fd 02       		.uleb128 0x2
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cc3EfiAs.s 			page 64


 1619 02fe 91       		.byte	0x91
 1620 02ff 76       		.sleb128 -10
 1621 0300 00       		.byte	0
 1622 0301 0E       		.uleb128 0xe
 1623 0302 03040000 		.4byte	.LASF39
 1624 0306 01       		.byte	0x1
 1625 0307 C302     		.2byte	0x2c3
 1626 0309 6B000000 		.4byte	0x6b
 1627 030d 00000000 		.4byte	.LFB8
 1628 0311 38000000 		.4byte	.LFE8-.LFB8
 1629 0315 01       		.uleb128 0x1
 1630 0316 9C       		.byte	0x9c
 1631 0317 38030000 		.4byte	0x338
 1632 031b 0A       		.uleb128 0xa
 1633 031c 6900     		.ascii	"i\000"
 1634 031e 01       		.byte	0x1
 1635 031f C602     		.2byte	0x2c6
 1636 0321 6B000000 		.4byte	0x6b
 1637 0325 02       		.uleb128 0x2
 1638 0326 91       		.byte	0x91
 1639 0327 77       		.sleb128 -9
 1640 0328 0B       		.uleb128 0xb
 1641 0329 58010000 		.4byte	.LASF38
 1642 032d 01       		.byte	0x1
 1643 032e C702     		.2byte	0x2c7
 1644 0330 6B000000 		.4byte	0x6b
 1645 0334 02       		.uleb128 0x2
 1646 0335 91       		.byte	0x91
 1647 0336 76       		.sleb128 -10
 1648 0337 00       		.byte	0
 1649 0338 0F       		.uleb128 0xf
 1650 0339 AB000000 		.4byte	.LASF40
 1651 033d 01       		.byte	0x1
 1652 033e F102     		.2byte	0x2f1
 1653 0340 00000000 		.4byte	.LFB9
 1654 0344 68000000 		.4byte	.LFE9-.LFB9
 1655 0348 01       		.uleb128 0x1
 1656 0349 9C       		.byte	0x9c
 1657 034a 9A030000 		.4byte	0x39a
 1658 034e 0C       		.uleb128 0xc
 1659 034f 72040000 		.4byte	.LASF20
 1660 0353 01       		.byte	0x1
 1661 0354 F102     		.2byte	0x2f1
 1662 0356 6B000000 		.4byte	0x6b
 1663 035a 02       		.uleb128 0x2
 1664 035b 91       		.byte	0x91
 1665 035c 6F       		.sleb128 -17
 1666 035d 0A       		.uleb128 0xa
 1667 035e 706F7300 		.ascii	"pos\000"
 1668 0362 01       		.byte	0x1
 1669 0363 F402     		.2byte	0x2f4
 1670 0365 6B000000 		.4byte	0x6b
 1671 0369 02       		.uleb128 0x2
 1672 036a 91       		.byte	0x91
 1673 036b 75       		.sleb128 -11
 1674 036c 0B       		.uleb128 0xb
 1675 036d 91020000 		.4byte	.LASF22
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cc3EfiAs.s 			page 65


 1676 0371 01       		.byte	0x1
 1677 0372 F502     		.2byte	0x2f5
 1678 0374 6B000000 		.4byte	0x6b
 1679 0378 02       		.uleb128 0x2
 1680 0379 91       		.byte	0x91
 1681 037a 74       		.sleb128 -12
 1682 037b 0B       		.uleb128 0xb
 1683 037c 3F010000 		.4byte	.LASF36
 1684 0380 01       		.byte	0x1
 1685 0381 F602     		.2byte	0x2f6
 1686 0383 6B000000 		.4byte	0x6b
 1687 0387 02       		.uleb128 0x2
 1688 0388 91       		.byte	0x91
 1689 0389 77       		.sleb128 -9
 1690 038a 0B       		.uleb128 0xb
 1691 038b 48010000 		.4byte	.LASF37
 1692 038f 01       		.byte	0x1
 1693 0390 F702     		.2byte	0x2f7
 1694 0392 6B000000 		.4byte	0x6b
 1695 0396 02       		.uleb128 0x2
 1696 0397 91       		.byte	0x91
 1697 0398 76       		.sleb128 -10
 1698 0399 00       		.byte	0
 1699 039a 0F       		.uleb128 0xf
 1700 039b 67010000 		.4byte	.LASF41
 1701 039f 01       		.byte	0x1
 1702 03a0 2303     		.2byte	0x323
 1703 03a2 00000000 		.4byte	.LFB10
 1704 03a6 6C000000 		.4byte	.LFE10-.LFB10
 1705 03aa 01       		.uleb128 0x1
 1706 03ab 9C       		.byte	0x9c
 1707 03ac FC030000 		.4byte	0x3fc
 1708 03b0 0C       		.uleb128 0xc
 1709 03b1 72040000 		.4byte	.LASF20
 1710 03b5 01       		.byte	0x1
 1711 03b6 2303     		.2byte	0x323
 1712 03b8 6B000000 		.4byte	0x6b
 1713 03bc 02       		.uleb128 0x2
 1714 03bd 91       		.byte	0x91
 1715 03be 6F       		.sleb128 -17
 1716 03bf 0A       		.uleb128 0xa
 1717 03c0 706F7300 		.ascii	"pos\000"
 1718 03c4 01       		.byte	0x1
 1719 03c5 2603     		.2byte	0x326
 1720 03c7 6B000000 		.4byte	0x6b
 1721 03cb 02       		.uleb128 0x2
 1722 03cc 91       		.byte	0x91
 1723 03cd 75       		.sleb128 -11
 1724 03ce 0B       		.uleb128 0xb
 1725 03cf 91020000 		.4byte	.LASF22
 1726 03d3 01       		.byte	0x1
 1727 03d4 2703     		.2byte	0x327
 1728 03d6 6B000000 		.4byte	0x6b
 1729 03da 02       		.uleb128 0x2
 1730 03db 91       		.byte	0x91
 1731 03dc 74       		.sleb128 -12
 1732 03dd 0B       		.uleb128 0xb
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cc3EfiAs.s 			page 66


 1733 03de 3F010000 		.4byte	.LASF36
 1734 03e2 01       		.byte	0x1
 1735 03e3 2803     		.2byte	0x328
 1736 03e5 6B000000 		.4byte	0x6b
 1737 03e9 02       		.uleb128 0x2
 1738 03ea 91       		.byte	0x91
 1739 03eb 77       		.sleb128 -9
 1740 03ec 0B       		.uleb128 0xb
 1741 03ed 48010000 		.4byte	.LASF37
 1742 03f1 01       		.byte	0x1
 1743 03f2 2903     		.2byte	0x329
 1744 03f4 6B000000 		.4byte	0x6b
 1745 03f8 02       		.uleb128 0x2
 1746 03f9 91       		.byte	0x91
 1747 03fa 76       		.sleb128 -10
 1748 03fb 00       		.byte	0
 1749 03fc 0D       		.uleb128 0xd
 1750 03fd 1D050000 		.4byte	.LASF42
 1751 0401 01       		.byte	0x1
 1752 0402 9C07     		.2byte	0x79c
 1753 0404 76000000 		.4byte	0x76
 1754 0408 00000000 		.4byte	.LFB11
 1755 040c 38000000 		.4byte	.LFE11-.LFB11
 1756 0410 01       		.uleb128 0x1
 1757 0411 9C       		.byte	0x9c
 1758 0412 42040000 		.4byte	0x442
 1759 0416 10       		.uleb128 0x10
 1760 0417 783100   		.ascii	"x1\000"
 1761 041a 01       		.byte	0x1
 1762 041b 9C07     		.2byte	0x79c
 1763 041d 76000000 		.4byte	0x76
 1764 0421 02       		.uleb128 0x2
 1765 0422 91       		.byte	0x91
 1766 0423 6E       		.sleb128 -18
 1767 0424 10       		.uleb128 0x10
 1768 0425 783200   		.ascii	"x2\000"
 1769 0428 01       		.byte	0x1
 1770 0429 9C07     		.2byte	0x79c
 1771 042b 76000000 		.4byte	0x76
 1772 042f 02       		.uleb128 0x2
 1773 0430 91       		.byte	0x91
 1774 0431 6C       		.sleb128 -20
 1775 0432 0A       		.uleb128 0xa
 1776 0433 746D7000 		.ascii	"tmp\000"
 1777 0437 01       		.byte	0x1
 1778 0438 9F07     		.2byte	0x79f
 1779 043a 81000000 		.4byte	0x81
 1780 043e 02       		.uleb128 0x2
 1781 043f 91       		.byte	0x91
 1782 0440 74       		.sleb128 -12
 1783 0441 00       		.byte	0
 1784 0442 11       		.uleb128 0x11
 1785 0443 76000000 		.4byte	0x76
 1786 0447 52040000 		.4byte	0x452
 1787 044b 12       		.uleb128 0x12
 1788 044c A1000000 		.4byte	0xa1
 1789 0450 07       		.byte	0x7
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cc3EfiAs.s 			page 67


 1790 0451 00       		.byte	0
 1791 0452 13       		.uleb128 0x13
 1792 0453 10010000 		.4byte	.LASF43
 1793 0457 03       		.byte	0x3
 1794 0458 C002     		.2byte	0x2c0
 1795 045a 42040000 		.4byte	0x442
 1796 045e 14       		.uleb128 0x14
 1797 045f CA030000 		.4byte	.LASF44
 1798 0463 01       		.byte	0x1
 1799 0464 21       		.byte	0x21
 1800 0465 42040000 		.4byte	0x442
 1801 0469 05       		.uleb128 0x5
 1802 046a 03       		.byte	0x3
 1803 046b 00000000 		.4byte	CapSense_1_rawFilterData1
 1804 046f 11       		.uleb128 0x11
 1805 0470 6B000000 		.4byte	0x6b
 1806 0474 7F040000 		.4byte	0x47f
 1807 0478 12       		.uleb128 0x12
 1808 0479 A1000000 		.4byte	0xa1
 1809 047d 00       		.byte	0
 1810 047e 00       		.byte	0
 1811 047f 13       		.uleb128 0x13
 1812 0480 6C020000 		.4byte	.LASF45
 1813 0484 04       		.byte	0x4
 1814 0485 0A01     		.2byte	0x10a
 1815 0487 6F040000 		.4byte	0x46f
 1816 048b 11       		.uleb128 0x11
 1817 048c 6B000000 		.4byte	0x6b
 1818 0490 9B040000 		.4byte	0x49b
 1819 0494 12       		.uleb128 0x12
 1820 0495 A1000000 		.4byte	0xa1
 1821 0499 07       		.byte	0x7
 1822 049a 00       		.byte	0
 1823 049b 13       		.uleb128 0x13
 1824 049c C0020000 		.4byte	.LASF46
 1825 04a0 04       		.byte	0x4
 1826 04a1 0B01     		.2byte	0x10b
 1827 04a3 A7040000 		.4byte	0x4a7
 1828 04a7 15       		.uleb128 0x15
 1829 04a8 8B040000 		.4byte	0x48b
 1830 04ac 14       		.uleb128 0x14
 1831 04ad 03050000 		.4byte	.LASF47
 1832 04b1 01       		.byte	0x1
 1833 04b2 29       		.byte	0x29
 1834 04b3 42040000 		.4byte	0x442
 1835 04b7 05       		.uleb128 0x5
 1836 04b8 03       		.byte	0x3
 1837 04b9 00000000 		.4byte	CapSense_1_sensorBaseline
 1838 04bd 14       		.uleb128 0x14
 1839 04be D8040000 		.4byte	.LASF48
 1840 04c2 01       		.byte	0x1
 1841 04c3 2A       		.byte	0x2a
 1842 04c4 8B040000 		.4byte	0x48b
 1843 04c8 05       		.uleb128 0x5
 1844 04c9 03       		.byte	0x3
 1845 04ca 00000000 		.4byte	CapSense_1_sensorBaselineLow
 1846 04ce 14       		.uleb128 0x14
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cc3EfiAs.s 			page 68


 1847 04cf A0040000 		.4byte	.LASF49
 1848 04d3 01       		.byte	0x1
 1849 04d4 2B       		.byte	0x2b
 1850 04d5 8B040000 		.4byte	0x48b
 1851 04d9 05       		.uleb128 0x5
 1852 04da 03       		.byte	0x3
 1853 04db 00000000 		.4byte	CapSense_1_sensorSignal
 1854 04df 14       		.uleb128 0x14
 1855 04e0 B2030000 		.4byte	.LASF50
 1856 04e4 01       		.byte	0x1
 1857 04e5 2C       		.byte	0x2c
 1858 04e6 6F040000 		.4byte	0x46f
 1859 04ea 05       		.uleb128 0x5
 1860 04eb 03       		.byte	0x3
 1861 04ec 00000000 		.4byte	CapSense_1_sensorOnMask
 1862 04f0 14       		.uleb128 0x14
 1863 04f1 A1020000 		.4byte	.LASF51
 1864 04f5 01       		.byte	0x1
 1865 04f6 2E       		.byte	0x2e
 1866 04f7 8B040000 		.4byte	0x48b
 1867 04fb 05       		.uleb128 0x5
 1868 04fc 03       		.byte	0x3
 1869 04fd 00000000 		.4byte	CapSense_1_lowBaselineResetCnt
 1870 0501 14       		.uleb128 0x14
 1871 0502 F8010000 		.4byte	.LASF52
 1872 0506 01       		.byte	0x1
 1873 0507 30       		.byte	0x30
 1874 0508 12050000 		.4byte	0x512
 1875 050c 05       		.uleb128 0x5
 1876 050d 03       		.byte	0x3
 1877 050e 00000000 		.4byte	CapSense_1_fingerThreshold
 1878 0512 15       		.uleb128 0x15
 1879 0513 8B040000 		.4byte	0x48b
 1880 0517 14       		.uleb128 0x14
 1881 0518 E2000000 		.4byte	.LASF53
 1882 051c 01       		.byte	0x1
 1883 051d 34       		.byte	0x34
 1884 051e 28050000 		.4byte	0x528
 1885 0522 05       		.uleb128 0x5
 1886 0523 03       		.byte	0x3
 1887 0524 00000000 		.4byte	CapSense_1_noiseThreshold
 1888 0528 15       		.uleb128 0x15
 1889 0529 8B040000 		.4byte	0x48b
 1890 052d 14       		.uleb128 0x14
 1891 052e CA010000 		.4byte	.LASF54
 1892 0532 01       		.byte	0x1
 1893 0533 38       		.byte	0x38
 1894 0534 3E050000 		.4byte	0x53e
 1895 0538 05       		.uleb128 0x5
 1896 0539 03       		.byte	0x3
 1897 053a 00000000 		.4byte	CapSense_1_hysteresis
 1898 053e 15       		.uleb128 0x15
 1899 053f 8B040000 		.4byte	0x48b
 1900 0543 14       		.uleb128 0x14
 1901 0544 FC000000 		.4byte	.LASF55
 1902 0548 01       		.byte	0x1
 1903 0549 3C       		.byte	0x3c
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cc3EfiAs.s 			page 69


 1904 054a 54050000 		.4byte	0x554
 1905 054e 05       		.uleb128 0x5
 1906 054f 03       		.byte	0x3
 1907 0550 00000000 		.4byte	CapSense_1_debounce
 1908 0554 15       		.uleb128 0x15
 1909 0555 8B040000 		.4byte	0x48b
 1910 0559 11       		.uleb128 0x11
 1911 055a 6B000000 		.4byte	0x6b
 1912 055e 69050000 		.4byte	0x569
 1913 0562 12       		.uleb128 0x12
 1914 0563 A1000000 		.4byte	0xa1
 1915 0567 08       		.byte	0x8
 1916 0568 00       		.byte	0
 1917 0569 14       		.uleb128 0x14
 1918 056a B8040000 		.4byte	.LASF56
 1919 056e 01       		.byte	0x1
 1920 056f 40       		.byte	0x40
 1921 0570 59050000 		.4byte	0x559
 1922 0574 05       		.uleb128 0x5
 1923 0575 03       		.byte	0x3
 1924 0576 00000000 		.4byte	CapSense_1_debounceCounter
 1925 057a 14       		.uleb128 0x14
 1926 057b E0010000 		.4byte	.LASF57
 1927 057f 01       		.byte	0x1
 1928 0580 44       		.byte	0x44
 1929 0581 8B050000 		.4byte	0x58b
 1930 0585 05       		.uleb128 0x5
 1931 0586 03       		.byte	0x3
 1932 0587 00000000 		.4byte	CapSense_1_rawDataIndex
 1933 058b 15       		.uleb128 0x15
 1934 058c 8B040000 		.4byte	0x48b
 1935 0590 14       		.uleb128 0x14
 1936 0591 4C020000 		.4byte	.LASF58
 1937 0595 01       		.byte	0x1
 1938 0596 50       		.byte	0x50
 1939 0597 A1050000 		.4byte	0x5a1
 1940 059b 05       		.uleb128 0x5
 1941 059c 03       		.byte	0x3
 1942 059d 00000000 		.4byte	CapSense_1_numberOfSensors
 1943 05a1 15       		.uleb128 0x15
 1944 05a2 8B040000 		.4byte	0x48b
 1945 05a6 00       		.byte	0
 1946              		.section	.debug_abbrev,"",%progbits
 1947              	.Ldebug_abbrev0:
 1948 0000 01       		.uleb128 0x1
 1949 0001 11       		.uleb128 0x11
 1950 0002 01       		.byte	0x1
 1951 0003 25       		.uleb128 0x25
 1952 0004 0E       		.uleb128 0xe
 1953 0005 13       		.uleb128 0x13
 1954 0006 0B       		.uleb128 0xb
 1955 0007 03       		.uleb128 0x3
 1956 0008 0E       		.uleb128 0xe
 1957 0009 1B       		.uleb128 0x1b
 1958 000a 0E       		.uleb128 0xe
 1959 000b 55       		.uleb128 0x55
 1960 000c 17       		.uleb128 0x17
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cc3EfiAs.s 			page 70


 1961 000d 11       		.uleb128 0x11
 1962 000e 01       		.uleb128 0x1
 1963 000f 10       		.uleb128 0x10
 1964 0010 17       		.uleb128 0x17
 1965 0011 00       		.byte	0
 1966 0012 00       		.byte	0
 1967 0013 02       		.uleb128 0x2
 1968 0014 24       		.uleb128 0x24
 1969 0015 00       		.byte	0
 1970 0016 0B       		.uleb128 0xb
 1971 0017 0B       		.uleb128 0xb
 1972 0018 3E       		.uleb128 0x3e
 1973 0019 0B       		.uleb128 0xb
 1974 001a 03       		.uleb128 0x3
 1975 001b 0E       		.uleb128 0xe
 1976 001c 00       		.byte	0
 1977 001d 00       		.byte	0
 1978 001e 03       		.uleb128 0x3
 1979 001f 24       		.uleb128 0x24
 1980 0020 00       		.byte	0
 1981 0021 0B       		.uleb128 0xb
 1982 0022 0B       		.uleb128 0xb
 1983 0023 3E       		.uleb128 0x3e
 1984 0024 0B       		.uleb128 0xb
 1985 0025 03       		.uleb128 0x3
 1986 0026 08       		.uleb128 0x8
 1987 0027 00       		.byte	0
 1988 0028 00       		.byte	0
 1989 0029 04       		.uleb128 0x4
 1990 002a 16       		.uleb128 0x16
 1991 002b 00       		.byte	0
 1992 002c 03       		.uleb128 0x3
 1993 002d 0E       		.uleb128 0xe
 1994 002e 3A       		.uleb128 0x3a
 1995 002f 0B       		.uleb128 0xb
 1996 0030 3B       		.uleb128 0x3b
 1997 0031 0B       		.uleb128 0xb
 1998 0032 49       		.uleb128 0x49
 1999 0033 13       		.uleb128 0x13
 2000 0034 00       		.byte	0
 2001 0035 00       		.byte	0
 2002 0036 05       		.uleb128 0x5
 2003 0037 2E       		.uleb128 0x2e
 2004 0038 01       		.byte	0x1
 2005 0039 3F       		.uleb128 0x3f
 2006 003a 19       		.uleb128 0x19
 2007 003b 03       		.uleb128 0x3
 2008 003c 0E       		.uleb128 0xe
 2009 003d 3A       		.uleb128 0x3a
 2010 003e 0B       		.uleb128 0xb
 2011 003f 3B       		.uleb128 0x3b
 2012 0040 0B       		.uleb128 0xb
 2013 0041 27       		.uleb128 0x27
 2014 0042 19       		.uleb128 0x19
 2015 0043 11       		.uleb128 0x11
 2016 0044 01       		.uleb128 0x1
 2017 0045 12       		.uleb128 0x12
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cc3EfiAs.s 			page 71


 2018 0046 06       		.uleb128 0x6
 2019 0047 40       		.uleb128 0x40
 2020 0048 18       		.uleb128 0x18
 2021 0049 9742     		.uleb128 0x2117
 2022 004b 19       		.uleb128 0x19
 2023 004c 01       		.uleb128 0x1
 2024 004d 13       		.uleb128 0x13
 2025 004e 00       		.byte	0
 2026 004f 00       		.byte	0
 2027 0050 06       		.uleb128 0x6
 2028 0051 05       		.uleb128 0x5
 2029 0052 00       		.byte	0
 2030 0053 03       		.uleb128 0x3
 2031 0054 0E       		.uleb128 0xe
 2032 0055 3A       		.uleb128 0x3a
 2033 0056 0B       		.uleb128 0xb
 2034 0057 3B       		.uleb128 0x3b
 2035 0058 0B       		.uleb128 0xb
 2036 0059 49       		.uleb128 0x49
 2037 005a 13       		.uleb128 0x13
 2038 005b 02       		.uleb128 0x2
 2039 005c 18       		.uleb128 0x18
 2040 005d 00       		.byte	0
 2041 005e 00       		.byte	0
 2042 005f 07       		.uleb128 0x7
 2043 0060 34       		.uleb128 0x34
 2044 0061 00       		.byte	0
 2045 0062 03       		.uleb128 0x3
 2046 0063 0E       		.uleb128 0xe
 2047 0064 3A       		.uleb128 0x3a
 2048 0065 0B       		.uleb128 0xb
 2049 0066 3B       		.uleb128 0x3b
 2050 0067 0B       		.uleb128 0xb
 2051 0068 49       		.uleb128 0x49
 2052 0069 13       		.uleb128 0x13
 2053 006a 02       		.uleb128 0x2
 2054 006b 18       		.uleb128 0x18
 2055 006c 00       		.byte	0
 2056 006d 00       		.byte	0
 2057 006e 08       		.uleb128 0x8
 2058 006f 2E       		.uleb128 0x2e
 2059 0070 01       		.byte	0x1
 2060 0071 3F       		.uleb128 0x3f
 2061 0072 19       		.uleb128 0x19
 2062 0073 03       		.uleb128 0x3
 2063 0074 0E       		.uleb128 0xe
 2064 0075 3A       		.uleb128 0x3a
 2065 0076 0B       		.uleb128 0xb
 2066 0077 3B       		.uleb128 0x3b
 2067 0078 0B       		.uleb128 0xb
 2068 0079 27       		.uleb128 0x27
 2069 007a 19       		.uleb128 0x19
 2070 007b 11       		.uleb128 0x11
 2071 007c 01       		.uleb128 0x1
 2072 007d 12       		.uleb128 0x12
 2073 007e 06       		.uleb128 0x6
 2074 007f 40       		.uleb128 0x40
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cc3EfiAs.s 			page 72


 2075 0080 18       		.uleb128 0x18
 2076 0081 9642     		.uleb128 0x2116
 2077 0083 19       		.uleb128 0x19
 2078 0084 01       		.uleb128 0x1
 2079 0085 13       		.uleb128 0x13
 2080 0086 00       		.byte	0
 2081 0087 00       		.byte	0
 2082 0088 09       		.uleb128 0x9
 2083 0089 2E       		.uleb128 0x2e
 2084 008a 01       		.byte	0x1
 2085 008b 3F       		.uleb128 0x3f
 2086 008c 19       		.uleb128 0x19
 2087 008d 03       		.uleb128 0x3
 2088 008e 0E       		.uleb128 0xe
 2089 008f 3A       		.uleb128 0x3a
 2090 0090 0B       		.uleb128 0xb
 2091 0091 3B       		.uleb128 0x3b
 2092 0092 05       		.uleb128 0x5
 2093 0093 27       		.uleb128 0x27
 2094 0094 19       		.uleb128 0x19
 2095 0095 11       		.uleb128 0x11
 2096 0096 01       		.uleb128 0x1
 2097 0097 12       		.uleb128 0x12
 2098 0098 06       		.uleb128 0x6
 2099 0099 40       		.uleb128 0x40
 2100 009a 18       		.uleb128 0x18
 2101 009b 9642     		.uleb128 0x2116
 2102 009d 19       		.uleb128 0x19
 2103 009e 01       		.uleb128 0x1
 2104 009f 13       		.uleb128 0x13
 2105 00a0 00       		.byte	0
 2106 00a1 00       		.byte	0
 2107 00a2 0A       		.uleb128 0xa
 2108 00a3 34       		.uleb128 0x34
 2109 00a4 00       		.byte	0
 2110 00a5 03       		.uleb128 0x3
 2111 00a6 08       		.uleb128 0x8
 2112 00a7 3A       		.uleb128 0x3a
 2113 00a8 0B       		.uleb128 0xb
 2114 00a9 3B       		.uleb128 0x3b
 2115 00aa 05       		.uleb128 0x5
 2116 00ab 49       		.uleb128 0x49
 2117 00ac 13       		.uleb128 0x13
 2118 00ad 02       		.uleb128 0x2
 2119 00ae 18       		.uleb128 0x18
 2120 00af 00       		.byte	0
 2121 00b0 00       		.byte	0
 2122 00b1 0B       		.uleb128 0xb
 2123 00b2 34       		.uleb128 0x34
 2124 00b3 00       		.byte	0
 2125 00b4 03       		.uleb128 0x3
 2126 00b5 0E       		.uleb128 0xe
 2127 00b6 3A       		.uleb128 0x3a
 2128 00b7 0B       		.uleb128 0xb
 2129 00b8 3B       		.uleb128 0x3b
 2130 00b9 05       		.uleb128 0x5
 2131 00ba 49       		.uleb128 0x49
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cc3EfiAs.s 			page 73


 2132 00bb 13       		.uleb128 0x13
 2133 00bc 02       		.uleb128 0x2
 2134 00bd 18       		.uleb128 0x18
 2135 00be 00       		.byte	0
 2136 00bf 00       		.byte	0
 2137 00c0 0C       		.uleb128 0xc
 2138 00c1 05       		.uleb128 0x5
 2139 00c2 00       		.byte	0
 2140 00c3 03       		.uleb128 0x3
 2141 00c4 0E       		.uleb128 0xe
 2142 00c5 3A       		.uleb128 0x3a
 2143 00c6 0B       		.uleb128 0xb
 2144 00c7 3B       		.uleb128 0x3b
 2145 00c8 05       		.uleb128 0x5
 2146 00c9 49       		.uleb128 0x49
 2147 00ca 13       		.uleb128 0x13
 2148 00cb 02       		.uleb128 0x2
 2149 00cc 18       		.uleb128 0x18
 2150 00cd 00       		.byte	0
 2151 00ce 00       		.byte	0
 2152 00cf 0D       		.uleb128 0xd
 2153 00d0 2E       		.uleb128 0x2e
 2154 00d1 01       		.byte	0x1
 2155 00d2 3F       		.uleb128 0x3f
 2156 00d3 19       		.uleb128 0x19
 2157 00d4 03       		.uleb128 0x3
 2158 00d5 0E       		.uleb128 0xe
 2159 00d6 3A       		.uleb128 0x3a
 2160 00d7 0B       		.uleb128 0xb
 2161 00d8 3B       		.uleb128 0x3b
 2162 00d9 05       		.uleb128 0x5
 2163 00da 27       		.uleb128 0x27
 2164 00db 19       		.uleb128 0x19
 2165 00dc 49       		.uleb128 0x49
 2166 00dd 13       		.uleb128 0x13
 2167 00de 11       		.uleb128 0x11
 2168 00df 01       		.uleb128 0x1
 2169 00e0 12       		.uleb128 0x12
 2170 00e1 06       		.uleb128 0x6
 2171 00e2 40       		.uleb128 0x40
 2172 00e3 18       		.uleb128 0x18
 2173 00e4 9742     		.uleb128 0x2117
 2174 00e6 19       		.uleb128 0x19
 2175 00e7 01       		.uleb128 0x1
 2176 00e8 13       		.uleb128 0x13
 2177 00e9 00       		.byte	0
 2178 00ea 00       		.byte	0
 2179 00eb 0E       		.uleb128 0xe
 2180 00ec 2E       		.uleb128 0x2e
 2181 00ed 01       		.byte	0x1
 2182 00ee 3F       		.uleb128 0x3f
 2183 00ef 19       		.uleb128 0x19
 2184 00f0 03       		.uleb128 0x3
 2185 00f1 0E       		.uleb128 0xe
 2186 00f2 3A       		.uleb128 0x3a
 2187 00f3 0B       		.uleb128 0xb
 2188 00f4 3B       		.uleb128 0x3b
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cc3EfiAs.s 			page 74


 2189 00f5 05       		.uleb128 0x5
 2190 00f6 27       		.uleb128 0x27
 2191 00f7 19       		.uleb128 0x19
 2192 00f8 49       		.uleb128 0x49
 2193 00f9 13       		.uleb128 0x13
 2194 00fa 11       		.uleb128 0x11
 2195 00fb 01       		.uleb128 0x1
 2196 00fc 12       		.uleb128 0x12
 2197 00fd 06       		.uleb128 0x6
 2198 00fe 40       		.uleb128 0x40
 2199 00ff 18       		.uleb128 0x18
 2200 0100 9642     		.uleb128 0x2116
 2201 0102 19       		.uleb128 0x19
 2202 0103 01       		.uleb128 0x1
 2203 0104 13       		.uleb128 0x13
 2204 0105 00       		.byte	0
 2205 0106 00       		.byte	0
 2206 0107 0F       		.uleb128 0xf
 2207 0108 2E       		.uleb128 0x2e
 2208 0109 01       		.byte	0x1
 2209 010a 3F       		.uleb128 0x3f
 2210 010b 19       		.uleb128 0x19
 2211 010c 03       		.uleb128 0x3
 2212 010d 0E       		.uleb128 0xe
 2213 010e 3A       		.uleb128 0x3a
 2214 010f 0B       		.uleb128 0xb
 2215 0110 3B       		.uleb128 0x3b
 2216 0111 05       		.uleb128 0x5
 2217 0112 27       		.uleb128 0x27
 2218 0113 19       		.uleb128 0x19
 2219 0114 11       		.uleb128 0x11
 2220 0115 01       		.uleb128 0x1
 2221 0116 12       		.uleb128 0x12
 2222 0117 06       		.uleb128 0x6
 2223 0118 40       		.uleb128 0x40
 2224 0119 18       		.uleb128 0x18
 2225 011a 9742     		.uleb128 0x2117
 2226 011c 19       		.uleb128 0x19
 2227 011d 01       		.uleb128 0x1
 2228 011e 13       		.uleb128 0x13
 2229 011f 00       		.byte	0
 2230 0120 00       		.byte	0
 2231 0121 10       		.uleb128 0x10
 2232 0122 05       		.uleb128 0x5
 2233 0123 00       		.byte	0
 2234 0124 03       		.uleb128 0x3
 2235 0125 08       		.uleb128 0x8
 2236 0126 3A       		.uleb128 0x3a
 2237 0127 0B       		.uleb128 0xb
 2238 0128 3B       		.uleb128 0x3b
 2239 0129 05       		.uleb128 0x5
 2240 012a 49       		.uleb128 0x49
 2241 012b 13       		.uleb128 0x13
 2242 012c 02       		.uleb128 0x2
 2243 012d 18       		.uleb128 0x18
 2244 012e 00       		.byte	0
 2245 012f 00       		.byte	0
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cc3EfiAs.s 			page 75


 2246 0130 11       		.uleb128 0x11
 2247 0131 01       		.uleb128 0x1
 2248 0132 01       		.byte	0x1
 2249 0133 49       		.uleb128 0x49
 2250 0134 13       		.uleb128 0x13
 2251 0135 01       		.uleb128 0x1
 2252 0136 13       		.uleb128 0x13
 2253 0137 00       		.byte	0
 2254 0138 00       		.byte	0
 2255 0139 12       		.uleb128 0x12
 2256 013a 21       		.uleb128 0x21
 2257 013b 00       		.byte	0
 2258 013c 49       		.uleb128 0x49
 2259 013d 13       		.uleb128 0x13
 2260 013e 2F       		.uleb128 0x2f
 2261 013f 0B       		.uleb128 0xb
 2262 0140 00       		.byte	0
 2263 0141 00       		.byte	0
 2264 0142 13       		.uleb128 0x13
 2265 0143 34       		.uleb128 0x34
 2266 0144 00       		.byte	0
 2267 0145 03       		.uleb128 0x3
 2268 0146 0E       		.uleb128 0xe
 2269 0147 3A       		.uleb128 0x3a
 2270 0148 0B       		.uleb128 0xb
 2271 0149 3B       		.uleb128 0x3b
 2272 014a 05       		.uleb128 0x5
 2273 014b 49       		.uleb128 0x49
 2274 014c 13       		.uleb128 0x13
 2275 014d 3F       		.uleb128 0x3f
 2276 014e 19       		.uleb128 0x19
 2277 014f 3C       		.uleb128 0x3c
 2278 0150 19       		.uleb128 0x19
 2279 0151 00       		.byte	0
 2280 0152 00       		.byte	0
 2281 0153 14       		.uleb128 0x14
 2282 0154 34       		.uleb128 0x34
 2283 0155 00       		.byte	0
 2284 0156 03       		.uleb128 0x3
 2285 0157 0E       		.uleb128 0xe
 2286 0158 3A       		.uleb128 0x3a
 2287 0159 0B       		.uleb128 0xb
 2288 015a 3B       		.uleb128 0x3b
 2289 015b 0B       		.uleb128 0xb
 2290 015c 49       		.uleb128 0x49
 2291 015d 13       		.uleb128 0x13
 2292 015e 3F       		.uleb128 0x3f
 2293 015f 19       		.uleb128 0x19
 2294 0160 02       		.uleb128 0x2
 2295 0161 18       		.uleb128 0x18
 2296 0162 00       		.byte	0
 2297 0163 00       		.byte	0
 2298 0164 15       		.uleb128 0x15
 2299 0165 26       		.uleb128 0x26
 2300 0166 00       		.byte	0
 2301 0167 49       		.uleb128 0x49
 2302 0168 13       		.uleb128 0x13
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cc3EfiAs.s 			page 76


 2303 0169 00       		.byte	0
 2304 016a 00       		.byte	0
 2305 016b 00       		.byte	0
 2306              		.section	.debug_aranges,"",%progbits
 2307 0000 74000000 		.4byte	0x74
 2308 0004 0200     		.2byte	0x2
 2309 0006 00000000 		.4byte	.Ldebug_info0
 2310 000a 04       		.byte	0x4
 2311 000b 00       		.byte	0
 2312 000c 0000     		.2byte	0
 2313 000e 0000     		.2byte	0
 2314 0010 00000000 		.4byte	.LFB0
 2315 0014 78000000 		.4byte	.LFE0-.LFB0
 2316 0018 00000000 		.4byte	.LFB1
 2317 001c 2C000000 		.4byte	.LFE1-.LFB1
 2318 0020 00000000 		.4byte	.LFB2
 2319 0024 26000000 		.4byte	.LFE2-.LFB2
 2320 0028 00000000 		.4byte	.LFB3
 2321 002c 6C000000 		.4byte	.LFE3-.LFB3
 2322 0030 00000000 		.4byte	.LFB4
 2323 0034 74010000 		.4byte	.LFE4-.LFB4
 2324 0038 00000000 		.4byte	.LFB5
 2325 003c 50000000 		.4byte	.LFE5-.LFB5
 2326 0040 00000000 		.4byte	.LFB6
 2327 0044 08010000 		.4byte	.LFE6-.LFB6
 2328 0048 00000000 		.4byte	.LFB7
 2329 004c 54000000 		.4byte	.LFE7-.LFB7
 2330 0050 00000000 		.4byte	.LFB8
 2331 0054 38000000 		.4byte	.LFE8-.LFB8
 2332 0058 00000000 		.4byte	.LFB9
 2333 005c 68000000 		.4byte	.LFE9-.LFB9
 2334 0060 00000000 		.4byte	.LFB10
 2335 0064 6C000000 		.4byte	.LFE10-.LFB10
 2336 0068 00000000 		.4byte	.LFB11
 2337 006c 38000000 		.4byte	.LFE11-.LFB11
 2338 0070 00000000 		.4byte	0
 2339 0074 00000000 		.4byte	0
 2340              		.section	.debug_ranges,"",%progbits
 2341              	.Ldebug_ranges0:
 2342 0000 00000000 		.4byte	.LFB0
 2343 0004 78000000 		.4byte	.LFE0
 2344 0008 00000000 		.4byte	.LFB1
 2345 000c 2C000000 		.4byte	.LFE1
 2346 0010 00000000 		.4byte	.LFB2
 2347 0014 26000000 		.4byte	.LFE2
 2348 0018 00000000 		.4byte	.LFB3
 2349 001c 6C000000 		.4byte	.LFE3
 2350 0020 00000000 		.4byte	.LFB4
 2351 0024 74010000 		.4byte	.LFE4
 2352 0028 00000000 		.4byte	.LFB5
 2353 002c 50000000 		.4byte	.LFE5
 2354 0030 00000000 		.4byte	.LFB6
 2355 0034 08010000 		.4byte	.LFE6
 2356 0038 00000000 		.4byte	.LFB7
 2357 003c 54000000 		.4byte	.LFE7
 2358 0040 00000000 		.4byte	.LFB8
 2359 0044 38000000 		.4byte	.LFE8
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cc3EfiAs.s 			page 77


 2360 0048 00000000 		.4byte	.LFB9
 2361 004c 68000000 		.4byte	.LFE9
 2362 0050 00000000 		.4byte	.LFB10
 2363 0054 6C000000 		.4byte	.LFE10
 2364 0058 00000000 		.4byte	.LFB11
 2365 005c 38000000 		.4byte	.LFE11
 2366 0060 00000000 		.4byte	0
 2367 0064 00000000 		.4byte	0
 2368              		.section	.debug_line,"",%progbits
 2369              	.Ldebug_line0:
 2370 0000 5F020000 		.section	.debug_str,"MS",%progbits,1
 2370      02007300 
 2370      00000201 
 2370      FB0E0D00 
 2370      01010101 
 2371              	.LASF10:
 2372 0000 75696E74 		.ascii	"uint16\000"
 2372      313600
 2373              	.LASF26:
 2374 0007 66696C74 		.ascii	"filteredRawData\000"
 2374      65726564 
 2374      52617744 
 2374      61746100 
 2375              	.LASF31:
 2376 0017 66696E67 		.ascii	"fingerThreshold\000"
 2376      65725468 
 2376      72657368 
 2376      6F6C6400 
 2377              	.LASF61:
 2378 0027 433A5C55 		.ascii	"C:\\Users\\Robert\\workspace\\embedit\\linx\\PSoC_2"
 2378      73657273 
 2378      5C526F62 
 2378      6572745C 
 2378      776F726B 
 2379 0054 5F50692E 		.ascii	"_Pi.cydsn\000"
 2379      63796473 
 2379      6E00
 2380              	.LASF19:
 2381 005e 43617053 		.ascii	"CapSense_1_InitializeAllBaselines\000"
 2381      656E7365 
 2381      5F315F49 
 2381      6E697469 
 2381      616C697A 
 2382              	.LASF16:
 2383 0080 43617053 		.ascii	"CapSense_1_BaseInit\000"
 2383      656E7365 
 2383      5F315F42 
 2383      61736549 
 2383      6E697400 
 2384              	.LASF7:
 2385 0094 6C6F6E67 		.ascii	"long long unsigned int\000"
 2385      206C6F6E 
 2385      6720756E 
 2385      7369676E 
 2385      65642069 
 2386              	.LASF40:
 2387 00ab 43617053 		.ascii	"CapSense_1_EnableWidget\000"
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cc3EfiAs.s 			page 78


 2387      656E7365 
 2387      5F315F45 
 2387      6E61626C 
 2387      65576964 
 2388              	.LASF35:
 2389 00c3 43617053 		.ascii	"CapSense_1_CheckIsWidgetActive\000"
 2389      656E7365 
 2389      5F315F43 
 2389      6865636B 
 2389      49735769 
 2390              	.LASF53:
 2391 00e2 43617053 		.ascii	"CapSense_1_noiseThreshold\000"
 2391      656E7365 
 2391      5F315F6E 
 2391      6F697365 
 2391      54687265 
 2392              	.LASF55:
 2393 00fc 43617053 		.ascii	"CapSense_1_debounce\000"
 2393      656E7365 
 2393      5F315F64 
 2393      65626F75 
 2393      6E636500 
 2394              	.LASF43:
 2395 0110 43617053 		.ascii	"CapSense_1_sensorRaw\000"
 2395      656E7365 
 2395      5F315F73 
 2395      656E736F 
 2395      72526177 
 2396              	.LASF6:
 2397 0125 6C6F6E67 		.ascii	"long long int\000"
 2397      206C6F6E 
 2397      6720696E 
 2397      7400
 2398              	.LASF0:
 2399 0133 7369676E 		.ascii	"signed char\000"
 2399      65642063 
 2399      68617200 
 2400              	.LASF36:
 2401 013f 72617749 		.ascii	"rawIndex\000"
 2401      6E646578 
 2401      00
 2402              	.LASF37:
 2403 0148 6E756D62 		.ascii	"numberOfSensors\000"
 2403      65724F66 
 2403      53656E73 
 2403      6F727300 
 2404              	.LASF38:
 2405 0158 73746174 		.ascii	"state\000"
 2405      6500
 2406              	.LASF4:
 2407 015e 6C6F6E67 		.ascii	"long int\000"
 2407      20696E74 
 2407      00
 2408              	.LASF41:
 2409 0167 43617053 		.ascii	"CapSense_1_DisableWidget\000"
 2409      656E7365 
 2409      5F315F44 
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cc3EfiAs.s 			page 79


 2409      69736162 
 2409      6C655769 
 2410              	.LASF9:
 2411 0180 75696E74 		.ascii	"uint8\000"
 2411      3800
 2412              	.LASF13:
 2413 0186 646F7562 		.ascii	"double\000"
 2413      6C6500
 2414              	.LASF60:
 2415 018d 2E5C4765 		.ascii	".\\Generated_Source\\PSoC5\\CapSense_1_CSHL.c\000"
 2415      6E657261 
 2415      7465645F 
 2415      536F7572 
 2415      63655C50 
 2416              	.LASF11:
 2417 01b8 75696E74 		.ascii	"uint32\000"
 2417      333200
 2418              	.LASF32:
 2419 01bf 68797374 		.ascii	"hysteresis\000"
 2419      65726573 
 2419      697300
 2420              	.LASF54:
 2421 01ca 43617053 		.ascii	"CapSense_1_hysteresis\000"
 2421      656E7365 
 2421      5F315F68 
 2421      79737465 
 2421      72657369 
 2422              	.LASF57:
 2423 01e0 43617053 		.ascii	"CapSense_1_rawDataIndex\000"
 2423      656E7365 
 2423      5F315F72 
 2423      61774461 
 2423      7461496E 
 2424              	.LASF52:
 2425 01f8 43617053 		.ascii	"CapSense_1_fingerThreshold\000"
 2425      656E7365 
 2425      5F315F66 
 2425      696E6765 
 2425      72546872 
 2426              	.LASF8:
 2427 0213 756E7369 		.ascii	"unsigned int\000"
 2427      676E6564 
 2427      20696E74 
 2427      00
 2428              	.LASF5:
 2429 0220 6C6F6E67 		.ascii	"long unsigned int\000"
 2429      20756E73 
 2429      69676E65 
 2429      6420696E 
 2429      7400
 2430              	.LASF3:
 2431 0232 73686F72 		.ascii	"short unsigned int\000"
 2431      7420756E 
 2431      7369676E 
 2431      65642069 
 2431      6E7400
 2432              	.LASF18:
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cc3EfiAs.s 			page 80


 2433 0245 73656E73 		.ascii	"sensor\000"
 2433      6F7200
 2434              	.LASF58:
 2435 024c 43617053 		.ascii	"CapSense_1_numberOfSensors\000"
 2435      656E7365 
 2435      5F315F6E 
 2435      756D6265 
 2435      724F6653 
 2436              	.LASF24:
 2437 0267 63616C63 		.ascii	"calc\000"
 2437      00
 2438              	.LASF45:
 2439 026c 43617053 		.ascii	"CapSense_1_sensorEnableMask\000"
 2439      656E7365 
 2439      5F315F73 
 2439      656E736F 
 2439      72456E61 
 2440              	.LASF33:
 2441 0288 6465626F 		.ascii	"debounce\000"
 2441      756E6365 
 2441      00
 2442              	.LASF22:
 2443 0291 656E4D61 		.ascii	"enMask\000"
 2443      736B00
 2444              	.LASF15:
 2445 0298 73697A65 		.ascii	"sizetype\000"
 2445      74797065 
 2445      00
 2446              	.LASF51:
 2447 02a1 43617053 		.ascii	"CapSense_1_lowBaselineResetCnt\000"
 2447      656E7365 
 2447      5F315F6C 
 2447      6F774261 
 2447      73656C69 
 2448              	.LASF46:
 2449 02c0 43617053 		.ascii	"CapSense_1_widgetNumber\000"
 2449      656E7365 
 2449      5F315F77 
 2449      69646765 
 2449      744E756D 
 2450              	.LASF17:
 2451 02d8 43617053 		.ascii	"CapSense_1_InitializeSensorBaseline\000"
 2451      656E7365 
 2451      5F315F49 
 2451      6E697469 
 2451      616C697A 
 2452              	.LASF59:
 2453 02fc 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 2453      4320342E 
 2453      392E3320 
 2453      32303135 
 2453      30333033 
 2454 032f 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m3 -mthumb -g -O"
 2454      20726576 
 2454      6973696F 
 2454      6E203232 
 2454      31323230 
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cc3EfiAs.s 			page 81


 2455 0362 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 2455      66756E63 
 2455      74696F6E 
 2455      2D736563 
 2455      74696F6E 
 2456              	.LASF28:
 2457 038a 43617053 		.ascii	"CapSense_1_UpdateEnabledBaselines\000"
 2457      656E7365 
 2457      5F315F55 
 2457      70646174 
 2457      65456E61 
 2458              	.LASF12:
 2459 03ac 666C6F61 		.ascii	"float\000"
 2459      7400
 2460              	.LASF50:
 2461 03b2 43617053 		.ascii	"CapSense_1_sensorOnMask\000"
 2461      656E7365 
 2461      5F315F73 
 2461      656E736F 
 2461      724F6E4D 
 2462              	.LASF44:
 2463 03ca 43617053 		.ascii	"CapSense_1_rawFilterData1\000"
 2463      656E7365 
 2463      5F315F72 
 2463      61774669 
 2463      6C746572 
 2464              	.LASF34:
 2465 03e4 43617053 		.ascii	"CapSense_1_CheckIsSensorActive\000"
 2465      656E7365 
 2465      5F315F43 
 2465      6865636B 
 2465      49735365 
 2466              	.LASF39:
 2467 0403 43617053 		.ascii	"CapSense_1_CheckIsAnyWidgetActive\000"
 2467      656E7365 
 2467      5F315F43 
 2467      6865636B 
 2467      4973416E 
 2468              	.LASF1:
 2469 0425 756E7369 		.ascii	"unsigned char\000"
 2469      676E6564 
 2469      20636861 
 2469      7200
 2470              	.LASF21:
 2471 0433 43617053 		.ascii	"CapSense_1_InitializeEnabledBaselines\000"
 2471      656E7365 
 2471      5F315F49 
 2471      6E697469 
 2471      616C697A 
 2472              	.LASF27:
 2473 0459 6E6F6973 		.ascii	"noiseThreshold\000"
 2473      65546872 
 2473      6573686F 
 2473      6C6400
 2474              	.LASF2:
 2475 0468 73686F72 		.ascii	"short int\000"
 2475      7420696E 
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cc3EfiAs.s 			page 82


 2475      7400
 2476              	.LASF20:
 2477 0472 77696467 		.ascii	"widget\000"
 2477      657400
 2478              	.LASF30:
 2479 0479 6F6E4D61 		.ascii	"onMask\000"
 2479      736B00
 2480              	.LASF23:
 2481 0480 43617053 		.ascii	"CapSense_1_UpdateSensorBaseline\000"
 2481      656E7365 
 2481      5F315F55 
 2481      70646174 
 2481      6553656E 
 2482              	.LASF49:
 2483 04a0 43617053 		.ascii	"CapSense_1_sensorSignal\000"
 2483      656E7365 
 2483      5F315F73 
 2483      656E736F 
 2483      72536967 
 2484              	.LASF56:
 2485 04b8 43617053 		.ascii	"CapSense_1_debounceCounter\000"
 2485      656E7365 
 2485      5F315F64 
 2485      65626F75 
 2485      6E636543 
 2486              	.LASF14:
 2487 04d3 63686172 		.ascii	"char\000"
 2487      00
 2488              	.LASF48:
 2489 04d8 43617053 		.ascii	"CapSense_1_sensorBaselineLow\000"
 2489      656E7365 
 2489      5F315F73 
 2489      656E736F 
 2489      72426173 
 2490              	.LASF29:
 2491 04f5 6465626F 		.ascii	"debounceIndex\000"
 2491      756E6365 
 2491      496E6465 
 2491      7800
 2492              	.LASF47:
 2493 0503 43617053 		.ascii	"CapSense_1_sensorBaseline\000"
 2493      656E7365 
 2493      5F315F73 
 2493      656E736F 
 2493      72426173 
 2494              	.LASF42:
 2495 051d 43617053 		.ascii	"CapSense_1_IIR4Filter\000"
 2495      656E7365 
 2495      5F315F49 
 2495      49523446 
 2495      696C7465 
 2496              	.LASF25:
 2497 0533 74656D70 		.ascii	"tempRaw\000"
 2497      52617700 
 2498              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
