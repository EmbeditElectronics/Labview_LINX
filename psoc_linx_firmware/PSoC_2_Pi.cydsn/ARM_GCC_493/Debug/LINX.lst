ARM GAS  C:\Users\Robert\AppData\Local\Temp\ccBTR6tf.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"LINX.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.comm	vessel,16,4
  19              		.section	.text.LINX_Initialize,"ax",%progbits
  20              		.align	2
  21              		.global	LINX_Initialize
  22              		.thumb
  23              		.thumb_func
  24              		.type	LINX_Initialize, %function
  25              	LINX_Initialize:
  26              	.LFB56:
  27              		.file 1 ".\\LINX.c"
   1:.\LINX.c      **** /**
   2:.\LINX.c      **** * \file LINX.c
   3:.\LINX.c      **** * \brief TODO
   4:.\LINX.c      **** *
   5:.\LINX.c      **** * Version 1.2.4
   6:.\LINX.c      **** *
   7:.\LINX.c      **** * \author Mark Bradley
   8:.\LINX.c      **** *
   9:.\LINX.c      **** * \bug TODO
  10:.\LINX.c      **** *
  11:.\LINX.c      **** *
  12:.\LINX.c      **** * Copyright Embedit Electronics
  13:.\LINX.c      **** * 
  14:.\LINX.c      **** */
  15:.\LINX.c      **** 
  16:.\LINX.c      **** #ifndef LINX_H
  17:.\LINX.c      ****     #include "LINX.h"
  18:.\LINX.c      **** #endif
  19:.\LINX.c      **** 
  20:.\LINX.c      **** vessel_type vessel;
  21:.\LINX.c      **** 
  22:.\LINX.c      **** // Macro for easily outputting debug statements
  23:.\LINX.c      **** #ifdef LINX_DEBUG
  24:.\LINX.c      ****     #define DEBUG_PRINT(...) DEBUG_UART_PutArray(debug_str, sprintf((char *)debug_str, __VA_ARGS__)
  25:.\LINX.c      **** #else
  26:.\LINX.c      ****     #define DEBUG_PRINT(...) //no-op
  27:.\LINX.c      **** #endif
  28:.\LINX.c      **** 
  29:.\LINX.c      **** // Initializes all hardware devices the LINX protocol needs,
  30:.\LINX.c      **** // Including the USBUART, DEBUG_UART if enabled, EEPROM, VDACs,
ARM GAS  C:\Users\Robert\AppData\Local\Temp\ccBTR6tf.s 			page 2


  31:.\LINX.c      **** // and Quadrature Decoder
  32:.\LINX.c      **** void LINX_Initialize() {
  28              		.loc 1 32 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 1, uses_anonymous_args = 0
  32 0000 80B5     		push	{r7, lr}
  33              		.cfi_def_cfa_offset 8
  34              		.cfi_offset 7, -8
  35              		.cfi_offset 14, -4
  36 0002 82B0     		sub	sp, sp, #8
  37              		.cfi_def_cfa_offset 16
  38 0004 02AF     		add	r7, sp, #8
  39              		.cfi_def_cfa 7, 8
  33:.\LINX.c      ****     // Start the USBUART
  34:.\LINX.c      ****     USBUART_Start(0u, USBUART_5V_OPERATION);
  40              		.loc 1 34 0
  41 0006 0020     		movs	r0, #0
  42 0008 0121     		movs	r1, #1
  43 000a FFF7FEFF 		bl	USBUART_Start
  35:.\LINX.c      ****     while(!USBUART_GetConfiguration());
  44              		.loc 1 35 0
  45 000e 00BF     		nop
  46              	.L2:
  47              		.loc 1 35 0 is_stmt 0 discriminator 1
  48 0010 FFF7FEFF 		bl	USBUART_GetConfiguration
  49 0014 0346     		mov	r3, r0
  50 0016 002B     		cmp	r3, #0
  51 0018 FAD0     		beq	.L2
  36:.\LINX.c      ****     USBUART_CDC_Init();
  52              		.loc 1 36 0 is_stmt 1
  53 001a FFF7FEFF 		bl	USBUART_CDC_Init
  37:.\LINX.c      ****     
  38:.\LINX.c      ****     #ifdef LINX_DEBUG
  39:.\LINX.c      ****         // Start the debug UART
  40:.\LINX.c      ****         DEBUG_UART_Start();
  41:.\LINX.c      ****         DEBUG_UART_PutString("\033[2J");
  42:.\LINX.c      ****         DEBUG_UART_PutString("LINX firmware started in debug mode\r\n");
  43:.\LINX.c      ****     #endif
  44:.\LINX.c      **** 
  45:.\LINX.c      ****     // Start EEPROM
  46:.\LINX.c      ****     EEPROM_Start();
  54              		.loc 1 46 0
  55 001e FFF7FEFF 		bl	EEPROM_Start
  47:.\LINX.c      ****     
  48:.\LINX.c      ****     // Start both VDACs
  49:.\LINX.c      ****     #ifdef CY_VDAC8_VDAC8_1_H
  50:.\LINX.c      ****         vessel.addr = VDAC0_CONTROL;
  56              		.loc 1 50 0
  57 0022 084B     		ldr	r3, .L3
  58 0024 0422     		movs	r2, #4
  59 0026 1A70     		strb	r2, [r3]
  51:.\LINX.c      ****         vessel.cmd = 0x00;
  60              		.loc 1 51 0
  61 0028 064B     		ldr	r3, .L3
  62 002a 0022     		movs	r2, #0
  63 002c 5A70     		strb	r2, [r3, #1]
ARM GAS  C:\Users\Robert\AppData\Local\Temp\ccBTR6tf.s 			page 3


  52:.\LINX.c      ****         vessel.dat = 0x00;
  64              		.loc 1 52 0
  65 002e 054B     		ldr	r3, .L3
  66 0030 0022     		movs	r2, #0
  67 0032 5A80     		strh	r2, [r3, #2]	@ movhi
  53:.\LINX.c      ****         readData(vessel, 0x00);
  68              		.loc 1 53 0
  69 0034 034B     		ldr	r3, .L3
  70 0036 0022     		movs	r2, #0
  71 0038 0092     		str	r2, [sp]
  72 003a 0FCB     		ldmia	r3, {r0, r1, r2, r3}
  73 003c FFF7FEFF 		bl	readData
  54:.\LINX.c      ****     #endif
  55:.\LINX.c      ****     #ifdef CY_VDAC8_VDAC8_2_H
  56:.\LINX.c      ****         vessel.addr = VDAC1_CONTROL;
  57:.\LINX.c      ****         vessel.cmd = 0x00;
  58:.\LINX.c      ****         vessel.dat = 0x00;
  59:.\LINX.c      ****         readData(vessel, 0x00);
  60:.\LINX.c      ****     #endif
  61:.\LINX.c      ****     
  62:.\LINX.c      ****     // Start QE
  63:.\LINX.c      ****     #ifdef CY_QUADRATURE_DECODER_QuadDec_1_H
  64:.\LINX.c      ****         QuadDec_1_Start();
  65:.\LINX.c      ****     #endif
  66:.\LINX.c      **** }
  74              		.loc 1 66 0
  75 0040 BD46     		mov	sp, r7
  76              		.cfi_def_cfa_register 13
  77              		@ sp needed
  78 0042 80BD     		pop	{r7, pc}
  79              	.L4:
  80              		.align	2
  81              	.L3:
  82 0044 00000000 		.word	vessel
  83              		.cfi_endproc
  84              	.LFE56:
  85              		.size	LINX_Initialize, .-LINX_Initialize
  86              		.section	.text.LINX_GetCommand,"ax",%progbits
  87              		.align	2
  88              		.global	LINX_GetCommand
  89              		.thumb
  90              		.thumb_func
  91              		.type	LINX_GetCommand, %function
  92              	LINX_GetCommand:
  93              	.LFB57:
  67:.\LINX.c      **** 
  68:.\LINX.c      **** // Pulls commands off of the USBUART buffer and does command verification,
  69:.\LINX.c      **** // including a SoF check, packet size, and checksum verification
  70:.\LINX.c      **** bool LINX_GetCommand(uint8 *command) {
  94              		.loc 1 70 0
  95              		.cfi_startproc
  96              		@ args = 0, pretend = 0, frame = 16
  97              		@ frame_needed = 1, uses_anonymous_args = 0
  98 0000 90B5     		push	{r4, r7, lr}
  99              		.cfi_def_cfa_offset 12
 100              		.cfi_offset 4, -12
 101              		.cfi_offset 7, -8
ARM GAS  C:\Users\Robert\AppData\Local\Temp\ccBTR6tf.s 			page 4


 102              		.cfi_offset 14, -4
 103 0002 85B0     		sub	sp, sp, #20
 104              		.cfi_def_cfa_offset 32
 105 0004 00AF     		add	r7, sp, #0
 106              		.cfi_def_cfa_register 7
 107 0006 7860     		str	r0, [r7, #4]
  71:.\LINX.c      ****     #ifdef LINX_DEBUG
  72:.\LINX.c      ****         DEBUG_UART_PutString("Getting new LINX command\r\n");
  73:.\LINX.c      ****         uint8 debug_str[LINX_DEBUG_STR_SIZE];
  74:.\LINX.c      ****         uint8 i;
  75:.\LINX.c      ****     #endif
  76:.\LINX.c      ****     
  77:.\LINX.c      ****     // Get command bytes
  78:.\LINX.c      ****     uint8 command_len;
  79:.\LINX.c      ****     command_len = USBUART_GetAll(command);
 108              		.loc 1 79 0
 109 0008 7868     		ldr	r0, [r7, #4]
 110 000a FFF7FEFF 		bl	USBUART_GetAll
 111 000e 0346     		mov	r3, r0
 112 0010 FB73     		strb	r3, [r7, #15]
  80:.\LINX.c      ****     
  81:.\LINX.c      ****     #ifdef LINX_DEBUG
  82:.\LINX.c      ****         DEBUG_UART_PutString("Received command:");
  83:.\LINX.c      ****         for (i = 0; i < command_len; ++i) {
  84:.\LINX.c      ****             DEBUG_PRINT(" %x", command[i]);
  85:.\LINX.c      ****         }
  86:.\LINX.c      ****         DEBUG_UART_PutString("\r\n");
  87:.\LINX.c      ****     #endif
  88:.\LINX.c      ****     
  89:.\LINX.c      ****     // Verify SoF
  90:.\LINX.c      ****     if (command[0] != 0xFF) {
 113              		.loc 1 90 0
 114 0012 7B68     		ldr	r3, [r7, #4]
 115 0014 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 116 0016 FF2B     		cmp	r3, #255
 117 0018 01D0     		beq	.L6
  91:.\LINX.c      ****         DEBUG_PRINT("\tSoF FAILED\r\n");
  92:.\LINX.c      ****         return false;
 118              		.loc 1 92 0
 119 001a 0023     		movs	r3, #0
 120 001c 19E0     		b	.L7
 121              	.L6:
  93:.\LINX.c      ****     }
  94:.\LINX.c      ****     
  95:.\LINX.c      ****     // Verify checksum
  96:.\LINX.c      ****     if (command[command_len - 1] != LINX_CalculateChecksum(command, command_len - 1)) {
 122              		.loc 1 96 0
 123 001e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 124 0020 013B     		subs	r3, r3, #1
 125 0022 7A68     		ldr	r2, [r7, #4]
 126 0024 1344     		add	r3, r3, r2
 127 0026 1C78     		ldrb	r4, [r3]	@ zero_extendqisi2
 128 0028 FB7B     		ldrb	r3, [r7, #15]
 129 002a 013B     		subs	r3, r3, #1
 130 002c DBB2     		uxtb	r3, r3
 131 002e 7868     		ldr	r0, [r7, #4]
 132 0030 1946     		mov	r1, r3
ARM GAS  C:\Users\Robert\AppData\Local\Temp\ccBTR6tf.s 			page 5


 133 0032 FFF7FEFF 		bl	LINX_CalculateChecksum
 134 0036 0346     		mov	r3, r0
 135 0038 9C42     		cmp	r4, r3
 136 003a 01D0     		beq	.L8
  97:.\LINX.c      ****         DEBUG_PRINT("\tChecksum FAILED\r\n");
  98:.\LINX.c      ****         return false;
 137              		.loc 1 98 0
 138 003c 0023     		movs	r3, #0
 139 003e 08E0     		b	.L7
 140              	.L8:
  99:.\LINX.c      ****     }
 100:.\LINX.c      ****     
 101:.\LINX.c      ****     // Verify command length
 102:.\LINX.c      ****     if (command[1] != command_len) {
 141              		.loc 1 102 0
 142 0040 7B68     		ldr	r3, [r7, #4]
 143 0042 0133     		adds	r3, r3, #1
 144 0044 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 145 0046 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 146 0048 9A42     		cmp	r2, r3
 147 004a 01D0     		beq	.L9
 103:.\LINX.c      ****         DEBUG_PRINT("\tCommand length FAILED\r\n");
 104:.\LINX.c      ****         return false;
 148              		.loc 1 104 0
 149 004c 0023     		movs	r3, #0
 150 004e 00E0     		b	.L7
 151              	.L9:
 105:.\LINX.c      ****     }
 106:.\LINX.c      ****     
 107:.\LINX.c      ****     DEBUG_PRINT("\tCommand validated\r\n");
 108:.\LINX.c      ****     
 109:.\LINX.c      ****     return true;
 152              		.loc 1 109 0
 153 0050 0123     		movs	r3, #1
 154              	.L7:
 110:.\LINX.c      **** }
 155              		.loc 1 110 0
 156 0052 1846     		mov	r0, r3
 157 0054 1437     		adds	r7, r7, #20
 158              		.cfi_def_cfa_offset 12
 159 0056 BD46     		mov	sp, r7
 160              		.cfi_def_cfa_register 13
 161              		@ sp needed
 162 0058 90BD     		pop	{r4, r7, pc}
 163              		.cfi_endproc
 164              	.LFE57:
 165              		.size	LINX_GetCommand, .-LINX_GetCommand
 166 005a 00BF     		.section	.text.LINX_CalculateChecksum,"ax",%progbits
 167              		.align	2
 168              		.global	LINX_CalculateChecksum
 169              		.thumb
 170              		.thumb_func
 171              		.type	LINX_CalculateChecksum, %function
 172              	LINX_CalculateChecksum:
 173              	.LFB58:
 111:.\LINX.c      **** 
 112:.\LINX.c      **** // Given an array of bytes, calculates the checksum for those bytes
ARM GAS  C:\Users\Robert\AppData\Local\Temp\ccBTR6tf.s 			page 6


 113:.\LINX.c      **** // Keep in mind, if using this to verify a received command checksum,
 114:.\LINX.c      **** // the received checksum should not be included in the array
 115:.\LINX.c      **** uint8 LINX_CalculateChecksum(uint8 *buffer, uint8 buffer_len) {
 174              		.loc 1 115 0
 175              		.cfi_startproc
 176              		@ args = 0, pretend = 0, frame = 16
 177              		@ frame_needed = 1, uses_anonymous_args = 0
 178              		@ link register save eliminated.
 179 0000 80B4     		push	{r7}
 180              		.cfi_def_cfa_offset 4
 181              		.cfi_offset 7, -4
 182 0002 85B0     		sub	sp, sp, #20
 183              		.cfi_def_cfa_offset 24
 184 0004 00AF     		add	r7, sp, #0
 185              		.cfi_def_cfa_register 7
 186 0006 7860     		str	r0, [r7, #4]
 187 0008 0B46     		mov	r3, r1
 188 000a FB70     		strb	r3, [r7, #3]
 116:.\LINX.c      ****     uint8 checksum = 0;
 189              		.loc 1 116 0
 190 000c 0023     		movs	r3, #0
 191 000e FB73     		strb	r3, [r7, #15]
 117:.\LINX.c      ****     uint8 i;
 118:.\LINX.c      ****     
 119:.\LINX.c      ****     for (i = 0; i < buffer_len; ++i) {
 192              		.loc 1 119 0
 193 0010 0023     		movs	r3, #0
 194 0012 BB73     		strb	r3, [r7, #14]
 195 0014 09E0     		b	.L11
 196              	.L12:
 120:.\LINX.c      ****         checksum += buffer[i];
 197              		.loc 1 120 0 discriminator 3
 198 0016 BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 199 0018 7A68     		ldr	r2, [r7, #4]
 200 001a 1344     		add	r3, r3, r2
 201 001c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 202 001e FB7B     		ldrb	r3, [r7, #15]
 203 0020 1344     		add	r3, r3, r2
 204 0022 FB73     		strb	r3, [r7, #15]
 119:.\LINX.c      ****         checksum += buffer[i];
 205              		.loc 1 119 0 discriminator 3
 206 0024 BB7B     		ldrb	r3, [r7, #14]
 207 0026 0133     		adds	r3, r3, #1
 208 0028 BB73     		strb	r3, [r7, #14]
 209              	.L11:
 119:.\LINX.c      ****         checksum += buffer[i];
 210              		.loc 1 119 0 is_stmt 0 discriminator 1
 211 002a BA7B     		ldrb	r2, [r7, #14]	@ zero_extendqisi2
 212 002c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 213 002e 9A42     		cmp	r2, r3
 214 0030 F1D3     		bcc	.L12
 121:.\LINX.c      ****     }
 122:.\LINX.c      ****     
 123:.\LINX.c      ****     return checksum;
 215              		.loc 1 123 0 is_stmt 1
 216 0032 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 124:.\LINX.c      **** }
ARM GAS  C:\Users\Robert\AppData\Local\Temp\ccBTR6tf.s 			page 7


 217              		.loc 1 124 0
 218 0034 1846     		mov	r0, r3
 219 0036 1437     		adds	r7, r7, #20
 220              		.cfi_def_cfa_offset 4
 221 0038 BD46     		mov	sp, r7
 222              		.cfi_def_cfa_register 13
 223              		@ sp needed
 224 003a 5DF8047B 		ldr	r7, [sp], #4
 225              		.cfi_restore 7
 226              		.cfi_def_cfa_offset 0
 227 003e 7047     		bx	lr
 228              		.cfi_endproc
 229              	.LFE58:
 230              		.size	LINX_CalculateChecksum, .-LINX_CalculateChecksum
 231              		.section	.text.LINX_PackResult,"ax",%progbits
 232              		.align	2
 233              		.global	LINX_PackResult
 234              		.thumb
 235              		.thumb_func
 236              		.type	LINX_PackResult, %function
 237              	LINX_PackResult:
 238              	.LFB59:
 125:.\LINX.c      **** 
 126:.\LINX.c      **** // Given some response data, a value to pack, and some parameters
 127:.\LINX.c      **** // describing what's been packed so far, packs the new value into
 128:.\LINX.c      **** // the response
 129:.\LINX.c      **** // Keep in mind, this function increases the value of response_data_len
 130:.\LINX.c      **** // as it goes, but outside of this function, you'll need to make sure you
 131:.\LINX.c      **** // increment response_data_len before shipping off the response if
 132:.\LINX.c      **** // response_bits_remaining is less than 8
 133:.\LINX.c      **** void LINX_PackResult(uint8 *response_data, uint8 *response_data_len, uint8 bits_per_value, uint8 *r
 239              		.loc 1 133 0
 240              		.cfi_startproc
 241              		@ args = 4, pretend = 0, frame = 24
 242              		@ frame_needed = 1, uses_anonymous_args = 0
 243              		@ link register save eliminated.
 244 0000 80B4     		push	{r7}
 245              		.cfi_def_cfa_offset 4
 246              		.cfi_offset 7, -4
 247 0002 87B0     		sub	sp, sp, #28
 248              		.cfi_def_cfa_offset 32
 249 0004 00AF     		add	r7, sp, #0
 250              		.cfi_def_cfa_register 7
 251 0006 F860     		str	r0, [r7, #12]
 252 0008 B960     		str	r1, [r7, #8]
 253 000a 3B60     		str	r3, [r7]
 254 000c 1346     		mov	r3, r2
 255 000e FB71     		strb	r3, [r7, #7]
 134:.\LINX.c      ****     uint8 value_bits_remaining = bits_per_value;
 256              		.loc 1 134 0
 257 0010 FB79     		ldrb	r3, [r7, #7]
 258 0012 FB75     		strb	r3, [r7, #23]
 135:.\LINX.c      ****     
 136:.\LINX.c      ****     while(value_bits_remaining > 0) {
 259              		.loc 1 136 0
 260 0014 3DE0     		b	.L15
 261              	.L17:
ARM GAS  C:\Users\Robert\AppData\Local\Temp\ccBTR6tf.s 			page 8


 137:.\LINX.c      ****         response_data[*response_data_len] |= ((value >> (bits_per_value - value_bits_remaining)) <<
 262              		.loc 1 137 0
 263 0016 BB68     		ldr	r3, [r7, #8]
 264 0018 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 265 001a 1A46     		mov	r2, r3
 266 001c FB68     		ldr	r3, [r7, #12]
 267 001e 1344     		add	r3, r3, r2
 268 0020 BA68     		ldr	r2, [r7, #8]
 269 0022 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 270 0024 1146     		mov	r1, r2
 271 0026 FA68     		ldr	r2, [r7, #12]
 272 0028 0A44     		add	r2, r2, r1
 273 002a 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 274 002c F879     		ldrb	r0, [r7, #7]	@ zero_extendqisi2
 275 002e FA7D     		ldrb	r2, [r7, #23]	@ zero_extendqisi2
 276 0030 821A     		subs	r2, r0, r2
 277 0032 386A     		ldr	r0, [r7, #32]
 278 0034 D040     		lsrs	r0, r0, r2
 279 0036 3A68     		ldr	r2, [r7]
 280 0038 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 281 003a C2F10802 		rsb	r2, r2, #8
 282 003e 00FA02F2 		lsl	r2, r0, r2
 283 0042 D2B2     		uxtb	r2, r2
 284 0044 0A43     		orrs	r2, r2, r1
 285 0046 D2B2     		uxtb	r2, r2
 286 0048 1A70     		strb	r2, [r3]
 138:.\LINX.c      ****     
 139:.\LINX.c      ****         if (*response_bits_remaining > value_bits_remaining) {
 287              		.loc 1 139 0
 288 004a 3B68     		ldr	r3, [r7]
 289 004c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 290 004e FA7D     		ldrb	r2, [r7, #23]	@ zero_extendqisi2
 291 0050 9A42     		cmp	r2, r3
 292 0052 09D2     		bcs	.L16
 140:.\LINX.c      ****             *response_bits_remaining -= value_bits_remaining;
 293              		.loc 1 140 0
 294 0054 3B68     		ldr	r3, [r7]
 295 0056 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 296 0058 FB7D     		ldrb	r3, [r7, #23]
 297 005a D31A     		subs	r3, r2, r3
 298 005c DAB2     		uxtb	r2, r3
 299 005e 3B68     		ldr	r3, [r7]
 300 0060 1A70     		strb	r2, [r3]
 141:.\LINX.c      ****             value_bits_remaining = 0;
 301              		.loc 1 141 0
 302 0062 0023     		movs	r3, #0
 303 0064 FB75     		strb	r3, [r7, #23]
 304 0066 14E0     		b	.L15
 305              	.L16:
 142:.\LINX.c      ****         }
 143:.\LINX.c      ****         else {
 144:.\LINX.c      ****             value_bits_remaining -= *response_bits_remaining;
 306              		.loc 1 144 0
 307 0068 3B68     		ldr	r3, [r7]
 308 006a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 309 006c FA7D     		ldrb	r2, [r7, #23]
 310 006e D31A     		subs	r3, r2, r3
ARM GAS  C:\Users\Robert\AppData\Local\Temp\ccBTR6tf.s 			page 9


 311 0070 FB75     		strb	r3, [r7, #23]
 145:.\LINX.c      ****             *response_bits_remaining = 8;
 312              		.loc 1 145 0
 313 0072 3B68     		ldr	r3, [r7]
 314 0074 0822     		movs	r2, #8
 315 0076 1A70     		strb	r2, [r3]
 146:.\LINX.c      ****             ++(*response_data_len);
 316              		.loc 1 146 0
 317 0078 BB68     		ldr	r3, [r7, #8]
 318 007a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 319 007c 0133     		adds	r3, r3, #1
 320 007e DAB2     		uxtb	r2, r3
 321 0080 BB68     		ldr	r3, [r7, #8]
 322 0082 1A70     		strb	r2, [r3]
 147:.\LINX.c      ****             response_data[*response_data_len] = 0x00;
 323              		.loc 1 147 0
 324 0084 BB68     		ldr	r3, [r7, #8]
 325 0086 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 326 0088 1A46     		mov	r2, r3
 327 008a FB68     		ldr	r3, [r7, #12]
 328 008c 1344     		add	r3, r3, r2
 329 008e 0022     		movs	r2, #0
 330 0090 1A70     		strb	r2, [r3]
 331              	.L15:
 136:.\LINX.c      ****         response_data[*response_data_len] |= ((value >> (bits_per_value - value_bits_remaining)) <<
 332              		.loc 1 136 0
 333 0092 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 334 0094 002B     		cmp	r3, #0
 335 0096 BED1     		bne	.L17
 148:.\LINX.c      ****         }
 149:.\LINX.c      ****     }
 150:.\LINX.c      **** }
 336              		.loc 1 150 0
 337 0098 1C37     		adds	r7, r7, #28
 338              		.cfi_def_cfa_offset 4
 339 009a BD46     		mov	sp, r7
 340              		.cfi_def_cfa_register 13
 341              		@ sp needed
 342 009c 5DF8047B 		ldr	r7, [sp], #4
 343              		.cfi_restore 7
 344              		.cfi_def_cfa_offset 0
 345 00a0 7047     		bx	lr
 346              		.cfi_endproc
 347              	.LFE59:
 348              		.size	LINX_PackResult, .-LINX_PackResult
 349 00a2 00BF     		.section	.rodata
 350              		.align	2
 351              	.LC0:
 352 0000 5069536F 		.ascii	"PiSoC\000"
 352      4300
 353 0006 0000     		.section	.text.LINX_ProcessCommand,"ax",%progbits
 354              		.align	2
 355              		.global	LINX_ProcessCommand
 356              		.thumb
 357              		.thumb_func
 358              		.type	LINX_ProcessCommand, %function
 359              	LINX_ProcessCommand:
ARM GAS  C:\Users\Robert\AppData\Local\Temp\ccBTR6tf.s 			page 10


 360              	.LFB60:
 151:.\LINX.c      **** 
 152:.\LINX.c      **** // Given a command, performs the commanded action and builds the
 153:.\LINX.c      **** // corresponding response
 154:.\LINX.c      **** void LINX_ProcessCommand(uint8 *command, uint8 *response) {
 361              		.loc 1 154 0
 362              		.cfi_startproc
 363              		@ args = 0, pretend = 0, frame = 112
 364              		@ frame_needed = 1, uses_anonymous_args = 0
 365 0000 90B5     		push	{r4, r7, lr}
 366              		.cfi_def_cfa_offset 12
 367              		.cfi_offset 4, -12
 368              		.cfi_offset 7, -8
 369              		.cfi_offset 14, -4
 370 0002 9FB0     		sub	sp, sp, #124
 371              		.cfi_def_cfa_offset 136
 372 0004 02AF     		add	r7, sp, #8
 373              		.cfi_def_cfa 7, 128
 374 0006 7860     		str	r0, [r7, #4]
 375 0008 3960     		str	r1, [r7]
 155:.\LINX.c      ****     #ifdef LINX_DEBUG
 156:.\LINX.c      ****         DEBUG_UART_PutString("\tProcessing LINX command: ");
 157:.\LINX.c      ****         uint8 debug_str[LINX_DEBUG_STR_SIZE];
 158:.\LINX.c      ****     #endif
 159:.\LINX.c      ****     
 160:.\LINX.c      ****     // Declare variables needed by any commands up front
 161:.\LINX.c      ****     uint8 status = LINX_STATUS_L_OK;
 376              		.loc 1 161 0
 377 000a 0023     		movs	r3, #0
 378 000c 87F86F30 		strb	r3, [r7, #111]
 162:.\LINX.c      ****     uint8 response_data[LINX_RESPONSE_DATA_BUFFER_SIZE];
 163:.\LINX.c      ****     uint8 response_data_len = 0;
 379              		.loc 1 163 0
 380 0010 0023     		movs	r3, #0
 381 0012 87F82B30 		strb	r3, [r7, #43]
 164:.\LINX.c      ****     uint8 i;
 165:.\LINX.c      ****     
 166:.\LINX.c      ****     // Execute code that corresponds to the command
 167:.\LINX.c      ****     // If any command processing needs to respond with data, it can simply set the bytes
 168:.\LINX.c      ****     // in resopnse_data and set response_data_len accordingly. That data will be bundled
 169:.\LINX.c      ****     // into the generated response at the end of this function
 170:.\LINX.c      ****     uint16 cmd = command[4] << 8 | command[5];    
 382              		.loc 1 170 0
 383 0016 7B68     		ldr	r3, [r7, #4]
 384 0018 0433     		adds	r3, r3, #4
 385 001a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 386 001c 1B02     		lsls	r3, r3, #8
 387 001e 9AB2     		uxth	r2, r3
 388 0020 7B68     		ldr	r3, [r7, #4]
 389 0022 0533     		adds	r3, r3, #5
 390 0024 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 391 0026 9BB2     		uxth	r3, r3
 392 0028 1343     		orrs	r3, r3, r2
 393 002a 9BB2     		uxth	r3, r3
 394 002c A7F86C30 		strh	r3, [r7, #108]	@ movhi
 171:.\LINX.c      ****     switch(cmd) {
 395              		.loc 1 171 0
ARM GAS  C:\Users\Robert\AppData\Local\Temp\ccBTR6tf.s 			page 11


 396 0030 B7F86C30 		ldrh	r3, [r7, #108]
 397 0034 40F24112 		movw	r2, #321
 398 0038 9342     		cmp	r3, r2
 399 003a 01F26480 		bhi	.L19
 400 003e 01A1     		adr	r1, .L21
 401 0040 51F823F0 		ldr	pc, [r1, r3, lsl #2]
 402              		.p2align 2
 403              	.L21:
 404 0044 0F110000 		.word	.L97+1
 405 0048 07110000 		.word	.L19+1
 406 004c 07110000 		.word	.L19+1
 407 0050 4D050000 		.word	.L22+1
 408 0054 63050000 		.word	.L23+1
 409 0058 7F050000 		.word	.L24+1
 410 005c A1050000 		.word	.L25+1
 411 0060 07110000 		.word	.L19+1
 412 0064 C3050000 		.word	.L26+1
 413 0068 67080000 		.word	.L27+1
 414 006c A1080000 		.word	.L28+1
 415 0070 C1080000 		.word	.L29+1
 416 0074 0F110000 		.word	.L97+1
 417 0078 0F110000 		.word	.L97+1
 418 007c 0F110000 		.word	.L97+1
 419 0080 0F110000 		.word	.L97+1
 420 0084 0F110000 		.word	.L97+1
 421 0088 07110000 		.word	.L19+1
 422 008c A3090000 		.word	.L35+1
 423 0090 ED090000 		.word	.L36+1
 424 0094 07110000 		.word	.L19+1
 425 0098 07110000 		.word	.L19+1
 426 009c 07110000 		.word	.L19+1
 427 00a0 07110000 		.word	.L19+1
 428 00a4 07110000 		.word	.L19+1
 429 00a8 07110000 		.word	.L19+1
 430 00ac 07110000 		.word	.L19+1
 431 00b0 07110000 		.word	.L19+1
 432 00b4 07110000 		.word	.L19+1
 433 00b8 07110000 		.word	.L19+1
 434 00bc 07110000 		.word	.L19+1
 435 00c0 07110000 		.word	.L19+1
 436 00c4 07110000 		.word	.L19+1
 437 00c8 07110000 		.word	.L19+1
 438 00cc 07110000 		.word	.L19+1
 439 00d0 07110000 		.word	.L19+1
 440 00d4 050A0000 		.word	.L37+1
 441 00d8 1D0A0000 		.word	.L38+1
 442 00dc 07110000 		.word	.L19+1
 443 00e0 07110000 		.word	.L19+1
 444 00e4 07110000 		.word	.L19+1
 445 00e8 07110000 		.word	.L19+1
 446 00ec 07110000 		.word	.L19+1
 447 00f0 07110000 		.word	.L19+1
 448 00f4 07110000 		.word	.L19+1
 449 00f8 07110000 		.word	.L19+1
 450 00fc 07110000 		.word	.L19+1
 451 0100 07110000 		.word	.L19+1
 452 0104 07110000 		.word	.L19+1
ARM GAS  C:\Users\Robert\AppData\Local\Temp\ccBTR6tf.s 			page 12


 453 0108 07110000 		.word	.L19+1
 454 010c 07110000 		.word	.L19+1
 455 0110 07110000 		.word	.L19+1
 456 0114 07110000 		.word	.L19+1
 457 0118 07110000 		.word	.L19+1
 458 011c 07110000 		.word	.L19+1
 459 0120 07110000 		.word	.L19+1
 460 0124 07110000 		.word	.L19+1
 461 0128 07110000 		.word	.L19+1
 462 012c 07110000 		.word	.L19+1
 463 0130 07110000 		.word	.L19+1
 464 0134 07110000 		.word	.L19+1
 465 0138 07110000 		.word	.L19+1
 466 013c 07110000 		.word	.L19+1
 467 0140 07110000 		.word	.L19+1
 468 0144 07110000 		.word	.L19+1
 469 0148 570A0000 		.word	.L39+1
 470 014c 590B0000 		.word	.L40+1
 471 0150 07110000 		.word	.L19+1
 472 0154 07110000 		.word	.L19+1
 473 0158 07110000 		.word	.L19+1
 474 015c 07110000 		.word	.L19+1
 475 0160 07110000 		.word	.L19+1
 476 0164 07110000 		.word	.L19+1
 477 0168 07110000 		.word	.L19+1
 478 016c 07110000 		.word	.L19+1
 479 0170 07110000 		.word	.L19+1
 480 0174 07110000 		.word	.L19+1
 481 0178 07110000 		.word	.L19+1
 482 017c 07110000 		.word	.L19+1
 483 0180 07110000 		.word	.L19+1
 484 0184 07110000 		.word	.L19+1
 485 0188 07110000 		.word	.L19+1
 486 018c 07110000 		.word	.L19+1
 487 0190 07110000 		.word	.L19+1
 488 0194 07110000 		.word	.L19+1
 489 0198 07110000 		.word	.L19+1
 490 019c 07110000 		.word	.L19+1
 491 01a0 07110000 		.word	.L19+1
 492 01a4 07110000 		.word	.L19+1
 493 01a8 07110000 		.word	.L19+1
 494 01ac 07110000 		.word	.L19+1
 495 01b0 07110000 		.word	.L19+1
 496 01b4 07110000 		.word	.L19+1
 497 01b8 07110000 		.word	.L19+1
 498 01bc 07110000 		.word	.L19+1
 499 01c0 07110000 		.word	.L19+1
 500 01c4 07110000 		.word	.L19+1
 501 01c8 830C0000 		.word	.L41+1
 502 01cc 07110000 		.word	.L19+1
 503 01d0 07110000 		.word	.L19+1
 504 01d4 A30C0000 		.word	.L42+1
 505 01d8 650D0000 		.word	.L43+1
 506 01dc 07110000 		.word	.L19+1
 507 01e0 07110000 		.word	.L19+1
 508 01e4 07110000 		.word	.L19+1
 509 01e8 07110000 		.word	.L19+1
ARM GAS  C:\Users\Robert\AppData\Local\Temp\ccBTR6tf.s 			page 13


 510 01ec 07110000 		.word	.L19+1
 511 01f0 07110000 		.word	.L19+1
 512 01f4 07110000 		.word	.L19+1
 513 01f8 07110000 		.word	.L19+1
 514 01fc 07110000 		.word	.L19+1
 515 0200 07110000 		.word	.L19+1
 516 0204 07110000 		.word	.L19+1
 517 0208 07110000 		.word	.L19+1
 518 020c 07110000 		.word	.L19+1
 519 0210 07110000 		.word	.L19+1
 520 0214 07110000 		.word	.L19+1
 521 0218 07110000 		.word	.L19+1
 522 021c 07110000 		.word	.L19+1
 523 0220 07110000 		.word	.L19+1
 524 0224 07110000 		.word	.L19+1
 525 0228 07110000 		.word	.L19+1
 526 022c 07110000 		.word	.L19+1
 527 0230 07110000 		.word	.L19+1
 528 0234 07110000 		.word	.L19+1
 529 0238 07110000 		.word	.L19+1
 530 023c 07110000 		.word	.L19+1
 531 0240 07110000 		.word	.L19+1
 532 0244 07110000 		.word	.L19+1
 533 0248 07110000 		.word	.L19+1
 534 024c 07110000 		.word	.L19+1
 535 0250 E30D0000 		.word	.L44+1
 536 0254 07110000 		.word	.L19+1
 537 0258 07110000 		.word	.L19+1
 538 025c 07110000 		.word	.L19+1
 539 0260 07110000 		.word	.L19+1
 540 0264 07110000 		.word	.L19+1
 541 0268 07110000 		.word	.L19+1
 542 026c 07110000 		.word	.L19+1
 543 0270 07110000 		.word	.L19+1
 544 0274 07110000 		.word	.L19+1
 545 0278 07110000 		.word	.L19+1
 546 027c 07110000 		.word	.L19+1
 547 0280 07110000 		.word	.L19+1
 548 0284 07110000 		.word	.L19+1
 549 0288 07110000 		.word	.L19+1
 550 028c 07110000 		.word	.L19+1
 551 0290 07110000 		.word	.L19+1
 552 0294 07110000 		.word	.L19+1
 553 0298 07110000 		.word	.L19+1
 554 029c 07110000 		.word	.L19+1
 555 02a0 07110000 		.word	.L19+1
 556 02a4 07110000 		.word	.L19+1
 557 02a8 07110000 		.word	.L19+1
 558 02ac 07110000 		.word	.L19+1
 559 02b0 07110000 		.word	.L19+1
 560 02b4 07110000 		.word	.L19+1
 561 02b8 07110000 		.word	.L19+1
 562 02bc 07110000 		.word	.L19+1
 563 02c0 07110000 		.word	.L19+1
 564 02c4 F90E0000 		.word	.L45+1
 565 02c8 350F0000 		.word	.L46+1
 566 02cc 07110000 		.word	.L19+1
ARM GAS  C:\Users\Robert\AppData\Local\Temp\ccBTR6tf.s 			page 14


 567 02d0 07110000 		.word	.L19+1
 568 02d4 07110000 		.word	.L19+1
 569 02d8 07110000 		.word	.L19+1
 570 02dc 07110000 		.word	.L19+1
 571 02e0 07110000 		.word	.L19+1
 572 02e4 07110000 		.word	.L19+1
 573 02e8 07110000 		.word	.L19+1
 574 02ec 07110000 		.word	.L19+1
 575 02f0 07110000 		.word	.L19+1
 576 02f4 07110000 		.word	.L19+1
 577 02f8 07110000 		.word	.L19+1
 578 02fc 07110000 		.word	.L19+1
 579 0300 07110000 		.word	.L19+1
 580 0304 07110000 		.word	.L19+1
 581 0308 07110000 		.word	.L19+1
 582 030c 07110000 		.word	.L19+1
 583 0310 07110000 		.word	.L19+1
 584 0314 07110000 		.word	.L19+1
 585 0318 07110000 		.word	.L19+1
 586 031c 07110000 		.word	.L19+1
 587 0320 07110000 		.word	.L19+1
 588 0324 07110000 		.word	.L19+1
 589 0328 07110000 		.word	.L19+1
 590 032c 07110000 		.word	.L19+1
 591 0330 07110000 		.word	.L19+1
 592 0334 07110000 		.word	.L19+1
 593 0338 07110000 		.word	.L19+1
 594 033c 07110000 		.word	.L19+1
 595 0340 07110000 		.word	.L19+1
 596 0344 07110000 		.word	.L19+1
 597 0348 07110000 		.word	.L19+1
 598 034c 07110000 		.word	.L19+1
 599 0350 07110000 		.word	.L19+1
 600 0354 07110000 		.word	.L19+1
 601 0358 07110000 		.word	.L19+1
 602 035c 07110000 		.word	.L19+1
 603 0360 07110000 		.word	.L19+1
 604 0364 07110000 		.word	.L19+1
 605 0368 07110000 		.word	.L19+1
 606 036c 07110000 		.word	.L19+1
 607 0370 07110000 		.word	.L19+1
 608 0374 07110000 		.word	.L19+1
 609 0378 07110000 		.word	.L19+1
 610 037c 07110000 		.word	.L19+1
 611 0380 07110000 		.word	.L19+1
 612 0384 07110000 		.word	.L19+1
 613 0388 07110000 		.word	.L19+1
 614 038c 07110000 		.word	.L19+1
 615 0390 07110000 		.word	.L19+1
 616 0394 07110000 		.word	.L19+1
 617 0398 07110000 		.word	.L19+1
 618 039c 07110000 		.word	.L19+1
 619 03a0 07110000 		.word	.L19+1
 620 03a4 07110000 		.word	.L19+1
 621 03a8 07110000 		.word	.L19+1
 622 03ac 07110000 		.word	.L19+1
 623 03b0 07110000 		.word	.L19+1
ARM GAS  C:\Users\Robert\AppData\Local\Temp\ccBTR6tf.s 			page 15


 624 03b4 07110000 		.word	.L19+1
 625 03b8 07110000 		.word	.L19+1
 626 03bc 07110000 		.word	.L19+1
 627 03c0 07110000 		.word	.L19+1
 628 03c4 C70F0000 		.word	.L47+1
 629 03c8 07110000 		.word	.L19+1
 630 03cc D10F0000 		.word	.L48+1
 631 03d0 E50F0000 		.word	.L49+1
 632 03d4 F90F0000 		.word	.L50+1
 633 03d8 07110000 		.word	.L19+1
 634 03dc 07110000 		.word	.L19+1
 635 03e0 07110000 		.word	.L19+1
 636 03e4 07110000 		.word	.L19+1
 637 03e8 07110000 		.word	.L19+1
 638 03ec 07110000 		.word	.L19+1
 639 03f0 07110000 		.word	.L19+1
 640 03f4 07110000 		.word	.L19+1
 641 03f8 07110000 		.word	.L19+1
 642 03fc 07110000 		.word	.L19+1
 643 0400 07110000 		.word	.L19+1
 644 0404 07110000 		.word	.L19+1
 645 0408 07110000 		.word	.L19+1
 646 040c 07110000 		.word	.L19+1
 647 0410 07110000 		.word	.L19+1
 648 0414 07110000 		.word	.L19+1
 649 0418 07110000 		.word	.L19+1
 650 041c 07110000 		.word	.L19+1
 651 0420 07110000 		.word	.L19+1
 652 0424 07110000 		.word	.L19+1
 653 0428 07110000 		.word	.L19+1
 654 042c 07110000 		.word	.L19+1
 655 0430 07110000 		.word	.L19+1
 656 0434 07110000 		.word	.L19+1
 657 0438 07110000 		.word	.L19+1
 658 043c 07110000 		.word	.L19+1
 659 0440 07110000 		.word	.L19+1
 660 0444 03100000 		.word	.L51+1
 661 0448 07110000 		.word	.L19+1
 662 044c 07110000 		.word	.L19+1
 663 0450 07110000 		.word	.L19+1
 664 0454 07110000 		.word	.L19+1
 665 0458 07110000 		.word	.L19+1
 666 045c 07110000 		.word	.L19+1
 667 0460 15100000 		.word	.L52+1
 668 0464 07110000 		.word	.L19+1
 669 0468 07110000 		.word	.L19+1
 670 046c 07110000 		.word	.L19+1
 671 0470 07110000 		.word	.L19+1
 672 0474 07110000 		.word	.L19+1
 673 0478 07110000 		.word	.L19+1
 674 047c 07110000 		.word	.L19+1
 675 0480 07110000 		.word	.L19+1
 676 0484 07110000 		.word	.L19+1
 677 0488 07110000 		.word	.L19+1
 678 048c 07110000 		.word	.L19+1
 679 0490 07110000 		.word	.L19+1
 680 0494 07110000 		.word	.L19+1
ARM GAS  C:\Users\Robert\AppData\Local\Temp\ccBTR6tf.s 			page 16


 681 0498 07110000 		.word	.L19+1
 682 049c 07110000 		.word	.L19+1
 683 04a0 07110000 		.word	.L19+1
 684 04a4 07110000 		.word	.L19+1
 685 04a8 07110000 		.word	.L19+1
 686 04ac 07110000 		.word	.L19+1
 687 04b0 07110000 		.word	.L19+1
 688 04b4 07110000 		.word	.L19+1
 689 04b8 07110000 		.word	.L19+1
 690 04bc 07110000 		.word	.L19+1
 691 04c0 07110000 		.word	.L19+1
 692 04c4 07110000 		.word	.L19+1
 693 04c8 07110000 		.word	.L19+1
 694 04cc 07110000 		.word	.L19+1
 695 04d0 07110000 		.word	.L19+1
 696 04d4 07110000 		.word	.L19+1
 697 04d8 07110000 		.word	.L19+1
 698 04dc 07110000 		.word	.L19+1
 699 04e0 07110000 		.word	.L19+1
 700 04e4 07110000 		.word	.L19+1
 701 04e8 07110000 		.word	.L19+1
 702 04ec 07110000 		.word	.L19+1
 703 04f0 07110000 		.word	.L19+1
 704 04f4 07110000 		.word	.L19+1
 705 04f8 07110000 		.word	.L19+1
 706 04fc 07110000 		.word	.L19+1
 707 0500 07110000 		.word	.L19+1
 708 0504 07110000 		.word	.L19+1
 709 0508 07110000 		.word	.L19+1
 710 050c 07110000 		.word	.L19+1
 711 0510 07110000 		.word	.L19+1
 712 0514 07110000 		.word	.L19+1
 713 0518 07110000 		.word	.L19+1
 714 051c 07110000 		.word	.L19+1
 715 0520 07110000 		.word	.L19+1
 716 0524 07110000 		.word	.L19+1
 717 0528 07110000 		.word	.L19+1
 718 052c 07110000 		.word	.L19+1
 719 0530 07110000 		.word	.L19+1
 720 0534 07110000 		.word	.L19+1
 721 0538 07110000 		.word	.L19+1
 722 053c 07110000 		.word	.L19+1
 723 0540 07110000 		.word	.L19+1
 724 0544 1F100000 		.word	.L53+1
 725 0548 A7100000 		.word	.L54+1
 726              		.p2align 1
 727              	.L22:
 172:.\LINX.c      ****         // Sync
 173:.\LINX.c      ****         case 0x00:
 174:.\LINX.c      ****             DEBUG_PRINT("Sync\r\n");
 175:.\LINX.c      ****             
 176:.\LINX.c      ****             // Do nothing, will default to responding with L_OK status and no data,
 177:.\LINX.c      ****             // which is what sync expects
 178:.\LINX.c      ****             break;
 179:.\LINX.c      ****         
 180:.\LINX.c      ****         // Get device ID
 181:.\LINX.c      ****         case 0x03:
ARM GAS  C:\Users\Robert\AppData\Local\Temp\ccBTR6tf.s 			page 17


 182:.\LINX.c      ****             DEBUG_PRINT("Get device ID\r\n");
 183:.\LINX.c      ****             
 184:.\LINX.c      ****             response_data_len = 2;
 728              		.loc 1 184 0
 729 054c 0223     		movs	r3, #2
 730 054e 87F82B30 		strb	r3, [r7, #43]
 185:.\LINX.c      ****             response_data[0] = LINX_DEVICE_FAMILY;
 731              		.loc 1 185 0
 732 0552 FF23     		movs	r3, #255
 733 0554 87F82C30 		strb	r3, [r7, #44]
 186:.\LINX.c      ****             response_data[1] = LINX_DEVICE_ID;
 734              		.loc 1 186 0
 735 0558 0023     		movs	r3, #0
 736 055a 87F82D30 		strb	r3, [r7, #45]
 187:.\LINX.c      ****             break;
 737              		.loc 1 187 0
 738 055e 00F0D7BD 		b	.L55
 739              	.L23:
 188:.\LINX.c      ****         
 189:.\LINX.c      ****         // Get LINX API Version
 190:.\LINX.c      ****         case 0x04:
 191:.\LINX.c      ****             DEBUG_PRINT("Get API (Firmware) Version\r\n");
 192:.\LINX.c      ****             
 193:.\LINX.c      ****             response_data_len = 3;
 740              		.loc 1 193 0
 741 0562 0323     		movs	r3, #3
 742 0564 87F82B30 		strb	r3, [r7, #43]
 194:.\LINX.c      ****             response_data[0] = LINX_FIRMWARE_VER_MAJOR;
 743              		.loc 1 194 0
 744 0568 0323     		movs	r3, #3
 745 056a 87F82C30 		strb	r3, [r7, #44]
 195:.\LINX.c      ****             response_data[1] = LINX_FIRMWARE_VER_MINOR;
 746              		.loc 1 195 0
 747 056e 0023     		movs	r3, #0
 748 0570 87F82D30 		strb	r3, [r7, #45]
 196:.\LINX.c      ****             response_data[2] = LINX_FIRMWARE_VER_SUBMINOR;
 749              		.loc 1 196 0
 750 0574 0023     		movs	r3, #0
 751 0576 87F82E30 		strb	r3, [r7, #46]
 197:.\LINX.c      ****             //response_data[3] = LINX_FIRMWARE_VER_BUILD;
 198:.\LINX.c      ****             break;
 752              		.loc 1 198 0
 753 057a 00F0C9BD 		b	.L55
 754              	.L24:
 199:.\LINX.c      ****         
 200:.\LINX.c      ****         // Get max baud rate
 201:.\LINX.c      ****         case 0x05:
 202:.\LINX.c      ****             DEBUG_PRINT("Get max baud rate\r\n");
 203:.\LINX.c      ****             
 204:.\LINX.c      ****             response_data_len = 4;
 755              		.loc 1 204 0
 756 057e 0423     		movs	r3, #4
 757 0580 87F82B30 		strb	r3, [r7, #43]
 205:.\LINX.c      ****             response_data[0] = (LINX_MAX_BAUD_RATE >> 24) & 0xFF;
 758              		.loc 1 205 0
 759 0584 0023     		movs	r3, #0
 760 0586 87F82C30 		strb	r3, [r7, #44]
ARM GAS  C:\Users\Robert\AppData\Local\Temp\ccBTR6tf.s 			page 18


 206:.\LINX.c      ****             response_data[1] = (LINX_MAX_BAUD_RATE >> 16) & 0xFF;
 761              		.loc 1 206 0
 762 058a 0023     		movs	r3, #0
 763 058c 87F82D30 		strb	r3, [r7, #45]
 207:.\LINX.c      ****             response_data[2] = (LINX_MAX_BAUD_RATE >> 8) & 0xFF;
 764              		.loc 1 207 0
 765 0590 2523     		movs	r3, #37
 766 0592 87F82E30 		strb	r3, [r7, #46]
 208:.\LINX.c      ****             response_data[3] = LINX_MAX_BAUD_RATE & 0xFF;
 767              		.loc 1 208 0
 768 0596 8023     		movs	r3, #128
 769 0598 87F82F30 		strb	r3, [r7, #47]
 209:.\LINX.c      ****             break;
 770              		.loc 1 209 0
 771 059c 00F0B8BD 		b	.L55
 772              	.L25:
 210:.\LINX.c      ****         
 211:.\LINX.c      ****         // Set Baud Rate
 212:.\LINX.c      ****         // Untested - LINX doesn't currently call this because we report
 213:.\LINX.c      ****         //            that 9600 is our max supported rate
 214:.\LINX.c      ****         case 0x06:
 215:.\LINX.c      ****             DEBUG_PRINT("Set Baud Rate\r\n");
 216:.\LINX.c      ****             
 217:.\LINX.c      ****             // This is a bit of a hack, but because you can't really set the baud
 218:.\LINX.c      ****             // rate of the USBUART, this always responds saying it set the baud
 219:.\LINX.c      ****             // rate to 9600 no matter what LINX requests
 220:.\LINX.c      ****             response_data_len = 4;
 773              		.loc 1 220 0
 774 05a0 0423     		movs	r3, #4
 775 05a2 87F82B30 		strb	r3, [r7, #43]
 221:.\LINX.c      ****             response_data[0] = (LINX_MAX_BAUD_RATE >> 24) & 0xFF;
 776              		.loc 1 221 0
 777 05a6 0023     		movs	r3, #0
 778 05a8 87F82C30 		strb	r3, [r7, #44]
 222:.\LINX.c      ****             response_data[1] = (LINX_MAX_BAUD_RATE >> 16) & 0xFF;
 779              		.loc 1 222 0
 780 05ac 0023     		movs	r3, #0
 781 05ae 87F82D30 		strb	r3, [r7, #45]
 223:.\LINX.c      ****             response_data[2] = (LINX_MAX_BAUD_RATE >> 8) & 0xFF;
 782              		.loc 1 223 0
 783 05b2 2523     		movs	r3, #37
 784 05b4 87F82E30 		strb	r3, [r7, #46]
 224:.\LINX.c      ****             response_data[3] = LINX_MAX_BAUD_RATE & 0xFF;            
 785              		.loc 1 224 0
 786 05b8 8023     		movs	r3, #128
 787 05ba 87F82F30 		strb	r3, [r7, #47]
 225:.\LINX.c      ****             break;
 788              		.loc 1 225 0
 789 05be 00F0A7BD 		b	.L55
 790              	.L26:
 226:.\LINX.c      ****             
 227:.\LINX.c      ****         // Get DIO Channels
 228:.\LINX.c      ****         case 0x08:
 229:.\LINX.c      ****             DEBUG_PRINT("Get DIO Channels\r\n");
 230:.\LINX.c      ****             
 231:.\LINX.c      ****             // Port 2
 232:.\LINX.c      ****             #ifdef CY_PINS_GPIO_2_0_H
ARM GAS  C:\Users\Robert\AppData\Local\Temp\ccBTR6tf.s 			page 19


 233:.\LINX.c      ****                 response_data[response_data_len] = 20;
 791              		.loc 1 233 0
 792 05c2 97F82B30 		ldrb	r3, [r7, #43]	@ zero_extendqisi2
 793 05c6 07F17002 		add	r2, r7, #112
 794 05ca 1344     		add	r3, r3, r2
 795 05cc 1422     		movs	r2, #20
 796 05ce 03F8442C 		strb	r2, [r3, #-68]
 234:.\LINX.c      ****                 ++response_data_len;
 797              		.loc 1 234 0
 798 05d2 97F82B30 		ldrb	r3, [r7, #43]	@ zero_extendqisi2
 799 05d6 0133     		adds	r3, r3, #1
 800 05d8 DBB2     		uxtb	r3, r3
 801 05da 87F82B30 		strb	r3, [r7, #43]
 235:.\LINX.c      ****             #endif
 236:.\LINX.c      ****             #ifdef CY_PINS_GPIO_2_1_H
 237:.\LINX.c      ****                 response_data[response_data_len] = 21;
 802              		.loc 1 237 0
 803 05de 97F82B30 		ldrb	r3, [r7, #43]	@ zero_extendqisi2
 804 05e2 07F17002 		add	r2, r7, #112
 805 05e6 1344     		add	r3, r3, r2
 806 05e8 1522     		movs	r2, #21
 807 05ea 03F8442C 		strb	r2, [r3, #-68]
 238:.\LINX.c      ****                 ++response_data_len;
 808              		.loc 1 238 0
 809 05ee 97F82B30 		ldrb	r3, [r7, #43]	@ zero_extendqisi2
 810 05f2 0133     		adds	r3, r3, #1
 811 05f4 DBB2     		uxtb	r3, r3
 812 05f6 87F82B30 		strb	r3, [r7, #43]
 239:.\LINX.c      ****             #endif
 240:.\LINX.c      ****             #ifdef CY_PINS_GPIO_2_2_H
 241:.\LINX.c      ****                 response_data[response_data_len] = 22;
 813              		.loc 1 241 0
 814 05fa 97F82B30 		ldrb	r3, [r7, #43]	@ zero_extendqisi2
 815 05fe 07F17002 		add	r2, r7, #112
 816 0602 1344     		add	r3, r3, r2
 817 0604 1622     		movs	r2, #22
 818 0606 03F8442C 		strb	r2, [r3, #-68]
 242:.\LINX.c      ****                 ++response_data_len;
 819              		.loc 1 242 0
 820 060a 97F82B30 		ldrb	r3, [r7, #43]	@ zero_extendqisi2
 821 060e 0133     		adds	r3, r3, #1
 822 0610 DBB2     		uxtb	r3, r3
 823 0612 87F82B30 		strb	r3, [r7, #43]
 243:.\LINX.c      ****             #endif
 244:.\LINX.c      ****             #ifdef CY_PINS_GPIO_2_3_H
 245:.\LINX.c      ****                 response_data[response_data_len] = 23;
 824              		.loc 1 245 0
 825 0616 97F82B30 		ldrb	r3, [r7, #43]	@ zero_extendqisi2
 826 061a 07F17002 		add	r2, r7, #112
 827 061e 1344     		add	r3, r3, r2
 828 0620 1722     		movs	r2, #23
 829 0622 03F8442C 		strb	r2, [r3, #-68]
 246:.\LINX.c      ****                 ++response_data_len;
 830              		.loc 1 246 0
 831 0626 97F82B30 		ldrb	r3, [r7, #43]	@ zero_extendqisi2
 832 062a 0133     		adds	r3, r3, #1
 833 062c DBB2     		uxtb	r3, r3
ARM GAS  C:\Users\Robert\AppData\Local\Temp\ccBTR6tf.s 			page 20


 834 062e 87F82B30 		strb	r3, [r7, #43]
 247:.\LINX.c      ****             #endif
 248:.\LINX.c      ****             #ifdef CY_PINS_GPIO_2_4_H
 249:.\LINX.c      ****                 response_data[response_data_len] = 24;
 835              		.loc 1 249 0
 836 0632 97F82B30 		ldrb	r3, [r7, #43]	@ zero_extendqisi2
 837 0636 07F17002 		add	r2, r7, #112
 838 063a 1344     		add	r3, r3, r2
 839 063c 1822     		movs	r2, #24
 840 063e 03F8442C 		strb	r2, [r3, #-68]
 250:.\LINX.c      ****                 ++response_data_len;
 841              		.loc 1 250 0
 842 0642 97F82B30 		ldrb	r3, [r7, #43]	@ zero_extendqisi2
 843 0646 0133     		adds	r3, r3, #1
 844 0648 DBB2     		uxtb	r3, r3
 845 064a 87F82B30 		strb	r3, [r7, #43]
 251:.\LINX.c      ****             #endif
 252:.\LINX.c      ****             #ifdef CY_PINS_GPIO_2_5_H
 253:.\LINX.c      ****                 response_data[response_data_len] = 25;
 846              		.loc 1 253 0
 847 064e 97F82B30 		ldrb	r3, [r7, #43]	@ zero_extendqisi2
 848 0652 07F17002 		add	r2, r7, #112
 849 0656 1344     		add	r3, r3, r2
 850 0658 1922     		movs	r2, #25
 851 065a 03F8442C 		strb	r2, [r3, #-68]
 254:.\LINX.c      ****                 ++response_data_len;
 852              		.loc 1 254 0
 853 065e 97F82B30 		ldrb	r3, [r7, #43]	@ zero_extendqisi2
 854 0662 0133     		adds	r3, r3, #1
 855 0664 DBB2     		uxtb	r3, r3
 856 0666 87F82B30 		strb	r3, [r7, #43]
 255:.\LINX.c      ****             #endif
 256:.\LINX.c      ****             #ifdef CY_PINS_GPIO_2_6_H
 257:.\LINX.c      ****                 response_data[response_data_len] = 26;
 857              		.loc 1 257 0
 858 066a 97F82B30 		ldrb	r3, [r7, #43]	@ zero_extendqisi2
 859 066e 07F17002 		add	r2, r7, #112
 860 0672 1344     		add	r3, r3, r2
 861 0674 1A22     		movs	r2, #26
 862 0676 03F8442C 		strb	r2, [r3, #-68]
 258:.\LINX.c      ****                 ++response_data_len;
 863              		.loc 1 258 0
 864 067a 97F82B30 		ldrb	r3, [r7, #43]	@ zero_extendqisi2
 865 067e 0133     		adds	r3, r3, #1
 866 0680 DBB2     		uxtb	r3, r3
 867 0682 87F82B30 		strb	r3, [r7, #43]
 259:.\LINX.c      ****             #endif
 260:.\LINX.c      ****             #ifdef CY_PINS_GPIO_2_7_H
 261:.\LINX.c      ****                 response_data[response_data_len] = 27;
 868              		.loc 1 261 0
 869 0686 97F82B30 		ldrb	r3, [r7, #43]	@ zero_extendqisi2
 870 068a 07F17002 		add	r2, r7, #112
 871 068e 1344     		add	r3, r3, r2
 872 0690 1B22     		movs	r2, #27
 873 0692 03F8442C 		strb	r2, [r3, #-68]
 262:.\LINX.c      ****                 ++response_data_len;
 874              		.loc 1 262 0
ARM GAS  C:\Users\Robert\AppData\Local\Temp\ccBTR6tf.s 			page 21


 875 0696 97F82B30 		ldrb	r3, [r7, #43]	@ zero_extendqisi2
 876 069a 0133     		adds	r3, r3, #1
 877 069c DBB2     		uxtb	r3, r3
 878 069e 87F82B30 		strb	r3, [r7, #43]
 263:.\LINX.c      ****             #endif
 264:.\LINX.c      ****             
 265:.\LINX.c      ****             // Port 4
 266:.\LINX.c      ****             #ifdef CY_PINS_GPIO_4_0_H
 267:.\LINX.c      ****                 response_data[response_data_len] = 40;
 268:.\LINX.c      ****                 ++response_data_len;
 269:.\LINX.c      ****             #endif
 270:.\LINX.c      ****             #ifdef CY_PINS_GPIO_4_1_H
 271:.\LINX.c      ****                 response_data[response_data_len] = 41;
 272:.\LINX.c      ****                 ++response_data_len;
 273:.\LINX.c      ****             #endif
 274:.\LINX.c      ****             #ifdef CY_PINS_GPIO_4_2_H
 275:.\LINX.c      ****                 response_data[response_data_len] = 42;
 276:.\LINX.c      ****                 ++response_data_len;
 277:.\LINX.c      ****             #endif
 278:.\LINX.c      ****             #ifdef CY_PINS_GPIO_4_3_H
 279:.\LINX.c      ****                 response_data[response_data_len] = 43;
 280:.\LINX.c      ****                 ++response_data_len;
 281:.\LINX.c      ****             #endif
 282:.\LINX.c      ****             #ifdef CY_PINS_GPIO_4_4_H
 283:.\LINX.c      ****                 response_data[response_data_len] = 44;
 284:.\LINX.c      ****                 ++response_data_len;
 285:.\LINX.c      ****             #endif
 286:.\LINX.c      ****             #ifdef CY_PINS_GPIO_4_5_H
 287:.\LINX.c      ****                 response_data[response_data_len] = 45;
 288:.\LINX.c      ****                 ++response_data_len;
 289:.\LINX.c      ****             #endif
 290:.\LINX.c      ****             #ifdef CY_PINS_GPIO_4_6_H
 291:.\LINX.c      ****                 response_data[response_data_len] = 46;
 292:.\LINX.c      ****                 ++response_data_len;
 293:.\LINX.c      ****             #endif
 294:.\LINX.c      ****             #ifdef CY_PINS_GPIO_4_7_H
 295:.\LINX.c      ****                 response_data[response_data_len] = 47;
 296:.\LINX.c      ****                 ++response_data_len;
 297:.\LINX.c      ****             #endif
 298:.\LINX.c      ****             
 299:.\LINX.c      ****             // Port 5
 300:.\LINX.c      ****             #ifdef CY_PINS_GPIO_5_0_H
 301:.\LINX.c      ****                 response_data[response_data_len] = 50;
 879              		.loc 1 301 0
 880 06a2 97F82B30 		ldrb	r3, [r7, #43]	@ zero_extendqisi2
 881 06a6 07F17002 		add	r2, r7, #112
 882 06aa 1344     		add	r3, r3, r2
 883 06ac 3222     		movs	r2, #50
 884 06ae 03F8442C 		strb	r2, [r3, #-68]
 302:.\LINX.c      ****                 ++response_data_len;
 885              		.loc 1 302 0
 886 06b2 97F82B30 		ldrb	r3, [r7, #43]	@ zero_extendqisi2
 887 06b6 0133     		adds	r3, r3, #1
 888 06b8 DBB2     		uxtb	r3, r3
 889 06ba 87F82B30 		strb	r3, [r7, #43]
 303:.\LINX.c      ****             #endif
 304:.\LINX.c      ****             #ifdef CY_PINS_GPIO_5_1_H
ARM GAS  C:\Users\Robert\AppData\Local\Temp\ccBTR6tf.s 			page 22


 305:.\LINX.c      ****                 response_data[response_data_len] = 51;
 890              		.loc 1 305 0
 891 06be 97F82B30 		ldrb	r3, [r7, #43]	@ zero_extendqisi2
 892 06c2 07F17002 		add	r2, r7, #112
 893 06c6 1344     		add	r3, r3, r2
 894 06c8 3322     		movs	r2, #51
 895 06ca 03F8442C 		strb	r2, [r3, #-68]
 306:.\LINX.c      ****                 ++response_data_len;
 896              		.loc 1 306 0
 897 06ce 97F82B30 		ldrb	r3, [r7, #43]	@ zero_extendqisi2
 898 06d2 0133     		adds	r3, r3, #1
 899 06d4 DBB2     		uxtb	r3, r3
 900 06d6 87F82B30 		strb	r3, [r7, #43]
 307:.\LINX.c      ****             #endif
 308:.\LINX.c      ****             #ifdef CY_PINS_GPIO_5_2_H
 309:.\LINX.c      ****                 response_data[response_data_len] = 52;
 901              		.loc 1 309 0
 902 06da 97F82B30 		ldrb	r3, [r7, #43]	@ zero_extendqisi2
 903 06de 07F17002 		add	r2, r7, #112
 904 06e2 1344     		add	r3, r3, r2
 905 06e4 3422     		movs	r2, #52
 906 06e6 03F8442C 		strb	r2, [r3, #-68]
 310:.\LINX.c      ****                 ++response_data_len;
 907              		.loc 1 310 0
 908 06ea 97F82B30 		ldrb	r3, [r7, #43]	@ zero_extendqisi2
 909 06ee 0133     		adds	r3, r3, #1
 910 06f0 DBB2     		uxtb	r3, r3
 911 06f2 87F82B30 		strb	r3, [r7, #43]
 311:.\LINX.c      ****             #endif
 312:.\LINX.c      ****             #ifdef CY_PINS_GPIO_5_3_H
 313:.\LINX.c      ****                 response_data[response_data_len] = 53;
 912              		.loc 1 313 0
 913 06f6 97F82B30 		ldrb	r3, [r7, #43]	@ zero_extendqisi2
 914 06fa 07F17002 		add	r2, r7, #112
 915 06fe 1344     		add	r3, r3, r2
 916 0700 3522     		movs	r2, #53
 917 0702 03F8442C 		strb	r2, [r3, #-68]
 314:.\LINX.c      ****                 ++response_data_len;
 918              		.loc 1 314 0
 919 0706 97F82B30 		ldrb	r3, [r7, #43]	@ zero_extendqisi2
 920 070a 0133     		adds	r3, r3, #1
 921 070c DBB2     		uxtb	r3, r3
 922 070e 87F82B30 		strb	r3, [r7, #43]
 315:.\LINX.c      ****             #endif
 316:.\LINX.c      ****             #ifdef CY_PINS_GPIO_5_4_H
 317:.\LINX.c      ****                 response_data[response_data_len] = 54;
 923              		.loc 1 317 0
 924 0712 97F82B30 		ldrb	r3, [r7, #43]	@ zero_extendqisi2
 925 0716 07F17002 		add	r2, r7, #112
 926 071a 1344     		add	r3, r3, r2
 927 071c 3622     		movs	r2, #54
 928 071e 03F8442C 		strb	r2, [r3, #-68]
 318:.\LINX.c      ****                 ++response_data_len;
 929              		.loc 1 318 0
 930 0722 97F82B30 		ldrb	r3, [r7, #43]	@ zero_extendqisi2
 931 0726 0133     		adds	r3, r3, #1
 932 0728 DBB2     		uxtb	r3, r3
ARM GAS  C:\Users\Robert\AppData\Local\Temp\ccBTR6tf.s 			page 23


 933 072a 87F82B30 		strb	r3, [r7, #43]
 319:.\LINX.c      ****             #endif
 320:.\LINX.c      ****             #ifdef CY_PINS_GPIO_5_5_H
 321:.\LINX.c      ****                 response_data[response_data_len] = 55;
 934              		.loc 1 321 0
 935 072e 97F82B30 		ldrb	r3, [r7, #43]	@ zero_extendqisi2
 936 0732 07F17002 		add	r2, r7, #112
 937 0736 1344     		add	r3, r3, r2
 938 0738 3722     		movs	r2, #55
 939 073a 03F8442C 		strb	r2, [r3, #-68]
 322:.\LINX.c      ****                 ++response_data_len;
 940              		.loc 1 322 0
 941 073e 97F82B30 		ldrb	r3, [r7, #43]	@ zero_extendqisi2
 942 0742 0133     		adds	r3, r3, #1
 943 0744 DBB2     		uxtb	r3, r3
 944 0746 87F82B30 		strb	r3, [r7, #43]
 323:.\LINX.c      ****             #endif
 324:.\LINX.c      ****             #ifdef CY_PINS_GPIO_5_6_H
 325:.\LINX.c      ****                 response_data[response_data_len] = 56;
 945              		.loc 1 325 0
 946 074a 97F82B30 		ldrb	r3, [r7, #43]	@ zero_extendqisi2
 947 074e 07F17002 		add	r2, r7, #112
 948 0752 1344     		add	r3, r3, r2
 949 0754 3822     		movs	r2, #56
 950 0756 03F8442C 		strb	r2, [r3, #-68]
 326:.\LINX.c      ****                 ++response_data_len;
 951              		.loc 1 326 0
 952 075a 97F82B30 		ldrb	r3, [r7, #43]	@ zero_extendqisi2
 953 075e 0133     		adds	r3, r3, #1
 954 0760 DBB2     		uxtb	r3, r3
 955 0762 87F82B30 		strb	r3, [r7, #43]
 327:.\LINX.c      ****             #endif
 328:.\LINX.c      ****             #ifdef CY_PINS_GPIO_5_7_H
 329:.\LINX.c      ****                 response_data[response_data_len] = 57;
 956              		.loc 1 329 0
 957 0766 97F82B30 		ldrb	r3, [r7, #43]	@ zero_extendqisi2
 958 076a 07F17002 		add	r2, r7, #112
 959 076e 1344     		add	r3, r3, r2
 960 0770 3922     		movs	r2, #57
 961 0772 03F8442C 		strb	r2, [r3, #-68]
 330:.\LINX.c      ****                 ++response_data_len;
 962              		.loc 1 330 0
 963 0776 97F82B30 		ldrb	r3, [r7, #43]	@ zero_extendqisi2
 964 077a 0133     		adds	r3, r3, #1
 965 077c DBB2     		uxtb	r3, r3
 966 077e 87F82B30 		strb	r3, [r7, #43]
 331:.\LINX.c      ****             #endif
 332:.\LINX.c      ****             
 333:.\LINX.c      ****             // Port 6
 334:.\LINX.c      ****             #ifdef CY_PINS_GPIO_6_0_H
 335:.\LINX.c      ****                 response_data[response_data_len] = 60;
 336:.\LINX.c      ****                 ++response_data_len;
 337:.\LINX.c      ****             #endif
 338:.\LINX.c      ****             #ifdef CY_PINS_GPIO_6_1_H
 339:.\LINX.c      ****                 response_data[response_data_len] = 61;
 340:.\LINX.c      ****                 ++response_data_len;
 341:.\LINX.c      ****             #endif
ARM GAS  C:\Users\Robert\AppData\Local\Temp\ccBTR6tf.s 			page 24


 342:.\LINX.c      ****             #ifdef CY_PINS_GPIO_6_2_H
 343:.\LINX.c      ****                 response_data[response_data_len] = 62;
 344:.\LINX.c      ****                 ++response_data_len;
 345:.\LINX.c      ****             #endif
 346:.\LINX.c      ****             #ifdef CY_PINS_GPIO_6_3_H
 347:.\LINX.c      ****                 response_data[response_data_len] = 63;
 348:.\LINX.c      ****                 ++response_data_len;
 349:.\LINX.c      ****             #endif
 350:.\LINX.c      ****             #ifdef CY_PINS_GPIO_6_4_H
 351:.\LINX.c      ****                 response_data[response_data_len] = 64;
 352:.\LINX.c      ****                 ++response_data_len;
 353:.\LINX.c      ****             #endif
 354:.\LINX.c      ****             #ifdef CY_PINS_GPIO_6_5_H
 355:.\LINX.c      ****                 response_data[response_data_len] = 65;
 356:.\LINX.c      ****                 ++response_data_len;
 357:.\LINX.c      ****             #endif
 358:.\LINX.c      ****             #ifdef CY_PINS_GPIO_6_6_H
 359:.\LINX.c      ****                 response_data[response_data_len] = 66;
 360:.\LINX.c      ****                 ++response_data_len;
 361:.\LINX.c      ****             #endif
 362:.\LINX.c      ****             #ifdef CY_PINS_GPIO_6_7_H
 363:.\LINX.c      ****                 response_data[response_data_len] = 67;
 364:.\LINX.c      ****                 ++response_data_len;
 365:.\LINX.c      ****             #endif
 366:.\LINX.c      ****             
 367:.\LINX.c      ****             // Port 12
 368:.\LINX.c      ****             #ifdef CY_PINS_GPIO_12_0_H
 369:.\LINX.c      ****                 response_data[response_data_len] = 120;
 967              		.loc 1 369 0
 968 0782 97F82B30 		ldrb	r3, [r7, #43]	@ zero_extendqisi2
 969 0786 07F17002 		add	r2, r7, #112
 970 078a 1344     		add	r3, r3, r2
 971 078c 7822     		movs	r2, #120
 972 078e 03F8442C 		strb	r2, [r3, #-68]
 370:.\LINX.c      ****                 ++response_data_len;
 973              		.loc 1 370 0
 974 0792 97F82B30 		ldrb	r3, [r7, #43]	@ zero_extendqisi2
 975 0796 0133     		adds	r3, r3, #1
 976 0798 DBB2     		uxtb	r3, r3
 977 079a 87F82B30 		strb	r3, [r7, #43]
 371:.\LINX.c      ****             #endif
 372:.\LINX.c      ****             #ifdef CY_PINS_GPIO_12_1_H
 373:.\LINX.c      ****                 response_data[response_data_len] = 121;
 978              		.loc 1 373 0
 979 079e 97F82B30 		ldrb	r3, [r7, #43]	@ zero_extendqisi2
 980 07a2 07F17002 		add	r2, r7, #112
 981 07a6 1344     		add	r3, r3, r2
 982 07a8 7922     		movs	r2, #121
 983 07aa 03F8442C 		strb	r2, [r3, #-68]
 374:.\LINX.c      ****                 ++response_data_len;
 984              		.loc 1 374 0
 985 07ae 97F82B30 		ldrb	r3, [r7, #43]	@ zero_extendqisi2
 986 07b2 0133     		adds	r3, r3, #1
 987 07b4 DBB2     		uxtb	r3, r3
 988 07b6 87F82B30 		strb	r3, [r7, #43]
 375:.\LINX.c      ****             #endif
 376:.\LINX.c      ****             #ifdef CY_PINS_GPIO_12_2_H
ARM GAS  C:\Users\Robert\AppData\Local\Temp\ccBTR6tf.s 			page 25


 377:.\LINX.c      ****                 response_data[response_data_len] = 122;
 989              		.loc 1 377 0
 990 07ba 97F82B30 		ldrb	r3, [r7, #43]	@ zero_extendqisi2
 991 07be 07F17002 		add	r2, r7, #112
 992 07c2 1344     		add	r3, r3, r2
 993 07c4 7A22     		movs	r2, #122
 994 07c6 03F8442C 		strb	r2, [r3, #-68]
 378:.\LINX.c      ****                 ++response_data_len;
 995              		.loc 1 378 0
 996 07ca 97F82B30 		ldrb	r3, [r7, #43]	@ zero_extendqisi2
 997 07ce 0133     		adds	r3, r3, #1
 998 07d0 DBB2     		uxtb	r3, r3
 999 07d2 87F82B30 		strb	r3, [r7, #43]
 379:.\LINX.c      ****             #endif
 380:.\LINX.c      ****             #ifdef CY_PINS_GPIO_12_3_H
 381:.\LINX.c      ****                 response_data[response_data_len] = 123;
 1000              		.loc 1 381 0
 1001 07d6 97F82B30 		ldrb	r3, [r7, #43]	@ zero_extendqisi2
 1002 07da 07F17002 		add	r2, r7, #112
 1003 07de 1344     		add	r3, r3, r2
 1004 07e0 7B22     		movs	r2, #123
 1005 07e2 03F8442C 		strb	r2, [r3, #-68]
 382:.\LINX.c      ****                 ++response_data_len;
 1006              		.loc 1 382 0
 1007 07e6 97F82B30 		ldrb	r3, [r7, #43]	@ zero_extendqisi2
 1008 07ea 0133     		adds	r3, r3, #1
 1009 07ec DBB2     		uxtb	r3, r3
 1010 07ee 87F82B30 		strb	r3, [r7, #43]
 383:.\LINX.c      ****             #endif
 384:.\LINX.c      ****             #ifdef CY_PINS_GPIO_12_4_H
 385:.\LINX.c      ****                 response_data[response_data_len] = 124;
 1011              		.loc 1 385 0
 1012 07f2 97F82B30 		ldrb	r3, [r7, #43]	@ zero_extendqisi2
 1013 07f6 07F17002 		add	r2, r7, #112
 1014 07fa 1344     		add	r3, r3, r2
 1015 07fc 7C22     		movs	r2, #124
 1016 07fe 03F8442C 		strb	r2, [r3, #-68]
 386:.\LINX.c      ****                 ++response_data_len;
 1017              		.loc 1 386 0
 1018 0802 97F82B30 		ldrb	r3, [r7, #43]	@ zero_extendqisi2
 1019 0806 0133     		adds	r3, r3, #1
 1020 0808 DBB2     		uxtb	r3, r3
 1021 080a 87F82B30 		strb	r3, [r7, #43]
 387:.\LINX.c      ****             #endif
 388:.\LINX.c      ****             #ifdef CY_PINS_GPIO_12_5_H
 389:.\LINX.c      ****                 response_data[response_data_len] = 125;
 1022              		.loc 1 389 0
 1023 080e 97F82B30 		ldrb	r3, [r7, #43]	@ zero_extendqisi2
 1024 0812 07F17002 		add	r2, r7, #112
 1025 0816 1344     		add	r3, r3, r2
 1026 0818 7D22     		movs	r2, #125
 1027 081a 03F8442C 		strb	r2, [r3, #-68]
 390:.\LINX.c      ****                 ++response_data_len;
 1028              		.loc 1 390 0
 1029 081e 97F82B30 		ldrb	r3, [r7, #43]	@ zero_extendqisi2
 1030 0822 0133     		adds	r3, r3, #1
 1031 0824 DBB2     		uxtb	r3, r3
ARM GAS  C:\Users\Robert\AppData\Local\Temp\ccBTR6tf.s 			page 26


 1032 0826 87F82B30 		strb	r3, [r7, #43]
 391:.\LINX.c      ****             #endif
 392:.\LINX.c      ****             #ifdef CY_PINS_GPIO_12_6_H
 393:.\LINX.c      ****                 response_data[response_data_len] = 126;
 1033              		.loc 1 393 0
 1034 082a 97F82B30 		ldrb	r3, [r7, #43]	@ zero_extendqisi2
 1035 082e 07F17002 		add	r2, r7, #112
 1036 0832 1344     		add	r3, r3, r2
 1037 0834 7E22     		movs	r2, #126
 1038 0836 03F8442C 		strb	r2, [r3, #-68]
 394:.\LINX.c      ****                 ++response_data_len;
 1039              		.loc 1 394 0
 1040 083a 97F82B30 		ldrb	r3, [r7, #43]	@ zero_extendqisi2
 1041 083e 0133     		adds	r3, r3, #1
 1042 0840 DBB2     		uxtb	r3, r3
 1043 0842 87F82B30 		strb	r3, [r7, #43]
 395:.\LINX.c      ****             #endif
 396:.\LINX.c      ****             #ifdef CY_PINS_GPIO_12_7_H
 397:.\LINX.c      ****                 response_data[response_data_len] = 127;
 1044              		.loc 1 397 0
 1045 0846 97F82B30 		ldrb	r3, [r7, #43]	@ zero_extendqisi2
 1046 084a 07F17002 		add	r2, r7, #112
 1047 084e 1344     		add	r3, r3, r2
 1048 0850 7F22     		movs	r2, #127
 1049 0852 03F8442C 		strb	r2, [r3, #-68]
 398:.\LINX.c      ****                 ++response_data_len;
 1050              		.loc 1 398 0
 1051 0856 97F82B30 		ldrb	r3, [r7, #43]	@ zero_extendqisi2
 1052 085a 0133     		adds	r3, r3, #1
 1053 085c DBB2     		uxtb	r3, r3
 1054 085e 87F82B30 		strb	r3, [r7, #43]
 399:.\LINX.c      ****             #endif
 400:.\LINX.c      ****             
 401:.\LINX.c      ****             break;
 1055              		.loc 1 401 0
 1056 0862 00F055BC 		b	.L55
 1057              	.L27:
 402:.\LINX.c      ****             
 403:.\LINX.c      ****         // Get AI Channels
 404:.\LINX.c      ****         case 0x09:
 405:.\LINX.c      ****             DEBUG_PRINT("Get AI Channels\r\n");
 406:.\LINX.c      ****             
 407:.\LINX.c      ****             // TODO: For now, only supports the sequenced SAR ADC, could potentially add more ADC d
 408:.\LINX.c      ****             #ifdef CY_ADC_SAR_Seq_1_H
 409:.\LINX.c      ****                 response_data_len = 8;
 1058              		.loc 1 409 0
 1059 0866 0823     		movs	r3, #8
 1060 0868 87F82B30 		strb	r3, [r7, #43]
 410:.\LINX.c      ****                 for (i = 0; i < 8; ++i) {
 1061              		.loc 1 410 0
 1062 086c 0023     		movs	r3, #0
 1063 086e 87F86E30 		strb	r3, [r7, #110]
 1064 0872 0FE0     		b	.L56
 1065              	.L57:
 411:.\LINX.c      ****                     response_data[i] = i+1;
 1066              		.loc 1 411 0 discriminator 3
 1067 0874 97F86E30 		ldrb	r3, [r7, #110]	@ zero_extendqisi2
ARM GAS  C:\Users\Robert\AppData\Local\Temp\ccBTR6tf.s 			page 27


 1068 0878 97F86E20 		ldrb	r2, [r7, #110]
 1069 087c 0132     		adds	r2, r2, #1
 1070 087e D2B2     		uxtb	r2, r2
 1071 0880 07F17001 		add	r1, r7, #112
 1072 0884 0B44     		add	r3, r3, r1
 1073 0886 03F8442C 		strb	r2, [r3, #-68]
 410:.\LINX.c      ****                 for (i = 0; i < 8; ++i) {
 1074              		.loc 1 410 0 discriminator 3
 1075 088a 97F86E30 		ldrb	r3, [r7, #110]
 1076 088e 0133     		adds	r3, r3, #1
 1077 0890 87F86E30 		strb	r3, [r7, #110]
 1078              	.L56:
 410:.\LINX.c      ****                 for (i = 0; i < 8; ++i) {
 1079              		.loc 1 410 0 is_stmt 0 discriminator 1
 1080 0894 97F86E30 		ldrb	r3, [r7, #110]	@ zero_extendqisi2
 1081 0898 072B     		cmp	r3, #7
 1082 089a EBD9     		bls	.L57
 412:.\LINX.c      ****                 }
 413:.\LINX.c      ****             #endif
 414:.\LINX.c      ****             
 415:.\LINX.c      ****             break;
 1083              		.loc 1 415 0 is_stmt 1
 1084 089c 00F038BC 		b	.L55
 1085              	.L28:
 416:.\LINX.c      ****             
 417:.\LINX.c      ****         // Get AO Channels
 418:.\LINX.c      ****         case 0x0A:
 419:.\LINX.c      ****             DEBUG_PRINT("Get AO Channels\r\n");
 420:.\LINX.c      ****             
 421:.\LINX.c      ****             // TODO: For now, only supports the two VDACs, could potentially add more DAC devices
 422:.\LINX.c      ****             #ifdef CY_VDAC8_VDAC8_1_H
 423:.\LINX.c      ****                 response_data[response_data_len] = 1;
 1086              		.loc 1 423 0
 1087 08a0 97F82B30 		ldrb	r3, [r7, #43]	@ zero_extendqisi2
 1088 08a4 07F17002 		add	r2, r7, #112
 1089 08a8 1344     		add	r3, r3, r2
 1090 08aa 0122     		movs	r2, #1
 1091 08ac 03F8442C 		strb	r2, [r3, #-68]
 424:.\LINX.c      ****                 ++response_data_len;
 1092              		.loc 1 424 0
 1093 08b0 97F82B30 		ldrb	r3, [r7, #43]	@ zero_extendqisi2
 1094 08b4 0133     		adds	r3, r3, #1
 1095 08b6 DBB2     		uxtb	r3, r3
 1096 08b8 87F82B30 		strb	r3, [r7, #43]
 425:.\LINX.c      ****             #endif
 426:.\LINX.c      ****             
 427:.\LINX.c      ****             #ifdef CY_VDAC8_VDAC8_2_H
 428:.\LINX.c      ****                 response_data[response_data_len] = 2;
 429:.\LINX.c      ****                 ++response_data_len;
 430:.\LINX.c      ****             #endif
 431:.\LINX.c      ****             
 432:.\LINX.c      ****             break;
 1097              		.loc 1 432 0
 1098 08bc 00F028BC 		b	.L55
 1099              	.L29:
 433:.\LINX.c      ****             
 434:.\LINX.c      ****         // Get PWM Channels
ARM GAS  C:\Users\Robert\AppData\Local\Temp\ccBTR6tf.s 			page 28


 435:.\LINX.c      ****         case 0x0B:
 436:.\LINX.c      ****             DEBUG_PRINT("Get PWM Channels\r\n");
 437:.\LINX.c      ****             
 438:.\LINX.c      ****             #ifdef CY_PWM_PWM_1_H
 439:.\LINX.c      ****                 response_data[response_data_len] = 1;
 1100              		.loc 1 439 0
 1101 08c0 97F82B30 		ldrb	r3, [r7, #43]	@ zero_extendqisi2
 1102 08c4 07F17002 		add	r2, r7, #112
 1103 08c8 1344     		add	r3, r3, r2
 1104 08ca 0122     		movs	r2, #1
 1105 08cc 03F8442C 		strb	r2, [r3, #-68]
 440:.\LINX.c      ****                 ++response_data_len;
 1106              		.loc 1 440 0
 1107 08d0 97F82B30 		ldrb	r3, [r7, #43]	@ zero_extendqisi2
 1108 08d4 0133     		adds	r3, r3, #1
 1109 08d6 DBB2     		uxtb	r3, r3
 1110 08d8 87F82B30 		strb	r3, [r7, #43]
 441:.\LINX.c      ****             #endif
 442:.\LINX.c      ****             #ifdef CY_PWM_PWM_2_H
 443:.\LINX.c      ****                 response_data[response_data_len] = 2;
 1111              		.loc 1 443 0
 1112 08dc 97F82B30 		ldrb	r3, [r7, #43]	@ zero_extendqisi2
 1113 08e0 07F17002 		add	r2, r7, #112
 1114 08e4 1344     		add	r3, r3, r2
 1115 08e6 0222     		movs	r2, #2
 1116 08e8 03F8442C 		strb	r2, [r3, #-68]
 444:.\LINX.c      ****                 ++response_data_len;
 1117              		.loc 1 444 0
 1118 08ec 97F82B30 		ldrb	r3, [r7, #43]	@ zero_extendqisi2
 1119 08f0 0133     		adds	r3, r3, #1
 1120 08f2 DBB2     		uxtb	r3, r3
 1121 08f4 87F82B30 		strb	r3, [r7, #43]
 445:.\LINX.c      ****             #endif
 446:.\LINX.c      ****             #ifdef CY_PWM_PWM_3_H
 447:.\LINX.c      ****                 response_data[response_data_len] = 3;
 1122              		.loc 1 447 0
 1123 08f8 97F82B30 		ldrb	r3, [r7, #43]	@ zero_extendqisi2
 1124 08fc 07F17002 		add	r2, r7, #112
 1125 0900 1344     		add	r3, r3, r2
 1126 0902 0322     		movs	r2, #3
 1127 0904 03F8442C 		strb	r2, [r3, #-68]
 448:.\LINX.c      ****                 ++response_data_len;
 1128              		.loc 1 448 0
 1129 0908 97F82B30 		ldrb	r3, [r7, #43]	@ zero_extendqisi2
 1130 090c 0133     		adds	r3, r3, #1
 1131 090e DBB2     		uxtb	r3, r3
 1132 0910 87F82B30 		strb	r3, [r7, #43]
 449:.\LINX.c      ****             #endif
 450:.\LINX.c      ****             #ifdef CY_PWM_PWM_4_H
 451:.\LINX.c      ****                 response_data[response_data_len] = 4;
 1133              		.loc 1 451 0
 1134 0914 97F82B30 		ldrb	r3, [r7, #43]	@ zero_extendqisi2
 1135 0918 07F17002 		add	r2, r7, #112
 1136 091c 1344     		add	r3, r3, r2
 1137 091e 0422     		movs	r2, #4
 1138 0920 03F8442C 		strb	r2, [r3, #-68]
 452:.\LINX.c      ****                 ++response_data_len;
ARM GAS  C:\Users\Robert\AppData\Local\Temp\ccBTR6tf.s 			page 29


 1139              		.loc 1 452 0
 1140 0924 97F82B30 		ldrb	r3, [r7, #43]	@ zero_extendqisi2
 1141 0928 0133     		adds	r3, r3, #1
 1142 092a DBB2     		uxtb	r3, r3
 1143 092c 87F82B30 		strb	r3, [r7, #43]
 453:.\LINX.c      ****             #endif
 454:.\LINX.c      ****             #ifdef CY_PWM_PWM_5_H
 455:.\LINX.c      ****                 response_data[response_data_len] = 5;
 1144              		.loc 1 455 0
 1145 0930 97F82B30 		ldrb	r3, [r7, #43]	@ zero_extendqisi2
 1146 0934 07F17002 		add	r2, r7, #112
 1147 0938 1344     		add	r3, r3, r2
 1148 093a 0522     		movs	r2, #5
 1149 093c 03F8442C 		strb	r2, [r3, #-68]
 456:.\LINX.c      ****                 ++response_data_len;
 1150              		.loc 1 456 0
 1151 0940 97F82B30 		ldrb	r3, [r7, #43]	@ zero_extendqisi2
 1152 0944 0133     		adds	r3, r3, #1
 1153 0946 DBB2     		uxtb	r3, r3
 1154 0948 87F82B30 		strb	r3, [r7, #43]
 457:.\LINX.c      ****             #endif
 458:.\LINX.c      ****             #ifdef CY_PWM_PWM_6_H
 459:.\LINX.c      ****                 response_data[response_data_len] = 6;
 1155              		.loc 1 459 0
 1156 094c 97F82B30 		ldrb	r3, [r7, #43]	@ zero_extendqisi2
 1157 0950 07F17002 		add	r2, r7, #112
 1158 0954 1344     		add	r3, r3, r2
 1159 0956 0622     		movs	r2, #6
 1160 0958 03F8442C 		strb	r2, [r3, #-68]
 460:.\LINX.c      ****                 ++response_data_len;
 1161              		.loc 1 460 0
 1162 095c 97F82B30 		ldrb	r3, [r7, #43]	@ zero_extendqisi2
 1163 0960 0133     		adds	r3, r3, #1
 1164 0962 DBB2     		uxtb	r3, r3
 1165 0964 87F82B30 		strb	r3, [r7, #43]
 461:.\LINX.c      ****             #endif
 462:.\LINX.c      ****             #ifdef CY_PWM_PWM_7_H
 463:.\LINX.c      ****                 response_data[response_data_len] = 7;
 1166              		.loc 1 463 0
 1167 0968 97F82B30 		ldrb	r3, [r7, #43]	@ zero_extendqisi2
 1168 096c 07F17002 		add	r2, r7, #112
 1169 0970 1344     		add	r3, r3, r2
 1170 0972 0722     		movs	r2, #7
 1171 0974 03F8442C 		strb	r2, [r3, #-68]
 464:.\LINX.c      ****                 ++response_data_len;
 1172              		.loc 1 464 0
 1173 0978 97F82B30 		ldrb	r3, [r7, #43]	@ zero_extendqisi2
 1174 097c 0133     		adds	r3, r3, #1
 1175 097e DBB2     		uxtb	r3, r3
 1176 0980 87F82B30 		strb	r3, [r7, #43]
 465:.\LINX.c      ****             #endif
 466:.\LINX.c      ****             #ifdef CY_PWM_PWM_8_H
 467:.\LINX.c      ****                 response_data[response_data_len] = 8;
 1177              		.loc 1 467 0
 1178 0984 97F82B30 		ldrb	r3, [r7, #43]	@ zero_extendqisi2
 1179 0988 07F17002 		add	r2, r7, #112
 1180 098c 1344     		add	r3, r3, r2
ARM GAS  C:\Users\Robert\AppData\Local\Temp\ccBTR6tf.s 			page 30


 1181 098e 0822     		movs	r2, #8
 1182 0990 03F8442C 		strb	r2, [r3, #-68]
 468:.\LINX.c      ****                 ++response_data_len;
 1183              		.loc 1 468 0
 1184 0994 97F82B30 		ldrb	r3, [r7, #43]	@ zero_extendqisi2
 1185 0998 0133     		adds	r3, r3, #1
 1186 099a DBB2     		uxtb	r3, r3
 1187 099c 87F82B30 		strb	r3, [r7, #43]
 469:.\LINX.c      ****             #endif
 470:.\LINX.c      ****             
 471:.\LINX.c      ****             break;
 1188              		.loc 1 471 0
 1189 09a0 B6E3     		b	.L55
 1190              	.L35:
 1191              	.LBB2:
 472:.\LINX.c      ****             
 473:.\LINX.c      ****         // Get QE Channels
 474:.\LINX.c      ****         case 0x0C:
 475:.\LINX.c      ****             DEBUG_PRINT("Get QE Channels\r\n");
 476:.\LINX.c      ****             
 477:.\LINX.c      ****             #ifdef CY_QUADRATURE_DECODER_QuadDec_1_H
 478:.\LINX.c      ****                 response_data[response_data_len] = 1;
 479:.\LINX.c      ****                 ++response_data_len;
 480:.\LINX.c      ****             #endif
 481:.\LINX.c      ****             
 482:.\LINX.c      ****             break;
 483:.\LINX.c      ****             
 484:.\LINX.c      ****         // Get UART Channels
 485:.\LINX.c      ****         // Incomplete
 486:.\LINX.c      ****         case 0x0D:
 487:.\LINX.c      ****             DEBUG_PRINT("Get UART Channels\r\n");
 488:.\LINX.c      ****             
 489:.\LINX.c      ****             break;
 490:.\LINX.c      ****             
 491:.\LINX.c      ****         // Get I2C Channels
 492:.\LINX.c      ****         case 0x0E:
 493:.\LINX.c      ****             DEBUG_PRINT("Get I2C Channels\r\n");
 494:.\LINX.c      ****             
 495:.\LINX.c      ****             #ifdef CY_I2C_I2C_1_H
 496:.\LINX.c      ****                 #if(I2C_1_MODE_MASTER_ENABLED)                
 497:.\LINX.c      ****                     response_data[response_data_len] = 1;
 498:.\LINX.c      ****                     ++response_data_len;
 499:.\LINX.c      ****                 #endif
 500:.\LINX.c      ****             #endif
 501:.\LINX.c      ****             
 502:.\LINX.c      ****             break;
 503:.\LINX.c      ****             
 504:.\LINX.c      ****         // Get SPI Channels
 505:.\LINX.c      ****         case 0x0F:
 506:.\LINX.c      ****             DEBUG_PRINT("Get SPI Channels\r\n");
 507:.\LINX.c      ****             
 508:.\LINX.c      ****             #ifdef CY_SPIM_SPIM_1_H
 509:.\LINX.c      ****                 response_data[response_data_len] = 1;
 510:.\LINX.c      ****                 ++response_data_len;
 511:.\LINX.c      ****             #endif
 512:.\LINX.c      ****             
 513:.\LINX.c      ****             break;
ARM GAS  C:\Users\Robert\AppData\Local\Temp\ccBTR6tf.s 			page 31


 514:.\LINX.c      ****             
 515:.\LINX.c      ****         // Get CAN Channels
 516:.\LINX.c      ****         case 0x10:
 517:.\LINX.c      ****             DEBUG_PRINT("Get CAN Channels\r\n");
 518:.\LINX.c      ****             
 519:.\LINX.c      ****             break;
 520:.\LINX.c      ****             
 521:.\LINX.c      ****         // Set Device User ID
 522:.\LINX.c      ****         // Untested - LINX never actually uses this currently
 523:.\LINX.c      ****         case 0x12: {
 524:.\LINX.c      ****             DEBUG_PRINT("Set Device User ID\r\n");
 525:.\LINX.c      ****                 
 526:.\LINX.c      ****             // Device User ID is stoerd in bytes (0, 0) and (0, 1) of the EEPROM
 527:.\LINX.c      ****             cystatus first = EEPROM_ByteWrite(command[6], 0, 0);
 1192              		.loc 1 527 0
 1193 09a2 7B68     		ldr	r3, [r7, #4]
 1194 09a4 0633     		adds	r3, r3, #6
 1195 09a6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1196 09a8 1846     		mov	r0, r3
 1197 09aa 0021     		movs	r1, #0
 1198 09ac 0022     		movs	r2, #0
 1199 09ae FFF7FEFF 		bl	EEPROM_ByteWrite
 1200 09b2 B866     		str	r0, [r7, #104]
 528:.\LINX.c      ****             cystatus second = EEPROM_ByteWrite(command[7], 0, 1);
 1201              		.loc 1 528 0
 1202 09b4 7B68     		ldr	r3, [r7, #4]
 1203 09b6 0733     		adds	r3, r3, #7
 1204 09b8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1205 09ba 1846     		mov	r0, r3
 1206 09bc 0021     		movs	r1, #0
 1207 09be 0122     		movs	r2, #1
 1208 09c0 FFF7FEFF 		bl	EEPROM_ByteWrite
 1209 09c4 7866     		str	r0, [r7, #100]
 529:.\LINX.c      ****             
 530:.\LINX.c      ****             if(first == CYRET_LOCKED || first == CYRET_UNKNOWN || second == CYRET_LOCKED || second 
 1210              		.loc 1 530 0
 1211 09c6 BB6E     		ldr	r3, [r7, #104]
 1212 09c8 042B     		cmp	r3, #4
 1213 09ca 0AD0     		beq	.L58
 1214              		.loc 1 530 0 is_stmt 0 discriminator 1
 1215 09cc BB6E     		ldr	r3, [r7, #104]
 1216 09ce B3F1FF3F 		cmp	r3, #-1
 1217 09d2 06D0     		beq	.L58
 1218              		.loc 1 530 0 discriminator 2
 1219 09d4 7B6E     		ldr	r3, [r7, #100]
 1220 09d6 042B     		cmp	r3, #4
 1221 09d8 03D0     		beq	.L58
 1222              		.loc 1 530 0 discriminator 3
 1223 09da 7B6E     		ldr	r3, [r7, #100]
 1224 09dc B3F1FF3F 		cmp	r3, #-1
 1225 09e0 03D1     		bne	.L59
 1226              	.L58:
 531:.\LINX.c      ****                 status = LINX_STATUS_L_UNKNOWN_ERROR;
 1227              		.loc 1 531 0 is_stmt 1
 1228 09e2 0323     		movs	r3, #3
 1229 09e4 87F86F30 		strb	r3, [r7, #111]
 532:.\LINX.c      ****             }
ARM GAS  C:\Users\Robert\AppData\Local\Temp\ccBTR6tf.s 			page 32


 533:.\LINX.c      ****             
 534:.\LINX.c      ****             break;
 1230              		.loc 1 534 0
 1231 09e8 92E3     		b	.L55
 1232              	.L59:
 1233 09ea 91E3     		b	.L55
 1234              	.L36:
 1235              	.LBE2:
 535:.\LINX.c      ****         }
 536:.\LINX.c      ****             
 537:.\LINX.c      ****         // Get Device User ID
 538:.\LINX.c      ****         // Untested - LINX never actually uses this currently
 539:.\LINX.c      ****         case 0x13:
 540:.\LINX.c      ****             DEBUG_PRINT("Get Device User ID\r\n");
 541:.\LINX.c      ****             
 542:.\LINX.c      ****             response_data_len = 2;
 1236              		.loc 1 542 0
 1237 09ec 0223     		movs	r3, #2
 1238 09ee 87F82B30 		strb	r3, [r7, #43]
 543:.\LINX.c      ****             response_data[0] = *((uint8 *)CYDEV_EE_BASE);
 1239              		.loc 1 543 0
 1240 09f2 B64B     		ldr	r3, .L98
 1241 09f4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1242 09f6 87F82C30 		strb	r3, [r7, #44]
 544:.\LINX.c      ****             response_data[1] = *((uint8 *)(CYDEV_EE_BASE + 1));
 1243              		.loc 1 544 0
 1244 09fa B54B     		ldr	r3, .L98+4
 1245 09fc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1246 09fe 87F82D30 		strb	r3, [r7, #45]
 545:.\LINX.c      ****             
 546:.\LINX.c      ****             break;
 1247              		.loc 1 546 0
 1248 0a02 85E3     		b	.L55
 1249              	.L37:
 547:.\LINX.c      ****             
 548:.\LINX.c      ****         // Get device name
 549:.\LINX.c      ****         case 0x24:
 550:.\LINX.c      ****             DEBUG_PRINT("Get device name\r\n");
 551:.\LINX.c      **** 
 552:.\LINX.c      ****             response_data_len = sprintf((char *)response_data, LINX_DEVICE_NAME);
 1250              		.loc 1 552 0
 1251 0a04 07F12C03 		add	r3, r7, #44
 1252 0a08 B24A     		ldr	r2, .L98+8
 1253 0a0a 92E80300 		ldmia	r2, {r0, r1}
 1254 0a0e 1860     		str	r0, [r3]
 1255 0a10 0433     		adds	r3, r3, #4
 1256 0a12 1980     		strh	r1, [r3]	@ movhi
 1257 0a14 0523     		movs	r3, #5
 1258 0a16 87F82B30 		strb	r3, [r7, #43]
 553:.\LINX.c      ****             
 554:.\LINX.c      ****             break;
 1259              		.loc 1 554 0
 1260 0a1a 79E3     		b	.L55
 1261              	.L38:
 555:.\LINX.c      ****             
 556:.\LINX.c      ****         // Servo channels, servos not functional yet
 557:.\LINX.c      ****         case 0x25:
ARM GAS  C:\Users\Robert\AppData\Local\Temp\ccBTR6tf.s 			page 33


 558:.\LINX.c      ****             DEBUG_PRINT("Get device name\r\n");
 559:.\LINX.c      **** 
 560:.\LINX.c      ****             response_data[response_data_len] = 1;
 1262              		.loc 1 560 0
 1263 0a1c 97F82B30 		ldrb	r3, [r7, #43]	@ zero_extendqisi2
 1264 0a20 07F17002 		add	r2, r7, #112
 1265 0a24 1344     		add	r3, r3, r2
 1266 0a26 0122     		movs	r2, #1
 1267 0a28 03F8442C 		strb	r2, [r3, #-68]
 561:.\LINX.c      ****             ++response_data_len;
 1268              		.loc 1 561 0
 1269 0a2c 97F82B30 		ldrb	r3, [r7, #43]	@ zero_extendqisi2
 1270 0a30 0133     		adds	r3, r3, #1
 1271 0a32 DBB2     		uxtb	r3, r3
 1272 0a34 87F82B30 		strb	r3, [r7, #43]
 562:.\LINX.c      ****             
 563:.\LINX.c      ****             response_data[response_data_len] = 2;
 1273              		.loc 1 563 0
 1274 0a38 97F82B30 		ldrb	r3, [r7, #43]	@ zero_extendqisi2
 1275 0a3c 07F17002 		add	r2, r7, #112
 1276 0a40 1344     		add	r3, r3, r2
 1277 0a42 0222     		movs	r2, #2
 1278 0a44 03F8442C 		strb	r2, [r3, #-68]
 564:.\LINX.c      ****             ++response_data_len;
 1279              		.loc 1 564 0
 1280 0a48 97F82B30 		ldrb	r3, [r7, #43]	@ zero_extendqisi2
 1281 0a4c 0133     		adds	r3, r3, #1
 1282 0a4e DBB2     		uxtb	r3, r3
 1283 0a50 87F82B30 		strb	r3, [r7, #43]
 565:.\LINX.c      ****             
 566:.\LINX.c      ****             break;
 1284              		.loc 1 566 0
 1285 0a54 5CE3     		b	.L55
 1286              	.L39:
 567:.\LINX.c      ****             
 568:.\LINX.c      ****         // Digital Write
 569:.\LINX.c      ****         case 0x41:
 570:.\LINX.c      ****             DEBUG_PRINT("Digital Write\r\n");
 571:.\LINX.c      ****             
 572:.\LINX.c      ****             // For each pin
 573:.\LINX.c      ****             for (i = 0; i < command[6]; ++i) {
 1287              		.loc 1 573 0
 1288 0a56 0023     		movs	r3, #0
 1289 0a58 87F86E30 		strb	r3, [r7, #110]
 1290 0a5c 74E0     		b	.L60
 1291              	.L61:
 1292              	.LBB3:
 574:.\LINX.c      ****                 uint8 port = command[7 + i] / 10;
 1293              		.loc 1 574 0 discriminator 3
 1294 0a5e 97F86E30 		ldrb	r3, [r7, #110]	@ zero_extendqisi2
 1295 0a62 0733     		adds	r3, r3, #7
 1296 0a64 1A46     		mov	r2, r3
 1297 0a66 7B68     		ldr	r3, [r7, #4]
 1298 0a68 1344     		add	r3, r3, r2
 1299 0a6a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1300 0a6c 9A4A     		ldr	r2, .L98+12
 1301 0a6e A2FB0323 		umull	r2, r3, r2, r3
ARM GAS  C:\Users\Robert\AppData\Local\Temp\ccBTR6tf.s 			page 34


 1302 0a72 DB08     		lsrs	r3, r3, #3
 1303 0a74 87F86330 		strb	r3, [r7, #99]
 575:.\LINX.c      ****                 uint8 pin = command[7 + i] % 10;
 1304              		.loc 1 575 0 discriminator 3
 1305 0a78 97F86E30 		ldrb	r3, [r7, #110]	@ zero_extendqisi2
 1306 0a7c 0733     		adds	r3, r3, #7
 1307 0a7e 1A46     		mov	r2, r3
 1308 0a80 7B68     		ldr	r3, [r7, #4]
 1309 0a82 1344     		add	r3, r3, r2
 1310 0a84 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1311 0a86 944B     		ldr	r3, .L98+12
 1312 0a88 A3FB0213 		umull	r1, r3, r3, r2
 1313 0a8c D908     		lsrs	r1, r3, #3
 1314 0a8e 0B46     		mov	r3, r1
 1315 0a90 9B00     		lsls	r3, r3, #2
 1316 0a92 0B44     		add	r3, r3, r1
 1317 0a94 5B00     		lsls	r3, r3, #1
 1318 0a96 D31A     		subs	r3, r2, r3
 1319 0a98 87F86230 		strb	r3, [r7, #98]
 576:.\LINX.c      ****                 bool value = (command[7 + command[6] + (i / 8)] >> (i % 8)) & 0x01;
 1320              		.loc 1 576 0 discriminator 3
 1321 0a9c 7B68     		ldr	r3, [r7, #4]
 1322 0a9e 0633     		adds	r3, r3, #6
 1323 0aa0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1324 0aa2 0733     		adds	r3, r3, #7
 1325 0aa4 97F86E20 		ldrb	r2, [r7, #110]	@ zero_extendqisi2
 1326 0aa8 D208     		lsrs	r2, r2, #3
 1327 0aaa D2B2     		uxtb	r2, r2
 1328 0aac 1344     		add	r3, r3, r2
 1329 0aae 1A46     		mov	r2, r3
 1330 0ab0 7B68     		ldr	r3, [r7, #4]
 1331 0ab2 1344     		add	r3, r3, r2
 1332 0ab4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1333 0ab6 1A46     		mov	r2, r3
 1334 0ab8 97F86E30 		ldrb	r3, [r7, #110]	@ zero_extendqisi2
 1335 0abc 03F00703 		and	r3, r3, #7
 1336 0ac0 42FA03F3 		asr	r3, r2, r3
 1337 0ac4 03F00103 		and	r3, r3, #1
 1338 0ac8 002B     		cmp	r3, #0
 1339 0aca 14BF     		ite	ne
 1340 0acc 0123     		movne	r3, #1
 1341 0ace 0023     		moveq	r3, #0
 1342 0ad0 87F86130 		strb	r3, [r7, #97]
 577:.\LINX.c      ****                 
 578:.\LINX.c      ****                 DEBUG_PRINT("\t\tPort: %u Pin: %u Value %u\r\n", port, pin, value);
 579:.\LINX.c      ****                 
 580:.\LINX.c      ****                 // Set as output
 581:.\LINX.c      ****                 vessel.addr = GPIO_REGISTER;
 1343              		.loc 1 581 0 discriminator 3
 1344 0ad4 814B     		ldr	r3, .L98+16
 1345 0ad6 1622     		movs	r2, #22
 1346 0ad8 1A70     		strb	r2, [r3]
 582:.\LINX.c      ****                 vessel.cmd = 0x03;               // Set drive mode command
 1347              		.loc 1 582 0 discriminator 3
 1348 0ada 804B     		ldr	r3, .L98+16
 1349 0adc 0322     		movs	r2, #3
 1350 0ade 5A70     		strb	r2, [r3, #1]
ARM GAS  C:\Users\Robert\AppData\Local\Temp\ccBTR6tf.s 			page 35


 583:.\LINX.c      ****                 vessel.pin = pin;
 1351              		.loc 1 583 0 discriminator 3
 1352 0ae0 97F86230 		ldrb	r3, [r7, #98]
 1353 0ae4 03F00703 		and	r3, r3, #7
 1354 0ae8 D9B2     		uxtb	r1, r3
 1355 0aea 7C4A     		ldr	r2, .L98+16
 1356 0aec 1379     		ldrb	r3, [r2, #4]
 1357 0aee 61F30613 		bfi	r3, r1, #4, #3
 1358 0af2 1371     		strb	r3, [r2, #4]
 584:.\LINX.c      ****                 vessel.port = port;
 1359              		.loc 1 584 0 discriminator 3
 1360 0af4 97F86330 		ldrb	r3, [r7, #99]
 1361 0af8 03F00F03 		and	r3, r3, #15
 1362 0afc D9B2     		uxtb	r1, r3
 1363 0afe 774A     		ldr	r2, .L98+16
 1364 0b00 1379     		ldrb	r3, [r2, #4]
 1365 0b02 61F30303 		bfi	r3, r1, #0, #4
 1366 0b06 1371     		strb	r3, [r2, #4]
 585:.\LINX.c      ****                 vessel.dat = 0x07;              // Set to strong drive
 1367              		.loc 1 585 0 discriminator 3
 1368 0b08 744B     		ldr	r3, .L98+16
 1369 0b0a 0722     		movs	r2, #7
 1370 0b0c 5A80     		strh	r2, [r3, #2]	@ movhi
 586:.\LINX.c      ****                 uint32 result = 0x00;
 1371              		.loc 1 586 0 discriminator 3
 1372 0b0e 0023     		movs	r3, #0
 1373 0b10 7B62     		str	r3, [r7, #36]
 587:.\LINX.c      ****                 readData(vessel, &result);
 1374              		.loc 1 587 0 discriminator 3
 1375 0b12 724B     		ldr	r3, .L98+16
 1376 0b14 07F12402 		add	r2, r7, #36
 1377 0b18 0092     		str	r2, [sp]
 1378 0b1a 0FCB     		ldmia	r3, {r0, r1, r2, r3}
 1379 0b1c FFF7FEFF 		bl	readData
 588:.\LINX.c      **** 
 589:.\LINX.c      ****                 // Write value
 590:.\LINX.c      ****                 vessel.cmd = 0x01;                     // Write command
 1380              		.loc 1 590 0 discriminator 3
 1381 0b20 6E4B     		ldr	r3, .L98+16
 1382 0b22 0122     		movs	r2, #1
 1383 0b24 5A70     		strb	r2, [r3, #1]
 591:.\LINX.c      ****                 vessel.dat = value;
 1384              		.loc 1 591 0 discriminator 3
 1385 0b26 97F86130 		ldrb	r3, [r7, #97]	@ zero_extendqisi2
 1386 0b2a 9AB2     		uxth	r2, r3
 1387 0b2c 6B4B     		ldr	r3, .L98+16
 1388 0b2e 5A80     		strh	r2, [r3, #2]	@ movhi
 592:.\LINX.c      ****                 readData(vessel, &result);
 1389              		.loc 1 592 0 discriminator 3
 1390 0b30 6A4B     		ldr	r3, .L98+16
 1391 0b32 07F12402 		add	r2, r7, #36
 1392 0b36 0092     		str	r2, [sp]
 1393 0b38 0FCB     		ldmia	r3, {r0, r1, r2, r3}
 1394 0b3a FFF7FEFF 		bl	readData
 1395              	.LBE3:
 573:.\LINX.c      ****                 uint8 port = command[7 + i] / 10;
 1396              		.loc 1 573 0 discriminator 3
ARM GAS  C:\Users\Robert\AppData\Local\Temp\ccBTR6tf.s 			page 36


 1397 0b3e 97F86E30 		ldrb	r3, [r7, #110]
 1398 0b42 0133     		adds	r3, r3, #1
 1399 0b44 87F86E30 		strb	r3, [r7, #110]
 1400              	.L60:
 573:.\LINX.c      ****                 uint8 port = command[7 + i] / 10;
 1401              		.loc 1 573 0 is_stmt 0 discriminator 1
 1402 0b48 7B68     		ldr	r3, [r7, #4]
 1403 0b4a 0633     		adds	r3, r3, #6
 1404 0b4c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1405 0b4e 97F86E20 		ldrb	r2, [r7, #110]	@ zero_extendqisi2
 1406 0b52 9A42     		cmp	r2, r3
 1407 0b54 83D3     		bcc	.L61
 593:.\LINX.c      ****             }
 594:.\LINX.c      ****             
 595:.\LINX.c      ****             break;
 1408              		.loc 1 595 0 is_stmt 1
 1409 0b56 DBE2     		b	.L55
 1410              	.L40:
 596:.\LINX.c      ****             
 597:.\LINX.c      ****         // Digital Read
 598:.\LINX.c      ****         case 0x42:
 599:.\LINX.c      ****             DEBUG_PRINT("Digital Read\r\n");
 600:.\LINX.c      ****             
 601:.\LINX.c      ****             // For each pin
 602:.\LINX.c      ****             for (i = 0; i < (command[1] - 7); ++i) {
 1411              		.loc 1 602 0
 1412 0b58 0023     		movs	r3, #0
 1413 0b5a 87F86E30 		strb	r3, [r7, #110]
 1414 0b5e 86E0     		b	.L62
 1415              	.L64:
 1416              	.LBB4:
 603:.\LINX.c      ****                 uint8 port = command[6 + i] / 10;
 1417              		.loc 1 603 0
 1418 0b60 97F86E30 		ldrb	r3, [r7, #110]	@ zero_extendqisi2
 1419 0b64 0633     		adds	r3, r3, #6
 1420 0b66 1A46     		mov	r2, r3
 1421 0b68 7B68     		ldr	r3, [r7, #4]
 1422 0b6a 1344     		add	r3, r3, r2
 1423 0b6c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1424 0b6e 5A4A     		ldr	r2, .L98+12
 1425 0b70 A2FB0323 		umull	r2, r3, r2, r3
 1426 0b74 DB08     		lsrs	r3, r3, #3
 1427 0b76 87F86030 		strb	r3, [r7, #96]
 604:.\LINX.c      ****                 uint8 pin = command[6 + i] % 10;
 1428              		.loc 1 604 0
 1429 0b7a 97F86E30 		ldrb	r3, [r7, #110]	@ zero_extendqisi2
 1430 0b7e 0633     		adds	r3, r3, #6
 1431 0b80 1A46     		mov	r2, r3
 1432 0b82 7B68     		ldr	r3, [r7, #4]
 1433 0b84 1344     		add	r3, r3, r2
 1434 0b86 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1435 0b88 534B     		ldr	r3, .L98+12
 1436 0b8a A3FB0213 		umull	r1, r3, r3, r2
 1437 0b8e D908     		lsrs	r1, r3, #3
 1438 0b90 0B46     		mov	r3, r1
 1439 0b92 9B00     		lsls	r3, r3, #2
 1440 0b94 0B44     		add	r3, r3, r1
ARM GAS  C:\Users\Robert\AppData\Local\Temp\ccBTR6tf.s 			page 37


 1441 0b96 5B00     		lsls	r3, r3, #1
 1442 0b98 D31A     		subs	r3, r2, r3
 1443 0b9a 87F85F30 		strb	r3, [r7, #95]
 605:.\LINX.c      ****                 
 606:.\LINX.c      ****                 DEBUG_PRINT("\t\tPort: %u Pin: %u\r\n", port, pin);
 607:.\LINX.c      ****                 
 608:.\LINX.c      ****                 // Set as input
 609:.\LINX.c      ****                 vessel.addr = GPIO_REGISTER;
 1444              		.loc 1 609 0
 1445 0b9e 4F4B     		ldr	r3, .L98+16
 1446 0ba0 1622     		movs	r2, #22
 1447 0ba2 1A70     		strb	r2, [r3]
 610:.\LINX.c      ****                 vessel.cmd = 0x03;               // Set drive mode command
 1448              		.loc 1 610 0
 1449 0ba4 4D4B     		ldr	r3, .L98+16
 1450 0ba6 0322     		movs	r2, #3
 1451 0ba8 5A70     		strb	r2, [r3, #1]
 611:.\LINX.c      ****                 vessel.pin = pin;
 1452              		.loc 1 611 0
 1453 0baa 97F85F30 		ldrb	r3, [r7, #95]
 1454 0bae 03F00703 		and	r3, r3, #7
 1455 0bb2 D9B2     		uxtb	r1, r3
 1456 0bb4 494A     		ldr	r2, .L98+16
 1457 0bb6 1379     		ldrb	r3, [r2, #4]
 1458 0bb8 61F30613 		bfi	r3, r1, #4, #3
 1459 0bbc 1371     		strb	r3, [r2, #4]
 612:.\LINX.c      ****                 vessel.port = port;
 1460              		.loc 1 612 0
 1461 0bbe 97F86030 		ldrb	r3, [r7, #96]
 1462 0bc2 03F00F03 		and	r3, r3, #15
 1463 0bc6 D9B2     		uxtb	r1, r3
 1464 0bc8 444A     		ldr	r2, .L98+16
 1465 0bca 1379     		ldrb	r3, [r2, #4]
 1466 0bcc 61F30303 		bfi	r3, r1, #0, #4
 1467 0bd0 1371     		strb	r3, [r2, #4]
 613:.\LINX.c      ****                 vessel.dat = 0x02;              // Set to digital high impedance
 1468              		.loc 1 613 0
 1469 0bd2 424B     		ldr	r3, .L98+16
 1470 0bd4 0222     		movs	r2, #2
 1471 0bd6 5A80     		strh	r2, [r3, #2]	@ movhi
 614:.\LINX.c      ****                 uint32 result = 0x00;
 1472              		.loc 1 614 0
 1473 0bd8 0023     		movs	r3, #0
 1474 0bda 3B62     		str	r3, [r7, #32]
 615:.\LINX.c      ****                 readData(vessel, &result);
 1475              		.loc 1 615 0
 1476 0bdc 3F4B     		ldr	r3, .L98+16
 1477 0bde 07F12002 		add	r2, r7, #32
 1478 0be2 0092     		str	r2, [sp]
 1479 0be4 0FCB     		ldmia	r3, {r0, r1, r2, r3}
 1480 0be6 FFF7FEFF 		bl	readData
 616:.\LINX.c      ****                 
 617:.\LINX.c      ****                 // Read value
 618:.\LINX.c      ****                 vessel.cmd = 0x00;                     // Read command
 1481              		.loc 1 618 0
 1482 0bea 3C4B     		ldr	r3, .L98+16
 1483 0bec 0022     		movs	r2, #0
ARM GAS  C:\Users\Robert\AppData\Local\Temp\ccBTR6tf.s 			page 38


 1484 0bee 5A70     		strb	r2, [r3, #1]
 619:.\LINX.c      ****                 readData(vessel, &result);
 1485              		.loc 1 619 0
 1486 0bf0 3A4B     		ldr	r3, .L98+16
 1487 0bf2 07F12002 		add	r2, r7, #32
 1488 0bf6 0092     		str	r2, [sp]
 1489 0bf8 0FCB     		ldmia	r3, {r0, r1, r2, r3}
 1490 0bfa FFF7FEFF 		bl	readData
 620:.\LINX.c      ****                 
 621:.\LINX.c      ****                 DEBUG_PRINT("\t\tResult: %x\r\n", (unsigned int)result);
 622:.\LINX.c      ****                 
 623:.\LINX.c      ****                 // Pack result
 624:.\LINX.c      ****                 if ((i % 8) == 0) {
 1491              		.loc 1 624 0
 1492 0bfe 97F86E30 		ldrb	r3, [r7, #110]
 1493 0c02 03F00703 		and	r3, r3, #7
 1494 0c06 DBB2     		uxtb	r3, r3
 1495 0c08 002B     		cmp	r3, #0
 1496 0c0a 0FD1     		bne	.L63
 625:.\LINX.c      ****                     response_data[i / 8] = 0x00;
 1497              		.loc 1 625 0
 1498 0c0c 97F86E30 		ldrb	r3, [r7, #110]	@ zero_extendqisi2
 1499 0c10 DB08     		lsrs	r3, r3, #3
 1500 0c12 DBB2     		uxtb	r3, r3
 1501 0c14 07F17002 		add	r2, r7, #112
 1502 0c18 1344     		add	r3, r3, r2
 1503 0c1a 0022     		movs	r2, #0
 1504 0c1c 03F8442C 		strb	r2, [r3, #-68]
 626:.\LINX.c      ****                     ++response_data_len;
 1505              		.loc 1 626 0
 1506 0c20 97F82B30 		ldrb	r3, [r7, #43]	@ zero_extendqisi2
 1507 0c24 0133     		adds	r3, r3, #1
 1508 0c26 DBB2     		uxtb	r3, r3
 1509 0c28 87F82B30 		strb	r3, [r7, #43]
 1510              	.L63:
 627:.\LINX.c      ****                 }
 628:.\LINX.c      ****                 response_data[i / 8] |= ((result & 0x01) << (7 - (i % 8)));
 1511              		.loc 1 628 0 discriminator 2
 1512 0c2c 97F86E30 		ldrb	r3, [r7, #110]	@ zero_extendqisi2
 1513 0c30 DB08     		lsrs	r3, r3, #3
 1514 0c32 DBB2     		uxtb	r3, r3
 1515 0c34 1846     		mov	r0, r3
 1516 0c36 07F17002 		add	r2, r7, #112
 1517 0c3a 1344     		add	r3, r3, r2
 1518 0c3c 13F8442C 		ldrb	r2, [r3, #-68]	@ zero_extendqisi2
 1519 0c40 3B6A     		ldr	r3, [r7, #32]
 1520 0c42 03F00101 		and	r1, r3, #1
 1521 0c46 97F86E30 		ldrb	r3, [r7, #110]	@ zero_extendqisi2
 1522 0c4a DB43     		mvns	r3, r3
 1523 0c4c 03F00703 		and	r3, r3, #7
 1524 0c50 01FA03F3 		lsl	r3, r1, r3
 1525 0c54 DBB2     		uxtb	r3, r3
 1526 0c56 1343     		orrs	r3, r3, r2
 1527 0c58 DAB2     		uxtb	r2, r3
 1528 0c5a 07F17003 		add	r3, r7, #112
 1529 0c5e 0344     		add	r3, r3, r0
 1530 0c60 03F8442C 		strb	r2, [r3, #-68]
ARM GAS  C:\Users\Robert\AppData\Local\Temp\ccBTR6tf.s 			page 39


 1531              	.LBE4:
 602:.\LINX.c      ****                 uint8 port = command[6 + i] / 10;
 1532              		.loc 1 602 0 discriminator 2
 1533 0c64 97F86E30 		ldrb	r3, [r7, #110]
 1534 0c68 0133     		adds	r3, r3, #1
 1535 0c6a 87F86E30 		strb	r3, [r7, #110]
 1536              	.L62:
 602:.\LINX.c      ****                 uint8 port = command[6 + i] / 10;
 1537              		.loc 1 602 0 is_stmt 0 discriminator 1
 1538 0c6e 97F86E20 		ldrb	r2, [r7, #110]	@ zero_extendqisi2
 1539 0c72 7B68     		ldr	r3, [r7, #4]
 1540 0c74 0133     		adds	r3, r3, #1
 1541 0c76 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1542 0c78 073B     		subs	r3, r3, #7
 1543 0c7a 9A42     		cmp	r2, r3
 1544 0c7c FFF670AF 		blt	.L64
 629:.\LINX.c      ****             }
 630:.\LINX.c      ****             
 631:.\LINX.c      ****             break;
 1545              		.loc 1 631 0 is_stmt 1
 1546 0c80 46E2     		b	.L55
 1547              	.L41:
 632:.\LINX.c      ****         // Get AI Reference
 633:.\LINX.c      ****         case 0x61:
 634:.\LINX.c      ****             DEBUG_PRINT("Get AI Reference\r\n");
 635:.\LINX.c      ****             
 636:.\LINX.c      ****             // Return AI reference voltage
 637:.\LINX.c      ****             response_data_len = 4;
 1548              		.loc 1 637 0
 1549 0c82 0423     		movs	r3, #4
 1550 0c84 87F82B30 		strb	r3, [r7, #43]
 638:.\LINX.c      ****             response_data[0] = (LINX_AI_REF_UVOLTS >> 24) & 0xFF;
 1551              		.loc 1 638 0
 1552 0c88 0023     		movs	r3, #0
 1553 0c8a 87F82C30 		strb	r3, [r7, #44]
 639:.\LINX.c      ****             response_data[1] = (LINX_AI_REF_UVOLTS >> 16) & 0xFF;
 1554              		.loc 1 639 0
 1555 0c8e 4C23     		movs	r3, #76
 1556 0c90 87F82D30 		strb	r3, [r7, #45]
 640:.\LINX.c      ****             response_data[2] = (LINX_AI_REF_UVOLTS >> 8) & 0xFF;
 1557              		.loc 1 640 0
 1558 0c94 4B23     		movs	r3, #75
 1559 0c96 87F82E30 		strb	r3, [r7, #46]
 641:.\LINX.c      ****             response_data[3] = LINX_AI_REF_UVOLTS & 0xFF;
 1560              		.loc 1 641 0
 1561 0c9a 4023     		movs	r3, #64
 1562 0c9c 87F82F30 		strb	r3, [r7, #47]
 642:.\LINX.c      ****                 
 643:.\LINX.c      ****             break;
 1563              		.loc 1 643 0
 1564 0ca0 36E2     		b	.L55
 1565              	.L42:
 1566              	.LBB5:
 644:.\LINX.c      ****             
 645:.\LINX.c      ****         // Analog Read
 646:.\LINX.c      ****         case 0x64: {
 647:.\LINX.c      ****             DEBUG_PRINT("Analog Read\r\n");
ARM GAS  C:\Users\Robert\AppData\Local\Temp\ccBTR6tf.s 			page 40


 648:.\LINX.c      ****             
 649:.\LINX.c      ****             // Return resolution of ADC conversions
 650:.\LINX.c      ****             response_data_len = 1;
 1567              		.loc 1 650 0
 1568 0ca2 0123     		movs	r3, #1
 1569 0ca4 87F82B30 		strb	r3, [r7, #43]
 651:.\LINX.c      ****             response_data[0] = LINX_AI_BITS;
 1570              		.loc 1 651 0
 1571 0ca8 0C23     		movs	r3, #12
 1572 0caa 87F82C30 		strb	r3, [r7, #44]
 652:.\LINX.c      ****             
 653:.\LINX.c      ****             // Initialize byte packing counters
 654:.\LINX.c      ****             uint8 response_bits_remaining = 8;
 1573              		.loc 1 654 0
 1574 0cae 0823     		movs	r3, #8
 1575 0cb0 FB77     		strb	r3, [r7, #31]
 655:.\LINX.c      ****             response_data[response_data_len] = 0x00;
 1576              		.loc 1 655 0
 1577 0cb2 97F82B30 		ldrb	r3, [r7, #43]	@ zero_extendqisi2
 1578 0cb6 07F17002 		add	r2, r7, #112
 1579 0cba 1344     		add	r3, r3, r2
 1580 0cbc 0022     		movs	r2, #0
 1581 0cbe 03F8442C 		strb	r2, [r3, #-68]
 656:.\LINX.c      ****             
 657:.\LINX.c      ****             // For each pin
 658:.\LINX.c      ****             for (i = 0; i < (command[1] - 7); ++i) {
 1582              		.loc 1 658 0
 1583 0cc2 0023     		movs	r3, #0
 1584 0cc4 87F86E30 		strb	r3, [r7, #110]
 1585 0cc8 39E0     		b	.L65
 1586              	.L99:
 1587 0cca 00BF     		.align	2
 1588              	.L98:
 1589 0ccc 00800040 		.word	1073774592
 1590 0cd0 01800040 		.word	1073774593
 1591 0cd4 00000000 		.word	.LC0
 1592 0cd8 CDCCCCCC 		.word	-858993459
 1593 0cdc 00000000 		.word	vessel
 1594              	.L66:
 1595              	.LBB6:
 659:.\LINX.c      ****                 uint8 pin = command[6 + i] - 1;
 1596              		.loc 1 659 0 discriminator 3
 1597 0ce0 97F86E30 		ldrb	r3, [r7, #110]	@ zero_extendqisi2
 1598 0ce4 0633     		adds	r3, r3, #6
 1599 0ce6 1A46     		mov	r2, r3
 1600 0ce8 7B68     		ldr	r3, [r7, #4]
 1601 0cea 1344     		add	r3, r3, r2
 1602 0cec 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1603 0cee 013B     		subs	r3, r3, #1
 1604 0cf0 87F85E30 		strb	r3, [r7, #94]
 660:.\LINX.c      ****                 
 661:.\LINX.c      ****                 DEBUG_PRINT("\t\t\tPin: %u\r\n", pin);
 662:.\LINX.c      ****                 
 663:.\LINX.c      ****                 // Read pin
 664:.\LINX.c      ****                 vessel.addr = ANALOG_IN_REGISTER;
 1605              		.loc 1 664 0 discriminator 3
 1606 0cf4 C54B     		ldr	r3, .L100
ARM GAS  C:\Users\Robert\AppData\Local\Temp\ccBTR6tf.s 			page 41


 1607 0cf6 1722     		movs	r2, #23
 1608 0cf8 1A70     		strb	r2, [r3]
 665:.\LINX.c      ****                 vessel.cmd = 0x00;
 1609              		.loc 1 665 0 discriminator 3
 1610 0cfa C44B     		ldr	r3, .L100
 1611 0cfc 0022     		movs	r2, #0
 1612 0cfe 5A70     		strb	r2, [r3, #1]
 666:.\LINX.c      ****                 vessel.dat = pin;
 1613              		.loc 1 666 0 discriminator 3
 1614 0d00 97F85E30 		ldrb	r3, [r7, #94]	@ zero_extendqisi2
 1615 0d04 9AB2     		uxth	r2, r3
 1616 0d06 C14B     		ldr	r3, .L100
 1617 0d08 5A80     		strh	r2, [r3, #2]	@ movhi
 667:.\LINX.c      ****                 uint32 result;
 668:.\LINX.c      ****                 readData(vessel, &result);
 1618              		.loc 1 668 0 discriminator 3
 1619 0d0a C04B     		ldr	r3, .L100
 1620 0d0c 07F11802 		add	r2, r7, #24
 1621 0d10 0092     		str	r2, [sp]
 1622 0d12 0FCB     		ldmia	r3, {r0, r1, r2, r3}
 1623 0d14 FFF7FEFF 		bl	readData
 669:.\LINX.c      ****                 
 670:.\LINX.c      ****                 DEBUG_PRINT("\t\t\tResult: %x\r\n", (unsigned int)result);
 671:.\LINX.c      ****                 
 672:.\LINX.c      ****                 // Pack response
 673:.\LINX.c      ****                 LINX_PackResult(response_data, &response_data_len, LINX_AI_BITS, &response_bits_rem
 1624              		.loc 1 673 0 discriminator 3
 1625 0d18 BB69     		ldr	r3, [r7, #24]
 1626 0d1a 07F12C01 		add	r1, r7, #44
 1627 0d1e 07F12B02 		add	r2, r7, #43
 1628 0d22 07F11F04 		add	r4, r7, #31
 1629 0d26 0093     		str	r3, [sp]
 1630 0d28 0846     		mov	r0, r1
 1631 0d2a 1146     		mov	r1, r2
 1632 0d2c 0C22     		movs	r2, #12
 1633 0d2e 2346     		mov	r3, r4
 1634 0d30 FFF7FEFF 		bl	LINX_PackResult
 1635              	.LBE6:
 658:.\LINX.c      ****                 uint8 pin = command[6 + i] - 1;
 1636              		.loc 1 658 0 discriminator 3
 1637 0d34 97F86E30 		ldrb	r3, [r7, #110]
 1638 0d38 0133     		adds	r3, r3, #1
 1639 0d3a 87F86E30 		strb	r3, [r7, #110]
 1640              	.L65:
 658:.\LINX.c      ****                 uint8 pin = command[6 + i] - 1;
 1641              		.loc 1 658 0 is_stmt 0 discriminator 1
 1642 0d3e 97F86E20 		ldrb	r2, [r7, #110]	@ zero_extendqisi2
 1643 0d42 7B68     		ldr	r3, [r7, #4]
 1644 0d44 0133     		adds	r3, r3, #1
 1645 0d46 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1646 0d48 073B     		subs	r3, r3, #7
 1647 0d4a 9A42     		cmp	r2, r3
 1648 0d4c C8DB     		blt	.L66
 674:.\LINX.c      ****             }
 675:.\LINX.c      ****             
 676:.\LINX.c      ****             // Take care of response_data_len
 677:.\LINX.c      ****             if (response_bits_remaining > 0) {
ARM GAS  C:\Users\Robert\AppData\Local\Temp\ccBTR6tf.s 			page 42


 1649              		.loc 1 677 0 is_stmt 1
 1650 0d4e FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 1651 0d50 002B     		cmp	r3, #0
 1652 0d52 05D0     		beq	.L67
 678:.\LINX.c      ****                 ++response_data_len;
 1653              		.loc 1 678 0
 1654 0d54 97F82B30 		ldrb	r3, [r7, #43]	@ zero_extendqisi2
 1655 0d58 0133     		adds	r3, r3, #1
 1656 0d5a DBB2     		uxtb	r3, r3
 1657 0d5c 87F82B30 		strb	r3, [r7, #43]
 1658              	.L67:
 679:.\LINX.c      ****             }
 680:.\LINX.c      ****             
 681:.\LINX.c      ****             break;
 1659              		.loc 1 681 0
 1660 0d60 00BF     		nop
 1661 0d62 D5E1     		b	.L55
 1662              	.L43:
 1663              	.LBE5:
 682:.\LINX.c      ****         }
 683:.\LINX.c      ****             
 684:.\LINX.c      ****         // Analog write
 685:.\LINX.c      ****         // Note: This assumes 8 bit values, will need bit unpacking logic if you ever want to write
 686:.\LINX.c      ****         case 0x65:
 687:.\LINX.c      ****             DEBUG_PRINT("Analog write\r\n");
 688:.\LINX.c      ****             
 689:.\LINX.c      ****             // For each pin
 690:.\LINX.c      ****             for (i = 0; i < command[6]; ++i) {
 1664              		.loc 1 690 0
 1665 0d64 0023     		movs	r3, #0
 1666 0d66 87F86E30 		strb	r3, [r7, #110]
 1667 0d6a 32E0     		b	.L68
 1668              	.L69:
 1669              	.LBB7:
 691:.\LINX.c      ****                 uint8 pin = command[7 + i] - 1;
 1670              		.loc 1 691 0 discriminator 3
 1671 0d6c 97F86E30 		ldrb	r3, [r7, #110]	@ zero_extendqisi2
 1672 0d70 0733     		adds	r3, r3, #7
 1673 0d72 1A46     		mov	r2, r3
 1674 0d74 7B68     		ldr	r3, [r7, #4]
 1675 0d76 1344     		add	r3, r3, r2
 1676 0d78 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1677 0d7a 013B     		subs	r3, r3, #1
 1678 0d7c 87F85D30 		strb	r3, [r7, #93]
 692:.\LINX.c      ****                 uint8 value = command[7 + command[6] + i];
 1679              		.loc 1 692 0 discriminator 3
 1680 0d80 7B68     		ldr	r3, [r7, #4]
 1681 0d82 0633     		adds	r3, r3, #6
 1682 0d84 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1683 0d86 DA1D     		adds	r2, r3, #7
 1684 0d88 97F86E30 		ldrb	r3, [r7, #110]	@ zero_extendqisi2
 1685 0d8c 1344     		add	r3, r3, r2
 1686 0d8e 1A46     		mov	r2, r3
 1687 0d90 7B68     		ldr	r3, [r7, #4]
 1688 0d92 1344     		add	r3, r3, r2
 1689 0d94 1B78     		ldrb	r3, [r3]
 1690 0d96 87F85C30 		strb	r3, [r7, #92]
ARM GAS  C:\Users\Robert\AppData\Local\Temp\ccBTR6tf.s 			page 43


 693:.\LINX.c      ****                 
 694:.\LINX.c      ****                 DEBUG_PRINT("\t\tPin: %u Value: %u\r\n", pin, value);
 695:.\LINX.c      ****                 
 696:.\LINX.c      ****                 // Output value
 697:.\LINX.c      ****                 vessel.addr = VDAC0_CONTROL + pin;   // Choose which VDAC
 1691              		.loc 1 697 0 discriminator 3
 1692 0d9a 97F85D30 		ldrb	r3, [r7, #93]
 1693 0d9e 0433     		adds	r3, r3, #4
 1694 0da0 DAB2     		uxtb	r2, r3
 1695 0da2 9A4B     		ldr	r3, .L100
 1696 0da4 1A70     		strb	r2, [r3]
 698:.\LINX.c      ****                 vessel.cmd = 0x04;                   // Set value command
 1697              		.loc 1 698 0 discriminator 3
 1698 0da6 994B     		ldr	r3, .L100
 1699 0da8 0422     		movs	r2, #4
 1700 0daa 5A70     		strb	r2, [r3, #1]
 699:.\LINX.c      ****                 vessel.dat = value;                 // Set value
 1701              		.loc 1 699 0 discriminator 3
 1702 0dac 97F85C30 		ldrb	r3, [r7, #92]	@ zero_extendqisi2
 1703 0db0 9AB2     		uxth	r2, r3
 1704 0db2 964B     		ldr	r3, .L100
 1705 0db4 5A80     		strh	r2, [r3, #2]	@ movhi
 700:.\LINX.c      ****                 uint32 result = 0x00;
 1706              		.loc 1 700 0 discriminator 3
 1707 0db6 0023     		movs	r3, #0
 1708 0db8 7B61     		str	r3, [r7, #20]
 701:.\LINX.c      ****                 readData(vessel, &result);
 1709              		.loc 1 701 0 discriminator 3
 1710 0dba 944B     		ldr	r3, .L100
 1711 0dbc 07F11402 		add	r2, r7, #20
 1712 0dc0 0092     		str	r2, [sp]
 1713 0dc2 0FCB     		ldmia	r3, {r0, r1, r2, r3}
 1714 0dc4 FFF7FEFF 		bl	readData
 1715              	.LBE7:
 690:.\LINX.c      ****                 uint8 pin = command[7 + i] - 1;
 1716              		.loc 1 690 0 discriminator 3
 1717 0dc8 97F86E30 		ldrb	r3, [r7, #110]
 1718 0dcc 0133     		adds	r3, r3, #1
 1719 0dce 87F86E30 		strb	r3, [r7, #110]
 1720              	.L68:
 690:.\LINX.c      ****                 uint8 pin = command[7 + i] - 1;
 1721              		.loc 1 690 0 is_stmt 0 discriminator 1
 1722 0dd2 7B68     		ldr	r3, [r7, #4]
 1723 0dd4 0633     		adds	r3, r3, #6
 1724 0dd6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1725 0dd8 97F86E20 		ldrb	r2, [r7, #110]	@ zero_extendqisi2
 1726 0ddc 9A42     		cmp	r2, r3
 1727 0dde C5D3     		bcc	.L69
 702:.\LINX.c      ****             }
 703:.\LINX.c      ****             
 704:.\LINX.c      ****             break;
 1728              		.loc 1 704 0 is_stmt 1
 1729 0de0 96E1     		b	.L55
 1730              	.L44:
 705:.\LINX.c      ****             
 706:.\LINX.c      ****         // PWM Set Duty Cycle
 707:.\LINX.c      ****         case 0x83:
ARM GAS  C:\Users\Robert\AppData\Local\Temp\ccBTR6tf.s 			page 44


 708:.\LINX.c      ****             DEBUG_PRINT("PWM Set Duty Cycle\r\n");
 709:.\LINX.c      ****             
 710:.\LINX.c      ****             // For each pin
 711:.\LINX.c      ****             for (i = 0; i < command[6]; ++i) {
 1731              		.loc 1 711 0
 1732 0de2 0023     		movs	r3, #0
 1733 0de4 87F86E30 		strb	r3, [r7, #110]
 1734 0de8 7DE0     		b	.L70
 1735              	.L81:
 1736              	.LBB8:
 712:.\LINX.c      ****                 uint8 pin = command[7 + i] - 1;
 1737              		.loc 1 712 0
 1738 0dea 97F86E30 		ldrb	r3, [r7, #110]	@ zero_extendqisi2
 1739 0dee 0733     		adds	r3, r3, #7
 1740 0df0 1A46     		mov	r2, r3
 1741 0df2 7B68     		ldr	r3, [r7, #4]
 1742 0df4 1344     		add	r3, r3, r2
 1743 0df6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1744 0df8 013B     		subs	r3, r3, #1
 1745 0dfa 87F85B30 		strb	r3, [r7, #91]
 713:.\LINX.c      ****                 uint8 value = command[7 + command[6] + i];
 1746              		.loc 1 713 0
 1747 0dfe 7B68     		ldr	r3, [r7, #4]
 1748 0e00 0633     		adds	r3, r3, #6
 1749 0e02 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1750 0e04 DA1D     		adds	r2, r3, #7
 1751 0e06 97F86E30 		ldrb	r3, [r7, #110]	@ zero_extendqisi2
 1752 0e0a 1344     		add	r3, r3, r2
 1753 0e0c 1A46     		mov	r2, r3
 1754 0e0e 7B68     		ldr	r3, [r7, #4]
 1755 0e10 1344     		add	r3, r3, r2
 1756 0e12 1B78     		ldrb	r3, [r3]
 1757 0e14 87F85A30 		strb	r3, [r7, #90]
 714:.\LINX.c      ****                 
 715:.\LINX.c      ****                 DEBUG_PRINT("\t\tPin: %u Value: %u\r\n", pin, value);
 716:.\LINX.c      ****                 
 717:.\LINX.c      ****                 // Select PWM channel
 718:.\LINX.c      ****                 uint32 result;
 719:.\LINX.c      ****                 switch(pin) {
 1758              		.loc 1 719 0
 1759 0e18 97F85B30 		ldrb	r3, [r7, #91]	@ zero_extendqisi2
 1760 0e1c 072B     		cmp	r3, #7
 1761 0e1e 33D8     		bhi	.L71
 1762 0e20 01A2     		adr	r2, .L73
 1763 0e22 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 1764 0e26 00BF     		.p2align 2
 1765              	.L73:
 1766 0e28 490E0000 		.word	.L72+1
 1767 0e2c 510E0000 		.word	.L74+1
 1768 0e30 590E0000 		.word	.L75+1
 1769 0e34 610E0000 		.word	.L76+1
 1770 0e38 690E0000 		.word	.L77+1
 1771 0e3c 710E0000 		.word	.L78+1
 1772 0e40 790E0000 		.word	.L79+1
 1773 0e44 810E0000 		.word	.L80+1
 1774              		.p2align 1
 1775              	.L72:
ARM GAS  C:\Users\Robert\AppData\Local\Temp\ccBTR6tf.s 			page 45


 720:.\LINX.c      ****                     case 0: vessel.addr = PWM_REGISTER0; break;
 1776              		.loc 1 720 0
 1777 0e48 704B     		ldr	r3, .L100
 1778 0e4a 0922     		movs	r2, #9
 1779 0e4c 1A70     		strb	r2, [r3]
 1780 0e4e 1BE0     		b	.L71
 1781              	.L74:
 721:.\LINX.c      ****                     case 1: vessel.addr = PWM_REGISTER1; break;
 1782              		.loc 1 721 0
 1783 0e50 6E4B     		ldr	r3, .L100
 1784 0e52 0A22     		movs	r2, #10
 1785 0e54 1A70     		strb	r2, [r3]
 1786 0e56 17E0     		b	.L71
 1787              	.L75:
 722:.\LINX.c      ****                     case 2: vessel.addr = PWM_REGISTER2; break;
 1788              		.loc 1 722 0
 1789 0e58 6C4B     		ldr	r3, .L100
 1790 0e5a 0B22     		movs	r2, #11
 1791 0e5c 1A70     		strb	r2, [r3]
 1792 0e5e 13E0     		b	.L71
 1793              	.L76:
 723:.\LINX.c      ****                     case 3: vessel.addr = PWM_REGISTER3; break;
 1794              		.loc 1 723 0
 1795 0e60 6A4B     		ldr	r3, .L100
 1796 0e62 0C22     		movs	r2, #12
 1797 0e64 1A70     		strb	r2, [r3]
 1798 0e66 0FE0     		b	.L71
 1799              	.L77:
 724:.\LINX.c      ****                     case 4: vessel.addr = PWM_REGISTER4; break;
 1800              		.loc 1 724 0
 1801 0e68 684B     		ldr	r3, .L100
 1802 0e6a 0D22     		movs	r2, #13
 1803 0e6c 1A70     		strb	r2, [r3]
 1804 0e6e 0BE0     		b	.L71
 1805              	.L78:
 725:.\LINX.c      ****                     case 5: vessel.addr = PWM_REGISTER5; break;
 1806              		.loc 1 725 0
 1807 0e70 664B     		ldr	r3, .L100
 1808 0e72 0E22     		movs	r2, #14
 1809 0e74 1A70     		strb	r2, [r3]
 1810 0e76 07E0     		b	.L71
 1811              	.L79:
 726:.\LINX.c      ****                     case 6: vessel.addr = PWM_REGISTER6; break;
 1812              		.loc 1 726 0
 1813 0e78 644B     		ldr	r3, .L100
 1814 0e7a 0F22     		movs	r2, #15
 1815 0e7c 1A70     		strb	r2, [r3]
 1816 0e7e 03E0     		b	.L71
 1817              	.L80:
 727:.\LINX.c      ****                     case 7: vessel.addr = PWM_REGISTER7; break;
 1818              		.loc 1 727 0
 1819 0e80 624B     		ldr	r3, .L100
 1820 0e82 1022     		movs	r2, #16
 1821 0e84 1A70     		strb	r2, [r3]
 1822 0e86 00BF     		nop
 1823              	.L71:
 728:.\LINX.c      ****                 }
ARM GAS  C:\Users\Robert\AppData\Local\Temp\ccBTR6tf.s 			page 46


 729:.\LINX.c      ****                 
 730:.\LINX.c      ****                 // Get period counts
 731:.\LINX.c      ****                 vessel.cmd = 0x0D;         // Read period command
 1824              		.loc 1 731 0 discriminator 2
 1825 0e88 604B     		ldr	r3, .L100
 1826 0e8a 0D22     		movs	r2, #13
 1827 0e8c 5A70     		strb	r2, [r3, #1]
 732:.\LINX.c      ****                 readData(vessel, &result);
 1828              		.loc 1 732 0 discriminator 2
 1829 0e8e 5F4B     		ldr	r3, .L100
 1830 0e90 07F11002 		add	r2, r7, #16
 1831 0e94 0092     		str	r2, [sp]
 1832 0e96 0FCB     		ldmia	r3, {r0, r1, r2, r3}
 1833 0e98 FFF7FEFF 		bl	readData
 733:.\LINX.c      ****                 
 734:.\LINX.c      ****                 DEBUG_PRINT("\t\tPeriod: %lu\r\n", result);
 735:.\LINX.c      ****                 
 736:.\LINX.c      ****                 // Calculate comparison value
 737:.\LINX.c      ****                 vessel.dat = (uint32)value * (uint32)result / (uint32)255;
 1834              		.loc 1 737 0 discriminator 2
 1835 0e9c 97F85A30 		ldrb	r3, [r7, #90]	@ zero_extendqisi2
 1836 0ea0 3A69     		ldr	r2, [r7, #16]
 1837 0ea2 02FB03F3 		mul	r3, r2, r3
 1838 0ea6 5A4A     		ldr	r2, .L100+4
 1839 0ea8 A2FB0323 		umull	r2, r3, r2, r3
 1840 0eac DB09     		lsrs	r3, r3, #7
 1841 0eae 9AB2     		uxth	r2, r3
 1842 0eb0 564B     		ldr	r3, .L100
 1843 0eb2 5A80     		strh	r2, [r3, #2]	@ movhi
 738:.\LINX.c      ****                 
 739:.\LINX.c      ****                 DEBUG_PRINT("\t\tCompraison value: %u\r\n", vessel.dat);
 740:.\LINX.c      ****                 
 741:.\LINX.c      ****                 // Start PWM channel
 742:.\LINX.c      ****                 vessel.cmd = 0x00;
 1844              		.loc 1 742 0 discriminator 2
 1845 0eb4 554B     		ldr	r3, .L100
 1846 0eb6 0022     		movs	r2, #0
 1847 0eb8 5A70     		strb	r2, [r3, #1]
 743:.\LINX.c      ****                 readData(vessel, &result);
 1848              		.loc 1 743 0 discriminator 2
 1849 0eba 544B     		ldr	r3, .L100
 1850 0ebc 07F11002 		add	r2, r7, #16
 1851 0ec0 0092     		str	r2, [sp]
 1852 0ec2 0FCB     		ldmia	r3, {r0, r1, r2, r3}
 1853 0ec4 FFF7FEFF 		bl	readData
 744:.\LINX.c      ****                 
 745:.\LINX.c      ****                 // Set PWM compare value
 746:.\LINX.c      ****                 vessel.cmd = 0x0E;
 1854              		.loc 1 746 0 discriminator 2
 1855 0ec8 504B     		ldr	r3, .L100
 1856 0eca 0E22     		movs	r2, #14
 1857 0ecc 5A70     		strb	r2, [r3, #1]
 747:.\LINX.c      ****                 readData(vessel, &result);
 1858              		.loc 1 747 0 discriminator 2
 1859 0ece 4F4B     		ldr	r3, .L100
 1860 0ed0 07F11002 		add	r2, r7, #16
 1861 0ed4 0092     		str	r2, [sp]
ARM GAS  C:\Users\Robert\AppData\Local\Temp\ccBTR6tf.s 			page 47


 1862 0ed6 0FCB     		ldmia	r3, {r0, r1, r2, r3}
 1863 0ed8 FFF7FEFF 		bl	readData
 1864              	.LBE8:
 711:.\LINX.c      ****                 uint8 pin = command[7 + i] - 1;
 1865              		.loc 1 711 0 discriminator 2
 1866 0edc 97F86E30 		ldrb	r3, [r7, #110]
 1867 0ee0 0133     		adds	r3, r3, #1
 1868 0ee2 87F86E30 		strb	r3, [r7, #110]
 1869              	.L70:
 711:.\LINX.c      ****                 uint8 pin = command[7 + i] - 1;
 1870              		.loc 1 711 0 is_stmt 0 discriminator 1
 1871 0ee6 7B68     		ldr	r3, [r7, #4]
 1872 0ee8 0633     		adds	r3, r3, #6
 1873 0eea 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1874 0eec 97F86E20 		ldrb	r2, [r7, #110]	@ zero_extendqisi2
 1875 0ef0 9A42     		cmp	r2, r3
 1876 0ef2 FFF47AAF 		bcc	.L81
 748:.\LINX.c      ****             }
 749:.\LINX.c      ****             
 750:.\LINX.c      ****             break;
 1877              		.loc 1 750 0 is_stmt 1
 1878 0ef6 0BE1     		b	.L55
 1879              	.L45:
 751:.\LINX.c      ****                         
 752:.\LINX.c      ****         // QE Reset
 753:.\LINX.c      ****         case 0xA0:
 754:.\LINX.c      ****             DEBUG_PRINT("QE Reset\r\n");
 755:.\LINX.c      ****             
 756:.\LINX.c      ****             // For each channel
 757:.\LINX.c      ****             for (i = 0; i < command[6]; ++i) {
 1880              		.loc 1 757 0
 1881 0ef8 0023     		movs	r3, #0
 1882 0efa 87F86E30 		strb	r3, [r7, #110]
 1883 0efe 11E0     		b	.L82
 1884              	.L83:
 1885              	.LBB9:
 758:.\LINX.c      ****                 uint8 channel = command[7 + i];
 1886              		.loc 1 758 0
 1887 0f00 97F86E30 		ldrb	r3, [r7, #110]	@ zero_extendqisi2
 1888 0f04 0733     		adds	r3, r3, #7
 1889 0f06 1A46     		mov	r2, r3
 1890 0f08 7B68     		ldr	r3, [r7, #4]
 1891 0f0a 1344     		add	r3, r3, r2
 1892 0f0c 1B78     		ldrb	r3, [r3]
 1893 0f0e 87F85930 		strb	r3, [r7, #89]
 759:.\LINX.c      ****                 
 760:.\LINX.c      ****                 DEBUG_PRINT("\t\t\tChannel: %u\r\n", channel);
 761:.\LINX.c      ****                 
 762:.\LINX.c      ****                 // Set counter value to 0
 763:.\LINX.c      ****                 switch(channel) {
 764:.\LINX.c      ****                     #ifdef CY_QUADRATURE_DECODER_QuadDec_1_H
 765:.\LINX.c      ****                         case 0x01: QuadDec_1_SetCounter(0); break;
 766:.\LINX.c      ****                     #endif
 767:.\LINX.c      ****                     
 768:.\LINX.c      ****                     default: status = LINX_STATUS_L_UNKNOWN_ERROR; break;
 1894              		.loc 1 768 0
 1895 0f12 0323     		movs	r3, #3
ARM GAS  C:\Users\Robert\AppData\Local\Temp\ccBTR6tf.s 			page 48


 1896 0f14 87F86F30 		strb	r3, [r7, #111]
 1897 0f18 00BF     		nop
 1898              	.LBE9:
 757:.\LINX.c      ****                 uint8 channel = command[7 + i];
 1899              		.loc 1 757 0
 1900 0f1a 97F86E30 		ldrb	r3, [r7, #110]
 1901 0f1e 0133     		adds	r3, r3, #1
 1902 0f20 87F86E30 		strb	r3, [r7, #110]
 1903              	.L82:
 757:.\LINX.c      ****                 uint8 channel = command[7 + i];
 1904              		.loc 1 757 0 is_stmt 0 discriminator 1
 1905 0f24 7B68     		ldr	r3, [r7, #4]
 1906 0f26 0633     		adds	r3, r3, #6
 1907 0f28 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1908 0f2a 97F86E20 		ldrb	r2, [r7, #110]	@ zero_extendqisi2
 1909 0f2e 9A42     		cmp	r2, r3
 1910 0f30 E6D3     		bcc	.L83
 769:.\LINX.c      ****                 }
 770:.\LINX.c      ****             }
 771:.\LINX.c      ****             
 772:.\LINX.c      ****             break;
 1911              		.loc 1 772 0 is_stmt 1
 1912 0f32 EDE0     		b	.L55
 1913              	.L46:
 1914              	.LBB10:
 773:.\LINX.c      ****             
 774:.\LINX.c      ****         // QE Read
 775:.\LINX.c      ****         case 0xA1: {
 776:.\LINX.c      ****             DEBUG_PRINT("QE Read\r\n");
 777:.\LINX.c      ****             
 778:.\LINX.c      ****             // Return resolution of QE counters
 779:.\LINX.c      ****             response_data_len = 1;
 1915              		.loc 1 779 0
 1916 0f34 0123     		movs	r3, #1
 1917 0f36 87F82B30 		strb	r3, [r7, #43]
 780:.\LINX.c      ****             response_data[0] = LINX_QE_BITS;
 1918              		.loc 1 780 0
 1919 0f3a 1023     		movs	r3, #16
 1920 0f3c 87F82C30 		strb	r3, [r7, #44]
 781:.\LINX.c      ****             
 782:.\LINX.c      ****             // Initialize byte packing variables
 783:.\LINX.c      ****             uint8 response_bits_remaining = 8;
 1921              		.loc 1 783 0
 1922 0f40 0823     		movs	r3, #8
 1923 0f42 FB73     		strb	r3, [r7, #15]
 784:.\LINX.c      ****             response_data[response_data_len] = 0x00;
 1924              		.loc 1 784 0
 1925 0f44 97F82B30 		ldrb	r3, [r7, #43]	@ zero_extendqisi2
 1926 0f48 07F17002 		add	r2, r7, #112
 1927 0f4c 1344     		add	r3, r3, r2
 1928 0f4e 0022     		movs	r2, #0
 1929 0f50 03F8442C 		strb	r2, [r3, #-68]
 785:.\LINX.c      ****             
 786:.\LINX.c      ****             // For each channel
 787:.\LINX.c      ****             for (i = 0; i < (command[1] - 7); ++i) {
 1930              		.loc 1 787 0
 1931 0f54 0023     		movs	r3, #0
ARM GAS  C:\Users\Robert\AppData\Local\Temp\ccBTR6tf.s 			page 49


 1932 0f56 87F86E30 		strb	r3, [r7, #110]
 1933 0f5a 21E0     		b	.L84
 1934              	.L85:
 1935              	.LBB11:
 788:.\LINX.c      ****                 uint8 channel = command[6 + i];
 1936              		.loc 1 788 0
 1937 0f5c 97F86E30 		ldrb	r3, [r7, #110]	@ zero_extendqisi2
 1938 0f60 0633     		adds	r3, r3, #6
 1939 0f62 1A46     		mov	r2, r3
 1940 0f64 7B68     		ldr	r3, [r7, #4]
 1941 0f66 1344     		add	r3, r3, r2
 1942 0f68 1B78     		ldrb	r3, [r3]
 1943 0f6a 87F85830 		strb	r3, [r7, #88]
 789:.\LINX.c      ****                 
 790:.\LINX.c      ****                 DEBUG_PRINT("\t\t\tChannel: %u\r\n", channel);
 791:.\LINX.c      ****                 
 792:.\LINX.c      ****                 // Read QE
 793:.\LINX.c      ****                 int32 result = 0x00;
 1944              		.loc 1 793 0
 1945 0f6e 0023     		movs	r3, #0
 1946 0f70 7B65     		str	r3, [r7, #84]
 794:.\LINX.c      ****                 switch(channel) {
 795:.\LINX.c      ****                     #ifdef CY_QUADRATURE_DECODER_QuadDec_1_H
 796:.\LINX.c      ****                         case 0x01: result = QuadDec_1_GetCounter(); break;
 797:.\LINX.c      ****                     #endif
 798:.\LINX.c      ****                     
 799:.\LINX.c      ****                     default: status = LINX_STATUS_L_UNKNOWN_ERROR; break;
 1947              		.loc 1 799 0
 1948 0f72 0323     		movs	r3, #3
 1949 0f74 87F86F30 		strb	r3, [r7, #111]
 1950 0f78 00BF     		nop
 800:.\LINX.c      ****                 }
 801:.\LINX.c      ****                 
 802:.\LINX.c      ****                 DEBUG_PRINT("\t\t\tResult: %x\r\n", (unsigned int)result);
 803:.\LINX.c      ****                 
 804:.\LINX.c      ****                 // Pack response bits
 805:.\LINX.c      ****                 LINX_PackResult(response_data, &response_data_len, LINX_QE_BITS, &response_bits_rem
 1951              		.loc 1 805 0
 1952 0f7a 7B6D     		ldr	r3, [r7, #84]
 1953 0f7c 07F12C01 		add	r1, r7, #44
 1954 0f80 07F12B02 		add	r2, r7, #43
 1955 0f84 07F10F04 		add	r4, r7, #15
 1956 0f88 0093     		str	r3, [sp]
 1957 0f8a 0846     		mov	r0, r1
 1958 0f8c 1146     		mov	r1, r2
 1959 0f8e 1022     		movs	r2, #16
 1960 0f90 2346     		mov	r3, r4
 1961 0f92 FFF7FEFF 		bl	LINX_PackResult
 1962              	.LBE11:
 787:.\LINX.c      ****                 uint8 channel = command[6 + i];
 1963              		.loc 1 787 0
 1964 0f96 97F86E30 		ldrb	r3, [r7, #110]
 1965 0f9a 0133     		adds	r3, r3, #1
 1966 0f9c 87F86E30 		strb	r3, [r7, #110]
 1967              	.L84:
 787:.\LINX.c      ****                 uint8 channel = command[6 + i];
 1968              		.loc 1 787 0 is_stmt 0 discriminator 1
ARM GAS  C:\Users\Robert\AppData\Local\Temp\ccBTR6tf.s 			page 50


 1969 0fa0 97F86E20 		ldrb	r2, [r7, #110]	@ zero_extendqisi2
 1970 0fa4 7B68     		ldr	r3, [r7, #4]
 1971 0fa6 0133     		adds	r3, r3, #1
 1972 0fa8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1973 0faa 073B     		subs	r3, r3, #7
 1974 0fac 9A42     		cmp	r2, r3
 1975 0fae D5DB     		blt	.L85
 806:.\LINX.c      ****             }
 807:.\LINX.c      ****             
 808:.\LINX.c      ****             // Take care of response_data_len
 809:.\LINX.c      ****             if (response_bits_remaining > 0) {
 1976              		.loc 1 809 0 is_stmt 1
 1977 0fb0 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1978 0fb2 002B     		cmp	r3, #0
 1979 0fb4 05D0     		beq	.L86
 810:.\LINX.c      ****                 ++response_data_len;
 1980              		.loc 1 810 0
 1981 0fb6 97F82B30 		ldrb	r3, [r7, #43]	@ zero_extendqisi2
 1982 0fba 0133     		adds	r3, r3, #1
 1983 0fbc DBB2     		uxtb	r3, r3
 1984 0fbe 87F82B30 		strb	r3, [r7, #43]
 1985              	.L86:
 811:.\LINX.c      ****             }
 812:.\LINX.c      **** 
 813:.\LINX.c      ****             break;
 1986              		.loc 1 813 0
 1987 0fc2 00BF     		nop
 1988 0fc4 A4E0     		b	.L55
 1989              	.L47:
 1990              	.LBE10:
 814:.\LINX.c      ****         }
 815:.\LINX.c      ****             
 816:.\LINX.c      ****         // I2C Open Master
 817:.\LINX.c      ****         case 0xE0:
 818:.\LINX.c      ****             DEBUG_PRINT("I2C Open Master\r\n");
 819:.\LINX.c      ****             
 820:.\LINX.c      ****             switch(command[6]) {
 821:.\LINX.c      ****                 #ifdef CY_I2C_I2C_1_H
 822:.\LINX.c      ****                     #if(I2C_1_MODE_MASTER_ENABLED)
 823:.\LINX.c      ****                         case 0x01: I2C_1_Start(); break;
 824:.\LINX.c      ****                     #endif
 825:.\LINX.c      ****                 #endif
 826:.\LINX.c      ****                 
 827:.\LINX.c      ****                 default: status = LINX_STATUS_L_UNKNOWN_ERROR; break;
 1991              		.loc 1 827 0
 1992 0fc6 0323     		movs	r3, #3
 1993 0fc8 87F86F30 		strb	r3, [r7, #111]
 1994 0fcc 00BF     		nop
 828:.\LINX.c      ****             }
 829:.\LINX.c      ****             
 830:.\LINX.c      ****             break;
 1995              		.loc 1 830 0
 1996 0fce 9FE0     		b	.L55
 1997              	.L48:
 1998              	.LBB12:
 831:.\LINX.c      ****             
 832:.\LINX.c      ****         // I2C Write
ARM GAS  C:\Users\Robert\AppData\Local\Temp\ccBTR6tf.s 			page 51


 833:.\LINX.c      ****         case 0xE2: {
 834:.\LINX.c      ****             DEBUG_PRINT("I2C Write\r\n");
 835:.\LINX.c      ****             
 836:.\LINX.c      ****             // Set transfer type
 837:.\LINX.c      ****             uint8 mode;
 838:.\LINX.c      ****             switch(command[8]) {
 839:.\LINX.c      ****                 #ifdef CY_I2C_I2C_1_H
 840:.\LINX.c      ****                     case(0x00): mode = I2C_1_MODE_COMPLETE_XFER; break;
 841:.\LINX.c      ****                     case(0x01): mode = I2C_1_MODE_REPEAT_START; break;
 842:.\LINX.c      ****                     case(0x02): status = LINX_STATUS_LI2C_EOF; break;
 843:.\LINX.c      ****                     case(0x03): mode = I2C_1_MODE_NO_STOP; break;
 844:.\LINX.c      ****                 #endif
 845:.\LINX.c      ****             }
 846:.\LINX.c      ****             
 847:.\LINX.c      ****             // Break if status is non-okay
 848:.\LINX.c      ****             if (status != LINX_STATUS_L_OK) break;
 1999              		.loc 1 848 0
 2000 0fd0 97F86F30 		ldrb	r3, [r7, #111]	@ zero_extendqisi2
 2001 0fd4 002B     		cmp	r3, #0
 2002 0fd6 00D0     		beq	.L87
 2003 0fd8 9AE0     		b	.L55
 2004              	.L87:
 849:.\LINX.c      **** 
 850:.\LINX.c      ****             switch(command[6]) {
 851:.\LINX.c      ****                 #ifdef CY_I2C_I2C_1_H
 852:.\LINX.c      ****                     #if(I2C_1_MODE_MASTER_ENABLED)
 853:.\LINX.c      ****                         case 0x01:
 854:.\LINX.c      ****                             I2C_1_MasterClearStatus();
 855:.\LINX.c      ****                             I2C_1_MasterWriteBuf(command[7] >> 1, &command[9], command[1] - 10, mod
 856:.\LINX.c      ****                             while((I2C_1_MasterStatus() & I2C_1_MSTAT_WR_CMPLT) == 0);
 857:.\LINX.c      ****                             uint8 I2C_Stat = I2C_1_MasterStatus();
 858:.\LINX.c      ****                             if (I2C_Stat & I2C_1_MSTAT_ERR_XFER) {
 859:.\LINX.c      ****                                 if (I2C_Stat & I2C_1_MSTAT_ERR_ADDR_NAK) {
 860:.\LINX.c      ****                                     status = LINX_STATUS_LI2C_SADDR;
 861:.\LINX.c      ****                                 }
 862:.\LINX.c      ****                                 else {
 863:.\LINX.c      ****                                     status = LINX_STATUS_LI2C_WRITE_FAIL;
 864:.\LINX.c      ****                                 }
 865:.\LINX.c      ****                                 
 866:.\LINX.c      ****                                 DEBUG_PRINT("\t\tI2C_MasterStatus: %x\r\n", I2C_Stat);
 867:.\LINX.c      ****                             }
 868:.\LINX.c      ****                             break;
 869:.\LINX.c      ****                     #endif
 870:.\LINX.c      ****                 #endif
 871:.\LINX.c      ****                 
 872:.\LINX.c      ****                 default: status = LINX_STATUS_L_UNKNOWN_ERROR; break;
 2005              		.loc 1 872 0
 2006 0fda 0323     		movs	r3, #3
 2007 0fdc 87F86F30 		strb	r3, [r7, #111]
 2008 0fe0 00BF     		nop
 873:.\LINX.c      ****             }
 874:.\LINX.c      ****             
 875:.\LINX.c      ****             break;
 2009              		.loc 1 875 0
 2010 0fe2 95E0     		b	.L55
 2011              	.L49:
 2012              	.LBE12:
ARM GAS  C:\Users\Robert\AppData\Local\Temp\ccBTR6tf.s 			page 52


 2013              	.LBB13:
 876:.\LINX.c      ****         }
 877:.\LINX.c      ****             
 878:.\LINX.c      ****         // I2C Read
 879:.\LINX.c      ****         case 0xE3: {
 880:.\LINX.c      ****             DEBUG_PRINT("I2C Read\r\n");
 881:.\LINX.c      ****             
 882:.\LINX.c      ****             // Set transfer type
 883:.\LINX.c      ****             uint8 mode;
 884:.\LINX.c      ****             switch(command[11]) {
 885:.\LINX.c      ****                 #ifdef CY_I2C_I2C_1_H
 886:.\LINX.c      ****                     case(0x00): mode = I2C_1_MODE_COMPLETE_XFER; break;
 887:.\LINX.c      ****                     case(0x01): mode = I2C_1_MODE_REPEAT_START; break;
 888:.\LINX.c      ****                     case(0x02): status = LINX_STATUS_LI2C_EOF; break;
 889:.\LINX.c      ****                     case(0x03): mode = I2C_1_MODE_NO_STOP; break;
 890:.\LINX.c      ****                 #endif
 891:.\LINX.c      ****             }
 892:.\LINX.c      ****             
 893:.\LINX.c      ****             // Break if status is non-okay
 894:.\LINX.c      ****             if (status != LINX_STATUS_L_OK) break;
 2014              		.loc 1 894 0
 2015 0fe4 97F86F30 		ldrb	r3, [r7, #111]	@ zero_extendqisi2
 2016 0fe8 002B     		cmp	r3, #0
 2017 0fea 00D0     		beq	.L88
 2018 0fec 90E0     		b	.L55
 2019              	.L88:
 895:.\LINX.c      ****             
 896:.\LINX.c      ****             // TODO: Support I2C Read timeout
 897:.\LINX.c      ****             switch(command[6]) {
 898:.\LINX.c      ****                 #ifdef CY_I2C_I2C_1_H
 899:.\LINX.c      ****                     #if(I2C_1_MODE_MASTER_ENABLED)
 900:.\LINX.c      ****                         case 0x01:
 901:.\LINX.c      ****                             I2C_1_MasterClearStatus();
 902:.\LINX.c      ****                             I2C_1_MasterReadBuf(command[7] >> 1, response_data, command[8], mode);
 903:.\LINX.c      ****                             while((I2C_1_MasterStatus() & I2C_1_MSTAT_RD_CMPLT) == 0);
 904:.\LINX.c      ****                             uint8 I2C_Stat = I2C_1_MasterStatus();
 905:.\LINX.c      ****                             if (I2C_Stat & I2C_1_MSTAT_ERR_XFER) {
 906:.\LINX.c      ****                                 if (I2C_Stat & I2C_1_MSTAT_ERR_ADDR_NAK) {
 907:.\LINX.c      ****                                     status = LINX_STATUS_LI2C_SADDR;
 908:.\LINX.c      ****                                 }
 909:.\LINX.c      ****                                 else {
 910:.\LINX.c      ****                                     status = LINX_STATUS_LI2C_READ_FAIL;
 911:.\LINX.c      ****                                 }
 912:.\LINX.c      ****                                 
 913:.\LINX.c      ****                                 DEBUG_PRINT("\t\tI2C_MasterStatus: %x\r\n", I2C_Stat);
 914:.\LINX.c      ****                             }
 915:.\LINX.c      ****                             else {
 916:.\LINX.c      ****                                 response_data_len = command[8];
 917:.\LINX.c      ****                             }
 918:.\LINX.c      ****                             break;
 919:.\LINX.c      ****                     #endif
 920:.\LINX.c      ****                 #endif
 921:.\LINX.c      ****                 
 922:.\LINX.c      ****                 default: status = LINX_STATUS_L_UNKNOWN_ERROR; break;
 2020              		.loc 1 922 0
 2021 0fee 0323     		movs	r3, #3
 2022 0ff0 87F86F30 		strb	r3, [r7, #111]
ARM GAS  C:\Users\Robert\AppData\Local\Temp\ccBTR6tf.s 			page 53


 2023 0ff4 00BF     		nop
 923:.\LINX.c      ****             }
 924:.\LINX.c      ****             
 925:.\LINX.c      ****             break;
 2024              		.loc 1 925 0
 2025 0ff6 8BE0     		b	.L55
 2026              	.L50:
 2027              	.LBE13:
 926:.\LINX.c      ****         }
 927:.\LINX.c      ****             
 928:.\LINX.c      ****         // I2C Close
 929:.\LINX.c      ****         case 0xE4:
 930:.\LINX.c      ****             DEBUG_PRINT("I2C Close\r\n");
 931:.\LINX.c      ****             
 932:.\LINX.c      ****             switch(command[6]) {
 933:.\LINX.c      ****                 #ifdef CY_I2C_I2C_1_H
 934:.\LINX.c      ****                     #if(I2C_1_MODE_MASTER_ENABLED)
 935:.\LINX.c      ****                         case 0x01:
 936:.\LINX.c      ****                             I2C_1_MasterClearReadBuf();
 937:.\LINX.c      ****                             I2C_1_MasterClearStatus();
 938:.\LINX.c      ****                             I2C_1_MasterClearWriteBuf();
 939:.\LINX.c      ****                             I2C_1_Stop();
 940:.\LINX.c      ****                             break;
 941:.\LINX.c      ****                     #endif
 942:.\LINX.c      ****                 #endif
 943:.\LINX.c      ****                 
 944:.\LINX.c      ****                 default: status = LINX_STATUS_L_UNKNOWN_ERROR; break;
 2028              		.loc 1 944 0
 2029 0ff8 0323     		movs	r3, #3
 2030 0ffa 87F86F30 		strb	r3, [r7, #111]
 2031 0ffe 00BF     		nop
 945:.\LINX.c      ****             }
 946:.\LINX.c      ****             
 947:.\LINX.c      ****             break;
 2032              		.loc 1 947 0
 2033 1000 86E0     		b	.L55
 2034              	.L51:
 948:.\LINX.c      ****             
 949:.\LINX.c      ****         // SPI Open
 950:.\LINX.c      ****         case 0x100:
 951:.\LINX.c      ****             DEBUG_PRINT("SPI Open\r\n");
 952:.\LINX.c      ****             
 953:.\LINX.c      ****             switch(command[6]) {
 954:.\LINX.c      ****                 #ifdef CY_SPIM_SPIM_1_H
 955:.\LINX.c      ****                     case 0x01: SPIM_1_Start(); break;
 956:.\LINX.c      ****                 #endif
 957:.\LINX.c      ****                 
 958:.\LINX.c      ****                 default: status = LINX_STATUS_L_UNKNOWN_ERROR; break;
 2035              		.loc 1 958 0
 2036 1002 0323     		movs	r3, #3
 2037 1004 87F86F30 		strb	r3, [r7, #111]
 2038 1008 00BF     		nop
 959:.\LINX.c      ****             }
 960:.\LINX.c      ****             
 961:.\LINX.c      ****             break;
 2039              		.loc 1 961 0
 2040 100a 81E0     		b	.L55
ARM GAS  C:\Users\Robert\AppData\Local\Temp\ccBTR6tf.s 			page 54


 2041              	.L101:
 2042              		.align	2
 2043              	.L100:
 2044 100c 00000000 		.word	vessel
 2045 1010 81808080 		.word	-2139062143
 2046              	.L52:
 962:.\LINX.c      ****             
 963:.\LINX.c      ****         // SPI Write/Read
 964:.\LINX.c      ****         case 0x107:
 965:.\LINX.c      ****             DEBUG_PRINT("SPI Write/Read\r\n");
 966:.\LINX.c      ****             
 967:.\LINX.c      ****             // TODO: Right now this completely ignores frame size, CS pin, and CS logic level parts
 968:.\LINX.c      ****             switch(command[6]) {
 969:.\LINX.c      ****                 #ifdef CY_SPIM_SPIM_1_H
 970:.\LINX.c      ****                     case 0x01:
 971:.\LINX.c      ****                         // Write data bytes
 972:.\LINX.c      ****                         for(i = 10; i < command[1] - 1; ++i) {
 973:.\LINX.c      ****                             SPIM_1_WriteTxData(command[i]);
 974:.\LINX.c      ****                         }
 975:.\LINX.c      ****                         
 976:.\LINX.c      ****                         // Respond with read data bytes sitting in the buffer
 977:.\LINX.c      ****                         for(i = 0; i < command[1] - 11; ++i) {
 978:.\LINX.c      ****                             response_data[response_data_len] = SPIM_1_ReadRxData();
 979:.\LINX.c      ****                             ++response_data_len;
 980:.\LINX.c      ****                         }
 981:.\LINX.c      ****                         break;
 982:.\LINX.c      ****                 #endif
 983:.\LINX.c      ****              
 984:.\LINX.c      ****                 default: status = LINX_STATUS_L_UNKNOWN_ERROR; break;
 2047              		.loc 1 984 0
 2048 1014 0323     		movs	r3, #3
 2049 1016 87F86F30 		strb	r3, [r7, #111]
 2050 101a 00BF     		nop
 985:.\LINX.c      ****             }
 986:.\LINX.c      ****             
 987:.\LINX.c      ****             break;
 2051              		.loc 1 987 0
 2052 101c 78E0     		b	.L55
 2053              	.L53:
 988:.\LINX.c      ****             
 989:.\LINX.c      ****         // EEPROM Write
 990:.\LINX.c      ****         case 0x140:
 991:.\LINX.c      ****             DEBUG_PRINT("EEPROM Write\r\n");
 992:.\LINX.c      ****             
 993:.\LINX.c      ****             // Check if writing to device user ID memory, error if so
 994:.\LINX.c      ****             if(command[7] == 0 && command[8] < 2) {
 2054              		.loc 1 994 0
 2055 101e 7B68     		ldr	r3, [r7, #4]
 2056 1020 0733     		adds	r3, r3, #7
 2057 1022 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2058 1024 002B     		cmp	r3, #0
 2059 1026 08D1     		bne	.L89
 2060              		.loc 1 994 0 is_stmt 0 discriminator 1
 2061 1028 7B68     		ldr	r3, [r7, #4]
 2062 102a 0833     		adds	r3, r3, #8
 2063 102c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2064 102e 012B     		cmp	r3, #1
ARM GAS  C:\Users\Robert\AppData\Local\Temp\ccBTR6tf.s 			page 55


 2065 1030 03D8     		bhi	.L89
 995:.\LINX.c      ****                 status = LINX_STATUS_L_UNKNOWN_ERROR;
 2066              		.loc 1 995 0 is_stmt 1
 2067 1032 0323     		movs	r3, #3
 2068 1034 87F86F30 		strb	r3, [r7, #111]
 996:.\LINX.c      ****                 break;
 2069              		.loc 1 996 0
 2070 1038 6AE0     		b	.L55
 2071              	.L89:
 997:.\LINX.c      ****             }
 998:.\LINX.c      ****             
 999:.\LINX.c      ****             // Write bytes
1000:.\LINX.c      ****             for(i = 0; i < command[6]; ++i) {
 2072              		.loc 1 1000 0
 2073 103a 0023     		movs	r3, #0
 2074 103c 87F86E30 		strb	r3, [r7, #110]
 2075 1040 29E0     		b	.L90
 2076              	.L92:
1001:.\LINX.c      ****                 EEPROM_ByteWrite(command[9 + i], command[7] + ((command[8] + i) / 16), (command[8] 
 2077              		.loc 1 1001 0 discriminator 3
 2078 1042 97F86E30 		ldrb	r3, [r7, #110]	@ zero_extendqisi2
 2079 1046 0933     		adds	r3, r3, #9
 2080 1048 1A46     		mov	r2, r3
 2081 104a 7B68     		ldr	r3, [r7, #4]
 2082 104c 1344     		add	r3, r3, r2
 2083 104e 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 2084 1050 7B68     		ldr	r3, [r7, #4]
 2085 1052 0733     		adds	r3, r3, #7
 2086 1054 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2087 1056 7B68     		ldr	r3, [r7, #4]
 2088 1058 0833     		adds	r3, r3, #8
 2089 105a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2090 105c 1946     		mov	r1, r3
 2091 105e 97F86E30 		ldrb	r3, [r7, #110]	@ zero_extendqisi2
 2092 1062 0B44     		add	r3, r3, r1
 2093 1064 002B     		cmp	r3, #0
 2094 1066 00DA     		bge	.L91
 2095 1068 0F33     		adds	r3, r3, #15
 2096              	.L91:
 2097 106a 1B11     		asrs	r3, r3, #4
 2098 106c DBB2     		uxtb	r3, r3
 2099 106e 1344     		add	r3, r3, r2
 2100 1070 D9B2     		uxtb	r1, r3
 2101 1072 7B68     		ldr	r3, [r7, #4]
 2102 1074 0833     		adds	r3, r3, #8
 2103 1076 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2104 1078 97F86E30 		ldrb	r3, [r7, #110]
 2105 107c 1344     		add	r3, r3, r2
 2106 107e DBB2     		uxtb	r3, r3
 2107 1080 03F00F03 		and	r3, r3, #15
 2108 1084 DBB2     		uxtb	r3, r3
 2109 1086 1A46     		mov	r2, r3
 2110 1088 FFF7FEFF 		bl	EEPROM_ByteWrite
1000:.\LINX.c      ****                 EEPROM_ByteWrite(command[9 + i], command[7] + ((command[8] + i) / 16), (command[8] 
 2111              		.loc 1 1000 0 discriminator 3
 2112 108c 97F86E30 		ldrb	r3, [r7, #110]
 2113 1090 0133     		adds	r3, r3, #1
ARM GAS  C:\Users\Robert\AppData\Local\Temp\ccBTR6tf.s 			page 56


 2114 1092 87F86E30 		strb	r3, [r7, #110]
 2115              	.L90:
1000:.\LINX.c      ****                 EEPROM_ByteWrite(command[9 + i], command[7] + ((command[8] + i) / 16), (command[8] 
 2116              		.loc 1 1000 0 is_stmt 0 discriminator 1
 2117 1096 7B68     		ldr	r3, [r7, #4]
 2118 1098 0633     		adds	r3, r3, #6
 2119 109a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2120 109c 97F86E20 		ldrb	r2, [r7, #110]	@ zero_extendqisi2
 2121 10a0 9A42     		cmp	r2, r3
 2122 10a2 CED3     		bcc	.L92
1002:.\LINX.c      ****             }
1003:.\LINX.c      ****             
1004:.\LINX.c      ****             break;
 2123              		.loc 1 1004 0 is_stmt 1
 2124 10a4 34E0     		b	.L55
 2125              	.L54:
1005:.\LINX.c      ****             
1006:.\LINX.c      ****         // EEPROM Read
1007:.\LINX.c      ****         case 0x141:
1008:.\LINX.c      ****             DEBUG_PRINT("EEPROM Read\r\n");
1009:.\LINX.c      ****             
1010:.\LINX.c      ****             // Read bytes
1011:.\LINX.c      ****             for (i = 0; i < command[6]; ++i) {
 2126              		.loc 1 1011 0
 2127 10a6 0023     		movs	r3, #0
 2128 10a8 87F86E30 		strb	r3, [r7, #110]
 2129 10ac 23E0     		b	.L93
 2130              	.L94:
1012:.\LINX.c      ****                 response_data[response_data_len] = *((uint8 *)(CYDEV_EE_BASE + 16*command[7] + comm
 2131              		.loc 1 1012 0 discriminator 3
 2132 10ae 97F82B30 		ldrb	r3, [r7, #43]	@ zero_extendqisi2
 2133 10b2 1946     		mov	r1, r3
 2134 10b4 7B68     		ldr	r3, [r7, #4]
 2135 10b6 0733     		adds	r3, r3, #7
 2136 10b8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2137 10ba 1B01     		lsls	r3, r3, #4
 2138 10bc 1A46     		mov	r2, r3
 2139 10be 7B68     		ldr	r3, [r7, #4]
 2140 10c0 0833     		adds	r3, r3, #8
 2141 10c2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2142 10c4 1A44     		add	r2, r2, r3
 2143 10c6 97F86E30 		ldrb	r3, [r7, #110]	@ zero_extendqisi2
 2144 10ca 1344     		add	r3, r3, r2
 2145 10cc 03F18043 		add	r3, r3, #1073741824
 2146 10d0 03F50043 		add	r3, r3, #32768
 2147 10d4 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2148 10d6 07F17003 		add	r3, r7, #112
 2149 10da 0B44     		add	r3, r3, r1
 2150 10dc 03F8442C 		strb	r2, [r3, #-68]
1013:.\LINX.c      ****                 ++response_data_len;
 2151              		.loc 1 1013 0 discriminator 3
 2152 10e0 97F82B30 		ldrb	r3, [r7, #43]	@ zero_extendqisi2
 2153 10e4 0133     		adds	r3, r3, #1
 2154 10e6 DBB2     		uxtb	r3, r3
 2155 10e8 87F82B30 		strb	r3, [r7, #43]
1011:.\LINX.c      ****                 response_data[response_data_len] = *((uint8 *)(CYDEV_EE_BASE + 16*command[7] + comm
 2156              		.loc 1 1011 0 discriminator 3
ARM GAS  C:\Users\Robert\AppData\Local\Temp\ccBTR6tf.s 			page 57


 2157 10ec 97F86E30 		ldrb	r3, [r7, #110]
 2158 10f0 0133     		adds	r3, r3, #1
 2159 10f2 87F86E30 		strb	r3, [r7, #110]
 2160              	.L93:
1011:.\LINX.c      ****                 response_data[response_data_len] = *((uint8 *)(CYDEV_EE_BASE + 16*command[7] + comm
 2161              		.loc 1 1011 0 is_stmt 0 discriminator 1
 2162 10f6 7B68     		ldr	r3, [r7, #4]
 2163 10f8 0633     		adds	r3, r3, #6
 2164 10fa 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2165 10fc 97F86E20 		ldrb	r2, [r7, #110]	@ zero_extendqisi2
 2166 1100 9A42     		cmp	r2, r3
 2167 1102 D4D3     		bcc	.L94
1014:.\LINX.c      ****             }
1015:.\LINX.c      ****             
1016:.\LINX.c      ****             break;
 2168              		.loc 1 1016 0 is_stmt 1
 2169 1104 04E0     		b	.L55
 2170              	.L19:
1017:.\LINX.c      ****             
1018:.\LINX.c      ****         // Unsupported command
1019:.\LINX.c      ****         default:
1020:.\LINX.c      ****             DEBUG_PRINT("Unsupported\r\n");
1021:.\LINX.c      ****             
1022:.\LINX.c      ****             status = LINX_STATUS_L_FUNCTION_NOT_SUPPORTED;
 2171              		.loc 1 1022 0
 2172 1106 0123     		movs	r3, #1
 2173 1108 87F86F30 		strb	r3, [r7, #111]
1023:.\LINX.c      ****             break;
 2174              		.loc 1 1023 0
 2175 110c 00E0     		b	.L55
 2176              	.L97:
 178:.\LINX.c      ****         
 2177              		.loc 1 178 0
 2178 110e 00BF     		nop
 2179              	.L55:
1024:.\LINX.c      ****     }
1025:.\LINX.c      ****     
1026:.\LINX.c      ****     // Build response
1027:.\LINX.c      ****     response[0] = 0xFF;                         // SoF byte
 2180              		.loc 1 1027 0
 2181 1110 3B68     		ldr	r3, [r7]
 2182 1112 FF22     		movs	r2, #255
 2183 1114 1A70     		strb	r2, [r3]
1028:.\LINX.c      ****     response[1] = 6 + response_data_len;        // Packet length
 2184              		.loc 1 1028 0
 2185 1116 3B68     		ldr	r3, [r7]
 2186 1118 0133     		adds	r3, r3, #1
 2187 111a 97F82B20 		ldrb	r2, [r7, #43]	@ zero_extendqisi2
 2188 111e 0632     		adds	r2, r2, #6
 2189 1120 D2B2     		uxtb	r2, r2
 2190 1122 1A70     		strb	r2, [r3]
1029:.\LINX.c      ****     response[2] = command[2];                   // Packet num high byte
 2191              		.loc 1 1029 0
 2192 1124 3B68     		ldr	r3, [r7]
 2193 1126 0233     		adds	r3, r3, #2
 2194 1128 7A68     		ldr	r2, [r7, #4]
 2195 112a 9278     		ldrb	r2, [r2, #2]	@ zero_extendqisi2
ARM GAS  C:\Users\Robert\AppData\Local\Temp\ccBTR6tf.s 			page 58


 2196 112c 1A70     		strb	r2, [r3]
1030:.\LINX.c      ****     response[3] = command[3];                   // Packet num low byte
 2197              		.loc 1 1030 0
 2198 112e 3B68     		ldr	r3, [r7]
 2199 1130 0333     		adds	r3, r3, #3
 2200 1132 7A68     		ldr	r2, [r7, #4]
 2201 1134 D278     		ldrb	r2, [r2, #3]	@ zero_extendqisi2
 2202 1136 1A70     		strb	r2, [r3]
1031:.\LINX.c      ****     response[4] = status;                       // Response status
 2203              		.loc 1 1031 0
 2204 1138 3B68     		ldr	r3, [r7]
 2205 113a 0433     		adds	r3, r3, #4
 2206 113c 97F86F20 		ldrb	r2, [r7, #111]
 2207 1140 1A70     		strb	r2, [r3]
1032:.\LINX.c      ****     for (i = 0; i < response_data_len; ++i) {   // Reponse data
 2208              		.loc 1 1032 0
 2209 1142 0023     		movs	r3, #0
 2210 1144 87F86E30 		strb	r3, [r7, #110]
 2211 1148 12E0     		b	.L95
 2212              	.L96:
1033:.\LINX.c      ****         response[5 + i] = response_data[i];
 2213              		.loc 1 1033 0 discriminator 3
 2214 114a 97F86E30 		ldrb	r3, [r7, #110]	@ zero_extendqisi2
 2215 114e 0533     		adds	r3, r3, #5
 2216 1150 1A46     		mov	r2, r3
 2217 1152 3B68     		ldr	r3, [r7]
 2218 1154 1344     		add	r3, r3, r2
 2219 1156 97F86E20 		ldrb	r2, [r7, #110]	@ zero_extendqisi2
 2220 115a 07F17001 		add	r1, r7, #112
 2221 115e 0A44     		add	r2, r2, r1
 2222 1160 12F8442C 		ldrb	r2, [r2, #-68]	@ zero_extendqisi2
 2223 1164 1A70     		strb	r2, [r3]
1032:.\LINX.c      ****     for (i = 0; i < response_data_len; ++i) {   // Reponse data
 2224              		.loc 1 1032 0 discriminator 3
 2225 1166 97F86E30 		ldrb	r3, [r7, #110]
 2226 116a 0133     		adds	r3, r3, #1
 2227 116c 87F86E30 		strb	r3, [r7, #110]
 2228              	.L95:
1032:.\LINX.c      ****     for (i = 0; i < response_data_len; ++i) {   // Reponse data
 2229              		.loc 1 1032 0 is_stmt 0 discriminator 1
 2230 1170 97F82B30 		ldrb	r3, [r7, #43]	@ zero_extendqisi2
 2231 1174 97F86E20 		ldrb	r2, [r7, #110]	@ zero_extendqisi2
 2232 1178 9A42     		cmp	r2, r3
 2233 117a E6D3     		bcc	.L96
1034:.\LINX.c      ****     }
1035:.\LINX.c      ****     response[5 + response_data_len] = LINX_CalculateChecksum(response, 5 + response_data_len);  // 
 2234              		.loc 1 1035 0 is_stmt 1
 2235 117c 97F82B30 		ldrb	r3, [r7, #43]	@ zero_extendqisi2
 2236 1180 0533     		adds	r3, r3, #5
 2237 1182 1A46     		mov	r2, r3
 2238 1184 3B68     		ldr	r3, [r7]
 2239 1186 9C18     		adds	r4, r3, r2
 2240 1188 97F82B30 		ldrb	r3, [r7, #43]	@ zero_extendqisi2
 2241 118c 0533     		adds	r3, r3, #5
 2242 118e DBB2     		uxtb	r3, r3
 2243 1190 3868     		ldr	r0, [r7]
 2244 1192 1946     		mov	r1, r3
ARM GAS  C:\Users\Robert\AppData\Local\Temp\ccBTR6tf.s 			page 59


 2245 1194 FFF7FEFF 		bl	LINX_CalculateChecksum
 2246 1198 0346     		mov	r3, r0
 2247 119a 2370     		strb	r3, [r4]
1036:.\LINX.c      ****     
1037:.\LINX.c      ****     #ifdef LINX_DEBUG
1038:.\LINX.c      ****         DEBUG_UART_PutString("\tGenerated response:");
1039:.\LINX.c      ****         for (i = 0; i < response[1]; ++i) {
1040:.\LINX.c      ****             DEBUG_PRINT(" %x", response[i]);
1041:.\LINX.c      ****         }
1042:.\LINX.c      ****         DEBUG_UART_PutString("\r\n");
1043:.\LINX.c      ****     #endif
1044:.\LINX.c      **** }
 2248              		.loc 1 1044 0
 2249 119c 7437     		adds	r7, r7, #116
 2250              		.cfi_def_cfa_offset 12
 2251 119e BD46     		mov	sp, r7
 2252              		.cfi_def_cfa_register 13
 2253              		@ sp needed
 2254 11a0 90BD     		pop	{r4, r7, pc}
 2255              		.cfi_endproc
 2256              	.LFE60:
 2257              		.size	LINX_ProcessCommand, .-LINX_ProcessCommand
 2258 11a2 00BF     		.section	.text.LINX_SendResponse,"ax",%progbits
 2259              		.align	2
 2260              		.global	LINX_SendResponse
 2261              		.thumb
 2262              		.thumb_func
 2263              		.type	LINX_SendResponse, %function
 2264              	LINX_SendResponse:
 2265              	.LFB61:
1045:.\LINX.c      **** 
1046:.\LINX.c      **** void LINX_SendResponse(uint8 *response) {
 2266              		.loc 1 1046 0
 2267              		.cfi_startproc
 2268              		@ args = 0, pretend = 0, frame = 8
 2269              		@ frame_needed = 1, uses_anonymous_args = 0
 2270 0000 80B5     		push	{r7, lr}
 2271              		.cfi_def_cfa_offset 8
 2272              		.cfi_offset 7, -8
 2273              		.cfi_offset 14, -4
 2274 0002 82B0     		sub	sp, sp, #8
 2275              		.cfi_def_cfa_offset 16
 2276 0004 00AF     		add	r7, sp, #0
 2277              		.cfi_def_cfa_register 7
 2278 0006 7860     		str	r0, [r7, #4]
1047:.\LINX.c      ****     #ifdef LINX_DEBUG
1048:.\LINX.c      ****         DEBUG_UART_PutString("\tSending LINX response\r\n");
1049:.\LINX.c      ****     #endif
1050:.\LINX.c      ****     
1051:.\LINX.c      ****     // Send response bytes
1052:.\LINX.c      ****     USBUART_PutData(response, response[1]);
 2279              		.loc 1 1052 0
 2280 0008 7B68     		ldr	r3, [r7, #4]
 2281 000a 0133     		adds	r3, r3, #1
 2282 000c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2283 000e 9BB2     		uxth	r3, r3
 2284 0010 7868     		ldr	r0, [r7, #4]
ARM GAS  C:\Users\Robert\AppData\Local\Temp\ccBTR6tf.s 			page 60


 2285 0012 1946     		mov	r1, r3
 2286 0014 FFF7FEFF 		bl	USBUART_PutData
1053:.\LINX.c      **** }
 2287              		.loc 1 1053 0
 2288 0018 0837     		adds	r7, r7, #8
 2289              		.cfi_def_cfa_offset 8
 2290 001a BD46     		mov	sp, r7
 2291              		.cfi_def_cfa_register 13
 2292              		@ sp needed
 2293 001c 80BD     		pop	{r7, pc}
 2294              		.cfi_endproc
 2295              	.LFE61:
 2296              		.size	LINX_SendResponse, .-LINX_SendResponse
 2297 001e 00BF     		.text
 2298              	.Letext0:
 2299              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\3.3\\psoc creator\\import\\gnu\\arm\\4.9.
 2300              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\3.3\\psoc creator\\import\\gnu\\arm\\4.9.
 2301              		.file 4 "Generated_Source\\PSoC5/cytypes.h"
 2302              		.file 5 ".\\mem1.h"
 2303              		.file 6 "Generated_Source\\PSoC5/core_cm3.h"
 2304              		.section	.debug_info,"",%progbits
 2305              	.Ldebug_info0:
 2306 0000 A1050000 		.4byte	0x5a1
 2307 0004 0400     		.2byte	0x4
 2308 0006 00000000 		.4byte	.Ldebug_abbrev0
 2309 000a 04       		.byte	0x4
 2310 000b 01       		.uleb128 0x1
 2311 000c BE000000 		.4byte	.LASF55
 2312 0010 01       		.byte	0x1
 2313 0011 3E000000 		.4byte	.LASF56
 2314 0015 F1010000 		.4byte	.LASF57
 2315 0019 00000000 		.4byte	.Ldebug_ranges0+0
 2316 001d 00000000 		.4byte	0
 2317 0021 00000000 		.4byte	.Ldebug_line0
 2318 0025 02       		.uleb128 0x2
 2319 0026 01       		.byte	0x1
 2320 0027 06       		.byte	0x6
 2321 0028 97010000 		.4byte	.LASF0
 2322 002c 02       		.uleb128 0x2
 2323 002d 01       		.byte	0x1
 2324 002e 08       		.byte	0x8
 2325 002f 7D010000 		.4byte	.LASF1
 2326 0033 02       		.uleb128 0x2
 2327 0034 02       		.byte	0x2
 2328 0035 05       		.byte	0x5
 2329 0036 29000000 		.4byte	.LASF2
 2330 003a 02       		.uleb128 0x2
 2331 003b 02       		.byte	0x2
 2332 003c 07       		.byte	0x7
 2333 003d D7010000 		.4byte	.LASF3
 2334 0041 03       		.uleb128 0x3
 2335 0042 09030000 		.4byte	.LASF9
 2336 0046 02       		.byte	0x2
 2337 0047 3F       		.byte	0x3f
 2338 0048 4C000000 		.4byte	0x4c
 2339 004c 02       		.uleb128 0x2
 2340 004d 04       		.byte	0x4
ARM GAS  C:\Users\Robert\AppData\Local\Temp\ccBTR6tf.s 			page 61


 2341 004e 05       		.byte	0x5
 2342 004f 56020000 		.4byte	.LASF4
 2343 0053 02       		.uleb128 0x2
 2344 0054 04       		.byte	0x4
 2345 0055 07       		.byte	0x7
 2346 0056 C2020000 		.4byte	.LASF5
 2347 005a 02       		.uleb128 0x2
 2348 005b 08       		.byte	0x8
 2349 005c 05       		.byte	0x5
 2350 005d A0000000 		.4byte	.LASF6
 2351 0061 02       		.uleb128 0x2
 2352 0062 08       		.byte	0x8
 2353 0063 07       		.byte	0x7
 2354 0064 AA010000 		.4byte	.LASF7
 2355 0068 04       		.uleb128 0x4
 2356 0069 04       		.byte	0x4
 2357 006a 05       		.byte	0x5
 2358 006b 696E7400 		.ascii	"int\000"
 2359 006f 02       		.uleb128 0x2
 2360 0070 04       		.byte	0x4
 2361 0071 07       		.byte	0x7
 2362 0072 C1010000 		.4byte	.LASF8
 2363 0076 03       		.uleb128 0x3
 2364 0077 5F020000 		.4byte	.LASF10
 2365 007b 03       		.byte	0x3
 2366 007c 2C       		.byte	0x2c
 2367 007d 41000000 		.4byte	0x41
 2368 0081 03       		.uleb128 0x3
 2369 0082 84000000 		.4byte	.LASF11
 2370 0086 04       		.byte	0x4
 2371 0087 A1       		.byte	0xa1
 2372 0088 2C000000 		.4byte	0x2c
 2373 008c 03       		.uleb128 0x3
 2374 008d 62000000 		.4byte	.LASF12
 2375 0091 04       		.byte	0x4
 2376 0092 A2       		.byte	0xa2
 2377 0093 3A000000 		.4byte	0x3a
 2378 0097 03       		.uleb128 0x3
 2379 0098 A3020000 		.4byte	.LASF13
 2380 009c 04       		.byte	0x4
 2381 009d A3       		.byte	0xa3
 2382 009e 53000000 		.4byte	0x53
 2383 00a2 03       		.uleb128 0x3
 2384 00a3 D4020000 		.4byte	.LASF14
 2385 00a7 04       		.byte	0x4
 2386 00a8 A6       		.byte	0xa6
 2387 00a9 4C000000 		.4byte	0x4c
 2388 00ad 02       		.uleb128 0x2
 2389 00ae 04       		.byte	0x4
 2390 00af 04       		.byte	0x4
 2391 00b0 9A000000 		.4byte	.LASF15
 2392 00b4 02       		.uleb128 0x2
 2393 00b5 08       		.byte	0x8
 2394 00b6 04       		.byte	0x4
 2395 00b7 DA020000 		.4byte	.LASF16
 2396 00bb 02       		.uleb128 0x2
 2397 00bc 01       		.byte	0x1
ARM GAS  C:\Users\Robert\AppData\Local\Temp\ccBTR6tf.s 			page 62


 2398 00bd 08       		.byte	0x8
 2399 00be AE000000 		.4byte	.LASF17
 2400 00c2 05       		.uleb128 0x5
 2401 00c3 CE010000 		.4byte	.LASF18
 2402 00c7 04       		.byte	0x4
 2403 00c8 4301     		.2byte	0x143
 2404 00ca 53000000 		.4byte	0x53
 2405 00ce 02       		.uleb128 0x2
 2406 00cf 04       		.byte	0x4
 2407 00d0 07       		.byte	0x7
 2408 00d1 1C030000 		.4byte	.LASF19
 2409 00d5 06       		.uleb128 0x6
 2410 00d6 B3000000 		.4byte	.LASF58
 2411 00da 10       		.byte	0x10
 2412 00db 05       		.byte	0x5
 2413 00dc 1A       		.byte	0x1a
 2414 00dd B4010000 		.4byte	0x1b4
 2415 00e1 07       		.uleb128 0x7
 2416 00e2 4C010000 		.4byte	.LASF20
 2417 00e6 05       		.byte	0x5
 2418 00e7 1B       		.byte	0x1b
 2419 00e8 81000000 		.4byte	0x81
 2420 00ec 01       		.byte	0x1
 2421 00ed 08       		.byte	0x8
 2422 00ee 00       		.byte	0
 2423 00ef 00       		.byte	0
 2424 00f0 08       		.uleb128 0x8
 2425 00f1 636D6400 		.ascii	"cmd\000"
 2426 00f5 05       		.byte	0x5
 2427 00f6 1C       		.byte	0x1c
 2428 00f7 81000000 		.4byte	0x81
 2429 00fb 01       		.byte	0x1
 2430 00fc 08       		.byte	0x8
 2431 00fd 00       		.byte	0
 2432 00fe 01       		.byte	0x1
 2433 00ff 08       		.uleb128 0x8
 2434 0100 64617400 		.ascii	"dat\000"
 2435 0104 05       		.byte	0x5
 2436 0105 1D       		.byte	0x1d
 2437 0106 8C000000 		.4byte	0x8c
 2438 010a 02       		.byte	0x2
 2439 010b 10       		.byte	0x10
 2440 010c 00       		.byte	0
 2441 010d 02       		.byte	0x2
 2442 010e 07       		.uleb128 0x7
 2443 010f 89020000 		.4byte	.LASF21
 2444 0113 05       		.byte	0x5
 2445 0114 1E       		.byte	0x1e
 2446 0115 81000000 		.4byte	0x81
 2447 0119 01       		.byte	0x1
 2448 011a 04       		.byte	0x4
 2449 011b 04       		.byte	0x4
 2450 011c 04       		.byte	0x4
 2451 011d 08       		.uleb128 0x8
 2452 011e 70696E00 		.ascii	"pin\000"
 2453 0122 05       		.byte	0x5
 2454 0123 1F       		.byte	0x1f
ARM GAS  C:\Users\Robert\AppData\Local\Temp\ccBTR6tf.s 			page 63


 2455 0124 81000000 		.4byte	0x81
 2456 0128 01       		.byte	0x1
 2457 0129 03       		.byte	0x3
 2458 012a 01       		.byte	0x1
 2459 012b 04       		.byte	0x4
 2460 012c 07       		.uleb128 0x7
 2461 012d 13030000 		.4byte	.LASF22
 2462 0131 05       		.byte	0x5
 2463 0132 20       		.byte	0x20
 2464 0133 81000000 		.4byte	0x81
 2465 0137 01       		.byte	0x1
 2466 0138 04       		.byte	0x4
 2467 0139 04       		.byte	0x4
 2468 013a 05       		.byte	0x5
 2469 013b 07       		.uleb128 0x7
 2470 013c 6D020000 		.4byte	.LASF23
 2471 0140 05       		.byte	0x5
 2472 0141 21       		.byte	0x21
 2473 0142 81000000 		.4byte	0x81
 2474 0146 01       		.byte	0x1
 2475 0147 03       		.byte	0x3
 2476 0148 01       		.byte	0x1
 2477 0149 05       		.byte	0x5
 2478 014a 07       		.uleb128 0x7
 2479 014b 51010000 		.4byte	.LASF24
 2480 014f 05       		.byte	0x5
 2481 0150 22       		.byte	0x22
 2482 0151 81000000 		.4byte	0x81
 2483 0155 01       		.byte	0x1
 2484 0156 03       		.byte	0x3
 2485 0157 05       		.byte	0x5
 2486 0158 06       		.byte	0x6
 2487 0159 08       		.uleb128 0x8
 2488 015a 616D7000 		.ascii	"amp\000"
 2489 015e 05       		.byte	0x5
 2490 015f 23       		.byte	0x23
 2491 0160 81000000 		.4byte	0x81
 2492 0164 01       		.byte	0x1
 2493 0165 08       		.byte	0x8
 2494 0166 00       		.byte	0
 2495 0167 07       		.byte	0x7
 2496 0168 08       		.uleb128 0x8
 2497 0169 64634200 		.ascii	"dcB\000"
 2498 016d 05       		.byte	0x5
 2499 016e 24       		.byte	0x24
 2500 016f 81000000 		.4byte	0x81
 2501 0173 01       		.byte	0x1
 2502 0174 08       		.byte	0x8
 2503 0175 00       		.byte	0
 2504 0176 08       		.byte	0x8
 2505 0177 07       		.uleb128 0x7
 2506 0178 12000000 		.4byte	.LASF25
 2507 017c 05       		.byte	0x5
 2508 017d 25       		.byte	0x25
 2509 017e 81000000 		.4byte	0x81
 2510 0182 01       		.byte	0x1
 2511 0183 03       		.byte	0x3
ARM GAS  C:\Users\Robert\AppData\Local\Temp\ccBTR6tf.s 			page 64


 2512 0184 05       		.byte	0x5
 2513 0185 09       		.byte	0x9
 2514 0186 08       		.uleb128 0x8
 2515 0187 726F7700 		.ascii	"row\000"
 2516 018b 05       		.byte	0x5
 2517 018c 26       		.byte	0x26
 2518 018d 81000000 		.4byte	0x81
 2519 0191 01       		.byte	0x1
 2520 0192 03       		.byte	0x3
 2521 0193 02       		.byte	0x2
 2522 0194 09       		.byte	0x9
 2523 0195 07       		.uleb128 0x7
 2524 0196 E1020000 		.4byte	.LASF26
 2525 019a 05       		.byte	0x5
 2526 019b 27       		.byte	0x27
 2527 019c 81000000 		.4byte	0x81
 2528 01a0 01       		.byte	0x1
 2529 01a1 06       		.byte	0x6
 2530 01a2 02       		.byte	0x2
 2531 01a3 0A       		.byte	0xa
 2532 01a4 07       		.uleb128 0x7
 2533 01a5 33000000 		.4byte	.LASF27
 2534 01a9 05       		.byte	0x5
 2535 01aa 28       		.byte	0x28
 2536 01ab 97000000 		.4byte	0x97
 2537 01af 04       		.byte	0x4
 2538 01b0 18       		.byte	0x18
 2539 01b1 08       		.byte	0x8
 2540 01b2 0C       		.byte	0xc
 2541 01b3 00       		.byte	0
 2542 01b4 03       		.uleb128 0x3
 2543 01b5 7D020000 		.4byte	.LASF28
 2544 01b9 05       		.byte	0x5
 2545 01ba 29       		.byte	0x29
 2546 01bb D5000000 		.4byte	0xd5
 2547 01bf 09       		.uleb128 0x9
 2548 01c0 19000000 		.4byte	.LASF59
 2549 01c4 01       		.byte	0x1
 2550 01c5 20       		.byte	0x20
 2551 01c6 00000000 		.4byte	.LFB56
 2552 01ca 48000000 		.4byte	.LFE56-.LFB56
 2553 01ce 01       		.uleb128 0x1
 2554 01cf 9C       		.byte	0x9c
 2555 01d0 0A       		.uleb128 0xa
 2556 01d1 8A000000 		.4byte	.LASF30
 2557 01d5 01       		.byte	0x1
 2558 01d6 46       		.byte	0x46
 2559 01d7 06020000 		.4byte	0x206
 2560 01db 00000000 		.4byte	.LFB57
 2561 01df 5A000000 		.4byte	.LFE57-.LFB57
 2562 01e3 01       		.uleb128 0x1
 2563 01e4 9C       		.byte	0x9c
 2564 01e5 06020000 		.4byte	0x206
 2565 01e9 0B       		.uleb128 0xb
 2566 01ea 5B030000 		.4byte	.LASF32
 2567 01ee 01       		.byte	0x1
 2568 01ef 46       		.byte	0x46
ARM GAS  C:\Users\Robert\AppData\Local\Temp\ccBTR6tf.s 			page 65


 2569 01f0 0D020000 		.4byte	0x20d
 2570 01f4 02       		.uleb128 0x2
 2571 01f5 91       		.byte	0x91
 2572 01f6 64       		.sleb128 -28
 2573 01f7 0C       		.uleb128 0xc
 2574 01f8 8B010000 		.4byte	.LASF35
 2575 01fc 01       		.byte	0x1
 2576 01fd 4E       		.byte	0x4e
 2577 01fe 81000000 		.4byte	0x81
 2578 0202 02       		.uleb128 0x2
 2579 0203 91       		.byte	0x91
 2580 0204 6F       		.sleb128 -17
 2581 0205 00       		.byte	0
 2582 0206 02       		.uleb128 0x2
 2583 0207 01       		.byte	0x1
 2584 0208 02       		.byte	0x2
 2585 0209 67020000 		.4byte	.LASF29
 2586 020d 0D       		.uleb128 0xd
 2587 020e 04       		.byte	0x4
 2588 020f 81000000 		.4byte	0x81
 2589 0213 0E       		.uleb128 0xe
 2590 0214 25030000 		.4byte	.LASF31
 2591 0218 01       		.byte	0x1
 2592 0219 73       		.byte	0x73
 2593 021a 81000000 		.4byte	0x81
 2594 021e 00000000 		.4byte	.LFB58
 2595 0222 40000000 		.4byte	.LFE58-.LFB58
 2596 0226 01       		.uleb128 0x1
 2597 0227 9C       		.byte	0x9c
 2598 0228 63020000 		.4byte	0x263
 2599 022c 0B       		.uleb128 0xb
 2600 022d 8E020000 		.4byte	.LASF33
 2601 0231 01       		.byte	0x1
 2602 0232 73       		.byte	0x73
 2603 0233 0D020000 		.4byte	0x20d
 2604 0237 02       		.uleb128 0x2
 2605 0238 91       		.byte	0x91
 2606 0239 6C       		.sleb128 -20
 2607 023a 0B       		.uleb128 0xb
 2608 023b 00000000 		.4byte	.LASF34
 2609 023f 01       		.byte	0x1
 2610 0240 73       		.byte	0x73
 2611 0241 81000000 		.4byte	0x81
 2612 0245 02       		.uleb128 0x2
 2613 0246 91       		.byte	0x91
 2614 0247 6B       		.sleb128 -21
 2615 0248 0C       		.uleb128 0xc
 2616 0249 69000000 		.4byte	.LASF36
 2617 024d 01       		.byte	0x1
 2618 024e 74       		.byte	0x74
 2619 024f 81000000 		.4byte	0x81
 2620 0253 02       		.uleb128 0x2
 2621 0254 91       		.byte	0x91
 2622 0255 77       		.sleb128 -9
 2623 0256 0F       		.uleb128 0xf
 2624 0257 6900     		.ascii	"i\000"
 2625 0259 01       		.byte	0x1
ARM GAS  C:\Users\Robert\AppData\Local\Temp\ccBTR6tf.s 			page 66


 2626 025a 75       		.byte	0x75
 2627 025b 81000000 		.4byte	0x81
 2628 025f 02       		.uleb128 0x2
 2629 0260 91       		.byte	0x91
 2630 0261 76       		.sleb128 -10
 2631 0262 00       		.byte	0
 2632 0263 10       		.uleb128 0x10
 2633 0264 F2020000 		.4byte	.LASF43
 2634 0268 01       		.byte	0x1
 2635 0269 85       		.byte	0x85
 2636 026a 00000000 		.4byte	.LFB59
 2637 026e A2000000 		.4byte	.LFE59-.LFB59
 2638 0272 01       		.uleb128 0x1
 2639 0273 9C       		.byte	0x9c
 2640 0274 CD020000 		.4byte	0x2cd
 2641 0278 0B       		.uleb128 0xb
 2642 0279 95020000 		.4byte	.LASF37
 2643 027d 01       		.byte	0x1
 2644 027e 85       		.byte	0x85
 2645 027f 0D020000 		.4byte	0x20d
 2646 0283 02       		.uleb128 0x2
 2647 0284 91       		.byte	0x91
 2648 0285 6C       		.sleb128 -20
 2649 0286 0B       		.uleb128 0xb
 2650 0287 72000000 		.4byte	.LASF38
 2651 028b 01       		.byte	0x1
 2652 028c 85       		.byte	0x85
 2653 028d 0D020000 		.4byte	0x20d
 2654 0291 02       		.uleb128 0x2
 2655 0292 91       		.byte	0x91
 2656 0293 68       		.sleb128 -24
 2657 0294 0B       		.uleb128 0xb
 2658 0295 5A010000 		.4byte	.LASF39
 2659 0299 01       		.byte	0x1
 2660 029a 85       		.byte	0x85
 2661 029b 81000000 		.4byte	0x81
 2662 029f 02       		.uleb128 0x2
 2663 02a0 91       		.byte	0x91
 2664 02a1 67       		.sleb128 -25
 2665 02a2 0B       		.uleb128 0xb
 2666 02a3 AA020000 		.4byte	.LASF40
 2667 02a7 01       		.byte	0x1
 2668 02a8 85       		.byte	0x85
 2669 02a9 0D020000 		.4byte	0x20d
 2670 02ad 02       		.uleb128 0x2
 2671 02ae 91       		.byte	0x91
 2672 02af 60       		.sleb128 -32
 2673 02b0 0B       		.uleb128 0xb
 2674 02b1 5C000000 		.4byte	.LASF41
 2675 02b5 01       		.byte	0x1
 2676 02b6 85       		.byte	0x85
 2677 02b7 97000000 		.4byte	0x97
 2678 02bb 02       		.uleb128 0x2
 2679 02bc 91       		.byte	0x91
 2680 02bd 00       		.sleb128 0
 2681 02be 0C       		.uleb128 0xc
 2682 02bf 47000000 		.4byte	.LASF42
ARM GAS  C:\Users\Robert\AppData\Local\Temp\ccBTR6tf.s 			page 67


 2683 02c3 01       		.byte	0x1
 2684 02c4 86       		.byte	0x86
 2685 02c5 81000000 		.4byte	0x81
 2686 02c9 02       		.uleb128 0x2
 2687 02ca 91       		.byte	0x91
 2688 02cb 77       		.sleb128 -9
 2689 02cc 00       		.byte	0
 2690 02cd 11       		.uleb128 0x11
 2691 02ce 69010000 		.4byte	.LASF44
 2692 02d2 01       		.byte	0x1
 2693 02d3 9A       		.byte	0x9a
 2694 02d4 00000000 		.4byte	.LFB60
 2695 02d8 A2110000 		.4byte	.LFE60-.LFB60
 2696 02dc 01       		.uleb128 0x1
 2697 02dd 9C       		.byte	0x9c
 2698 02de 4C050000 		.4byte	0x54c
 2699 02e2 0B       		.uleb128 0xb
 2700 02e3 5B030000 		.4byte	.LASF32
 2701 02e7 01       		.byte	0x1
 2702 02e8 9A       		.byte	0x9a
 2703 02e9 0D020000 		.4byte	0x20d
 2704 02ed 03       		.uleb128 0x3
 2705 02ee 91       		.byte	0x91
 2706 02ef 847F     		.sleb128 -124
 2707 02f1 0B       		.uleb128 0xb
 2708 02f2 E9020000 		.4byte	.LASF45
 2709 02f6 01       		.byte	0x1
 2710 02f7 9A       		.byte	0x9a
 2711 02f8 0D020000 		.4byte	0x20d
 2712 02fc 03       		.uleb128 0x3
 2713 02fd 91       		.byte	0x91
 2714 02fe 807F     		.sleb128 -128
 2715 0300 0C       		.uleb128 0xc
 2716 0301 EA010000 		.4byte	.LASF46
 2717 0305 01       		.byte	0x1
 2718 0306 A1       		.byte	0xa1
 2719 0307 81000000 		.4byte	0x81
 2720 030b 02       		.uleb128 0x2
 2721 030c 91       		.byte	0x91
 2722 030d 6F       		.sleb128 -17
 2723 030e 0C       		.uleb128 0xc
 2724 030f 95020000 		.4byte	.LASF37
 2725 0313 01       		.byte	0x1
 2726 0314 A2       		.byte	0xa2
 2727 0315 4C050000 		.4byte	0x54c
 2728 0319 03       		.uleb128 0x3
 2729 031a 91       		.byte	0x91
 2730 031b AC7F     		.sleb128 -84
 2731 031d 0C       		.uleb128 0xc
 2732 031e 72000000 		.4byte	.LASF38
 2733 0322 01       		.byte	0x1
 2734 0323 A3       		.byte	0xa3
 2735 0324 81000000 		.4byte	0x81
 2736 0328 03       		.uleb128 0x3
 2737 0329 91       		.byte	0x91
 2738 032a AB7F     		.sleb128 -85
 2739 032c 0F       		.uleb128 0xf
ARM GAS  C:\Users\Robert\AppData\Local\Temp\ccBTR6tf.s 			page 68


 2740 032d 6900     		.ascii	"i\000"
 2741 032f 01       		.byte	0x1
 2742 0330 A4       		.byte	0xa4
 2743 0331 81000000 		.4byte	0x81
 2744 0335 02       		.uleb128 0x2
 2745 0336 91       		.byte	0x91
 2746 0337 6E       		.sleb128 -18
 2747 0338 0F       		.uleb128 0xf
 2748 0339 636D6400 		.ascii	"cmd\000"
 2749 033d 01       		.byte	0x1
 2750 033e AA       		.byte	0xaa
 2751 033f 8C000000 		.4byte	0x8c
 2752 0343 02       		.uleb128 0x2
 2753 0344 91       		.byte	0x91
 2754 0345 6C       		.sleb128 -20
 2755 0346 12       		.uleb128 0x12
 2756 0347 A2090000 		.4byte	.LBB2
 2757 034b 4A000000 		.4byte	.LBE2-.LBB2
 2758 034f 72030000 		.4byte	0x372
 2759 0353 13       		.uleb128 0x13
 2760 0354 63030000 		.4byte	.LASF47
 2761 0358 01       		.byte	0x1
 2762 0359 0F02     		.2byte	0x20f
 2763 035b C2000000 		.4byte	0xc2
 2764 035f 02       		.uleb128 0x2
 2765 0360 91       		.byte	0x91
 2766 0361 68       		.sleb128 -24
 2767 0362 13       		.uleb128 0x13
 2768 0363 A3010000 		.4byte	.LASF48
 2769 0367 01       		.byte	0x1
 2770 0368 1002     		.2byte	0x210
 2771 036a C2000000 		.4byte	0xc2
 2772 036e 02       		.uleb128 0x2
 2773 036f 91       		.byte	0x91
 2774 0370 64       		.sleb128 -28
 2775 0371 00       		.byte	0
 2776 0372 12       		.uleb128 0x12
 2777 0373 5E0A0000 		.4byte	.LBB3
 2778 0377 E0000000 		.4byte	.LBE3-.LBB3
 2779 037b BD030000 		.4byte	0x3bd
 2780 037f 13       		.uleb128 0x13
 2781 0380 89020000 		.4byte	.LASF21
 2782 0384 01       		.byte	0x1
 2783 0385 3E02     		.2byte	0x23e
 2784 0387 81000000 		.4byte	0x81
 2785 038b 02       		.uleb128 0x2
 2786 038c 91       		.byte	0x91
 2787 038d 63       		.sleb128 -29
 2788 038e 14       		.uleb128 0x14
 2789 038f 70696E00 		.ascii	"pin\000"
 2790 0393 01       		.byte	0x1
 2791 0394 3F02     		.2byte	0x23f
 2792 0396 81000000 		.4byte	0x81
 2793 039a 02       		.uleb128 0x2
 2794 039b 91       		.byte	0x91
 2795 039c 62       		.sleb128 -30
 2796 039d 13       		.uleb128 0x13
ARM GAS  C:\Users\Robert\AppData\Local\Temp\ccBTR6tf.s 			page 69


 2797 039e 5C000000 		.4byte	.LASF41
 2798 03a2 01       		.byte	0x1
 2799 03a3 4002     		.2byte	0x240
 2800 03a5 06020000 		.4byte	0x206
 2801 03a9 02       		.uleb128 0x2
 2802 03aa 91       		.byte	0x91
 2803 03ab 61       		.sleb128 -31
 2804 03ac 13       		.uleb128 0x13
 2805 03ad 0B000000 		.4byte	.LASF49
 2806 03b1 01       		.byte	0x1
 2807 03b2 4A02     		.2byte	0x24a
 2808 03b4 97000000 		.4byte	0x97
 2809 03b8 03       		.uleb128 0x3
 2810 03b9 91       		.byte	0x91
 2811 03ba A47F     		.sleb128 -92
 2812 03bc 00       		.byte	0
 2813 03bd 12       		.uleb128 0x12
 2814 03be 600B0000 		.4byte	.LBB4
 2815 03c2 04010000 		.4byte	.LBE4-.LBB4
 2816 03c6 F9030000 		.4byte	0x3f9
 2817 03ca 13       		.uleb128 0x13
 2818 03cb 89020000 		.4byte	.LASF21
 2819 03cf 01       		.byte	0x1
 2820 03d0 5B02     		.2byte	0x25b
 2821 03d2 81000000 		.4byte	0x81
 2822 03d6 02       		.uleb128 0x2
 2823 03d7 91       		.byte	0x91
 2824 03d8 60       		.sleb128 -32
 2825 03d9 14       		.uleb128 0x14
 2826 03da 70696E00 		.ascii	"pin\000"
 2827 03de 01       		.byte	0x1
 2828 03df 5C02     		.2byte	0x25c
 2829 03e1 81000000 		.4byte	0x81
 2830 03e5 02       		.uleb128 0x2
 2831 03e6 91       		.byte	0x91
 2832 03e7 5F       		.sleb128 -33
 2833 03e8 13       		.uleb128 0x13
 2834 03e9 0B000000 		.4byte	.LASF49
 2835 03ed 01       		.byte	0x1
 2836 03ee 6602     		.2byte	0x266
 2837 03f0 97000000 		.4byte	0x97
 2838 03f4 03       		.uleb128 0x3
 2839 03f5 91       		.byte	0x91
 2840 03f6 A07F     		.sleb128 -96
 2841 03f8 00       		.byte	0
 2842 03f9 12       		.uleb128 0x12
 2843 03fa A20C0000 		.4byte	.LBB5
 2844 03fe C2000000 		.4byte	.LBE5-.LBB5
 2845 0402 40040000 		.4byte	0x440
 2846 0406 13       		.uleb128 0x13
 2847 0407 AA020000 		.4byte	.LASF40
 2848 040b 01       		.byte	0x1
 2849 040c 8E02     		.2byte	0x28e
 2850 040e 81000000 		.4byte	0x81
 2851 0412 03       		.uleb128 0x3
 2852 0413 91       		.byte	0x91
 2853 0414 9F7F     		.sleb128 -97
ARM GAS  C:\Users\Robert\AppData\Local\Temp\ccBTR6tf.s 			page 70


 2854 0416 15       		.uleb128 0x15
 2855 0417 E00C0000 		.4byte	.LBB6
 2856 041b 54000000 		.4byte	.LBE6-.LBB6
 2857 041f 14       		.uleb128 0x14
 2858 0420 70696E00 		.ascii	"pin\000"
 2859 0424 01       		.byte	0x1
 2860 0425 9302     		.2byte	0x293
 2861 0427 81000000 		.4byte	0x81
 2862 042b 02       		.uleb128 0x2
 2863 042c 91       		.byte	0x91
 2864 042d 5E       		.sleb128 -34
 2865 042e 13       		.uleb128 0x13
 2866 042f 0B000000 		.4byte	.LASF49
 2867 0433 01       		.byte	0x1
 2868 0434 9B02     		.2byte	0x29b
 2869 0436 97000000 		.4byte	0x97
 2870 043a 03       		.uleb128 0x3
 2871 043b 91       		.byte	0x91
 2872 043c 987F     		.sleb128 -104
 2873 043e 00       		.byte	0
 2874 043f 00       		.byte	0
 2875 0440 12       		.uleb128 0x12
 2876 0441 6C0D0000 		.4byte	.LBB7
 2877 0445 5C000000 		.4byte	.LBE7-.LBB7
 2878 0449 7C040000 		.4byte	0x47c
 2879 044d 14       		.uleb128 0x14
 2880 044e 70696E00 		.ascii	"pin\000"
 2881 0452 01       		.byte	0x1
 2882 0453 B302     		.2byte	0x2b3
 2883 0455 81000000 		.4byte	0x81
 2884 0459 02       		.uleb128 0x2
 2885 045a 91       		.byte	0x91
 2886 045b 5D       		.sleb128 -35
 2887 045c 13       		.uleb128 0x13
 2888 045d 5C000000 		.4byte	.LASF41
 2889 0461 01       		.byte	0x1
 2890 0462 B402     		.2byte	0x2b4
 2891 0464 81000000 		.4byte	0x81
 2892 0468 02       		.uleb128 0x2
 2893 0469 91       		.byte	0x91
 2894 046a 5C       		.sleb128 -36
 2895 046b 13       		.uleb128 0x13
 2896 046c 0B000000 		.4byte	.LASF49
 2897 0470 01       		.byte	0x1
 2898 0471 BC02     		.2byte	0x2bc
 2899 0473 97000000 		.4byte	0x97
 2900 0477 03       		.uleb128 0x3
 2901 0478 91       		.byte	0x91
 2902 0479 947F     		.sleb128 -108
 2903 047b 00       		.byte	0
 2904 047c 12       		.uleb128 0x12
 2905 047d EA0D0000 		.4byte	.LBB8
 2906 0481 F2000000 		.4byte	.LBE8-.LBB8
 2907 0485 B8040000 		.4byte	0x4b8
 2908 0489 14       		.uleb128 0x14
 2909 048a 70696E00 		.ascii	"pin\000"
 2910 048e 01       		.byte	0x1
ARM GAS  C:\Users\Robert\AppData\Local\Temp\ccBTR6tf.s 			page 71


 2911 048f C802     		.2byte	0x2c8
 2912 0491 81000000 		.4byte	0x81
 2913 0495 02       		.uleb128 0x2
 2914 0496 91       		.byte	0x91
 2915 0497 5B       		.sleb128 -37
 2916 0498 13       		.uleb128 0x13
 2917 0499 5C000000 		.4byte	.LASF41
 2918 049d 01       		.byte	0x1
 2919 049e C902     		.2byte	0x2c9
 2920 04a0 81000000 		.4byte	0x81
 2921 04a4 02       		.uleb128 0x2
 2922 04a5 91       		.byte	0x91
 2923 04a6 5A       		.sleb128 -38
 2924 04a7 13       		.uleb128 0x13
 2925 04a8 0B000000 		.4byte	.LASF49
 2926 04ac 01       		.byte	0x1
 2927 04ad CE02     		.2byte	0x2ce
 2928 04af 97000000 		.4byte	0x97
 2929 04b3 03       		.uleb128 0x3
 2930 04b4 91       		.byte	0x91
 2931 04b5 907F     		.sleb128 -112
 2932 04b7 00       		.byte	0
 2933 04b8 12       		.uleb128 0x12
 2934 04b9 000F0000 		.4byte	.LBB9
 2935 04bd 1A000000 		.4byte	.LBE9-.LBB9
 2936 04c1 D5040000 		.4byte	0x4d5
 2937 04c5 13       		.uleb128 0x13
 2938 04c6 75020000 		.4byte	.LASF50
 2939 04ca 01       		.byte	0x1
 2940 04cb F602     		.2byte	0x2f6
 2941 04cd 81000000 		.4byte	0x81
 2942 04d1 02       		.uleb128 0x2
 2943 04d2 91       		.byte	0x91
 2944 04d3 59       		.sleb128 -39
 2945 04d4 00       		.byte	0
 2946 04d5 12       		.uleb128 0x12
 2947 04d6 340F0000 		.4byte	.LBB10
 2948 04da 92000000 		.4byte	.LBE10-.LBB10
 2949 04de 1B050000 		.4byte	0x51b
 2950 04e2 13       		.uleb128 0x13
 2951 04e3 AA020000 		.4byte	.LASF40
 2952 04e7 01       		.byte	0x1
 2953 04e8 0F03     		.2byte	0x30f
 2954 04ea 81000000 		.4byte	0x81
 2955 04ee 03       		.uleb128 0x3
 2956 04ef 91       		.byte	0x91
 2957 04f0 8F7F     		.sleb128 -113
 2958 04f2 15       		.uleb128 0x15
 2959 04f3 5C0F0000 		.4byte	.LBB11
 2960 04f7 3A000000 		.4byte	.LBE11-.LBB11
 2961 04fb 13       		.uleb128 0x13
 2962 04fc 75020000 		.4byte	.LASF50
 2963 0500 01       		.byte	0x1
 2964 0501 1403     		.2byte	0x314
 2965 0503 81000000 		.4byte	0x81
 2966 0507 02       		.uleb128 0x2
 2967 0508 91       		.byte	0x91
ARM GAS  C:\Users\Robert\AppData\Local\Temp\ccBTR6tf.s 			page 72


 2968 0509 58       		.sleb128 -40
 2969 050a 13       		.uleb128 0x13
 2970 050b 0B000000 		.4byte	.LASF49
 2971 050f 01       		.byte	0x1
 2972 0510 1903     		.2byte	0x319
 2973 0512 A2000000 		.4byte	0xa2
 2974 0516 02       		.uleb128 0x2
 2975 0517 91       		.byte	0x91
 2976 0518 54       		.sleb128 -44
 2977 0519 00       		.byte	0
 2978 051a 00       		.byte	0
 2979 051b 12       		.uleb128 0x12
 2980 051c D00F0000 		.4byte	.LBB12
 2981 0520 14000000 		.4byte	.LBE12-.LBB12
 2982 0524 35050000 		.4byte	0x535
 2983 0528 16       		.uleb128 0x16
 2984 0529 39000000 		.4byte	.LASF51
 2985 052d 01       		.byte	0x1
 2986 052e 4503     		.2byte	0x345
 2987 0530 81000000 		.4byte	0x81
 2988 0534 00       		.byte	0
 2989 0535 15       		.uleb128 0x15
 2990 0536 E40F0000 		.4byte	.LBB13
 2991 053a 14000000 		.4byte	.LBE13-.LBB13
 2992 053e 16       		.uleb128 0x16
 2993 053f 39000000 		.4byte	.LASF51
 2994 0543 01       		.byte	0x1
 2995 0544 7303     		.2byte	0x373
 2996 0546 81000000 		.4byte	0x81
 2997 054a 00       		.byte	0
 2998 054b 00       		.byte	0
 2999 054c 17       		.uleb128 0x17
 3000 054d 81000000 		.4byte	0x81
 3001 0551 5C050000 		.4byte	0x55c
 3002 0555 18       		.uleb128 0x18
 3003 0556 CE000000 		.4byte	0xce
 3004 055a 27       		.byte	0x27
 3005 055b 00       		.byte	0
 3006 055c 19       		.uleb128 0x19
 3007 055d 3C030000 		.4byte	.LASF52
 3008 0561 01       		.byte	0x1
 3009 0562 1604     		.2byte	0x416
 3010 0564 00000000 		.4byte	.LFB61
 3011 0568 1E000000 		.4byte	.LFE61-.LFB61
 3012 056c 01       		.uleb128 0x1
 3013 056d 9C       		.byte	0x9c
 3014 056e 82050000 		.4byte	0x582
 3015 0572 1A       		.uleb128 0x1a
 3016 0573 E9020000 		.4byte	.LASF45
 3017 0577 01       		.byte	0x1
 3018 0578 1604     		.2byte	0x416
 3019 057a 0D020000 		.4byte	0x20d
 3020 057e 02       		.uleb128 0x2
 3021 057f 91       		.byte	0x91
 3022 0580 74       		.sleb128 -12
 3023 0581 00       		.byte	0
 3024 0582 1B       		.uleb128 0x1b
ARM GAS  C:\Users\Robert\AppData\Local\Temp\ccBTR6tf.s 			page 73


 3025 0583 4E030000 		.4byte	.LASF53
 3026 0587 06       		.byte	0x6
 3027 0588 1606     		.2byte	0x616
 3028 058a 8E050000 		.4byte	0x58e
 3029 058e 1C       		.uleb128 0x1c
 3030 058f 76000000 		.4byte	0x76
 3031 0593 1D       		.uleb128 0x1d
 3032 0594 02030000 		.4byte	.LASF54
 3033 0598 01       		.byte	0x1
 3034 0599 14       		.byte	0x14
 3035 059a B4010000 		.4byte	0x1b4
 3036 059e 05       		.uleb128 0x5
 3037 059f 03       		.byte	0x3
 3038 05a0 00000000 		.4byte	vessel
 3039 05a4 00       		.byte	0
 3040              		.section	.debug_abbrev,"",%progbits
 3041              	.Ldebug_abbrev0:
 3042 0000 01       		.uleb128 0x1
 3043 0001 11       		.uleb128 0x11
 3044 0002 01       		.byte	0x1
 3045 0003 25       		.uleb128 0x25
 3046 0004 0E       		.uleb128 0xe
 3047 0005 13       		.uleb128 0x13
 3048 0006 0B       		.uleb128 0xb
 3049 0007 03       		.uleb128 0x3
 3050 0008 0E       		.uleb128 0xe
 3051 0009 1B       		.uleb128 0x1b
 3052 000a 0E       		.uleb128 0xe
 3053 000b 55       		.uleb128 0x55
 3054 000c 17       		.uleb128 0x17
 3055 000d 11       		.uleb128 0x11
 3056 000e 01       		.uleb128 0x1
 3057 000f 10       		.uleb128 0x10
 3058 0010 17       		.uleb128 0x17
 3059 0011 00       		.byte	0
 3060 0012 00       		.byte	0
 3061 0013 02       		.uleb128 0x2
 3062 0014 24       		.uleb128 0x24
 3063 0015 00       		.byte	0
 3064 0016 0B       		.uleb128 0xb
 3065 0017 0B       		.uleb128 0xb
 3066 0018 3E       		.uleb128 0x3e
 3067 0019 0B       		.uleb128 0xb
 3068 001a 03       		.uleb128 0x3
 3069 001b 0E       		.uleb128 0xe
 3070 001c 00       		.byte	0
 3071 001d 00       		.byte	0
 3072 001e 03       		.uleb128 0x3
 3073 001f 16       		.uleb128 0x16
 3074 0020 00       		.byte	0
 3075 0021 03       		.uleb128 0x3
 3076 0022 0E       		.uleb128 0xe
 3077 0023 3A       		.uleb128 0x3a
 3078 0024 0B       		.uleb128 0xb
 3079 0025 3B       		.uleb128 0x3b
 3080 0026 0B       		.uleb128 0xb
 3081 0027 49       		.uleb128 0x49
ARM GAS  C:\Users\Robert\AppData\Local\Temp\ccBTR6tf.s 			page 74


 3082 0028 13       		.uleb128 0x13
 3083 0029 00       		.byte	0
 3084 002a 00       		.byte	0
 3085 002b 04       		.uleb128 0x4
 3086 002c 24       		.uleb128 0x24
 3087 002d 00       		.byte	0
 3088 002e 0B       		.uleb128 0xb
 3089 002f 0B       		.uleb128 0xb
 3090 0030 3E       		.uleb128 0x3e
 3091 0031 0B       		.uleb128 0xb
 3092 0032 03       		.uleb128 0x3
 3093 0033 08       		.uleb128 0x8
 3094 0034 00       		.byte	0
 3095 0035 00       		.byte	0
 3096 0036 05       		.uleb128 0x5
 3097 0037 16       		.uleb128 0x16
 3098 0038 00       		.byte	0
 3099 0039 03       		.uleb128 0x3
 3100 003a 0E       		.uleb128 0xe
 3101 003b 3A       		.uleb128 0x3a
 3102 003c 0B       		.uleb128 0xb
 3103 003d 3B       		.uleb128 0x3b
 3104 003e 05       		.uleb128 0x5
 3105 003f 49       		.uleb128 0x49
 3106 0040 13       		.uleb128 0x13
 3107 0041 00       		.byte	0
 3108 0042 00       		.byte	0
 3109 0043 06       		.uleb128 0x6
 3110 0044 13       		.uleb128 0x13
 3111 0045 01       		.byte	0x1
 3112 0046 03       		.uleb128 0x3
 3113 0047 0E       		.uleb128 0xe
 3114 0048 0B       		.uleb128 0xb
 3115 0049 0B       		.uleb128 0xb
 3116 004a 3A       		.uleb128 0x3a
 3117 004b 0B       		.uleb128 0xb
 3118 004c 3B       		.uleb128 0x3b
 3119 004d 0B       		.uleb128 0xb
 3120 004e 01       		.uleb128 0x1
 3121 004f 13       		.uleb128 0x13
 3122 0050 00       		.byte	0
 3123 0051 00       		.byte	0
 3124 0052 07       		.uleb128 0x7
 3125 0053 0D       		.uleb128 0xd
 3126 0054 00       		.byte	0
 3127 0055 03       		.uleb128 0x3
 3128 0056 0E       		.uleb128 0xe
 3129 0057 3A       		.uleb128 0x3a
 3130 0058 0B       		.uleb128 0xb
 3131 0059 3B       		.uleb128 0x3b
 3132 005a 0B       		.uleb128 0xb
 3133 005b 49       		.uleb128 0x49
 3134 005c 13       		.uleb128 0x13
 3135 005d 0B       		.uleb128 0xb
 3136 005e 0B       		.uleb128 0xb
 3137 005f 0D       		.uleb128 0xd
 3138 0060 0B       		.uleb128 0xb
ARM GAS  C:\Users\Robert\AppData\Local\Temp\ccBTR6tf.s 			page 75


 3139 0061 0C       		.uleb128 0xc
 3140 0062 0B       		.uleb128 0xb
 3141 0063 38       		.uleb128 0x38
 3142 0064 0B       		.uleb128 0xb
 3143 0065 00       		.byte	0
 3144 0066 00       		.byte	0
 3145 0067 08       		.uleb128 0x8
 3146 0068 0D       		.uleb128 0xd
 3147 0069 00       		.byte	0
 3148 006a 03       		.uleb128 0x3
 3149 006b 08       		.uleb128 0x8
 3150 006c 3A       		.uleb128 0x3a
 3151 006d 0B       		.uleb128 0xb
 3152 006e 3B       		.uleb128 0x3b
 3153 006f 0B       		.uleb128 0xb
 3154 0070 49       		.uleb128 0x49
 3155 0071 13       		.uleb128 0x13
 3156 0072 0B       		.uleb128 0xb
 3157 0073 0B       		.uleb128 0xb
 3158 0074 0D       		.uleb128 0xd
 3159 0075 0B       		.uleb128 0xb
 3160 0076 0C       		.uleb128 0xc
 3161 0077 0B       		.uleb128 0xb
 3162 0078 38       		.uleb128 0x38
 3163 0079 0B       		.uleb128 0xb
 3164 007a 00       		.byte	0
 3165 007b 00       		.byte	0
 3166 007c 09       		.uleb128 0x9
 3167 007d 2E       		.uleb128 0x2e
 3168 007e 00       		.byte	0
 3169 007f 3F       		.uleb128 0x3f
 3170 0080 19       		.uleb128 0x19
 3171 0081 03       		.uleb128 0x3
 3172 0082 0E       		.uleb128 0xe
 3173 0083 3A       		.uleb128 0x3a
 3174 0084 0B       		.uleb128 0xb
 3175 0085 3B       		.uleb128 0x3b
 3176 0086 0B       		.uleb128 0xb
 3177 0087 11       		.uleb128 0x11
 3178 0088 01       		.uleb128 0x1
 3179 0089 12       		.uleb128 0x12
 3180 008a 06       		.uleb128 0x6
 3181 008b 40       		.uleb128 0x40
 3182 008c 18       		.uleb128 0x18
 3183 008d 9642     		.uleb128 0x2116
 3184 008f 19       		.uleb128 0x19
 3185 0090 00       		.byte	0
 3186 0091 00       		.byte	0
 3187 0092 0A       		.uleb128 0xa
 3188 0093 2E       		.uleb128 0x2e
 3189 0094 01       		.byte	0x1
 3190 0095 3F       		.uleb128 0x3f
 3191 0096 19       		.uleb128 0x19
 3192 0097 03       		.uleb128 0x3
 3193 0098 0E       		.uleb128 0xe
 3194 0099 3A       		.uleb128 0x3a
 3195 009a 0B       		.uleb128 0xb
ARM GAS  C:\Users\Robert\AppData\Local\Temp\ccBTR6tf.s 			page 76


 3196 009b 3B       		.uleb128 0x3b
 3197 009c 0B       		.uleb128 0xb
 3198 009d 27       		.uleb128 0x27
 3199 009e 19       		.uleb128 0x19
 3200 009f 49       		.uleb128 0x49
 3201 00a0 13       		.uleb128 0x13
 3202 00a1 11       		.uleb128 0x11
 3203 00a2 01       		.uleb128 0x1
 3204 00a3 12       		.uleb128 0x12
 3205 00a4 06       		.uleb128 0x6
 3206 00a5 40       		.uleb128 0x40
 3207 00a6 18       		.uleb128 0x18
 3208 00a7 9642     		.uleb128 0x2116
 3209 00a9 19       		.uleb128 0x19
 3210 00aa 01       		.uleb128 0x1
 3211 00ab 13       		.uleb128 0x13
 3212 00ac 00       		.byte	0
 3213 00ad 00       		.byte	0
 3214 00ae 0B       		.uleb128 0xb
 3215 00af 05       		.uleb128 0x5
 3216 00b0 00       		.byte	0
 3217 00b1 03       		.uleb128 0x3
 3218 00b2 0E       		.uleb128 0xe
 3219 00b3 3A       		.uleb128 0x3a
 3220 00b4 0B       		.uleb128 0xb
 3221 00b5 3B       		.uleb128 0x3b
 3222 00b6 0B       		.uleb128 0xb
 3223 00b7 49       		.uleb128 0x49
 3224 00b8 13       		.uleb128 0x13
 3225 00b9 02       		.uleb128 0x2
 3226 00ba 18       		.uleb128 0x18
 3227 00bb 00       		.byte	0
 3228 00bc 00       		.byte	0
 3229 00bd 0C       		.uleb128 0xc
 3230 00be 34       		.uleb128 0x34
 3231 00bf 00       		.byte	0
 3232 00c0 03       		.uleb128 0x3
 3233 00c1 0E       		.uleb128 0xe
 3234 00c2 3A       		.uleb128 0x3a
 3235 00c3 0B       		.uleb128 0xb
 3236 00c4 3B       		.uleb128 0x3b
 3237 00c5 0B       		.uleb128 0xb
 3238 00c6 49       		.uleb128 0x49
 3239 00c7 13       		.uleb128 0x13
 3240 00c8 02       		.uleb128 0x2
 3241 00c9 18       		.uleb128 0x18
 3242 00ca 00       		.byte	0
 3243 00cb 00       		.byte	0
 3244 00cc 0D       		.uleb128 0xd
 3245 00cd 0F       		.uleb128 0xf
 3246 00ce 00       		.byte	0
 3247 00cf 0B       		.uleb128 0xb
 3248 00d0 0B       		.uleb128 0xb
 3249 00d1 49       		.uleb128 0x49
 3250 00d2 13       		.uleb128 0x13
 3251 00d3 00       		.byte	0
 3252 00d4 00       		.byte	0
ARM GAS  C:\Users\Robert\AppData\Local\Temp\ccBTR6tf.s 			page 77


 3253 00d5 0E       		.uleb128 0xe
 3254 00d6 2E       		.uleb128 0x2e
 3255 00d7 01       		.byte	0x1
 3256 00d8 3F       		.uleb128 0x3f
 3257 00d9 19       		.uleb128 0x19
 3258 00da 03       		.uleb128 0x3
 3259 00db 0E       		.uleb128 0xe
 3260 00dc 3A       		.uleb128 0x3a
 3261 00dd 0B       		.uleb128 0xb
 3262 00de 3B       		.uleb128 0x3b
 3263 00df 0B       		.uleb128 0xb
 3264 00e0 27       		.uleb128 0x27
 3265 00e1 19       		.uleb128 0x19
 3266 00e2 49       		.uleb128 0x49
 3267 00e3 13       		.uleb128 0x13
 3268 00e4 11       		.uleb128 0x11
 3269 00e5 01       		.uleb128 0x1
 3270 00e6 12       		.uleb128 0x12
 3271 00e7 06       		.uleb128 0x6
 3272 00e8 40       		.uleb128 0x40
 3273 00e9 18       		.uleb128 0x18
 3274 00ea 9742     		.uleb128 0x2117
 3275 00ec 19       		.uleb128 0x19
 3276 00ed 01       		.uleb128 0x1
 3277 00ee 13       		.uleb128 0x13
 3278 00ef 00       		.byte	0
 3279 00f0 00       		.byte	0
 3280 00f1 0F       		.uleb128 0xf
 3281 00f2 34       		.uleb128 0x34
 3282 00f3 00       		.byte	0
 3283 00f4 03       		.uleb128 0x3
 3284 00f5 08       		.uleb128 0x8
 3285 00f6 3A       		.uleb128 0x3a
 3286 00f7 0B       		.uleb128 0xb
 3287 00f8 3B       		.uleb128 0x3b
 3288 00f9 0B       		.uleb128 0xb
 3289 00fa 49       		.uleb128 0x49
 3290 00fb 13       		.uleb128 0x13
 3291 00fc 02       		.uleb128 0x2
 3292 00fd 18       		.uleb128 0x18
 3293 00fe 00       		.byte	0
 3294 00ff 00       		.byte	0
 3295 0100 10       		.uleb128 0x10
 3296 0101 2E       		.uleb128 0x2e
 3297 0102 01       		.byte	0x1
 3298 0103 3F       		.uleb128 0x3f
 3299 0104 19       		.uleb128 0x19
 3300 0105 03       		.uleb128 0x3
 3301 0106 0E       		.uleb128 0xe
 3302 0107 3A       		.uleb128 0x3a
 3303 0108 0B       		.uleb128 0xb
 3304 0109 3B       		.uleb128 0x3b
 3305 010a 0B       		.uleb128 0xb
 3306 010b 27       		.uleb128 0x27
 3307 010c 19       		.uleb128 0x19
 3308 010d 11       		.uleb128 0x11
 3309 010e 01       		.uleb128 0x1
ARM GAS  C:\Users\Robert\AppData\Local\Temp\ccBTR6tf.s 			page 78


 3310 010f 12       		.uleb128 0x12
 3311 0110 06       		.uleb128 0x6
 3312 0111 40       		.uleb128 0x40
 3313 0112 18       		.uleb128 0x18
 3314 0113 9742     		.uleb128 0x2117
 3315 0115 19       		.uleb128 0x19
 3316 0116 01       		.uleb128 0x1
 3317 0117 13       		.uleb128 0x13
 3318 0118 00       		.byte	0
 3319 0119 00       		.byte	0
 3320 011a 11       		.uleb128 0x11
 3321 011b 2E       		.uleb128 0x2e
 3322 011c 01       		.byte	0x1
 3323 011d 3F       		.uleb128 0x3f
 3324 011e 19       		.uleb128 0x19
 3325 011f 03       		.uleb128 0x3
 3326 0120 0E       		.uleb128 0xe
 3327 0121 3A       		.uleb128 0x3a
 3328 0122 0B       		.uleb128 0xb
 3329 0123 3B       		.uleb128 0x3b
 3330 0124 0B       		.uleb128 0xb
 3331 0125 27       		.uleb128 0x27
 3332 0126 19       		.uleb128 0x19
 3333 0127 11       		.uleb128 0x11
 3334 0128 01       		.uleb128 0x1
 3335 0129 12       		.uleb128 0x12
 3336 012a 06       		.uleb128 0x6
 3337 012b 40       		.uleb128 0x40
 3338 012c 18       		.uleb128 0x18
 3339 012d 9642     		.uleb128 0x2116
 3340 012f 19       		.uleb128 0x19
 3341 0130 01       		.uleb128 0x1
 3342 0131 13       		.uleb128 0x13
 3343 0132 00       		.byte	0
 3344 0133 00       		.byte	0
 3345 0134 12       		.uleb128 0x12
 3346 0135 0B       		.uleb128 0xb
 3347 0136 01       		.byte	0x1
 3348 0137 11       		.uleb128 0x11
 3349 0138 01       		.uleb128 0x1
 3350 0139 12       		.uleb128 0x12
 3351 013a 06       		.uleb128 0x6
 3352 013b 01       		.uleb128 0x1
 3353 013c 13       		.uleb128 0x13
 3354 013d 00       		.byte	0
 3355 013e 00       		.byte	0
 3356 013f 13       		.uleb128 0x13
 3357 0140 34       		.uleb128 0x34
 3358 0141 00       		.byte	0
 3359 0142 03       		.uleb128 0x3
 3360 0143 0E       		.uleb128 0xe
 3361 0144 3A       		.uleb128 0x3a
 3362 0145 0B       		.uleb128 0xb
 3363 0146 3B       		.uleb128 0x3b
 3364 0147 05       		.uleb128 0x5
 3365 0148 49       		.uleb128 0x49
 3366 0149 13       		.uleb128 0x13
ARM GAS  C:\Users\Robert\AppData\Local\Temp\ccBTR6tf.s 			page 79


 3367 014a 02       		.uleb128 0x2
 3368 014b 18       		.uleb128 0x18
 3369 014c 00       		.byte	0
 3370 014d 00       		.byte	0
 3371 014e 14       		.uleb128 0x14
 3372 014f 34       		.uleb128 0x34
 3373 0150 00       		.byte	0
 3374 0151 03       		.uleb128 0x3
 3375 0152 08       		.uleb128 0x8
 3376 0153 3A       		.uleb128 0x3a
 3377 0154 0B       		.uleb128 0xb
 3378 0155 3B       		.uleb128 0x3b
 3379 0156 05       		.uleb128 0x5
 3380 0157 49       		.uleb128 0x49
 3381 0158 13       		.uleb128 0x13
 3382 0159 02       		.uleb128 0x2
 3383 015a 18       		.uleb128 0x18
 3384 015b 00       		.byte	0
 3385 015c 00       		.byte	0
 3386 015d 15       		.uleb128 0x15
 3387 015e 0B       		.uleb128 0xb
 3388 015f 01       		.byte	0x1
 3389 0160 11       		.uleb128 0x11
 3390 0161 01       		.uleb128 0x1
 3391 0162 12       		.uleb128 0x12
 3392 0163 06       		.uleb128 0x6
 3393 0164 00       		.byte	0
 3394 0165 00       		.byte	0
 3395 0166 16       		.uleb128 0x16
 3396 0167 34       		.uleb128 0x34
 3397 0168 00       		.byte	0
 3398 0169 03       		.uleb128 0x3
 3399 016a 0E       		.uleb128 0xe
 3400 016b 3A       		.uleb128 0x3a
 3401 016c 0B       		.uleb128 0xb
 3402 016d 3B       		.uleb128 0x3b
 3403 016e 05       		.uleb128 0x5
 3404 016f 49       		.uleb128 0x49
 3405 0170 13       		.uleb128 0x13
 3406 0171 00       		.byte	0
 3407 0172 00       		.byte	0
 3408 0173 17       		.uleb128 0x17
 3409 0174 01       		.uleb128 0x1
 3410 0175 01       		.byte	0x1
 3411 0176 49       		.uleb128 0x49
 3412 0177 13       		.uleb128 0x13
 3413 0178 01       		.uleb128 0x1
 3414 0179 13       		.uleb128 0x13
 3415 017a 00       		.byte	0
 3416 017b 00       		.byte	0
 3417 017c 18       		.uleb128 0x18
 3418 017d 21       		.uleb128 0x21
 3419 017e 00       		.byte	0
 3420 017f 49       		.uleb128 0x49
 3421 0180 13       		.uleb128 0x13
 3422 0181 2F       		.uleb128 0x2f
 3423 0182 0B       		.uleb128 0xb
ARM GAS  C:\Users\Robert\AppData\Local\Temp\ccBTR6tf.s 			page 80


 3424 0183 00       		.byte	0
 3425 0184 00       		.byte	0
 3426 0185 19       		.uleb128 0x19
 3427 0186 2E       		.uleb128 0x2e
 3428 0187 01       		.byte	0x1
 3429 0188 3F       		.uleb128 0x3f
 3430 0189 19       		.uleb128 0x19
 3431 018a 03       		.uleb128 0x3
 3432 018b 0E       		.uleb128 0xe
 3433 018c 3A       		.uleb128 0x3a
 3434 018d 0B       		.uleb128 0xb
 3435 018e 3B       		.uleb128 0x3b
 3436 018f 05       		.uleb128 0x5
 3437 0190 27       		.uleb128 0x27
 3438 0191 19       		.uleb128 0x19
 3439 0192 11       		.uleb128 0x11
 3440 0193 01       		.uleb128 0x1
 3441 0194 12       		.uleb128 0x12
 3442 0195 06       		.uleb128 0x6
 3443 0196 40       		.uleb128 0x40
 3444 0197 18       		.uleb128 0x18
 3445 0198 9642     		.uleb128 0x2116
 3446 019a 19       		.uleb128 0x19
 3447 019b 01       		.uleb128 0x1
 3448 019c 13       		.uleb128 0x13
 3449 019d 00       		.byte	0
 3450 019e 00       		.byte	0
 3451 019f 1A       		.uleb128 0x1a
 3452 01a0 05       		.uleb128 0x5
 3453 01a1 00       		.byte	0
 3454 01a2 03       		.uleb128 0x3
 3455 01a3 0E       		.uleb128 0xe
 3456 01a4 3A       		.uleb128 0x3a
 3457 01a5 0B       		.uleb128 0xb
 3458 01a6 3B       		.uleb128 0x3b
 3459 01a7 05       		.uleb128 0x5
 3460 01a8 49       		.uleb128 0x49
 3461 01a9 13       		.uleb128 0x13
 3462 01aa 02       		.uleb128 0x2
 3463 01ab 18       		.uleb128 0x18
 3464 01ac 00       		.byte	0
 3465 01ad 00       		.byte	0
 3466 01ae 1B       		.uleb128 0x1b
 3467 01af 34       		.uleb128 0x34
 3468 01b0 00       		.byte	0
 3469 01b1 03       		.uleb128 0x3
 3470 01b2 0E       		.uleb128 0xe
 3471 01b3 3A       		.uleb128 0x3a
 3472 01b4 0B       		.uleb128 0xb
 3473 01b5 3B       		.uleb128 0x3b
 3474 01b6 05       		.uleb128 0x5
 3475 01b7 49       		.uleb128 0x49
 3476 01b8 13       		.uleb128 0x13
 3477 01b9 3F       		.uleb128 0x3f
 3478 01ba 19       		.uleb128 0x19
 3479 01bb 3C       		.uleb128 0x3c
 3480 01bc 19       		.uleb128 0x19
ARM GAS  C:\Users\Robert\AppData\Local\Temp\ccBTR6tf.s 			page 81


 3481 01bd 00       		.byte	0
 3482 01be 00       		.byte	0
 3483 01bf 1C       		.uleb128 0x1c
 3484 01c0 35       		.uleb128 0x35
 3485 01c1 00       		.byte	0
 3486 01c2 49       		.uleb128 0x49
 3487 01c3 13       		.uleb128 0x13
 3488 01c4 00       		.byte	0
 3489 01c5 00       		.byte	0
 3490 01c6 1D       		.uleb128 0x1d
 3491 01c7 34       		.uleb128 0x34
 3492 01c8 00       		.byte	0
 3493 01c9 03       		.uleb128 0x3
 3494 01ca 0E       		.uleb128 0xe
 3495 01cb 3A       		.uleb128 0x3a
 3496 01cc 0B       		.uleb128 0xb
 3497 01cd 3B       		.uleb128 0x3b
 3498 01ce 0B       		.uleb128 0xb
 3499 01cf 49       		.uleb128 0x49
 3500 01d0 13       		.uleb128 0x13
 3501 01d1 3F       		.uleb128 0x3f
 3502 01d2 19       		.uleb128 0x19
 3503 01d3 02       		.uleb128 0x2
 3504 01d4 18       		.uleb128 0x18
 3505 01d5 00       		.byte	0
 3506 01d6 00       		.byte	0
 3507 01d7 00       		.byte	0
 3508              		.section	.debug_aranges,"",%progbits
 3509 0000 44000000 		.4byte	0x44
 3510 0004 0200     		.2byte	0x2
 3511 0006 00000000 		.4byte	.Ldebug_info0
 3512 000a 04       		.byte	0x4
 3513 000b 00       		.byte	0
 3514 000c 0000     		.2byte	0
 3515 000e 0000     		.2byte	0
 3516 0010 00000000 		.4byte	.LFB56
 3517 0014 48000000 		.4byte	.LFE56-.LFB56
 3518 0018 00000000 		.4byte	.LFB57
 3519 001c 5A000000 		.4byte	.LFE57-.LFB57
 3520 0020 00000000 		.4byte	.LFB58
 3521 0024 40000000 		.4byte	.LFE58-.LFB58
 3522 0028 00000000 		.4byte	.LFB59
 3523 002c A2000000 		.4byte	.LFE59-.LFB59
 3524 0030 00000000 		.4byte	.LFB60
 3525 0034 A2110000 		.4byte	.LFE60-.LFB60
 3526 0038 00000000 		.4byte	.LFB61
 3527 003c 1E000000 		.4byte	.LFE61-.LFB61
 3528 0040 00000000 		.4byte	0
 3529 0044 00000000 		.4byte	0
 3530              		.section	.debug_ranges,"",%progbits
 3531              	.Ldebug_ranges0:
 3532 0000 00000000 		.4byte	.LFB56
 3533 0004 48000000 		.4byte	.LFE56
 3534 0008 00000000 		.4byte	.LFB57
 3535 000c 5A000000 		.4byte	.LFE57
 3536 0010 00000000 		.4byte	.LFB58
 3537 0014 40000000 		.4byte	.LFE58
ARM GAS  C:\Users\Robert\AppData\Local\Temp\ccBTR6tf.s 			page 82


 3538 0018 00000000 		.4byte	.LFB59
 3539 001c A2000000 		.4byte	.LFE59
 3540 0020 00000000 		.4byte	.LFB60
 3541 0024 A2110000 		.4byte	.LFE60
 3542 0028 00000000 		.4byte	.LFB61
 3543 002c 1E000000 		.4byte	.LFE61
 3544 0030 00000000 		.4byte	0
 3545 0034 00000000 		.4byte	0
 3546              		.section	.debug_line,"",%progbits
 3547              	.Ldebug_line0:
 3548 0000 77040000 		.section	.debug_str,"MS",%progbits,1
 3548      02005501 
 3548      00000201 
 3548      FB0E0D00 
 3548      01010101 
 3549              	.LASF34:
 3550 0000 62756666 		.ascii	"buffer_len\000"
 3550      65725F6C 
 3550      656E00
 3551              	.LASF49:
 3552 000b 72657375 		.ascii	"result\000"
 3552      6C7400
 3553              	.LASF25:
 3554 0012 636F6C75 		.ascii	"column\000"
 3554      6D6E00
 3555              	.LASF59:
 3556 0019 4C494E58 		.ascii	"LINX_Initialize\000"
 3556      5F496E69 
 3556      7469616C 
 3556      697A6500 
 3557              	.LASF2:
 3558 0029 73686F72 		.ascii	"short int\000"
 3558      7420696E 
 3558      7400
 3559              	.LASF27:
 3560 0033 636F6C6F 		.ascii	"color\000"
 3560      7200
 3561              	.LASF51:
 3562 0039 6D6F6465 		.ascii	"mode\000"
 3562      00
 3563              	.LASF56:
 3564 003e 2E5C4C49 		.ascii	".\\LINX.c\000"
 3564      4E582E63 
 3564      00
 3565              	.LASF42:
 3566 0047 76616C75 		.ascii	"value_bits_remaining\000"
 3566      655F6269 
 3566      74735F72 
 3566      656D6169 
 3566      6E696E67 
 3567              	.LASF41:
 3568 005c 76616C75 		.ascii	"value\000"
 3568      6500
 3569              	.LASF12:
 3570 0062 75696E74 		.ascii	"uint16\000"
 3570      313600
 3571              	.LASF36:
ARM GAS  C:\Users\Robert\AppData\Local\Temp\ccBTR6tf.s 			page 83


 3572 0069 63686563 		.ascii	"checksum\000"
 3572      6B73756D 
 3572      00
 3573              	.LASF38:
 3574 0072 72657370 		.ascii	"response_data_len\000"
 3574      6F6E7365 
 3574      5F646174 
 3574      615F6C65 
 3574      6E00
 3575              	.LASF11:
 3576 0084 75696E74 		.ascii	"uint8\000"
 3576      3800
 3577              	.LASF30:
 3578 008a 4C494E58 		.ascii	"LINX_GetCommand\000"
 3578      5F476574 
 3578      436F6D6D 
 3578      616E6400 
 3579              	.LASF15:
 3580 009a 666C6F61 		.ascii	"float\000"
 3580      7400
 3581              	.LASF6:
 3582 00a0 6C6F6E67 		.ascii	"long long int\000"
 3582      206C6F6E 
 3582      6720696E 
 3582      7400
 3583              	.LASF17:
 3584 00ae 63686172 		.ascii	"char\000"
 3584      00
 3585              	.LASF58:
 3586 00b3 76657373 		.ascii	"vessel_tag\000"
 3586      656C5F74 
 3586      616700
 3587              	.LASF55:
 3588 00be 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 3588      4320342E 
 3588      392E3320 
 3588      32303135 
 3588      30333033 
 3589 00f1 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m3 -mthumb -g -O"
 3589      20726576 
 3589      6973696F 
 3589      6E203232 
 3589      31323230 
 3590 0124 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 3590      66756E63 
 3590      74696F6E 
 3590      2D736563 
 3590      74696F6E 
 3591              	.LASF20:
 3592 014c 61646472 		.ascii	"addr\000"
 3592      00
 3593              	.LASF24:
 3594 0151 77617665 		.ascii	"waveType\000"
 3594      54797065 
 3594      00
 3595              	.LASF39:
 3596 015a 62697473 		.ascii	"bits_per_value\000"
ARM GAS  C:\Users\Robert\AppData\Local\Temp\ccBTR6tf.s 			page 84


 3596      5F706572 
 3596      5F76616C 
 3596      756500
 3597              	.LASF44:
 3598 0169 4C494E58 		.ascii	"LINX_ProcessCommand\000"
 3598      5F50726F 
 3598      63657373 
 3598      436F6D6D 
 3598      616E6400 
 3599              	.LASF1:
 3600 017d 756E7369 		.ascii	"unsigned char\000"
 3600      676E6564 
 3600      20636861 
 3600      7200
 3601              	.LASF35:
 3602 018b 636F6D6D 		.ascii	"command_len\000"
 3602      616E645F 
 3602      6C656E00 
 3603              	.LASF0:
 3604 0197 7369676E 		.ascii	"signed char\000"
 3604      65642063 
 3604      68617200 
 3605              	.LASF48:
 3606 01a3 7365636F 		.ascii	"second\000"
 3606      6E6400
 3607              	.LASF7:
 3608 01aa 6C6F6E67 		.ascii	"long long unsigned int\000"
 3608      206C6F6E 
 3608      6720756E 
 3608      7369676E 
 3608      65642069 
 3609              	.LASF8:
 3610 01c1 756E7369 		.ascii	"unsigned int\000"
 3610      676E6564 
 3610      20696E74 
 3610      00
 3611              	.LASF18:
 3612 01ce 63797374 		.ascii	"cystatus\000"
 3612      61747573 
 3612      00
 3613              	.LASF3:
 3614 01d7 73686F72 		.ascii	"short unsigned int\000"
 3614      7420756E 
 3614      7369676E 
 3614      65642069 
 3614      6E7400
 3615              	.LASF46:
 3616 01ea 73746174 		.ascii	"status\000"
 3616      757300
 3617              	.LASF57:
 3618 01f1 433A5C55 		.ascii	"C:\\Users\\Robert\\workspace\\embedit\\linx\\PSoC_2"
 3618      73657273 
 3618      5C526F62 
 3618      6572745C 
 3618      776F726B 
 3619 021e 5F50692D 		.ascii	"_Pi-000.Bundle01\\PSoC_2_Pi-000.Bundle01\\PSoC_2_Pi"
 3619      3030302E 
ARM GAS  C:\Users\Robert\AppData\Local\Temp\ccBTR6tf.s 			page 85


 3619      42756E64 
 3619      6C653031 
 3619      5C50536F 
 3620 024f 2E637964 		.ascii	".cydsn\000"
 3620      736E00
 3621              	.LASF4:
 3622 0256 6C6F6E67 		.ascii	"long int\000"
 3622      20696E74 
 3622      00
 3623              	.LASF10:
 3624 025f 696E7433 		.ascii	"int32_t\000"
 3624      325F7400 
 3625              	.LASF29:
 3626 0267 5F426F6F 		.ascii	"_Bool\000"
 3626      6C00
 3627              	.LASF23:
 3628 026d 74726967 		.ascii	"trigpin\000"
 3628      70696E00 
 3629              	.LASF50:
 3630 0275 6368616E 		.ascii	"channel\000"
 3630      6E656C00 
 3631              	.LASF28:
 3632 027d 76657373 		.ascii	"vessel_type\000"
 3632      656C5F74 
 3632      79706500 
 3633              	.LASF21:
 3634 0289 706F7274 		.ascii	"port\000"
 3634      00
 3635              	.LASF33:
 3636 028e 62756666 		.ascii	"buffer\000"
 3636      657200
 3637              	.LASF37:
 3638 0295 72657370 		.ascii	"response_data\000"
 3638      6F6E7365 
 3638      5F646174 
 3638      6100
 3639              	.LASF13:
 3640 02a3 75696E74 		.ascii	"uint32\000"
 3640      333200
 3641              	.LASF40:
 3642 02aa 72657370 		.ascii	"response_bits_remaining\000"
 3642      6F6E7365 
 3642      5F626974 
 3642      735F7265 
 3642      6D61696E 
 3643              	.LASF5:
 3644 02c2 6C6F6E67 		.ascii	"long unsigned int\000"
 3644      20756E73 
 3644      69676E65 
 3644      6420696E 
 3644      7400
 3645              	.LASF14:
 3646 02d4 696E7433 		.ascii	"int32\000"
 3646      3200
 3647              	.LASF16:
 3648 02da 646F7562 		.ascii	"double\000"
 3648      6C6500
ARM GAS  C:\Users\Robert\AppData\Local\Temp\ccBTR6tf.s 			page 86


 3649              	.LASF26:
 3650 02e1 64656C61 		.ascii	"delayus\000"
 3650      79757300 
 3651              	.LASF45:
 3652 02e9 72657370 		.ascii	"response\000"
 3652      6F6E7365 
 3652      00
 3653              	.LASF43:
 3654 02f2 4C494E58 		.ascii	"LINX_PackResult\000"
 3654      5F506163 
 3654      6B526573 
 3654      756C7400 
 3655              	.LASF54:
 3656 0302 76657373 		.ascii	"vessel\000"
 3656      656C00
 3657              	.LASF9:
 3658 0309 5F5F696E 		.ascii	"__int32_t\000"
 3658      7433325F 
 3658      7400
 3659              	.LASF22:
 3660 0313 74726967 		.ascii	"trigport\000"
 3660      706F7274 
 3660      00
 3661              	.LASF19:
 3662 031c 73697A65 		.ascii	"sizetype\000"
 3662      74797065 
 3662      00
 3663              	.LASF31:
 3664 0325 4C494E58 		.ascii	"LINX_CalculateChecksum\000"
 3664      5F43616C 
 3664      63756C61 
 3664      74654368 
 3664      65636B73 
 3665              	.LASF52:
 3666 033c 4C494E58 		.ascii	"LINX_SendResponse\000"
 3666      5F53656E 
 3666      64526573 
 3666      706F6E73 
 3666      6500
 3667              	.LASF53:
 3668 034e 49544D5F 		.ascii	"ITM_RxBuffer\000"
 3668      52784275 
 3668      66666572 
 3668      00
 3669              	.LASF32:
 3670 035b 636F6D6D 		.ascii	"command\000"
 3670      616E6400 
 3671              	.LASF47:
 3672 0363 66697273 		.ascii	"first\000"
 3672      7400
 3673              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
