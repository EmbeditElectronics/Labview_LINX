ARM GAS  C:\Users\Robert\AppData\Local\Temp\cc7rr7YM.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"mem1.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.section	.text.readData,"ax",%progbits
  19              		.align	2
  20              		.global	readData
  21              		.thumb
  22              		.thumb_func
  23              		.type	readData, %function
  24              	readData:
  25              	.LFB56:
  26              		.file 1 ".\\mem1.c"
   1:.\mem1.c      **** /**
   2:.\mem1.c      **** * \file mem1.c
   3:.\mem1.c      **** * \brief This file contains the source code for access or manipulation of 
   4:.\mem1.c      **** *        all components included in the build. It will do so according to
   5:.\mem1.c      **** *        sets of instructions provided by a Master Device.
   6:.\mem1.c      **** *
   7:.\mem1.c      **** * Version 1.2.4
   8:.\mem1.c      **** *
   9:.\mem1.c      **** * \author Brian Bradley
  10:.\mem1.c      **** *
  11:.\mem1.c      **** * \bug No known bugs
  12:.\mem1.c      **** *
  13:.\mem1.c      **** *
  14:.\mem1.c      **** * Copyright Embedit Electronics
  15:.\mem1.c      **** * 
  16:.\mem1.c      **** */
  17:.\mem1.c      **** 
  18:.\mem1.c      **** #ifndef MEM1_H
  19:.\mem1.c      ****     #include "mem1.h"
  20:.\mem1.c      **** #endif
  21:.\mem1.c      **** 
  22:.\mem1.c      **** #include <project.h>
  23:.\mem1.c      **** #include <stdbool.h>
  24:.\mem1.c      **** 
  25:.\mem1.c      **** #ifdef CY_SLIGHTS_StripLights_H
  26:.\mem1.c      ****     extern const uint32 StripLights_CLUT[ ];
  27:.\mem1.c      **** #endif
  28:.\mem1.c      **** 
  29:.\mem1.c      **** /*************************************************************************************************/
  30:.\mem1.c      **** *  @brief This function organizes each component of the build, and gives the 
  31:.\mem1.c      **** *         applicable information to the appropriate address for use.
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cc7rr7YM.s 			page 2


  32:.\mem1.c      **** *
  33:.\mem1.c      **** *  @param addr: 8-bit number describing the address of the component being accessed
  34:.\mem1.c      **** *  @param cmd: 8-bit number describing a desired usage of a function associated with that component
  35:.\mem1.c      **** *  @param dat: 16-bit number containing a value that is to be written to that function, if applicab
  36:.\mem1.c      **** *
  37:.\mem1.c      **** ***************************************************************************************************
  38:.\mem1.c      **** bool readData(vessel_type vessel, uint32 *result)
  39:.\mem1.c      **** {
  27              		.loc 1 39 0
  28              		.cfi_startproc
  29              		@ args = 4, pretend = 0, frame = 24
  30              		@ frame_needed = 1, uses_anonymous_args = 0
  31 0000 F0B5     		push	{r4, r5, r6, r7, lr}
  32              		.cfi_def_cfa_offset 20
  33              		.cfi_offset 4, -20
  34              		.cfi_offset 5, -16
  35              		.cfi_offset 6, -12
  36              		.cfi_offset 7, -8
  37              		.cfi_offset 14, -4
  38 0002 8BB0     		sub	sp, sp, #44
  39              		.cfi_def_cfa_offset 64
  40 0004 04AF     		add	r7, sp, #16
  41              		.cfi_def_cfa 7, 48
  42 0006 3C46     		mov	r4, r7
  43 0008 84E80F00 		stmia	r4, {r0, r1, r2, r3}
  40:.\mem1.c      ****     bool return_flag = false;
  44              		.loc 1 40 0
  45 000c 0023     		movs	r3, #0
  46 000e FB75     		strb	r3, [r7, #23]
  41:.\mem1.c      ****     uint8 cmd = vessel.cmd;
  47              		.loc 1 41 0
  48 0010 7B78     		ldrb	r3, [r7, #1]
  49 0012 BB75     		strb	r3, [r7, #22]
  42:.\mem1.c      ****     uint16 dat = vessel.dat;
  50              		.loc 1 42 0
  51 0014 7B88     		ldrh	r3, [r7, #2]	@ movhi
  52 0016 BB82     		strh	r3, [r7, #20]	@ movhi
  43:.\mem1.c      ****     uint8 addr = vessel.addr;
  53              		.loc 1 43 0
  54 0018 3B78     		ldrb	r3, [r7]
  55 001a FB74     		strb	r3, [r7, #19]
  44:.\mem1.c      ****     
  45:.\mem1.c      ****     switch(addr)
  56              		.loc 1 45 0
  57 001c FB7C     		ldrb	r3, [r7, #19]	@ zero_extendqisi2
  58 001e 0F2B     		cmp	r3, #15
  59 0020 00F0A280 		beq	.L3
  60 0024 0F2B     		cmp	r3, #15
  61 0026 18DC     		bgt	.L4
  62 0028 0A2B     		cmp	r3, #10
  63 002a 6BD0     		beq	.L5
  64 002c 0A2B     		cmp	r3, #10
  65 002e 0BDC     		bgt	.L6
  66 0030 062B     		cmp	r3, #6
  67 0032 3ED0     		beq	.L7
  68 0034 062B     		cmp	r3, #6
  69 0036 02DC     		bgt	.L8
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cc7rr7YM.s 			page 3


  70 0038 042B     		cmp	r3, #4
  71 003a 30D0     		beq	.L9
  72 003c 29E1     		b	.L2
  73              	.L8:
  74 003e 082B     		cmp	r3, #8
  75 0040 41D0     		beq	.L10
  76 0042 092B     		cmp	r3, #9
  77 0044 54D0     		beq	.L11
  78 0046 24E1     		b	.L2
  79              	.L6:
  80 0048 0C2B     		cmp	r3, #12
  81 004a 6FD0     		beq	.L12
  82 004c 0C2B     		cmp	r3, #12
  83 004e 63DB     		blt	.L13
  84 0050 0D2B     		cmp	r3, #13
  85 0052 75D0     		beq	.L14
  86 0054 0E2B     		cmp	r3, #14
  87 0056 7DD0     		beq	.L15
  88 0058 1BE1     		b	.L2
  89              	.L4:
  90 005a FB2B     		cmp	r3, #251
  91 005c 00F0D480 		beq	.L16
  92 0060 FB2B     		cmp	r3, #251
  93 0062 0FDC     		bgt	.L17
  94 0064 162B     		cmp	r3, #22
  95 0066 00F0F180 		beq	.L18
  96 006a 162B     		cmp	r3, #22
  97 006c 03DC     		bgt	.L19
  98 006e 102B     		cmp	r3, #16
  99 0070 00F08480 		beq	.L20
 100 0074 0DE1     		b	.L2
 101              	.L19:
 102 0076 172B     		cmp	r3, #23
 103 0078 00F08A80 		beq	.L21
 104 007c 182B     		cmp	r3, #24
 105 007e 00F09180 		beq	.L22
 106 0082 06E1     		b	.L2
 107              	.L17:
 108 0084 FD2B     		cmp	r3, #253
 109 0086 00F0D980 		beq	.L23
 110 008a FD2B     		cmp	r3, #253
 111 008c C0F29480 		blt	.L24
 112 0090 FE2B     		cmp	r3, #254
 113 0092 00F0F180 		beq	.L25
 114 0096 FF2B     		cmp	r3, #255
 115 0098 00F0F880 		beq	.L26
 116 009c F9E0     		b	.L2
 117              	.L9:
  46:.\mem1.c      ****     {
  47:.\mem1.c      ****         //delsig_adc
  48:.\mem1.c      ****         #ifdef CY_ADC_DELSIG_ADC_DelSig_1_H
  49:.\mem1.c      ****             case DELSIG_ADC_CONTROL: return_flag = DELSIG_ADC_Control(cmd,dat,result); break;
  50:.\mem1.c      ****         #endif
  51:.\mem1.c      ****         
  52:.\mem1.c      ****         //sar adc 1
  53:.\mem1.c      ****         #ifdef CY_ADC_SAR_ADC_SAR_1_H 
  54:.\mem1.c      ****             case SAR_ADC0_CONTROL: return_flag = SAR0_ADC_Control(cmd, dat, result); break;
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cc7rr7YM.s 			page 4


  55:.\mem1.c      ****         #endif
  56:.\mem1.c      ****         
  57:.\mem1.c      ****         //sar adc 2
  58:.\mem1.c      ****         #ifdef CY_ADC_SAR_ADC_SAR_2_H 
  59:.\mem1.c      ****             case SAR_ADC1_CONTROL: return_flag = SAR1_ADC_Control(cmd, dat, result); break;
  60:.\mem1.c      ****         #endif
  61:.\mem1.c      ****         
  62:.\mem1.c      ****         //VDAC1
  63:.\mem1.c      ****         #ifdef CY_VDAC8_VDAC8_1_H
  64:.\mem1.c      ****             case VDAC0_CONTROL: return_flag = VDAC0_Control(cmd, dat, result); break;        
 118              		.loc 1 64 0
 119 009e BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 120 00a0 BB8A     		ldrh	r3, [r7, #20]
 121 00a2 1046     		mov	r0, r2
 122 00a4 1946     		mov	r1, r3
 123 00a6 3A6B     		ldr	r2, [r7, #48]
 124 00a8 FFF7FEFF 		bl	VDAC0_Control
 125 00ac 0346     		mov	r3, r0
 126 00ae FB75     		strb	r3, [r7, #23]
 127 00b0 EFE0     		b	.L2
 128              	.L7:
  65:.\mem1.c      ****         #endif
  66:.\mem1.c      ****         
  67:.\mem1.c      ****         //VDAC2
  68:.\mem1.c      ****         #ifdef CY_VDAC8_VDAC8_2_H
  69:.\mem1.c      ****             case VDAC1_CONTROL: return_flag = VDAC1_Control(cmd, dat, result); break;
  70:.\mem1.c      ****         #endif
  71:.\mem1.c      ****         
  72:.\mem1.c      ****         //IDAC1
  73:.\mem1.c      ****         #ifdef CY_IDAC8_IDAC8_1_H
  74:.\mem1.c      ****             case IDAC0_CONTROL: return_flag = IDAC0_Control(cmd,dat, result); break;     
 129              		.loc 1 74 0
 130 00b2 BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 131 00b4 BB8A     		ldrh	r3, [r7, #20]
 132 00b6 1046     		mov	r0, r2
 133 00b8 1946     		mov	r1, r3
 134 00ba 3A6B     		ldr	r2, [r7, #48]
 135 00bc FFF7FEFF 		bl	IDAC0_Control
 136 00c0 0346     		mov	r3, r0
 137 00c2 FB75     		strb	r3, [r7, #23]
 138 00c4 E5E0     		b	.L2
 139              	.L10:
  75:.\mem1.c      ****         #endif
  76:.\mem1.c      ****         
  77:.\mem1.c      ****         //IDAC2
  78:.\mem1.c      ****         #ifdef CY_IDAC8_IDAC8_2_H
  79:.\mem1.c      ****             case IDAC1_CONTROL: return_flag = IDAC1_Control(cmd, dat, result); break;     
  80:.\mem1.c      ****         #endif
  81:.\mem1.c      ****         
  82:.\mem1.c      ****         //Wave DAC
  83:.\mem1.c      ****         #ifdef CY_WaveDAC8_WaveDAC8_1_H
  84:.\mem1.c      ****             case WAVEDAC_CONTROL: return_flag = WAVEDAC_Control(cmd,dat, vessel.waveType, vessel.am
 140              		.loc 1 84 0
 141 00c6 BB79     		ldrb	r3, [r7, #6]
 142 00c8 C3F30203 		ubfx	r3, r3, #0, #3
 143 00cc DBB2     		uxtb	r3, r3
 144 00ce 1D46     		mov	r5, r3
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cc7rr7YM.s 			page 5


 145 00d0 FC79     		ldrb	r4, [r7, #7]	@ zero_extendqisi2
 146 00d2 3B7A     		ldrb	r3, [r7, #8]	@ zero_extendqisi2
 147 00d4 B97D     		ldrb	r1, [r7, #22]	@ zero_extendqisi2
 148 00d6 BA8A     		ldrh	r2, [r7, #20]
 149 00d8 0093     		str	r3, [sp]
 150 00da 3B6B     		ldr	r3, [r7, #48]
 151 00dc 0193     		str	r3, [sp, #4]
 152 00de 0846     		mov	r0, r1
 153 00e0 1146     		mov	r1, r2
 154 00e2 2A46     		mov	r2, r5
 155 00e4 2346     		mov	r3, r4
 156 00e6 FFF7FEFF 		bl	WAVEDAC_Control
 157 00ea 0346     		mov	r3, r0
 158 00ec FB75     		strb	r3, [r7, #23]
 159 00ee D0E0     		b	.L2
 160              	.L11:
  85:.\mem1.c      ****         #endif
  86:.\mem1.c      ****         
  87:.\mem1.c      ****         //first PWM
  88:.\mem1.c      ****         #ifdef CY_PWM_PWM_1_H
  89:.\mem1.c      ****             case PWM_REGISTER0: return_flag = PWM_Control_0(cmd, dat, result); break;
 161              		.loc 1 89 0
 162 00f0 BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 163 00f2 BB8A     		ldrh	r3, [r7, #20]
 164 00f4 1046     		mov	r0, r2
 165 00f6 1946     		mov	r1, r3
 166 00f8 3A6B     		ldr	r2, [r7, #48]
 167 00fa FFF7FEFF 		bl	PWM_Control_0
 168 00fe 0346     		mov	r3, r0
 169 0100 FB75     		strb	r3, [r7, #23]
 170 0102 C6E0     		b	.L2
 171              	.L5:
  90:.\mem1.c      ****         #endif
  91:.\mem1.c      ****         
  92:.\mem1.c      ****         //second PWM
  93:.\mem1.c      ****         #ifdef CY_PWM_PWM_2_H
  94:.\mem1.c      ****             case PWM_REGISTER1: return_flag = PWM_Control_1(cmd, dat, result); break;
 172              		.loc 1 94 0
 173 0104 BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 174 0106 BB8A     		ldrh	r3, [r7, #20]
 175 0108 1046     		mov	r0, r2
 176 010a 1946     		mov	r1, r3
 177 010c 3A6B     		ldr	r2, [r7, #48]
 178 010e FFF7FEFF 		bl	PWM_Control_1
 179 0112 0346     		mov	r3, r0
 180 0114 FB75     		strb	r3, [r7, #23]
 181 0116 BCE0     		b	.L2
 182              	.L13:
  95:.\mem1.c      ****         #endif
  96:.\mem1.c      ****         
  97:.\mem1.c      ****         //third PWM
  98:.\mem1.c      ****         #ifdef CY_PWM_PWM_3_H
  99:.\mem1.c      ****             case PWM_REGISTER2: return_flag = PWM_Control_2(cmd, dat, result); break;
 183              		.loc 1 99 0
 184 0118 BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 185 011a BB8A     		ldrh	r3, [r7, #20]
 186 011c 1046     		mov	r0, r2
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cc7rr7YM.s 			page 6


 187 011e 1946     		mov	r1, r3
 188 0120 3A6B     		ldr	r2, [r7, #48]
 189 0122 FFF7FEFF 		bl	PWM_Control_2
 190 0126 0346     		mov	r3, r0
 191 0128 FB75     		strb	r3, [r7, #23]
 192 012a B2E0     		b	.L2
 193              	.L12:
 100:.\mem1.c      ****         #endif
 101:.\mem1.c      ****         
 102:.\mem1.c      ****         //fourth PWM
 103:.\mem1.c      ****         #ifdef CY_PWM_PWM_4_H
 104:.\mem1.c      ****             case PWM_REGISTER3: return_flag = PWM_Control_3(cmd, dat, result); break;  
 194              		.loc 1 104 0
 195 012c BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 196 012e BB8A     		ldrh	r3, [r7, #20]
 197 0130 1046     		mov	r0, r2
 198 0132 1946     		mov	r1, r3
 199 0134 3A6B     		ldr	r2, [r7, #48]
 200 0136 FFF7FEFF 		bl	PWM_Control_3
 201 013a 0346     		mov	r3, r0
 202 013c FB75     		strb	r3, [r7, #23]
 203 013e A8E0     		b	.L2
 204              	.L14:
 105:.\mem1.c      ****         #endif
 106:.\mem1.c      ****         
 107:.\mem1.c      ****         //fifth PWM
 108:.\mem1.c      ****         #ifdef CY_PWM_PWM_5_H
 109:.\mem1.c      ****             case PWM_REGISTER4: return_flag = PWM_Control_4(cmd, dat, result); break;
 205              		.loc 1 109 0
 206 0140 BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 207 0142 BB8A     		ldrh	r3, [r7, #20]
 208 0144 1046     		mov	r0, r2
 209 0146 1946     		mov	r1, r3
 210 0148 3A6B     		ldr	r2, [r7, #48]
 211 014a FFF7FEFF 		bl	PWM_Control_4
 212 014e 0346     		mov	r3, r0
 213 0150 FB75     		strb	r3, [r7, #23]
 214 0152 9EE0     		b	.L2
 215              	.L15:
 110:.\mem1.c      ****         #endif
 111:.\mem1.c      ****         
 112:.\mem1.c      ****         //sixth PWM
 113:.\mem1.c      ****         #ifdef CY_PWM_PWM_6_H
 114:.\mem1.c      ****             case PWM_REGISTER5: return_flag = PWM_Control_5(cmd, dat, result); break;  
 216              		.loc 1 114 0
 217 0154 BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 218 0156 BB8A     		ldrh	r3, [r7, #20]
 219 0158 1046     		mov	r0, r2
 220 015a 1946     		mov	r1, r3
 221 015c 3A6B     		ldr	r2, [r7, #48]
 222 015e FFF7FEFF 		bl	PWM_Control_5
 223 0162 0346     		mov	r3, r0
 224 0164 FB75     		strb	r3, [r7, #23]
 225 0166 94E0     		b	.L2
 226              	.L3:
 115:.\mem1.c      ****         #endif
 116:.\mem1.c      ****         
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cc7rr7YM.s 			page 7


 117:.\mem1.c      ****         //seventh PWM
 118:.\mem1.c      ****         #ifdef CY_PWM_PWM_7_H
 119:.\mem1.c      ****             case PWM_REGISTER6: return_flag = PWM_Control_6(cmd, dat, result); break;
 227              		.loc 1 119 0
 228 0168 BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 229 016a BB8A     		ldrh	r3, [r7, #20]
 230 016c 1046     		mov	r0, r2
 231 016e 1946     		mov	r1, r3
 232 0170 3A6B     		ldr	r2, [r7, #48]
 233 0172 FFF7FEFF 		bl	PWM_Control_6
 234 0176 0346     		mov	r3, r0
 235 0178 FB75     		strb	r3, [r7, #23]
 236 017a 8AE0     		b	.L2
 237              	.L20:
 120:.\mem1.c      ****         #endif
 121:.\mem1.c      ****         
 122:.\mem1.c      ****         //eighth PWM
 123:.\mem1.c      ****         #ifdef CY_PWM_PWM_8_H
 124:.\mem1.c      ****             case PWM_REGISTER7: return_flag = PWM_Control_7(cmd, dat, result); break;
 238              		.loc 1 124 0
 239 017c BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 240 017e BB8A     		ldrh	r3, [r7, #20]
 241 0180 1046     		mov	r0, r2
 242 0182 1946     		mov	r1, r3
 243 0184 3A6B     		ldr	r2, [r7, #48]
 244 0186 FFF7FEFF 		bl	PWM_Control_7
 245 018a 0346     		mov	r3, r0
 246 018c FB75     		strb	r3, [r7, #23]
 247 018e 80E0     		b	.L2
 248              	.L21:
 125:.\mem1.c      ****         #endif
 126:.\mem1.c      ****         
 127:.\mem1.c      ****         #ifdef CY_PWM_PWM_9_H
 128:.\mem1.c      ****             case PWM_REGISTER8: return_flag = PWM_Control_8(cmd, dat, result); break;
 129:.\mem1.c      ****         #endif
 130:.\mem1.c      ****         
 131:.\mem1.c      ****         #ifdef CY_PWM_PWM_10_H
 132:.\mem1.c      ****             case PWM_REGISTER9: return_flag = PWM_Control_9(cmd, dat, result); break;
 133:.\mem1.c      ****         #endif
 134:.\mem1.c      ****         
 135:.\mem1.c      ****         #ifdef CY_PWM_PWM_11_H
 136:.\mem1.c      ****             case PWM_REGISTER10: return_flag = PWM_Control_10(cmd, dat, result); break;
 137:.\mem1.c      ****         #endif
 138:.\mem1.c      ****         
 139:.\mem1.c      ****         #ifdef CY_PWM_PWM_12_H
 140:.\mem1.c      ****             case PWM_REGISTER11: return_flag = PWM_Control_11(cmd, dat, result); break;
 141:.\mem1.c      ****         #endif
 142:.\mem1.c      ****         
 143:.\mem1.c      ****         #ifdef CY_ADC_SAR_Seq_1_H
 144:.\mem1.c      ****             case ANALOG_IN_REGISTER: return_flag = Analog_Read(cmd, dat, result); break;
 249              		.loc 1 144 0
 250 0190 BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 251 0192 BB8A     		ldrh	r3, [r7, #20]
 252 0194 1046     		mov	r0, r2
 253 0196 1946     		mov	r1, r3
 254 0198 3A6B     		ldr	r2, [r7, #48]
 255 019a FFF7FEFF 		bl	Analog_Read
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cc7rr7YM.s 			page 8


 256 019e 0346     		mov	r3, r0
 257 01a0 FB75     		strb	r3, [r7, #23]
 258 01a2 76E0     		b	.L2
 259              	.L22:
 145:.\mem1.c      ****         #endif
 146:.\mem1.c      ****         
 147:.\mem1.c      ****         #ifdef CY_CAPSENSE_CSD_CapSense_1_H
 148:.\mem1.c      ****             case CAPSENSE_REGISTER: return_flag = CapSense_Read(cmd, dat, result); break;
 260              		.loc 1 148 0
 261 01a4 BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 262 01a6 BB8A     		ldrh	r3, [r7, #20]
 263 01a8 1046     		mov	r0, r2
 264 01aa 1946     		mov	r1, r3
 265 01ac 3A6B     		ldr	r2, [r7, #48]
 266 01ae FFF7FEFF 		bl	CapSense_Read
 267 01b2 0346     		mov	r3, r0
 268 01b4 FB75     		strb	r3, [r7, #23]
 269 01b6 6CE0     		b	.L2
 270              	.L24:
 149:.\mem1.c      ****         #endif
 150:.\mem1.c      ****         
 151:.\mem1.c      ****         #ifdef CY_Timer_v2_60_Timer_H
 152:.\mem1.c      ****             case RANGE_FINDER: return_flag = Range_Finder(cmd, vessel.port, vessel.pin, vessel.trig
 271              		.loc 1 152 0
 272 01b8 3B79     		ldrb	r3, [r7, #4]
 273 01ba C3F30303 		ubfx	r3, r3, #0, #4
 274 01be DBB2     		uxtb	r3, r3
 275 01c0 1E46     		mov	r6, r3
 276 01c2 3B79     		ldrb	r3, [r7, #4]
 277 01c4 C3F30213 		ubfx	r3, r3, #4, #3
 278 01c8 DBB2     		uxtb	r3, r3
 279 01ca 1D46     		mov	r5, r3
 280 01cc 7B79     		ldrb	r3, [r7, #5]
 281 01ce C3F30303 		ubfx	r3, r3, #0, #4
 282 01d2 DBB2     		uxtb	r3, r3
 283 01d4 1C46     		mov	r4, r3
 284 01d6 7B79     		ldrb	r3, [r7, #5]
 285 01d8 C3F30213 		ubfx	r3, r3, #4, #3
 286 01dc DBB2     		uxtb	r3, r3
 287 01de 1946     		mov	r1, r3
 288 01e0 BB7A     		ldrb	r3, [r7, #10]
 289 01e2 C3F30503 		ubfx	r3, r3, #0, #6
 290 01e6 DBB2     		uxtb	r3, r3
 291 01e8 BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 292 01ea 0091     		str	r1, [sp]
 293 01ec 0193     		str	r3, [sp, #4]
 294 01ee BB8A     		ldrh	r3, [r7, #20]
 295 01f0 0293     		str	r3, [sp, #8]
 296 01f2 3B6B     		ldr	r3, [r7, #48]
 297 01f4 0393     		str	r3, [sp, #12]
 298 01f6 1046     		mov	r0, r2
 299 01f8 3146     		mov	r1, r6
 300 01fa 2A46     		mov	r2, r5
 301 01fc 2346     		mov	r3, r4
 302 01fe FFF7FEFF 		bl	Range_Finder
 303 0202 0346     		mov	r3, r0
 304 0204 FB75     		strb	r3, [r7, #23]
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cc7rr7YM.s 			page 9


 305 0206 44E0     		b	.L2
 306              	.L16:
 153:.\mem1.c      ****         #endif
 154:.\mem1.c      ****         #ifdef CY_SLIGHTS_StripLights_H
 155:.\mem1.c      ****             case STRIPLIGHT_REGISTER: return_flag = StripLightsControl(cmd, dat, vessel.row, vessel
 307              		.loc 1 155 0
 308 0208 7B7A     		ldrb	r3, [r7, #9]
 309 020a C3F3C203 		ubfx	r3, r3, #3, #3
 310 020e DBB2     		uxtb	r3, r3
 311 0210 1D46     		mov	r5, r3
 312 0212 7B7A     		ldrb	r3, [r7, #9]
 313 0214 C3F30203 		ubfx	r3, r3, #0, #3
 314 0218 DBB2     		uxtb	r3, r3
 315 021a 1C46     		mov	r4, r3
 316 021c FB68     		ldr	r3, [r7, #12]
 317 021e C3F31703 		ubfx	r3, r3, #0, #24
 318 0222 1946     		mov	r1, r3
 319 0224 BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 320 0226 BB8A     		ldrh	r3, [r7, #20]
 321 0228 0091     		str	r1, [sp]
 322 022a 1046     		mov	r0, r2
 323 022c 1946     		mov	r1, r3
 324 022e 2A46     		mov	r2, r5
 325 0230 2346     		mov	r3, r4
 326 0232 FFF7FEFF 		bl	StripLightsControl
 327 0236 0346     		mov	r3, r0
 328 0238 FB75     		strb	r3, [r7, #23]
 329 023a 2AE0     		b	.L2
 330              	.L23:
 156:.\mem1.c      ****         #endif
 157:.\mem1.c      ****         
 158:.\mem1.c      ****         case TEST_REGISTER: return_flag = test_read(dat, result); break;
 331              		.loc 1 158 0
 332 023c BB8A     		ldrh	r3, [r7, #20]
 333 023e 1846     		mov	r0, r3
 334 0240 396B     		ldr	r1, [r7, #48]
 335 0242 FFF7FEFF 		bl	test_read
 336 0246 0346     		mov	r3, r0
 337 0248 FB75     		strb	r3, [r7, #23]
 338 024a 22E0     		b	.L2
 339              	.L18:
 159:.\mem1.c      ****         
 160:.\mem1.c      ****         case GPIO_REGISTER: return_flag = GPIO_Control(cmd, vessel.port, vessel.pin, dat, result); 
 340              		.loc 1 160 0
 341 024c 3B79     		ldrb	r3, [r7, #4]
 342 024e C3F30303 		ubfx	r3, r3, #0, #4
 343 0252 DBB2     		uxtb	r3, r3
 344 0254 1946     		mov	r1, r3
 345 0256 3B79     		ldrb	r3, [r7, #4]
 346 0258 C3F30213 		ubfx	r3, r3, #4, #3
 347 025c DBB2     		uxtb	r3, r3
 348 025e 1D46     		mov	r5, r3
 349 0260 BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 350 0262 BC8A     		ldrh	r4, [r7, #20]
 351 0264 3B6B     		ldr	r3, [r7, #48]
 352 0266 0093     		str	r3, [sp]
 353 0268 1046     		mov	r0, r2
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cc7rr7YM.s 			page 10


 354 026a 2A46     		mov	r2, r5
 355 026c 2346     		mov	r3, r4
 356 026e FFF7FEFF 		bl	GPIO_Control
 357 0272 0346     		mov	r3, r0
 358 0274 FB75     		strb	r3, [r7, #23]
 359 0276 0CE0     		b	.L2
 360              	.L25:
 161:.\mem1.c      ****         
 162:.\mem1.c      ****         case CHECK_BUILD: return_flag = CheckBuild(cmd, dat, result); break;
 361              		.loc 1 162 0
 362 0278 BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 363 027a BB8A     		ldrh	r3, [r7, #20]
 364 027c 1046     		mov	r0, r2
 365 027e 1946     		mov	r1, r3
 366 0280 3A6B     		ldr	r2, [r7, #48]
 367 0282 FFF7FEFF 		bl	CheckBuild
 368 0286 0346     		mov	r3, r0
 369 0288 FB75     		strb	r3, [r7, #23]
 370 028a 02E0     		b	.L2
 371              	.L26:
 163:.\mem1.c      ****         
 164:.\mem1.c      ****         case RESET_ADDRESS: CySoftwareReset(); break;
 372              		.loc 1 164 0
 373 028c FFF7FEFF 		bl	CySoftwareReset
 374 0290 00BF     		nop
 375              	.L2:
 165:.\mem1.c      ****         
 166:.\mem1.c      ****     }
 167:.\mem1.c      ****     
 168:.\mem1.c      ****     return return_flag;
 376              		.loc 1 168 0
 377 0292 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 169:.\mem1.c      **** }
 378              		.loc 1 169 0
 379 0294 1846     		mov	r0, r3
 380 0296 1C37     		adds	r7, r7, #28
 381              		.cfi_def_cfa_offset 20
 382 0298 BD46     		mov	sp, r7
 383              		.cfi_def_cfa_register 13
 384              		@ sp needed
 385 029a F0BD     		pop	{r4, r5, r6, r7, pc}
 386              		.cfi_endproc
 387              	.LFE56:
 388              		.size	readData, .-readData
 389              		.section	.text.CheckBuild,"ax",%progbits
 390              		.align	2
 391              		.global	CheckBuild
 392              		.thumb
 393              		.thumb_func
 394              		.type	CheckBuild, %function
 395              	CheckBuild:
 396              	.LFB57:
 170:.\mem1.c      **** /*This function is used during init to tell the master device what is in the PSoC Creator file */
 171:.\mem1.c      **** /* This should not be edited */
 172:.\mem1.c      **** bool CheckBuild(uint8 cmd, uint16 val, uint32 *result)
 173:.\mem1.c      **** {
 397              		.loc 1 173 0
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cc7rr7YM.s 			page 11


 398              		.cfi_startproc
 399              		@ args = 0, pretend = 0, frame = 24
 400              		@ frame_needed = 1, uses_anonymous_args = 0
 401 0000 80B5     		push	{r7, lr}
 402              		.cfi_def_cfa_offset 8
 403              		.cfi_offset 7, -8
 404              		.cfi_offset 14, -4
 405 0002 86B0     		sub	sp, sp, #24
 406              		.cfi_def_cfa_offset 32
 407 0004 00AF     		add	r7, sp, #0
 408              		.cfi_def_cfa_register 7
 409 0006 0346     		mov	r3, r0
 410 0008 3A60     		str	r2, [r7]
 411 000a FB71     		strb	r3, [r7, #7]
 412 000c 0B46     		mov	r3, r1	@ movhi
 413 000e BB80     		strh	r3, [r7, #4]	@ movhi
 174:.\mem1.c      ****     *result = 0;
 414              		.loc 1 174 0
 415 0010 3B68     		ldr	r3, [r7]
 416 0012 0022     		movs	r2, #0
 417 0014 1A60     		str	r2, [r3]
 175:.\mem1.c      ****     
 176:.\mem1.c      ****     uint8 PORT0 = 0x00;
 418              		.loc 1 176 0
 419 0016 0023     		movs	r3, #0
 420 0018 BB75     		strb	r3, [r7, #22]
 177:.\mem1.c      ****     uint8 PORT2 = 0x00;
 421              		.loc 1 177 0
 422 001a 0023     		movs	r3, #0
 423 001c 7B75     		strb	r3, [r7, #21]
 178:.\mem1.c      ****     uint8 PORT3 = 0x00;
 424              		.loc 1 178 0
 425 001e 0023     		movs	r3, #0
 426 0020 3B75     		strb	r3, [r7, #20]
 179:.\mem1.c      ****     uint8 PORT4 = 0x00;
 427              		.loc 1 179 0
 428 0022 0023     		movs	r3, #0
 429 0024 FB74     		strb	r3, [r7, #19]
 180:.\mem1.c      ****     uint8 PORT5 = 0x00;
 430              		.loc 1 180 0
 431 0026 0023     		movs	r3, #0
 432 0028 BB74     		strb	r3, [r7, #18]
 181:.\mem1.c      ****     uint8 PORT6 = 0x00;
 433              		.loc 1 181 0
 434 002a 0023     		movs	r3, #0
 435 002c 7B74     		strb	r3, [r7, #17]
 182:.\mem1.c      ****     uint8 PORT12 = 0x00;
 436              		.loc 1 182 0
 437 002e 0023     		movs	r3, #0
 438 0030 3B74     		strb	r3, [r7, #16]
 183:.\mem1.c      ****     uint8 PORT15 = 0x00;
 439              		.loc 1 183 0
 440 0032 0023     		movs	r3, #0
 441 0034 FB73     		strb	r3, [r7, #15]
 184:.\mem1.c      ****     uint8 cap_sensors = 0;
 442              		.loc 1 184 0
 443 0036 0023     		movs	r3, #0
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cc7rr7YM.s 			page 12


 444 0038 BB73     		strb	r3, [r7, #14]
 185:.\mem1.c      ****     uint8 analogPins = 0;
 445              		.loc 1 185 0
 446 003a 0023     		movs	r3, #0
 447 003c 7B73     		strb	r3, [r7, #13]
 186:.\mem1.c      ****     
 187:.\mem1.c      ****     uint8 freq = 0x00;
 448              		.loc 1 187 0
 449 003e 0023     		movs	r3, #0
 450 0040 FB75     		strb	r3, [r7, #23]
 188:.\mem1.c      ****     
 189:.\mem1.c      ****    
 190:.\mem1.c      ****     switch(cmd)
 451              		.loc 1 190 0
 452 0042 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 453 0044 082B     		cmp	r3, #8
 454 0046 00F20482 		bhi	.L29
 455 004a 01A2     		adr	r2, .L31
 456 004c 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 457              		.p2align 2
 458              	.L31:
 459 0050 75000000 		.word	.L30+1
 460 0054 CB000000 		.word	.L32+1
 461 0058 D3000000 		.word	.L33+1
 462 005c 29010000 		.word	.L34+1
 463 0060 7F010000 		.word	.L35+1
 464 0064 53040000 		.word	.L29+1
 465 0068 53040000 		.word	.L29+1
 466 006c CF010000 		.word	.L36+1
 467 0070 61030000 		.word	.L37+1
 468              		.p2align 1
 469              	.L30:
 191:.\mem1.c      ****     {
 192:.\mem1.c      ****         /* Check analog */
 193:.\mem1.c      ****         case 0x00: 
 194:.\mem1.c      **** 
 195:.\mem1.c      ****             #ifdef CY_ADC_DELSIG_ADC_DelSig_1_H
 196:.\mem1.c      ****                 *result |= 0x01;
 197:.\mem1.c      ****             #endif
 198:.\mem1.c      ****             
 199:.\mem1.c      ****             #ifdef CY_ADC_SAR_ADC_SAR_1_H 
 200:.\mem1.c      ****                 *result |= 0x01<<1;
 201:.\mem1.c      ****             #endif
 202:.\mem1.c      ****             
 203:.\mem1.c      ****             #ifdef CY_ADC_SAR_ADC_SAR_2_H 
 204:.\mem1.c      ****                 *result |= 0x01<<2;
 205:.\mem1.c      ****             #endif
 206:.\mem1.c      ****             
 207:.\mem1.c      ****             #ifdef CY_VDAC8_VDAC8_1_H
 208:.\mem1.c      ****                 *result |= 0x01<<3;      
 470              		.loc 1 208 0
 471 0074 3B68     		ldr	r3, [r7]
 472 0076 1B68     		ldr	r3, [r3]
 473 0078 43F00802 		orr	r2, r3, #8
 474 007c 3B68     		ldr	r3, [r7]
 475 007e 1A60     		str	r2, [r3]
 209:.\mem1.c      ****                 if (VDAC8_1_DEFAULT_RANGE == VDAC8_1_RANGE_4V)
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cc7rr7YM.s 			page 13


 210:.\mem1.c      ****                 {
 211:.\mem1.c      ****                  *result|=(0x01<<20);   
 476              		.loc 1 211 0
 477 0080 3B68     		ldr	r3, [r7]
 478 0082 1B68     		ldr	r3, [r3]
 479 0084 43F48012 		orr	r2, r3, #1048576
 480 0088 3B68     		ldr	r3, [r7]
 481 008a 1A60     		str	r2, [r3]
 212:.\mem1.c      ****                 }
 213:.\mem1.c      ****             #endif
 214:.\mem1.c      ****          
 215:.\mem1.c      ****             #ifdef CY_VDAC8_VDAC8_2_H
 216:.\mem1.c      ****                 *result |= 0x01<<4;
 217:.\mem1.c      ****                 if (VDAC8_2_DEFAULT_RANGE == VDAC8_2_RANGE_4V)
 218:.\mem1.c      ****                 {
 219:.\mem1.c      ****                  *result|=(0x01<<21);   
 220:.\mem1.c      ****                 }
 221:.\mem1.c      ****             #endif
 222:.\mem1.c      ****             
 223:.\mem1.c      ****             #ifdef CY_IDAC8_IDAC8_1_H
 224:.\mem1.c      ****                 *result |= 0x01<<5; 
 482              		.loc 1 224 0
 483 008c 3B68     		ldr	r3, [r7]
 484 008e 1B68     		ldr	r3, [r3]
 485 0090 43F02002 		orr	r2, r3, #32
 486 0094 3B68     		ldr	r3, [r7]
 487 0096 1A60     		str	r2, [r3]
 225:.\mem1.c      ****                 if (IDAC8_1_DEFAULT_RANGE == IDAC8_1_RANGE_32uA)
 226:.\mem1.c      ****                 {
 227:.\mem1.c      ****                  *result|=(0x01<<23);   
 228:.\mem1.c      ****                 }
 229:.\mem1.c      ****                 else if (IDAC8_1_DEFAULT_RANGE == IDAC8_1_RANGE_255uA)
 230:.\mem1.c      ****                 {
 231:.\mem1.c      ****                  *result|=(0x10<<23);   
 232:.\mem1.c      ****                 }
 233:.\mem1.c      ****             #endif
 234:.\mem1.c      ****             
 235:.\mem1.c      ****             #ifdef CY_IDAC8_IDAC8_2_H
 236:.\mem1.c      ****                 *result |= 0x01<<6;
 237:.\mem1.c      ****                 if (IDAC8_2_DEFAULT_RANGE == IDAC8_2_RANGE_32uA)
 238:.\mem1.c      ****                 {
 239:.\mem1.c      ****                  *result|=(0x01<<25);   
 240:.\mem1.c      ****                 }
 241:.\mem1.c      ****                 else if (IDAC8_2_DEFAULT_RANGE == IDAC8_2_RANGE_32uA)
 242:.\mem1.c      ****                 {
 243:.\mem1.c      ****                  *result|=(0x10<<25);   
 244:.\mem1.c      ****                 }
 245:.\mem1.c      ****             #endif
 246:.\mem1.c      ****             
 247:.\mem1.c      ****             #ifdef CY_WaveDAC8_WaveDAC8_1_H
 248:.\mem1.c      ****                 *result |= 0x01<<7;    
 488              		.loc 1 248 0
 489 0098 3B68     		ldr	r3, [r7]
 490 009a 1B68     		ldr	r3, [r3]
 491 009c 43F08002 		orr	r2, r3, #128
 492 00a0 3B68     		ldr	r3, [r7]
 493 00a2 1A60     		str	r2, [r3]
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cc7rr7YM.s 			page 14


 249:.\mem1.c      ****             #endif
 250:.\mem1.c      ****             
 251:.\mem1.c      ****             #ifdef CY_CAPSENSE_CSD_CapSense_1_H
 252:.\mem1.c      ****                 cap_sensors = CapSense_1_TOTAL_SENSOR_COUNT;
 494              		.loc 1 252 0
 495 00a4 0823     		movs	r3, #8
 496 00a6 BB73     		strb	r3, [r7, #14]
 253:.\mem1.c      ****             #endif
 254:.\mem1.c      ****             
 255:.\mem1.c      ****             #ifdef CY_ADC_SAR_Seq_1_H
 256:.\mem1.c      ****                 analogPins = ADC_SAR_Seq_1_NUMBER_OF_CHANNELS;
 497              		.loc 1 256 0
 498 00a8 0823     		movs	r3, #8
 499 00aa 7B73     		strb	r3, [r7, #13]
 257:.\mem1.c      ****             #endif
 258:.\mem1.c      ****             /* iiiivvccccccaaaaaaWIIVVSSD*/
 259:.\mem1.c      ****             *result|=(analogPins<<8);
 500              		.loc 1 259 0
 501 00ac 3B68     		ldr	r3, [r7]
 502 00ae 1B68     		ldr	r3, [r3]
 503 00b0 7A7B     		ldrb	r2, [r7, #13]	@ zero_extendqisi2
 504 00b2 1202     		lsls	r2, r2, #8
 505 00b4 1A43     		orrs	r2, r2, r3
 506 00b6 3B68     		ldr	r3, [r7]
 507 00b8 1A60     		str	r2, [r3]
 260:.\mem1.c      ****             *result|=(cap_sensors<<14);
 508              		.loc 1 260 0
 509 00ba 3B68     		ldr	r3, [r7]
 510 00bc 1B68     		ldr	r3, [r3]
 511 00be BA7B     		ldrb	r2, [r7, #14]	@ zero_extendqisi2
 512 00c0 9203     		lsls	r2, r2, #14
 513 00c2 1A43     		orrs	r2, r2, r3
 514 00c4 3B68     		ldr	r3, [r7]
 515 00c6 1A60     		str	r2, [r3]
 261:.\mem1.c      ****             
 262:.\mem1.c      ****             
 263:.\mem1.c      ****             
 264:.\mem1.c      ****                       
 265:.\mem1.c      ****             break;
 516              		.loc 1 265 0
 517 00c8 C3E1     		b	.L29
 518              	.L32:
 266:.\mem1.c      ****     
 267:.\mem1.c      ****     /* Check PWMs and clocks */
 268:.\mem1.c      ****         case 0x01: 
 269:.\mem1.c      ****             //result = (PWM_NUM<<16)|(CLK_NUM<<12)|(analogPins<<6)|cap_sensors;
 270:.\mem1.c      ****             /* ppppppCCCC*/            
 271:.\mem1.c      ****             *result = (PWM_NUM<<4)|CLK_NUM;
 519              		.loc 1 271 0
 520 00ca 3B68     		ldr	r3, [r7]
 521 00cc 8422     		movs	r2, #132
 522 00ce 1A60     		str	r2, [r3]
 272:.\mem1.c      ****             break;
 523              		.loc 1 272 0
 524 00d0 BFE1     		b	.L29
 525              	.L33:
 273:.\mem1.c      ****     
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cc7rr7YM.s 			page 15


 274:.\mem1.c      ****     /* Check GPIO ports 0, 2, 3 */
 275:.\mem1.c      ****         case 0x02: 
 276:.\mem1.c      ****             /* PORT 0 */
 277:.\mem1.c      ****             #ifdef CY_PINS_GPIO_0_0_H
 278:.\mem1.c      ****                 PORT0 |= 0x01;
 279:.\mem1.c      ****             #endif
 280:.\mem1.c      ****             
 281:.\mem1.c      ****             #ifdef CY_PINS_GPIO_0_1_H
 282:.\mem1.c      ****                 PORT0 |= 0x01<<1;
 283:.\mem1.c      ****             #endif
 284:.\mem1.c      ****             
 285:.\mem1.c      ****             #ifdef CY_PINS_GPIO_0_2_H
 286:.\mem1.c      ****                 PORT0 |= 0x01<<2;
 287:.\mem1.c      ****             #endif
 288:.\mem1.c      ****             
 289:.\mem1.c      ****             #ifdef CY_PINS_GPIO_0_3_H
 290:.\mem1.c      ****                 PORT0 |= 0x01<<3;
 291:.\mem1.c      ****             #endif
 292:.\mem1.c      ****             
 293:.\mem1.c      ****             #ifdef CY_PINS_GPIO_0_4_H
 294:.\mem1.c      ****                 PORT0 |= 0x01<<4;
 295:.\mem1.c      ****             #endif
 296:.\mem1.c      ****             
 297:.\mem1.c      ****             #ifdef CY_PINS_GPIO_0_5_H
 298:.\mem1.c      ****                 PORT0 |= 0x01<<5;
 299:.\mem1.c      ****             #endif
 300:.\mem1.c      ****             
 301:.\mem1.c      ****             #ifdef CY_PINS_GPIO_0_6_H
 302:.\mem1.c      ****                 PORT0 |= 0x01<<6;
 303:.\mem1.c      ****             #endif
 304:.\mem1.c      ****             
 305:.\mem1.c      ****             #ifdef CY_PINS_GPIO_0_7_H
 306:.\mem1.c      ****                 PORT0 |= 0x01<<7;
 307:.\mem1.c      ****             #endif
 308:.\mem1.c      ****             
 309:.\mem1.c      ****             /* PORT 2 */
 310:.\mem1.c      ****             #ifdef CY_PINS_GPIO_2_0_H
 311:.\mem1.c      ****                 PORT2 |= 0x01;
 526              		.loc 1 311 0
 527 00d2 7B7D     		ldrb	r3, [r7, #21]
 528 00d4 43F00103 		orr	r3, r3, #1
 529 00d8 7B75     		strb	r3, [r7, #21]
 312:.\mem1.c      ****             #endif
 313:.\mem1.c      ****             
 314:.\mem1.c      ****             #ifdef CY_PINS_GPIO_2_1_H
 315:.\mem1.c      ****                 PORT2 |= 0x01<<1;
 530              		.loc 1 315 0
 531 00da 7B7D     		ldrb	r3, [r7, #21]
 532 00dc 43F00203 		orr	r3, r3, #2
 533 00e0 7B75     		strb	r3, [r7, #21]
 316:.\mem1.c      ****             #endif
 317:.\mem1.c      ****             
 318:.\mem1.c      ****             #ifdef CY_PINS_GPIO_2_2_H
 319:.\mem1.c      ****                 PORT2 |= 0x01<<2;
 534              		.loc 1 319 0
 535 00e2 7B7D     		ldrb	r3, [r7, #21]
 536 00e4 43F00403 		orr	r3, r3, #4
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cc7rr7YM.s 			page 16


 537 00e8 7B75     		strb	r3, [r7, #21]
 320:.\mem1.c      ****             #endif
 321:.\mem1.c      ****             
 322:.\mem1.c      ****             #ifdef CY_PINS_GPIO_2_3_H
 323:.\mem1.c      ****                 PORT2 |= 0x01<<3;
 538              		.loc 1 323 0
 539 00ea 7B7D     		ldrb	r3, [r7, #21]
 540 00ec 43F00803 		orr	r3, r3, #8
 541 00f0 7B75     		strb	r3, [r7, #21]
 324:.\mem1.c      ****             #endif
 325:.\mem1.c      ****             
 326:.\mem1.c      ****             #ifdef CY_PINS_GPIO_2_4_H
 327:.\mem1.c      ****                 PORT2 |= 0x01<<4;
 542              		.loc 1 327 0
 543 00f2 7B7D     		ldrb	r3, [r7, #21]
 544 00f4 43F01003 		orr	r3, r3, #16
 545 00f8 7B75     		strb	r3, [r7, #21]
 328:.\mem1.c      ****             #endif
 329:.\mem1.c      ****             
 330:.\mem1.c      ****             #ifdef CY_PINS_GPIO_2_5_H
 331:.\mem1.c      ****                 PORT2 |= 0x01<<5;
 546              		.loc 1 331 0
 547 00fa 7B7D     		ldrb	r3, [r7, #21]
 548 00fc 43F02003 		orr	r3, r3, #32
 549 0100 7B75     		strb	r3, [r7, #21]
 332:.\mem1.c      ****             #endif
 333:.\mem1.c      ****             
 334:.\mem1.c      ****             #ifdef CY_PINS_GPIO_2_6_H
 335:.\mem1.c      ****                 PORT2 |= 0x01<<6;
 550              		.loc 1 335 0
 551 0102 7B7D     		ldrb	r3, [r7, #21]
 552 0104 43F04003 		orr	r3, r3, #64
 553 0108 7B75     		strb	r3, [r7, #21]
 336:.\mem1.c      ****             #endif
 337:.\mem1.c      ****             
 338:.\mem1.c      ****             #ifdef CY_PINS_GPIO_2_7_H
 339:.\mem1.c      ****                 PORT2 |= 0x01<<7;
 554              		.loc 1 339 0
 555 010a 7B7D     		ldrb	r3, [r7, #21]
 556 010c 63F07F03 		orn	r3, r3, #127
 557 0110 7B75     		strb	r3, [r7, #21]
 340:.\mem1.c      ****             #endif
 341:.\mem1.c      ****             
 342:.\mem1.c      ****             /* PORT 3 */
 343:.\mem1.c      ****             #ifdef CY_PINS_GPIO_3_0_H
 344:.\mem1.c      ****                 PORT3 |= 0x01;
 345:.\mem1.c      ****             #endif
 346:.\mem1.c      ****             
 347:.\mem1.c      ****             #ifdef CY_PINS_GPIO_3_1_H
 348:.\mem1.c      ****                 PORT3 |= 0x01<<1;
 349:.\mem1.c      ****             #endif
 350:.\mem1.c      ****             
 351:.\mem1.c      ****             #ifdef CY_PINS_GPIO_3_2_H
 352:.\mem1.c      ****                 PORT3 |= 0x01<<2;
 353:.\mem1.c      ****             #endif
 354:.\mem1.c      ****             
 355:.\mem1.c      ****             #ifdef CY_PINS_GPIO_3_3_H
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cc7rr7YM.s 			page 17


 356:.\mem1.c      ****                 PORT3 |= 0x01<<3;
 357:.\mem1.c      ****             #endif
 358:.\mem1.c      ****             
 359:.\mem1.c      ****             #ifdef CY_PINS_GPIO_3_4_H
 360:.\mem1.c      ****                 PORT3 |= 0x01<<4;
 361:.\mem1.c      ****             #endif
 362:.\mem1.c      ****             
 363:.\mem1.c      ****             #ifdef CY_PINS_GPIO_3_5_H
 364:.\mem1.c      ****                 PORT3 |= 0x01<<5;
 365:.\mem1.c      ****             #endif
 366:.\mem1.c      ****             
 367:.\mem1.c      ****             #ifdef CY_PINS_GPIO_3_6_H
 368:.\mem1.c      ****                 PORT3 |= 0x01<<6;
 369:.\mem1.c      ****             #endif
 370:.\mem1.c      ****             
 371:.\mem1.c      ****             #ifdef CY_PINS_GPIO_3_7_H
 372:.\mem1.c      ****                 PORT3 |= 0x01<<7;
 373:.\mem1.c      ****             #endif
 374:.\mem1.c      ****             
 375:.\mem1.c      ****             *result = (((PORT3<<16)|PORT2<<8)|PORT0);
 558              		.loc 1 375 0
 559 0112 3B7D     		ldrb	r3, [r7, #20]	@ zero_extendqisi2
 560 0114 1A04     		lsls	r2, r3, #16
 561 0116 7B7D     		ldrb	r3, [r7, #21]	@ zero_extendqisi2
 562 0118 1B02     		lsls	r3, r3, #8
 563 011a 1A43     		orrs	r2, r2, r3
 564 011c BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 565 011e 1343     		orrs	r3, r3, r2
 566 0120 1A46     		mov	r2, r3
 567 0122 3B68     		ldr	r3, [r7]
 568 0124 1A60     		str	r2, [r3]
 376:.\mem1.c      ****             
 377:.\mem1.c      ****             break;
 569              		.loc 1 377 0
 570 0126 94E1     		b	.L29
 571              	.L34:
 378:.\mem1.c      ****             
 379:.\mem1.c      ****     /* Check GPIO ports 4, 5, 6 */
 380:.\mem1.c      ****         case 0x03: 
 381:.\mem1.c      ****             
 382:.\mem1.c      ****             /* PORT 4 */
 383:.\mem1.c      ****             #ifdef CY_PINS_GPIO_4_0_H
 384:.\mem1.c      ****                 PORT4 |= 0x01;
 385:.\mem1.c      ****             #endif
 386:.\mem1.c      ****             
 387:.\mem1.c      ****             #ifdef CY_PINS_GPIO_4_1_H
 388:.\mem1.c      ****                 PORT4 |= 0x01<<1;
 389:.\mem1.c      ****             #endif
 390:.\mem1.c      ****             
 391:.\mem1.c      ****             #ifdef CY_PINS_GPIO_4_2_H
 392:.\mem1.c      ****                 PORT4 |= 0x01<<2;
 393:.\mem1.c      ****             #endif
 394:.\mem1.c      ****             
 395:.\mem1.c      ****             #ifdef CY_PINS_GPIO_4_3_H
 396:.\mem1.c      ****                 PORT4 |= 0x01<<3;
 397:.\mem1.c      ****             #endif
 398:.\mem1.c      ****             
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cc7rr7YM.s 			page 18


 399:.\mem1.c      ****             #ifdef CY_PINS_GPIO_4_4_H
 400:.\mem1.c      ****                 PORT4 |= 0x01<<4;
 401:.\mem1.c      ****             #endif
 402:.\mem1.c      ****             
 403:.\mem1.c      ****             #ifdef CY_PINS_GPIO_4_5_H
 404:.\mem1.c      ****                 PORT4 |= 0x01<<5;
 405:.\mem1.c      ****             #endif
 406:.\mem1.c      ****             
 407:.\mem1.c      ****             #ifdef CY_PINS_GPIO_4_6_H
 408:.\mem1.c      ****                 PORT4 |= 0x01<<6;
 409:.\mem1.c      ****             #endif
 410:.\mem1.c      ****             
 411:.\mem1.c      ****             #ifdef CY_PINS_GPIO_4_7_H
 412:.\mem1.c      ****                 PORT4 |= 0x01<<7;
 413:.\mem1.c      ****             #endif
 414:.\mem1.c      ****             
 415:.\mem1.c      ****             /* PORT 5 */
 416:.\mem1.c      ****             #ifdef CY_PINS_GPIO_5_0_H
 417:.\mem1.c      ****                 PORT5 |= 0x01;
 572              		.loc 1 417 0
 573 0128 BB7C     		ldrb	r3, [r7, #18]
 574 012a 43F00103 		orr	r3, r3, #1
 575 012e BB74     		strb	r3, [r7, #18]
 418:.\mem1.c      ****             #endif
 419:.\mem1.c      ****             
 420:.\mem1.c      ****             #ifdef CY_PINS_GPIO_5_1_H
 421:.\mem1.c      ****                 PORT5 |= 0x01<<1;
 576              		.loc 1 421 0
 577 0130 BB7C     		ldrb	r3, [r7, #18]
 578 0132 43F00203 		orr	r3, r3, #2
 579 0136 BB74     		strb	r3, [r7, #18]
 422:.\mem1.c      ****             #endif
 423:.\mem1.c      ****             
 424:.\mem1.c      ****             #ifdef CY_PINS_GPIO_5_2_H
 425:.\mem1.c      ****                 PORT5 |= 0x01<<2;
 580              		.loc 1 425 0
 581 0138 BB7C     		ldrb	r3, [r7, #18]
 582 013a 43F00403 		orr	r3, r3, #4
 583 013e BB74     		strb	r3, [r7, #18]
 426:.\mem1.c      ****             #endif
 427:.\mem1.c      ****             
 428:.\mem1.c      ****             #ifdef CY_PINS_GPIO_5_3_H
 429:.\mem1.c      ****                 PORT5 |= 0x01<<3;
 584              		.loc 1 429 0
 585 0140 BB7C     		ldrb	r3, [r7, #18]
 586 0142 43F00803 		orr	r3, r3, #8
 587 0146 BB74     		strb	r3, [r7, #18]
 430:.\mem1.c      ****             #endif
 431:.\mem1.c      ****             
 432:.\mem1.c      ****             #ifdef CY_PINS_GPIO_5_4_H
 433:.\mem1.c      ****                 PORT5 |= 0x01<<4;
 588              		.loc 1 433 0
 589 0148 BB7C     		ldrb	r3, [r7, #18]
 590 014a 43F01003 		orr	r3, r3, #16
 591 014e BB74     		strb	r3, [r7, #18]
 434:.\mem1.c      ****             #endif
 435:.\mem1.c      ****             
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cc7rr7YM.s 			page 19


 436:.\mem1.c      ****             #ifdef CY_PINS_GPIO_5_5_H
 437:.\mem1.c      ****                 PORT5 |= 0x01<<5;
 592              		.loc 1 437 0
 593 0150 BB7C     		ldrb	r3, [r7, #18]
 594 0152 43F02003 		orr	r3, r3, #32
 595 0156 BB74     		strb	r3, [r7, #18]
 438:.\mem1.c      ****             #endif
 439:.\mem1.c      ****             
 440:.\mem1.c      ****             #ifdef CY_PINS_GPIO_5_6_H
 441:.\mem1.c      ****                 PORT5 |= 0x01<<6;
 596              		.loc 1 441 0
 597 0158 BB7C     		ldrb	r3, [r7, #18]
 598 015a 43F04003 		orr	r3, r3, #64
 599 015e BB74     		strb	r3, [r7, #18]
 442:.\mem1.c      ****             #endif
 443:.\mem1.c      ****             
 444:.\mem1.c      ****             #ifdef CY_PINS_GPIO_5_7_H
 445:.\mem1.c      ****                 PORT5 |= 0x01<<7;
 600              		.loc 1 445 0
 601 0160 BB7C     		ldrb	r3, [r7, #18]
 602 0162 63F07F03 		orn	r3, r3, #127
 603 0166 BB74     		strb	r3, [r7, #18]
 446:.\mem1.c      ****             #endif
 447:.\mem1.c      ****             
 448:.\mem1.c      ****             /* PORT 6 */
 449:.\mem1.c      ****             #ifdef CY_PINS_GPIO_6_0_H
 450:.\mem1.c      ****                 PORT6 |= 0x01;
 451:.\mem1.c      ****             #endif
 452:.\mem1.c      ****             
 453:.\mem1.c      ****             #ifdef CY_PINS_GPIO_6_1_H
 454:.\mem1.c      ****                 PORT6 |= 0x01<<1;
 455:.\mem1.c      ****             #endif
 456:.\mem1.c      ****             
 457:.\mem1.c      ****             #ifdef CY_PINS_GPIO_6_2_H
 458:.\mem1.c      ****                 PORT6 |= 0x01<<2;
 459:.\mem1.c      ****             #endif
 460:.\mem1.c      ****             
 461:.\mem1.c      ****             #ifdef CY_PINS_GPIO_6_3_H
 462:.\mem1.c      ****                 PORT6 |= 0x01<<3;
 463:.\mem1.c      ****             #endif
 464:.\mem1.c      ****             
 465:.\mem1.c      ****             #ifdef CY_PINS_GPIO_6_4_H
 466:.\mem1.c      ****                 PORT6 |= 0x01<<4;
 467:.\mem1.c      ****             #endif
 468:.\mem1.c      ****             
 469:.\mem1.c      ****             #ifdef CY_PINS_GPIO_6_5_H
 470:.\mem1.c      ****                 PORT6 |= 0x01<<5;
 471:.\mem1.c      ****             #endif
 472:.\mem1.c      ****             
 473:.\mem1.c      ****             #ifdef CY_PINS_GPIO_6_6_H
 474:.\mem1.c      ****                 PORT6 |= 0x01<<6;
 475:.\mem1.c      ****             #endif
 476:.\mem1.c      ****             
 477:.\mem1.c      ****             #ifdef CY_PINS_GPIO_6_7_H
 478:.\mem1.c      ****                 PORT6 |= 0x01<<7;
 479:.\mem1.c      ****             #endif
 480:.\mem1.c      ****             
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cc7rr7YM.s 			page 20


 481:.\mem1.c      ****             *result = (((PORT6<<16)|PORT5<<8)|PORT4);
 604              		.loc 1 481 0
 605 0168 7B7C     		ldrb	r3, [r7, #17]	@ zero_extendqisi2
 606 016a 1A04     		lsls	r2, r3, #16
 607 016c BB7C     		ldrb	r3, [r7, #18]	@ zero_extendqisi2
 608 016e 1B02     		lsls	r3, r3, #8
 609 0170 1A43     		orrs	r2, r2, r3
 610 0172 FB7C     		ldrb	r3, [r7, #19]	@ zero_extendqisi2
 611 0174 1343     		orrs	r3, r3, r2
 612 0176 1A46     		mov	r2, r3
 613 0178 3B68     		ldr	r3, [r7]
 614 017a 1A60     		str	r2, [r3]
 482:.\mem1.c      ****            
 483:.\mem1.c      ****             break;
 615              		.loc 1 483 0
 616 017c 69E1     		b	.L29
 617              	.L35:
 484:.\mem1.c      ****             
 485:.\mem1.c      ****     /* Check GPIO ports 12, 15 */
 486:.\mem1.c      ****         case 0x04: 
 487:.\mem1.c      ****             /* PORT 12 */
 488:.\mem1.c      ****             #ifdef CY_PINS_GPIO_12_0_H
 489:.\mem1.c      ****                 PORT12 |= 0x01;
 618              		.loc 1 489 0
 619 017e 3B7C     		ldrb	r3, [r7, #16]
 620 0180 43F00103 		orr	r3, r3, #1
 621 0184 3B74     		strb	r3, [r7, #16]
 490:.\mem1.c      ****             #endif
 491:.\mem1.c      ****             
 492:.\mem1.c      ****             #ifdef CY_PINS_GPIO_12_1_H
 493:.\mem1.c      ****                 PORT12 |= 0x01<<1;
 622              		.loc 1 493 0
 623 0186 3B7C     		ldrb	r3, [r7, #16]
 624 0188 43F00203 		orr	r3, r3, #2
 625 018c 3B74     		strb	r3, [r7, #16]
 494:.\mem1.c      ****             #endif
 495:.\mem1.c      ****             
 496:.\mem1.c      ****             #ifdef CY_PINS_GPIO_12_2_H
 497:.\mem1.c      ****                 PORT12 |= 0x01<<2;
 626              		.loc 1 497 0
 627 018e 3B7C     		ldrb	r3, [r7, #16]
 628 0190 43F00403 		orr	r3, r3, #4
 629 0194 3B74     		strb	r3, [r7, #16]
 498:.\mem1.c      ****             #endif
 499:.\mem1.c      ****             
 500:.\mem1.c      ****             #ifdef CY_PINS_GPIO_12_3_H
 501:.\mem1.c      ****                 PORT12 |= 0x01<<3;
 630              		.loc 1 501 0
 631 0196 3B7C     		ldrb	r3, [r7, #16]
 632 0198 43F00803 		orr	r3, r3, #8
 633 019c 3B74     		strb	r3, [r7, #16]
 502:.\mem1.c      ****             #endif
 503:.\mem1.c      ****             
 504:.\mem1.c      ****             #ifdef CY_PINS_GPIO_12_4_H
 505:.\mem1.c      ****                 PORT12 |= 0x01<<4;
 634              		.loc 1 505 0
 635 019e 3B7C     		ldrb	r3, [r7, #16]
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cc7rr7YM.s 			page 21


 636 01a0 43F01003 		orr	r3, r3, #16
 637 01a4 3B74     		strb	r3, [r7, #16]
 506:.\mem1.c      ****             #endif
 507:.\mem1.c      ****             
 508:.\mem1.c      ****             #ifdef CY_PINS_GPIO_12_5_H
 509:.\mem1.c      ****                 PORT12 |= 0x01<<5;
 638              		.loc 1 509 0
 639 01a6 3B7C     		ldrb	r3, [r7, #16]
 640 01a8 43F02003 		orr	r3, r3, #32
 641 01ac 3B74     		strb	r3, [r7, #16]
 510:.\mem1.c      ****             #endif
 511:.\mem1.c      ****             
 512:.\mem1.c      ****             #ifdef CY_PINS_GPIO_12_6_H
 513:.\mem1.c      ****                 PORT12 |= 0x01<<6;
 642              		.loc 1 513 0
 643 01ae 3B7C     		ldrb	r3, [r7, #16]
 644 01b0 43F04003 		orr	r3, r3, #64
 645 01b4 3B74     		strb	r3, [r7, #16]
 514:.\mem1.c      ****             #endif
 515:.\mem1.c      ****             
 516:.\mem1.c      ****             #ifdef CY_PINS_GPIO_12_7_H
 517:.\mem1.c      ****                 PORT12 |= 0x01<<7;
 646              		.loc 1 517 0
 647 01b6 3B7C     		ldrb	r3, [r7, #16]
 648 01b8 63F07F03 		orn	r3, r3, #127
 649 01bc 3B74     		strb	r3, [r7, #16]
 518:.\mem1.c      ****             #endif
 519:.\mem1.c      ****             
 520:.\mem1.c      ****              /* PORT 15 */
 521:.\mem1.c      ****             #ifdef CY_PINS_GPIO_15_0_H
 522:.\mem1.c      ****                 PORT15 |= 0x01;
 523:.\mem1.c      ****             #endif
 524:.\mem1.c      ****             
 525:.\mem1.c      ****             #ifdef CY_PINS_GPIO_15_1_H
 526:.\mem1.c      ****                 PORT15 |= 0x01<<1;
 527:.\mem1.c      ****             #endif
 528:.\mem1.c      ****             
 529:.\mem1.c      ****             #ifdef CY_PINS_GPIO_15_2_H
 530:.\mem1.c      ****                 PORT15 |= 0x01<<2;
 531:.\mem1.c      ****             #endif
 532:.\mem1.c      ****             
 533:.\mem1.c      ****             #ifdef CY_PINS_GPIO_15_3_H
 534:.\mem1.c      ****                 PORT15 |= 0x01<<3;
 535:.\mem1.c      ****             #endif
 536:.\mem1.c      ****             
 537:.\mem1.c      ****             #ifdef CY_PINS_GPIO_15_4_H
 538:.\mem1.c      ****                 PORT15 |= 0x01<<4;
 539:.\mem1.c      ****             #endif
 540:.\mem1.c      ****             
 541:.\mem1.c      ****             #ifdef CY_PINS_GPIO_15_5_H
 542:.\mem1.c      ****                 PORT15 |= 0x01<<5;
 543:.\mem1.c      ****             #endif
 544:.\mem1.c      ****             
 545:.\mem1.c      ****             #ifdef CY_PINS_GPIO_15_6_H
 546:.\mem1.c      ****                 PORT15 |= 0x01<<6;
 547:.\mem1.c      ****             #endif
 548:.\mem1.c      ****             
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cc7rr7YM.s 			page 22


 549:.\mem1.c      ****             #ifdef CY_PINS_GPIO_15_7_H
 550:.\mem1.c      ****                 PORT15 |= 0x01<<7;
 551:.\mem1.c      ****             #endif
 552:.\mem1.c      ****             
 553:.\mem1.c      ****             *result = (PORT15<<8)|(PORT12);
 650              		.loc 1 553 0
 651 01be FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 652 01c0 1A02     		lsls	r2, r3, #8
 653 01c2 3B7C     		ldrb	r3, [r7, #16]	@ zero_extendqisi2
 654 01c4 1343     		orrs	r3, r3, r2
 655 01c6 1A46     		mov	r2, r3
 656 01c8 3B68     		ldr	r3, [r7]
 657 01ca 1A60     		str	r2, [r3]
 554:.\mem1.c      ****            
 555:.\mem1.c      ****             break;
 658              		.loc 1 555 0
 659 01cc 41E1     		b	.L29
 660              	.L36:
 556:.\mem1.c      ****   
 557:.\mem1.c      ****     /* Check PWM CLOCKS */
 558:.\mem1.c      ****         //test
 559:.\mem1.c      ****         case 0x07:
 560:.\mem1.c      ****             switch(val)
 661              		.loc 1 560 0
 662 01ce BB88     		ldrh	r3, [r7, #4]
 663 01d0 0B2B     		cmp	r3, #11
 664 01d2 00F23B81 		bhi	.L85
 665 01d6 01A2     		adr	r2, .L40
 666 01d8 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 667              		.p2align 2
 668              	.L40:
 669 01dc 0D020000 		.word	.L39+1
 670 01e0 61020000 		.word	.L41+1
 671 01e4 B5020000 		.word	.L42+1
 672 01e8 09030000 		.word	.L43+1
 673 01ec 5D030000 		.word	.L86+1
 674 01f0 5D030000 		.word	.L86+1
 675 01f4 5D030000 		.word	.L86+1
 676 01f8 5D030000 		.word	.L86+1
 677 01fc 5D030000 		.word	.L86+1
 678 0200 5D030000 		.word	.L86+1
 679 0204 5D030000 		.word	.L86+1
 680 0208 5D030000 		.word	.L86+1
 681              		.p2align 1
 682              	.L39:
 561:.\mem1.c      ****             {
 562:.\mem1.c      ****                 case 0x00:
 563:.\mem1.c      ****                     #ifdef PWM_CLK_1
 564:.\mem1.c      ****                         switch(PWM_CLK_1__SOURCE)
 683              		.loc 1 564 0
 684 020c FFF7FEFF 		bl	PWM_CLK_1_GetSourceRegister
 685 0210 0346     		mov	r3, r0
 686 0212 042B     		cmp	r3, #4
 687 0214 18D8     		bhi	.L52
 688 0216 01A2     		adr	r2, .L54
 689 0218 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 690              		.p2align 2
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cc7rr7YM.s 			page 23


 691              	.L54:
 692 021c 31020000 		.word	.L53+1
 693 0220 37020000 		.word	.L55+1
 694 0224 49020000 		.word	.L52+1
 695 0228 3D020000 		.word	.L56+1
 696 022c 43020000 		.word	.L57+1
 697              		.p2align 1
 698              	.L53:
 565:.\mem1.c      ****                         {
 566:.\mem1.c      ****                             case CYCLK_SRC_SEL_SYNC_DIG: freq = 0x01;break;
 699              		.loc 1 566 0
 700 0230 0123     		movs	r3, #1
 701 0232 FB75     		strb	r3, [r7, #23]
 702 0234 08E0     		b	.L52
 703              	.L55:
 567:.\mem1.c      ****                             case CYCLK_SRC_SEL_IMO: freq = 0x02;break;
 704              		.loc 1 567 0
 705 0236 0223     		movs	r3, #2
 706 0238 FB75     		strb	r3, [r7, #23]
 707 023a 05E0     		b	.L52
 708              	.L56:
 568:.\mem1.c      ****                             case CYCLK_SRC_SEL_ILO: freq = 0x03;break;
 709              		.loc 1 568 0
 710 023c 0323     		movs	r3, #3
 711 023e FB75     		strb	r3, [r7, #23]
 712 0240 02E0     		b	.L52
 713              	.L57:
 569:.\mem1.c      ****                             case CYCLK_SRC_SEL_PLL: freq = 0x04;break;
 714              		.loc 1 569 0
 715 0242 0423     		movs	r3, #4
 716 0244 FB75     		strb	r3, [r7, #23]
 717 0246 00BF     		nop
 718              	.L52:
 570:.\mem1.c      ****                         }
 571:.\mem1.c      ****                         
 572:.\mem1.c      ****                     *result = (PWM_CLK_1__DIV)|(freq<<16)|(PWM_CLK_1<<19);
 719              		.loc 1 572 0
 720 0248 FFF7FEFF 		bl	PWM_CLK_1_GetDividerRegister
 721 024c 0346     		mov	r3, r0
 722 024e 0133     		adds	r3, r3, #1
 723 0250 FA7D     		ldrb	r2, [r7, #23]	@ zero_extendqisi2
 724 0252 1204     		lsls	r2, r2, #16
 725 0254 1343     		orrs	r3, r3, r2
 726 0256 43F40022 		orr	r2, r3, #524288
 727 025a 3B68     		ldr	r3, [r7]
 728 025c 1A60     		str	r2, [r3]
 573:.\mem1.c      ****                     /* ccccfffdddddddddddddddd*/
 574:.\mem1.c      ****                     #endif
 575:.\mem1.c      ****                     break;
 729              		.loc 1 575 0
 730 025e 7EE0     		b	.L38
 731              	.L41:
 576:.\mem1.c      ****                     
 577:.\mem1.c      ****                 case 0x01:
 578:.\mem1.c      ****                     #ifdef PWM_CLK_2
 579:.\mem1.c      ****                         switch(PWM_CLK_2__SOURCE)
 732              		.loc 1 579 0
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cc7rr7YM.s 			page 24


 733 0260 FFF7FEFF 		bl	PWM_CLK_2_GetSourceRegister
 734 0264 0346     		mov	r3, r0
 735 0266 042B     		cmp	r3, #4
 736 0268 18D8     		bhi	.L58
 737 026a 01A2     		adr	r2, .L60
 738 026c 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 739              		.p2align 2
 740              	.L60:
 741 0270 85020000 		.word	.L59+1
 742 0274 8B020000 		.word	.L61+1
 743 0278 9D020000 		.word	.L58+1
 744 027c 91020000 		.word	.L62+1
 745 0280 97020000 		.word	.L63+1
 746              		.p2align 1
 747              	.L59:
 580:.\mem1.c      ****                         {
 581:.\mem1.c      ****                             case CYCLK_SRC_SEL_SYNC_DIG: freq = 0x01;break;
 748              		.loc 1 581 0
 749 0284 0123     		movs	r3, #1
 750 0286 FB75     		strb	r3, [r7, #23]
 751 0288 08E0     		b	.L58
 752              	.L61:
 582:.\mem1.c      ****                             case CYCLK_SRC_SEL_IMO: freq = 0x02;break;
 753              		.loc 1 582 0
 754 028a 0223     		movs	r3, #2
 755 028c FB75     		strb	r3, [r7, #23]
 756 028e 05E0     		b	.L58
 757              	.L62:
 583:.\mem1.c      ****                             case CYCLK_SRC_SEL_ILO: freq = 0x03;break;
 758              		.loc 1 583 0
 759 0290 0323     		movs	r3, #3
 760 0292 FB75     		strb	r3, [r7, #23]
 761 0294 02E0     		b	.L58
 762              	.L63:
 584:.\mem1.c      ****                             case CYCLK_SRC_SEL_PLL: freq = 0x04;break;
 763              		.loc 1 584 0
 764 0296 0423     		movs	r3, #4
 765 0298 FB75     		strb	r3, [r7, #23]
 766 029a 00BF     		nop
 767              	.L58:
 585:.\mem1.c      ****                         }
 586:.\mem1.c      ****                         
 587:.\mem1.c      ****                     *result = (PWM_CLK_2__DIV)|(freq<<16)|(PWM_CLK_2<<19);
 768              		.loc 1 587 0
 769 029c FFF7FEFF 		bl	PWM_CLK_2_GetDividerRegister
 770 02a0 0346     		mov	r3, r0
 771 02a2 0133     		adds	r3, r3, #1
 772 02a4 FA7D     		ldrb	r2, [r7, #23]	@ zero_extendqisi2
 773 02a6 1204     		lsls	r2, r2, #16
 774 02a8 1343     		orrs	r3, r3, r2
 775 02aa 43F48012 		orr	r2, r3, #1048576
 776 02ae 3B68     		ldr	r3, [r7]
 777 02b0 1A60     		str	r2, [r3]
 588:.\mem1.c      ****                     #endif
 589:.\mem1.c      ****                     break;
 778              		.loc 1 589 0
 779 02b2 54E0     		b	.L38
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cc7rr7YM.s 			page 25


 780              	.L42:
 590:.\mem1.c      ****                     
 591:.\mem1.c      ****                 case 0x02:
 592:.\mem1.c      ****                     #ifdef PWM_CLK_3
 593:.\mem1.c      ****                         switch(PWM_CLK_3__SOURCE)
 781              		.loc 1 593 0
 782 02b4 FFF7FEFF 		bl	PWM_CLK_3_GetSourceRegister
 783 02b8 0346     		mov	r3, r0
 784 02ba 042B     		cmp	r3, #4
 785 02bc 18D8     		bhi	.L64
 786 02be 01A2     		adr	r2, .L66
 787 02c0 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 788              		.p2align 2
 789              	.L66:
 790 02c4 D9020000 		.word	.L65+1
 791 02c8 DF020000 		.word	.L67+1
 792 02cc F1020000 		.word	.L64+1
 793 02d0 E5020000 		.word	.L68+1
 794 02d4 EB020000 		.word	.L69+1
 795              		.p2align 1
 796              	.L65:
 594:.\mem1.c      ****                         {
 595:.\mem1.c      ****                             case CYCLK_SRC_SEL_SYNC_DIG: freq = 0x01;break;
 797              		.loc 1 595 0
 798 02d8 0123     		movs	r3, #1
 799 02da FB75     		strb	r3, [r7, #23]
 800 02dc 08E0     		b	.L64
 801              	.L67:
 596:.\mem1.c      ****                             case CYCLK_SRC_SEL_IMO: freq = 0x02;break;
 802              		.loc 1 596 0
 803 02de 0223     		movs	r3, #2
 804 02e0 FB75     		strb	r3, [r7, #23]
 805 02e2 05E0     		b	.L64
 806              	.L68:
 597:.\mem1.c      ****                             case CYCLK_SRC_SEL_ILO: freq = 0x03;break;
 807              		.loc 1 597 0
 808 02e4 0323     		movs	r3, #3
 809 02e6 FB75     		strb	r3, [r7, #23]
 810 02e8 02E0     		b	.L64
 811              	.L69:
 598:.\mem1.c      ****                             case CYCLK_SRC_SEL_PLL: freq = 0x04;break;
 812              		.loc 1 598 0
 813 02ea 0423     		movs	r3, #4
 814 02ec FB75     		strb	r3, [r7, #23]
 815 02ee 00BF     		nop
 816              	.L64:
 599:.\mem1.c      ****                         }
 600:.\mem1.c      ****                         
 601:.\mem1.c      ****                     *result = (PWM_CLK_3__DIV)|(freq<<16)|(PWM_CLK_3<<19);
 817              		.loc 1 601 0
 818 02f0 FFF7FEFF 		bl	PWM_CLK_3_GetDividerRegister
 819 02f4 0346     		mov	r3, r0
 820 02f6 0133     		adds	r3, r3, #1
 821 02f8 FA7D     		ldrb	r2, [r7, #23]	@ zero_extendqisi2
 822 02fa 1204     		lsls	r2, r2, #16
 823 02fc 1343     		orrs	r3, r3, r2
 824 02fe 43F4C012 		orr	r2, r3, #1572864
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cc7rr7YM.s 			page 26


 825 0302 3B68     		ldr	r3, [r7]
 826 0304 1A60     		str	r2, [r3]
 602:.\mem1.c      ****                     #endif
 603:.\mem1.c      ****                     break;
 827              		.loc 1 603 0
 828 0306 2AE0     		b	.L38
 829              	.L43:
 604:.\mem1.c      ****                     
 605:.\mem1.c      ****                 case 0x03:
 606:.\mem1.c      ****                     #ifdef PWM_CLK_4
 607:.\mem1.c      ****                         switch(PWM_CLK_4__SOURCE)
 830              		.loc 1 607 0
 831 0308 FFF7FEFF 		bl	PWM_CLK_4_GetSourceRegister
 832 030c 0346     		mov	r3, r0
 833 030e 042B     		cmp	r3, #4
 834 0310 18D8     		bhi	.L70
 835 0312 01A2     		adr	r2, .L72
 836 0314 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 837              		.p2align 2
 838              	.L72:
 839 0318 2D030000 		.word	.L71+1
 840 031c 33030000 		.word	.L73+1
 841 0320 45030000 		.word	.L70+1
 842 0324 39030000 		.word	.L74+1
 843 0328 3F030000 		.word	.L75+1
 844              		.p2align 1
 845              	.L71:
 608:.\mem1.c      ****                         {
 609:.\mem1.c      ****                             case CYCLK_SRC_SEL_SYNC_DIG: freq = 0x01;break;
 846              		.loc 1 609 0
 847 032c 0123     		movs	r3, #1
 848 032e FB75     		strb	r3, [r7, #23]
 849 0330 08E0     		b	.L70
 850              	.L73:
 610:.\mem1.c      ****                             case CYCLK_SRC_SEL_IMO: freq = 0x02;break;
 851              		.loc 1 610 0
 852 0332 0223     		movs	r3, #2
 853 0334 FB75     		strb	r3, [r7, #23]
 854 0336 05E0     		b	.L70
 855              	.L74:
 611:.\mem1.c      ****                             case CYCLK_SRC_SEL_ILO: freq = 0x03;break;
 856              		.loc 1 611 0
 857 0338 0323     		movs	r3, #3
 858 033a FB75     		strb	r3, [r7, #23]
 859 033c 02E0     		b	.L70
 860              	.L75:
 612:.\mem1.c      ****                             case CYCLK_SRC_SEL_PLL: freq = 0x04;break;
 861              		.loc 1 612 0
 862 033e 0423     		movs	r3, #4
 863 0340 FB75     		strb	r3, [r7, #23]
 864 0342 00BF     		nop
 865              	.L70:
 613:.\mem1.c      ****                         }
 614:.\mem1.c      ****                         
 615:.\mem1.c      ****                     *result = (PWM_CLK_4__DIV)|(freq<<16)|(PWM_CLK_4<<19);
 866              		.loc 1 615 0
 867 0344 FFF7FEFF 		bl	PWM_CLK_4_GetDividerRegister
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cc7rr7YM.s 			page 27


 868 0348 0346     		mov	r3, r0
 869 034a 0133     		adds	r3, r3, #1
 870 034c FA7D     		ldrb	r2, [r7, #23]	@ zero_extendqisi2
 871 034e 1204     		lsls	r2, r2, #16
 872 0350 1343     		orrs	r3, r3, r2
 873 0352 43F40012 		orr	r2, r3, #2097152
 874 0356 3B68     		ldr	r3, [r7]
 875 0358 1A60     		str	r2, [r3]
 616:.\mem1.c      ****                     #endif
 617:.\mem1.c      ****                     break;
 876              		.loc 1 617 0
 877 035a 00E0     		b	.L38
 878              	.L86:
 618:.\mem1.c      ****                     
 619:.\mem1.c      ****                 case 0x04:
 620:.\mem1.c      ****                     #ifdef PWM_CLK_5
 621:.\mem1.c      ****                         switch(PWM_CLK_5__SOURCE)
 622:.\mem1.c      ****                         {
 623:.\mem1.c      ****                             case CYCLK_SRC_SEL_SYNC_DIG: freq = 0x01;break;
 624:.\mem1.c      ****                             case CYCLK_SRC_SEL_IMO: freq = 0x02;break;
 625:.\mem1.c      ****                             case CYCLK_SRC_SEL_ILO: freq = 0x03;break;
 626:.\mem1.c      ****                             case CYCLK_SRC_SEL_PLL: freq = 0x04;break;
 627:.\mem1.c      ****                         }
 628:.\mem1.c      ****                         
 629:.\mem1.c      ****                     *result = (PWM_CLK_5__DIV)|(freq<<16)|(PWM_CLK_5<<19);
 630:.\mem1.c      ****                     /* 
 631:.\mem1.c      ****                         ccccfffdddddddddddddddd*/
 632:.\mem1.c      ****                     #endif
 633:.\mem1.c      ****                     break;
 879              		.loc 1 633 0
 880 035c 00BF     		nop
 881              	.L38:
 634:.\mem1.c      ****                     
 635:.\mem1.c      ****                     
 636:.\mem1.c      ****                 case 0x05:
 637:.\mem1.c      ****                     #ifdef PWM_CLK_6
 638:.\mem1.c      ****                         switch(PWM_CLK_6__SOURCE)
 639:.\mem1.c      ****                         {
 640:.\mem1.c      ****                             case CYCLK_SRC_SEL_SYNC_DIG: freq = 0x01;break;
 641:.\mem1.c      ****                             case CYCLK_SRC_SEL_IMO: freq = 0x02;break;
 642:.\mem1.c      ****                             case CYCLK_SRC_SEL_ILO: freq = 0x03;break;
 643:.\mem1.c      ****                             case CYCLK_SRC_SEL_PLL: freq = 0x04;break;
 644:.\mem1.c      ****                         }
 645:.\mem1.c      ****                         
 646:.\mem1.c      ****                     *result = (PWM_CLK_6__DIV)|(freq<<16)|(PWM_CLK_6<<19);
 647:.\mem1.c      ****                     #endif
 648:.\mem1.c      ****                     break;
 649:.\mem1.c      ****                     
 650:.\mem1.c      ****                 case 0x06:
 651:.\mem1.c      ****                     #ifdef PWM_CLK_7
 652:.\mem1.c      ****                         switch(PWM_CLK_7__SOURCE)
 653:.\mem1.c      ****                         {
 654:.\mem1.c      ****                             case CYCLK_SRC_SEL_SYNC_DIG: freq = 0x01;break;
 655:.\mem1.c      ****                             case CYCLK_SRC_SEL_IMO: freq = 0x02;break;
 656:.\mem1.c      ****                             case CYCLK_SRC_SEL_ILO: freq = 0x03;break;
 657:.\mem1.c      ****                             case CYCLK_SRC_SEL_PLL: freq = 0x04;break;
 658:.\mem1.c      ****                         }
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cc7rr7YM.s 			page 28


 659:.\mem1.c      ****                         
 660:.\mem1.c      ****                     *result = (PWM_CLK_7__DIV)|(freq<<16)|(PWM_CLK_7<<19);
 661:.\mem1.c      ****                     #endif
 662:.\mem1.c      ****                     break;
 663:.\mem1.c      ****                     
 664:.\mem1.c      ****                 case 0x07:
 665:.\mem1.c      ****                     #ifdef PWM_CLK_8
 666:.\mem1.c      ****                         switch(PWM_CLK_8__SOURCE)
 667:.\mem1.c      ****                         {
 668:.\mem1.c      ****                             case CYCLK_SRC_SEL_SYNC_DIG: freq = 0x01;break;
 669:.\mem1.c      ****                             case CYCLK_SRC_SEL_IMO: freq = 0x02;break;
 670:.\mem1.c      ****                             case CYCLK_SRC_SEL_ILO: freq = 0x03;break;
 671:.\mem1.c      ****                             case CYCLK_SRC_SEL_PLL: freq = 0x04;break;
 672:.\mem1.c      ****                         }
 673:.\mem1.c      ****                         
 674:.\mem1.c      ****                     *result = (PWM_CLK_8__DIV)|(freq<<16)|(PWM_CLK_8<<19);
 675:.\mem1.c      ****                     #endif
 676:.\mem1.c      ****                     break;
 677:.\mem1.c      ****                     
 678:.\mem1.c      ****                 case 0x08:
 679:.\mem1.c      ****                     #ifdef PWM_CLK_9
 680:.\mem1.c      ****                         switch(PWM_CLK_9__SOURCE)
 681:.\mem1.c      ****                         {
 682:.\mem1.c      ****                             case CYCLK_SRC_SEL_SYNC_DIG: freq = 0x01;break;
 683:.\mem1.c      ****                             case CYCLK_SRC_SEL_IMO: freq = 0x02;break;
 684:.\mem1.c      ****                             case CYCLK_SRC_SEL_ILO: freq = 0x03;break;
 685:.\mem1.c      ****                             case CYCLK_SRC_SEL_PLL: freq = 0x04;break;
 686:.\mem1.c      ****                         }
 687:.\mem1.c      ****                         
 688:.\mem1.c      ****                     *result = (PWM_CLK_9__DIV)|(freq<<16)|(PWM_CLK_9<<19);
 689:.\mem1.c      ****                     #endif
 690:.\mem1.c      ****                     break;
 691:.\mem1.c      ****                     
 692:.\mem1.c      ****                 case 0x09:
 693:.\mem1.c      ****                     #ifdef PWM_CLK_10
 694:.\mem1.c      ****                         switch(PWM_CLK_10__SOURCE)
 695:.\mem1.c      ****                         {
 696:.\mem1.c      ****                             case CYCLK_SRC_SEL_SYNC_DIG: freq = 0x01;break;
 697:.\mem1.c      ****                             case CYCLK_SRC_SEL_IMO: freq = 0x02;break;
 698:.\mem1.c      ****                             case CYCLK_SRC_SEL_ILO: freq = 0x03;break;
 699:.\mem1.c      ****                             case CYCLK_SRC_SEL_PLL: freq = 0x04;break;
 700:.\mem1.c      ****                         }
 701:.\mem1.c      ****                         
 702:.\mem1.c      ****                     *result = (PWM_CLK_10__DIV)|(freq<<16)|(PWM_CLK_10<<19);
 703:.\mem1.c      ****                     #endif
 704:.\mem1.c      ****                     break;
 705:.\mem1.c      ****                     
 706:.\mem1.c      ****                 case 0x0A:
 707:.\mem1.c      ****                     #ifdef PWM_CLK_11
 708:.\mem1.c      ****                         switch(PWM_CLK_11__SOURCE)
 709:.\mem1.c      ****                         {
 710:.\mem1.c      ****                             case CYCLK_SRC_SEL_SYNC_DIG: freq = 0x01;break;
 711:.\mem1.c      ****                             case CYCLK_SRC_SEL_IMO: freq = 0x02;break;
 712:.\mem1.c      ****                             case CYCLK_SRC_SEL_ILO: freq = 0x03;break;
 713:.\mem1.c      ****                             case CYCLK_SRC_SEL_PLL: freq = 0x04;break;
 714:.\mem1.c      ****                         }
 715:.\mem1.c      ****                         
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cc7rr7YM.s 			page 29


 716:.\mem1.c      ****                     *result = (PWM_CLK_11__DIV)|(freq<<16)|(PWM_CLK_11<<19);
 717:.\mem1.c      ****                     #endif
 718:.\mem1.c      ****                     break;
 719:.\mem1.c      ****                     
 720:.\mem1.c      ****                 case 0x0B:
 721:.\mem1.c      ****                     #ifdef PWM_CLK_12
 722:.\mem1.c      ****                         switch(PWM_CLK_12__SOURCE)
 723:.\mem1.c      ****                         {
 724:.\mem1.c      ****                             case CYCLK_SRC_SEL_SYNC_DIG: freq = 0x01;break;
 725:.\mem1.c      ****                             case CYCLK_SRC_SEL_IMO: freq = 0x02;break;
 726:.\mem1.c      ****                             case CYCLK_SRC_SEL_ILO: freq = 0x03;break;
 727:.\mem1.c      ****                             case CYCLK_SRC_SEL_PLL: freq = 0x04;break;
 728:.\mem1.c      ****                         }
 729:.\mem1.c      ****                         
 730:.\mem1.c      ****                     *result = (PWM_CLK_12__DIV)|(freq<<16)|(PWM_CLK_12<<19);
 731:.\mem1.c      ****                     #endif
 732:.\mem1.c      ****                     break;
 733:.\mem1.c      ****                     
 734:.\mem1.c      ****              
 735:.\mem1.c      ****             }
 736:.\mem1.c      ****             break;
 882              		.loc 1 736 0 discriminator 1
 883 035e 75E0     		b	.L85
 884              	.L37:
 737:.\mem1.c      ****             
 738:.\mem1.c      ****         case 0x08:
 739:.\mem1.c      ****             if (PWM_NUM>0)
 740:.\mem1.c      ****             {
 741:.\mem1.c      ****                 switch(val)
 885              		.loc 1 741 0
 886 0360 BB88     		ldrh	r3, [r7, #4]
 887 0362 052B     		cmp	r3, #5
 888 0364 74D8     		bhi	.L87
 889 0366 01A2     		adr	r2, .L78
 890 0368 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 891              		.p2align 2
 892              	.L78:
 893 036c 85030000 		.word	.L77+1
 894 0370 E7030000 		.word	.L79+1
 895 0374 49040000 		.word	.L88+1
 896 0378 49040000 		.word	.L88+1
 897 037c 49040000 		.word	.L88+1
 898 0380 49040000 		.word	.L88+1
 899              		.p2align 1
 900              	.L77:
 742:.\mem1.c      ****                 {
 743:.\mem1.c      ****                     case 0x00: 
 744:.\mem1.c      ****                         #ifdef PWM_1_CLK
 745:.\mem1.c      ****                             *result|=PWM_1_CLK;
 901              		.loc 1 745 0
 902 0384 3B68     		ldr	r3, [r7]
 903 0386 1B68     		ldr	r3, [r3]
 904 0388 43F00102 		orr	r2, r3, #1
 905 038c 3B68     		ldr	r3, [r7]
 906 038e 1A60     		str	r2, [r3]
 746:.\mem1.c      ****                             if (PWM_1_Resolution == 16u){*result|=0x01<<4;}
 907              		.loc 1 746 0
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cc7rr7YM.s 			page 30


 908 0390 3B68     		ldr	r3, [r7]
 909 0392 1B68     		ldr	r3, [r3]
 910 0394 43F01002 		orr	r2, r3, #16
 911 0398 3B68     		ldr	r3, [r7]
 912 039a 1A60     		str	r2, [r3]
 747:.\mem1.c      ****                         #endif
 748:.\mem1.c      ****                         #ifdef PWM_2_CLK
 749:.\mem1.c      ****                             *result|=PWM_2_CLK<<5;
 913              		.loc 1 749 0
 914 039c 3B68     		ldr	r3, [r7]
 915 039e 1B68     		ldr	r3, [r3]
 916 03a0 43F02002 		orr	r2, r3, #32
 917 03a4 3B68     		ldr	r3, [r7]
 918 03a6 1A60     		str	r2, [r3]
 750:.\mem1.c      ****                             if (PWM_2_Resolution == 16u){*result|=0x01<<9;}
 919              		.loc 1 750 0
 920 03a8 3B68     		ldr	r3, [r7]
 921 03aa 1B68     		ldr	r3, [r3]
 922 03ac 43F40072 		orr	r2, r3, #512
 923 03b0 3B68     		ldr	r3, [r7]
 924 03b2 1A60     		str	r2, [r3]
 751:.\mem1.c      ****                         #endif
 752:.\mem1.c      ****                         #ifdef PWM_3_CLK
 753:.\mem1.c      ****                             *result|=PWM_3_CLK<<10;
 925              		.loc 1 753 0
 926 03b4 3B68     		ldr	r3, [r7]
 927 03b6 1B68     		ldr	r3, [r3]
 928 03b8 43F40062 		orr	r2, r3, #2048
 929 03bc 3B68     		ldr	r3, [r7]
 930 03be 1A60     		str	r2, [r3]
 754:.\mem1.c      ****                             if (PWM_3_Resolution == 16u){*result|=0x01<<14;}
 931              		.loc 1 754 0
 932 03c0 3B68     		ldr	r3, [r7]
 933 03c2 1B68     		ldr	r3, [r3]
 934 03c4 43F48042 		orr	r2, r3, #16384
 935 03c8 3B68     		ldr	r3, [r7]
 936 03ca 1A60     		str	r2, [r3]
 755:.\mem1.c      ****                         #endif
 756:.\mem1.c      ****                         #ifdef PWM_4_CLK
 757:.\mem1.c      ****                             *result|=PWM_4_CLK<<15;
 937              		.loc 1 757 0
 938 03cc 3B68     		ldr	r3, [r7]
 939 03ce 1B68     		ldr	r3, [r3]
 940 03d0 43F48032 		orr	r2, r3, #65536
 941 03d4 3B68     		ldr	r3, [r7]
 942 03d6 1A60     		str	r2, [r3]
 758:.\mem1.c      ****                             if (PWM_4_Resolution == 16u){*result|=0x01<<19;}
 943              		.loc 1 758 0
 944 03d8 3B68     		ldr	r3, [r7]
 945 03da 1B68     		ldr	r3, [r3]
 946 03dc 43F40022 		orr	r2, r3, #524288
 947 03e0 3B68     		ldr	r3, [r7]
 948 03e2 1A60     		str	r2, [r3]
 759:.\mem1.c      ****                         #endif
 760:.\mem1.c      ****                     /* r4444r3333r2222r1111*/
 761:.\mem1.c      ****                     break;
 949              		.loc 1 761 0
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cc7rr7YM.s 			page 31


 950 03e4 31E0     		b	.L76
 951              	.L79:
 762:.\mem1.c      ****                     case 0x01:
 763:.\mem1.c      ****                         #ifdef PWM_5_CLK
 764:.\mem1.c      ****                             *result|=PWM_5_CLK;
 952              		.loc 1 764 0
 953 03e6 3B68     		ldr	r3, [r7]
 954 03e8 1B68     		ldr	r3, [r3]
 955 03ea 43F00302 		orr	r2, r3, #3
 956 03ee 3B68     		ldr	r3, [r7]
 957 03f0 1A60     		str	r2, [r3]
 765:.\mem1.c      ****                             if (PWM_5_Resolution == 16u){*result|=0x01<<4;}
 958              		.loc 1 765 0
 959 03f2 3B68     		ldr	r3, [r7]
 960 03f4 1B68     		ldr	r3, [r3]
 961 03f6 43F01002 		orr	r2, r3, #16
 962 03fa 3B68     		ldr	r3, [r7]
 963 03fc 1A60     		str	r2, [r3]
 766:.\mem1.c      ****                         #endif
 767:.\mem1.c      ****                         #ifdef PWM_6_CLK
 768:.\mem1.c      ****                             *result|=PWM_6_CLK<<5;
 964              		.loc 1 768 0
 965 03fe 3B68     		ldr	r3, [r7]
 966 0400 1B68     		ldr	r3, [r3]
 967 0402 43F06002 		orr	r2, r3, #96
 968 0406 3B68     		ldr	r3, [r7]
 969 0408 1A60     		str	r2, [r3]
 769:.\mem1.c      ****                             if (PWM_6_Resolution == 16u){*result|=0x01<<9;}
 970              		.loc 1 769 0
 971 040a 3B68     		ldr	r3, [r7]
 972 040c 1B68     		ldr	r3, [r3]
 973 040e 43F40072 		orr	r2, r3, #512
 974 0412 3B68     		ldr	r3, [r7]
 975 0414 1A60     		str	r2, [r3]
 770:.\mem1.c      ****                         #endif
 771:.\mem1.c      ****                 
 772:.\mem1.c      ****                         #ifdef PWM_7_CLK
 773:.\mem1.c      ****                             *result|=PWM_7_CLK<<10;
 976              		.loc 1 773 0
 977 0416 3B68     		ldr	r3, [r7]
 978 0418 1B68     		ldr	r3, [r3]
 979 041a 43F48052 		orr	r2, r3, #4096
 980 041e 3B68     		ldr	r3, [r7]
 981 0420 1A60     		str	r2, [r3]
 774:.\mem1.c      ****                             if (PWM_7_Resolution == 16u){*result|=0x01<<14;}
 982              		.loc 1 774 0
 983 0422 3B68     		ldr	r3, [r7]
 984 0424 1B68     		ldr	r3, [r3]
 985 0426 43F48042 		orr	r2, r3, #16384
 986 042a 3B68     		ldr	r3, [r7]
 987 042c 1A60     		str	r2, [r3]
 775:.\mem1.c      ****                         #endif
 776:.\mem1.c      ****                         #ifdef PWM_8_CLK
 777:.\mem1.c      ****                             *result|=PWM_8_CLK<<15;
 988              		.loc 1 777 0
 989 042e 3B68     		ldr	r3, [r7]
 990 0430 1B68     		ldr	r3, [r3]
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cc7rr7YM.s 			page 32


 991 0432 43F40032 		orr	r2, r3, #131072
 992 0436 3B68     		ldr	r3, [r7]
 993 0438 1A60     		str	r2, [r3]
 778:.\mem1.c      ****                             if (PWM_8_Resolution == 16u){*result|=0x01<<19;}
 994              		.loc 1 778 0
 995 043a 3B68     		ldr	r3, [r7]
 996 043c 1B68     		ldr	r3, [r3]
 997 043e 43F40022 		orr	r2, r3, #524288
 998 0442 3B68     		ldr	r3, [r7]
 999 0444 1A60     		str	r2, [r3]
 779:.\mem1.c      ****                         #endif
 780:.\mem1.c      ****                     break;
 1000              		.loc 1 780 0
 1001 0446 00E0     		b	.L76
 1002              	.L88:
 781:.\mem1.c      ****                         
 782:.\mem1.c      ****                     case 0x02: 
 783:.\mem1.c      ****                         #ifdef PWM_9_CLK
 784:.\mem1.c      ****                             *result|=PWM_9_CLK;
 785:.\mem1.c      ****                             if (PWM_9_Resolution == 16u){*result|=0x01<<4;}
 786:.\mem1.c      ****                         #endif
 787:.\mem1.c      ****                         #ifdef PWM_10_CLK
 788:.\mem1.c      ****                             *result|=PWM_10_CLK<<5;
 789:.\mem1.c      ****                             if (PWM_10_Resolution == 16u){*result|=0x01<<9;}
 790:.\mem1.c      ****                         #endif
 791:.\mem1.c      ****                         #ifdef PWM_11_CLK
 792:.\mem1.c      ****                             *result|=PWM_11_CLK<<10;
 793:.\mem1.c      ****                             if (PWM_11_Resolution == 16u){*result|=0x01<<14;}
 794:.\mem1.c      ****                         #endif
 795:.\mem1.c      ****                         #ifdef PWM_12_CLK
 796:.\mem1.c      ****                             *result|=PWM_12_CLK<<15;
 797:.\mem1.c      ****                             if (PWM_12_Resolution == 16u){*result|=0x01<<19;}
 798:.\mem1.c      ****                         #endif
 799:.\mem1.c      ****                     /* r4444r3333r2222r1111*/
 800:.\mem1.c      ****                     break;
 1003              		.loc 1 800 0
 1004 0448 00BF     		nop
 1005              	.L76:
 801:.\mem1.c      ****                     case 0x03:
 802:.\mem1.c      ****                         #ifdef PWM_13_CLK
 803:.\mem1.c      ****                             *result|=PWM_13_CLK;
 804:.\mem1.c      ****                             if (PWM_13_Resolution == 16u){*result|=0x01<<4;}
 805:.\mem1.c      ****                         #endif
 806:.\mem1.c      ****                         #ifdef PWM_14_CLK
 807:.\mem1.c      ****                             *result|=PWM_14_CLK<<5;
 808:.\mem1.c      ****                             if (PWM_14_Resolution == 16u){*result|=0x01<<9;}
 809:.\mem1.c      ****                         #endif
 810:.\mem1.c      ****                 
 811:.\mem1.c      ****                         #ifdef PWM_15_CLK
 812:.\mem1.c      ****                             *result|=PWM_15_CLK<<10;
 813:.\mem1.c      ****                             if (PWM_15_Resolution == 16u){*result|=0x01<<14;}
 814:.\mem1.c      ****                         #endif
 815:.\mem1.c      ****                         #ifdef PWM_16_CLK
 816:.\mem1.c      ****                             *result|=PWM_16_CLK<<15;
 817:.\mem1.c      ****                             if (PWM_16_Resolution == 16u){*result|=0x01<<19;}
 818:.\mem1.c      ****                         #endif
 819:.\mem1.c      ****                     break;
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cc7rr7YM.s 			page 33


 820:.\mem1.c      ****                         
 821:.\mem1.c      ****                     case 0x04: 
 822:.\mem1.c      ****                         #ifdef PWM_17_CLK
 823:.\mem1.c      ****                             *result|=PWM_17_CLK;
 824:.\mem1.c      ****                             if (PWM_17_Resolution == 16u){*result|=0x01<<4;}
 825:.\mem1.c      ****                         #endif
 826:.\mem1.c      ****                         #ifdef PWM_18_CLK
 827:.\mem1.c      ****                             *result|=PWM_18_CLK<<5;
 828:.\mem1.c      ****                             if (PWM_18_Resolution == 16u){*result|=0x01<<9;}
 829:.\mem1.c      ****                         #endif
 830:.\mem1.c      ****                         #ifdef PWM_19_CLK
 831:.\mem1.c      ****                             *result|=PWM_19_CLK<<10;
 832:.\mem1.c      ****                             if (PWM_19_Resolution == 16u){*result|=0x01<<14;}
 833:.\mem1.c      ****                         #endif
 834:.\mem1.c      ****                         #ifdef PWM_20_CLK
 835:.\mem1.c      ****                             *result|=PWM_20_CLK<<15;
 836:.\mem1.c      ****                             if (PWM_20_Resolution == 16u){*result|=0x01<<19;}
 837:.\mem1.c      ****                         #endif
 838:.\mem1.c      ****                     /* r4444r3333r2222r1111*/
 839:.\mem1.c      ****                     break;
 840:.\mem1.c      ****                     case 0x05:
 841:.\mem1.c      ****                         #ifdef PWM_21_CLK
 842:.\mem1.c      ****                             *result|=PWM_21_CLK;
 843:.\mem1.c      ****                             if (PWM_21_Resolution == 16u){*result|=0x01<<4;}
 844:.\mem1.c      ****                         #endif
 845:.\mem1.c      ****                         #ifdef PWM_22_CLK
 846:.\mem1.c      ****                             *result|=PWM_22_CLK<<5;
 847:.\mem1.c      ****                             if (PWM_22_Resolution == 16u){*result|=0x01<<9;}
 848:.\mem1.c      ****                         #endif
 849:.\mem1.c      ****                 
 850:.\mem1.c      ****                         #ifdef PWM_23_CLK
 851:.\mem1.c      ****                             *result|=PWM_23_CLK<<10;
 852:.\mem1.c      ****                             if (PWM_23_Resolution == 16u){*result|=0x01<<14;}
 853:.\mem1.c      ****                         #endif
 854:.\mem1.c      ****                         #ifdef PWM_24_CLK
 855:.\mem1.c      ****                             *result|=PWM_24_CLK<<15;
 856:.\mem1.c      ****                             if (PWM_24_Resolution == 16u){*result|=0x01<<19;}
 857:.\mem1.c      ****                         #endif
 858:.\mem1.c      ****                     break;
 859:.\mem1.c      ****                                      
 860:.\mem1.c      ****                 }
 861:.\mem1.c      ****             }
 862:.\mem1.c      ****             else {*result = 0;}
 863:.\mem1.c      ****         break;//case 0x08
 1006              		.loc 1 863 0 discriminator 9
 1007 044a 01E0     		b	.L87
 1008              	.L85:
 736:.\mem1.c      ****             
 1009              		.loc 1 736 0
 1010 044c 00BF     		nop
 1011 044e 00E0     		b	.L29
 1012              	.L87:
 1013              		.loc 1 863 0
 1014 0450 00BF     		nop
 1015              	.L29:
 864:.\mem1.c      ****            
 865:.\mem1.c      ****          
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cc7rr7YM.s 			page 34


 866:.\mem1.c      ****     }
 867:.\mem1.c      ****     
 868:.\mem1.c      ****     return true;
 1016              		.loc 1 868 0
 1017 0452 0123     		movs	r3, #1
 869:.\mem1.c      **** }
 1018              		.loc 1 869 0
 1019 0454 1846     		mov	r0, r3
 1020 0456 1837     		adds	r7, r7, #24
 1021              		.cfi_def_cfa_offset 8
 1022 0458 BD46     		mov	sp, r7
 1023              		.cfi_def_cfa_register 13
 1024              		@ sp needed
 1025 045a 80BD     		pop	{r7, pc}
 1026              		.cfi_endproc
 1027              	.LFE57:
 1028              		.size	CheckBuild, .-CheckBuild
 1029              		.section	.text.VDAC0_Control,"ax",%progbits
 1030              		.align	2
 1031              		.global	VDAC0_Control
 1032              		.thumb
 1033              		.thumb_func
 1034              		.type	VDAC0_Control, %function
 1035              	VDAC0_Control:
 1036              	.LFB58:
 870:.\mem1.c      **** 
 871:.\mem1.c      **** /****************************************************************************************//**
 872:.\mem1.c      **** *  @brief Contains usage scenarios of the DELSIG ADC for use by a Master device. 
 873:.\mem1.c      **** *
 874:.\mem1.c      **** *  @param cmd: 8-bit number describing a desired usage of a function associated 
 875:.\mem1.c      **** *              with the DELSIG ADC
 876:.\mem1.c      **** *  @param val: 16-bit number containing a value that is to be written to that 
 877:.\mem1.c      **** *              function, or modify the component's operation, if applicable.
 878:.\mem1.c      **** *
 879:.\mem1.c      **** *********************************************************************************************/
 880:.\mem1.c      **** 
 881:.\mem1.c      ****     #ifdef CY_ADC_DELSIG_ADC_DelSig_1_H
 882:.\mem1.c      ****         bool DELSIG_ADC_Control(uint8 cmd, uint16 val, uint32 *result)
 883:.\mem1.c      ****         {
 884:.\mem1.c      ****             bool return_flag = 0;
 885:.\mem1.c      ****            
 886:.\mem1.c      ****             switch(cmd)
 887:.\mem1.c      ****             {
 888:.\mem1.c      ****                 //start_adc
 889:.\mem1.c      ****                 case 0x00: ADC_DelSig_1_Start();break;
 890:.\mem1.c      ****                 case 0x01: ADC_DelSig_1_Stop(); break;
 891:.\mem1.c      ****                 case 0x02: 
 892:.\mem1.c      ****                     switch(val)
 893:.\mem1.c      ****                     {
 894:.\mem1.c      ****                         case 1: ADC_DelSig_1_SetBufferGain(ADC_DelSig_1_BUF_GAIN_1X); break;
 895:.\mem1.c      ****                         case 2: ADC_DelSig_1_SetBufferGain(ADC_DelSig_1_BUF_GAIN_2X); break;
 896:.\mem1.c      ****                         case 4: ADC_DelSig_1_SetBufferGain(ADC_DelSig_1_BUF_GAIN_4X); break;
 897:.\mem1.c      ****                         case 8: ADC_DelSig_1_SetBufferGain(ADC_DelSig_1_BUF_GAIN_8X); break;
 898:.\mem1.c      ****                     }
 899:.\mem1.c      ****                     break;
 900:.\mem1.c      ****                 case 0x03: ADC_DelSig_1_StartConvert(); break;
 901:.\mem1.c      ****                 case 0x04: ADC_DelSig_1_StopConvert(); break;
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cc7rr7YM.s 			page 35


 902:.\mem1.c      ****                 case 0x07: *result = ADC_DelSig_1_IsEndConversion(ADC_DelSig_1_RETURN_STATUS); retu
 903:.\mem1.c      ****                 case 0x0A: *result = ADC_DelSig_1_GetResult32(); return_flag = 1; break;
 904:.\mem1.c      ****                 case 0x0D: *result = ADC_DelSig_1_Read32(); return_flag = 1; break;
 905:.\mem1.c      ****                 case 0x0E: ADC_DelSig_1_SetOffset(val); break;
 906:.\mem1.c      ****                 case 0x0F: ADC_DelSig_1_SetGain(val); break;
 907:.\mem1.c      ****                 case 0x10: *result = ADC_DelSig_1_CountsTo_uVolts(val); return_flag = 1; break;
 908:.\mem1.c      ****                 case 0x14: ADC_DelSig_1_Sleep(); break;
 909:.\mem1.c      ****                 case 0x15: ADC_DelSig_1_Wakeup(); break;
 910:.\mem1.c      ****                     
 911:.\mem1.c      ****                         
 912:.\mem1.c      ****             }
 913:.\mem1.c      ****             
 914:.\mem1.c      ****             return return_flag;
 915:.\mem1.c      ****         }
 916:.\mem1.c      ****     #endif
 917:.\mem1.c      ****     
 918:.\mem1.c      **** /****************************************************************************************//**
 919:.\mem1.c      **** *  @brief Contains usage scenarios of the first SAR ADC for use by a Master device. 
 920:.\mem1.c      **** *
 921:.\mem1.c      **** *  @param cmd: 8-bit number describing a desired usage of a function associated 
 922:.\mem1.c      **** *              with the first SAR ADC
 923:.\mem1.c      **** *  @param val: 16-bit number containing a value that is to be written to that 
 924:.\mem1.c      **** *              function, or modify the component's operation, if applicable.
 925:.\mem1.c      **** *
 926:.\mem1.c      **** *********************************************************************************************/
 927:.\mem1.c      ****     
 928:.\mem1.c      ****     #ifdef CY_ADC_SAR_ADC_SAR_1_H
 929:.\mem1.c      ****         bool SAR0_ADC_Control(uint8 cmd, uint16 val, uint32 *result)
 930:.\mem1.c      ****         {
 931:.\mem1.c      ****             bool return_flag = 0;
 932:.\mem1.c      ****             switch(cmd)
 933:.\mem1.c      ****             {
 934:.\mem1.c      ****                 //start_adc
 935:.\mem1.c      ****                 case 0x00: ADC_SAR_1_Start(); break;
 936:.\mem1.c      ****                 case 0x01: ADC_SAR_1_Stop(); break;
 937:.\mem1.c      ****                 case 0x03: 
 938:.\mem1.c      ****                     switch(val)
 939:.\mem1.c      ****                     {
 940:.\mem1.c      ****                         case 8: ADC_SAR_1_SetResolution(ADC_SAR_1__BITS_8); break;
 941:.\mem1.c      ****                         case 10: ADC_SAR_1_SetResolution(ADC_SAR_1__BITS_10); break;
 942:.\mem1.c      ****                         case 12: ADC_SAR_1_SetResolution(ADC_SAR_1__BITS_12); break;
 943:.\mem1.c      ****                     }
 944:.\mem1.c      ****                     break;
 945:.\mem1.c      ****                 case 0x04: ADC_SAR_1_StartConvert(); break;
 946:.\mem1.c      ****                 case 0x05: ADC_SAR_1_StopConvert(); break;
 947:.\mem1.c      ****                 case 0x08: *result = ADC_SAR_1_IsEndConversion(ADC_SAR_1_RETURN_STATUS); return_fla
 948:.\mem1.c      ****                 case 0x0A: *result = ADC_SAR_1_GetResult16(); return_flag = 1; break;
 949:.\mem1.c      ****                 case 0x0B: ADC_SAR_1_SetOffset(val); break;
 950:.\mem1.c      ****                 case 0x0C: ADC_SAR_1_SetGain(val); break;
 951:.\mem1.c      ****                 case 0x0D: *result = ADC_SAR_1_CountsTo_uVolts(val); return_flag = 1; break;
 952:.\mem1.c      ****                 case 0x10: ADC_SAR_1_Sleep(); break;
 953:.\mem1.c      ****                 case 0x11: ADC_SAR_1_Wakeup(); break;       
 954:.\mem1.c      ****             }
 955:.\mem1.c      ****             
 956:.\mem1.c      ****             return return_flag;
 957:.\mem1.c      ****         }
 958:.\mem1.c      ****      #endif
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cc7rr7YM.s 			page 36


 959:.\mem1.c      **** /****************************************************************************************//**
 960:.\mem1.c      **** *  @brief Contains usage scenarios of the second SAR ADC for use by a Master device. 
 961:.\mem1.c      **** *
 962:.\mem1.c      **** *  @param cmd: 8-bit number describing a desired usage of a function associated 
 963:.\mem1.c      **** *              with the second SAR ADC
 964:.\mem1.c      **** *  @param val: 16-bit number containing a value that is to be written to that 
 965:.\mem1.c      **** *              function, or modify the component's operation, if applicable.
 966:.\mem1.c      **** *
 967:.\mem1.c      **** *********************************************************************************************/
 968:.\mem1.c      ****     #ifdef CY_ADC_SAR_ADC_SAR_2_H
 969:.\mem1.c      ****          bool SAR1_ADC_Control(uint8 cmd, uint16 val, uint32 *result)
 970:.\mem1.c      ****         {
 971:.\mem1.c      ****             bool return_flag = 0;
 972:.\mem1.c      ****             switch(cmd)
 973:.\mem1.c      ****             {
 974:.\mem1.c      ****                 case 0x00: ADC_SAR_2_Start(); break;
 975:.\mem1.c      ****                 case 0x01: ADC_SAR_2_Stop(); break;
 976:.\mem1.c      ****                 case 0x03: 
 977:.\mem1.c      ****                     switch(val)
 978:.\mem1.c      ****                     {
 979:.\mem1.c      ****                         case 8: ADC_SAR_2_SetResolution(ADC_SAR_2__BITS_8); break;
 980:.\mem1.c      ****                         case 10: ADC_SAR_2_SetResolution(ADC_SAR_2__BITS_10); break;
 981:.\mem1.c      ****                         case 12: ADC_SAR_2_SetResolution(ADC_SAR_2__BITS_12); break;
 982:.\mem1.c      ****                     }
 983:.\mem1.c      ****                     break;
 984:.\mem1.c      ****                 case 0x04: ADC_SAR_2_StartConvert(); break;
 985:.\mem1.c      ****                 case 0x05: ADC_SAR_2_StopConvert(); break;
 986:.\mem1.c      ****                 case 0x08: *result = ADC_SAR_2_IsEndConversion(ADC_SAR_2_RETURN_STATUS); return_fla
 987:.\mem1.c      ****                 case 0x0A: *result = ADC_SAR_2_GetResult16(); return_flag = 1; break;
 988:.\mem1.c      ****                 case 0x0B: ADC_SAR_2_SetOffset(val); break;
 989:.\mem1.c      ****                 case 0x0C: ADC_SAR_2_SetGain(val); break;
 990:.\mem1.c      ****                 case 0x0D: *result = ADC_SAR_2_CountsTo_uVolts(val); return_flag = 1; break;//Chang
 991:.\mem1.c      ****                 case 0x10: ADC_SAR_2_Sleep(); break;
 992:.\mem1.c      ****                 case 0x11: ADC_SAR_2_Wakeup(); break;     
 993:.\mem1.c      ****                 
 994:.\mem1.c      ****             }
 995:.\mem1.c      ****             return return_flag;
 996:.\mem1.c      ****         }
 997:.\mem1.c      ****     #endif
 998:.\mem1.c      ****     
 999:.\mem1.c      **** /****************************************************************************************//**
1000:.\mem1.c      **** *  @brief Contains usage scenarios of the first VDAC for use by a Master device. 
1001:.\mem1.c      **** *
1002:.\mem1.c      **** *  @param cmd: 8-bit number describing a desired usage of a function associated 
1003:.\mem1.c      **** *              with the first VDAC
1004:.\mem1.c      **** *  @param val: 16-bit number containing a value that is to be written to that 
1005:.\mem1.c      **** *              function, or modify the component's operation, if applicable.
1006:.\mem1.c      **** *
1007:.\mem1.c      **** *********************************************************************************************/
1008:.\mem1.c      ****     
1009:.\mem1.c      ****     #ifdef CY_VDAC8_VDAC8_1_H
1010:.\mem1.c      ****         bool VDAC0_Control(uint8 cmd, uint16 val, uint32 *result)
1011:.\mem1.c      ****         {
 1037              		.loc 1 1011 0
 1038              		.cfi_startproc
 1039              		@ args = 0, pretend = 0, frame = 16
 1040              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cc7rr7YM.s 			page 37


 1041 0000 80B5     		push	{r7, lr}
 1042              		.cfi_def_cfa_offset 8
 1043              		.cfi_offset 7, -8
 1044              		.cfi_offset 14, -4
 1045 0002 84B0     		sub	sp, sp, #16
 1046              		.cfi_def_cfa_offset 24
 1047 0004 00AF     		add	r7, sp, #0
 1048              		.cfi_def_cfa_register 7
 1049 0006 0346     		mov	r3, r0
 1050 0008 3A60     		str	r2, [r7]
 1051 000a FB71     		strb	r3, [r7, #7]
 1052 000c 0B46     		mov	r3, r1	@ movhi
 1053 000e BB80     		strh	r3, [r7, #4]	@ movhi
1012:.\mem1.c      ****             bool return_flag = 0;
 1054              		.loc 1 1012 0
 1055 0010 0023     		movs	r3, #0
 1056 0012 FB73     		strb	r3, [r7, #15]
1013:.\mem1.c      ****             switch(cmd)
 1057              		.loc 1 1013 0
 1058 0014 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1059 0016 062B     		cmp	r3, #6
 1060 0018 40D8     		bhi	.L90
 1061 001a 01A2     		adr	r2, .L92
 1062 001c 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 1063              		.p2align 2
 1064              	.L92:
 1065 0020 3D000000 		.word	.L91+1
 1066 0024 43000000 		.word	.L93+1
 1067 0028 49000000 		.word	.L94+1
 1068 002c 67000000 		.word	.L95+1
 1069 0030 85000000 		.word	.L96+1
 1070 0034 91000000 		.word	.L97+1
 1071 0038 97000000 		.word	.L98+1
 1072              		.p2align 1
 1073              	.L91:
1014:.\mem1.c      ****             {
1015:.\mem1.c      ****                 case 0x00: VDAC8_1_Start(); break;
 1074              		.loc 1 1015 0
 1075 003c FFF7FEFF 		bl	VDAC8_1_Start
 1076 0040 2CE0     		b	.L90
 1077              	.L93:
1016:.\mem1.c      ****                 case 0x01: VDAC8_1_Stop(); break;
 1078              		.loc 1 1016 0
 1079 0042 FFF7FEFF 		bl	VDAC8_1_Stop
 1080 0046 29E0     		b	.L90
 1081              	.L94:
1017:.\mem1.c      ****                 case 0x02: 
1018:.\mem1.c      ****                     switch(val)
 1082              		.loc 1 1018 0
 1083 0048 BB88     		ldrh	r3, [r7, #4]
 1084 004a 002B     		cmp	r3, #0
 1085 004c 02D0     		beq	.L100
 1086 004e 012B     		cmp	r3, #1
 1087 0050 04D0     		beq	.L101
1019:.\mem1.c      ****                     {
1020:.\mem1.c      ****                     case 0: VDAC8_1_SetSpeed(VDAC8_1_LOWSPEED); break;
1021:.\mem1.c      ****                     case 1: VDAC8_1_SetSpeed(VDAC8_1_HIGHSPEED); break;
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cc7rr7YM.s 			page 38


1022:.\mem1.c      ****                     }
1023:.\mem1.c      ****                     break;
 1088              		.loc 1 1023 0
 1089 0052 23E0     		b	.L90
 1090              	.L100:
1020:.\mem1.c      ****                     case 1: VDAC8_1_SetSpeed(VDAC8_1_HIGHSPEED); break;
 1091              		.loc 1 1020 0
 1092 0054 0020     		movs	r0, #0
 1093 0056 FFF7FEFF 		bl	VDAC8_1_SetSpeed
 1094 005a 03E0     		b	.L99
 1095              	.L101:
1021:.\mem1.c      ****                     }
 1096              		.loc 1 1021 0
 1097 005c 0220     		movs	r0, #2
 1098 005e FFF7FEFF 		bl	VDAC8_1_SetSpeed
 1099 0062 00BF     		nop
 1100              	.L99:
 1101              		.loc 1 1023 0
 1102 0064 1AE0     		b	.L90
 1103              	.L95:
1024:.\mem1.c      ****                 case 0x03:
1025:.\mem1.c      ****                     switch(val)
 1104              		.loc 1 1025 0
 1105 0066 BB88     		ldrh	r3, [r7, #4]
 1106 0068 002B     		cmp	r3, #0
 1107 006a 02D0     		beq	.L103
 1108 006c 012B     		cmp	r3, #1
 1109 006e 04D0     		beq	.L104
1026:.\mem1.c      ****                     {
1027:.\mem1.c      ****                     case 0: VDAC8_1_SetRange(VDAC8_1_RANGE_1V); break;
1028:.\mem1.c      ****                     case 1: VDAC8_1_SetRange(VDAC8_1_RANGE_4V); break;
1029:.\mem1.c      ****                     }
1030:.\mem1.c      ****                     break;
 1110              		.loc 1 1030 0
 1111 0070 14E0     		b	.L90
 1112              	.L103:
1027:.\mem1.c      ****                     case 1: VDAC8_1_SetRange(VDAC8_1_RANGE_4V); break;
 1113              		.loc 1 1027 0
 1114 0072 0020     		movs	r0, #0
 1115 0074 FFF7FEFF 		bl	VDAC8_1_SetRange
 1116 0078 03E0     		b	.L102
 1117              	.L104:
1028:.\mem1.c      ****                     }
 1118              		.loc 1 1028 0
 1119 007a 0420     		movs	r0, #4
 1120 007c FFF7FEFF 		bl	VDAC8_1_SetRange
 1121 0080 00BF     		nop
 1122              	.L102:
 1123              		.loc 1 1030 0
 1124 0082 0BE0     		b	.L90
 1125              	.L96:
1031:.\mem1.c      ****                 case 0x04: VDAC8_1_SetValue(val); break; 
 1126              		.loc 1 1031 0
 1127 0084 BB88     		ldrh	r3, [r7, #4]	@ movhi
 1128 0086 DBB2     		uxtb	r3, r3
 1129 0088 1846     		mov	r0, r3
 1130 008a FFF7FEFF 		bl	VDAC8_1_SetValue
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cc7rr7YM.s 			page 39


 1131 008e 05E0     		b	.L90
 1132              	.L97:
1032:.\mem1.c      ****                 case 0x05: VDAC8_1_Sleep(); break;
 1133              		.loc 1 1032 0
 1134 0090 FFF7FEFF 		bl	VDAC8_1_Sleep
 1135 0094 02E0     		b	.L90
 1136              	.L98:
1033:.\mem1.c      ****                 case 0x06: VDAC8_1_Wakeup(); break;     
 1137              		.loc 1 1033 0
 1138 0096 FFF7FEFF 		bl	VDAC8_1_Wakeup
 1139 009a 00BF     		nop
 1140              	.L90:
1034:.\mem1.c      ****                 
1035:.\mem1.c      ****             }
1036:.\mem1.c      ****             
1037:.\mem1.c      ****             return return_flag;
 1141              		.loc 1 1037 0
 1142 009c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
1038:.\mem1.c      ****         }
 1143              		.loc 1 1038 0
 1144 009e 1846     		mov	r0, r3
 1145 00a0 1037     		adds	r7, r7, #16
 1146              		.cfi_def_cfa_offset 8
 1147 00a2 BD46     		mov	sp, r7
 1148              		.cfi_def_cfa_register 13
 1149              		@ sp needed
 1150 00a4 80BD     		pop	{r7, pc}
 1151              		.cfi_endproc
 1152              	.LFE58:
 1153              		.size	VDAC0_Control, .-VDAC0_Control
 1154 00a6 00BF     		.section	.text.IDAC0_Control,"ax",%progbits
 1155              		.align	2
 1156              		.global	IDAC0_Control
 1157              		.thumb
 1158              		.thumb_func
 1159              		.type	IDAC0_Control, %function
 1160              	IDAC0_Control:
 1161              	.LFB59:
1039:.\mem1.c      ****     #endif
1040:.\mem1.c      ****     
1041:.\mem1.c      **** /****************************************************************************************//**
1042:.\mem1.c      **** *  @brief Contains usage scenarios of the second VDAC for use by a Master device. 
1043:.\mem1.c      **** *
1044:.\mem1.c      **** *  @param cmd: 8-bit number describing a desired usage of a function associated 
1045:.\mem1.c      **** *              with the second VDAC
1046:.\mem1.c      **** *  @param val: 16-bit number containing a value that is to be written to that 
1047:.\mem1.c      **** *              function, or modify the component's operation, if applicable.
1048:.\mem1.c      **** *
1049:.\mem1.c      **** *********************************************************************************************/
1050:.\mem1.c      ****     #ifdef CY_VDAC8_VDAC8_2_H
1051:.\mem1.c      ****         bool VDAC1_Control(uint8 cmd, uint16 val, uint32 *result)
1052:.\mem1.c      ****         {
1053:.\mem1.c      ****             bool return_flag = 0;
1054:.\mem1.c      ****                 switch(cmd)
1055:.\mem1.c      ****                 {
1056:.\mem1.c      ****                     case 0x00: VDAC8_2_Start(); break;
1057:.\mem1.c      ****                     case 0x01: VDAC8_2_Stop(); break;
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cc7rr7YM.s 			page 40


1058:.\mem1.c      ****                     case 0x02: 
1059:.\mem1.c      ****                         switch(val)
1060:.\mem1.c      ****                         {
1061:.\mem1.c      ****                         case 0: VDAC8_2_SetSpeed(VDAC8_2_LOWSPEED); break;
1062:.\mem1.c      ****                         case 1: VDAC8_2_SetSpeed(VDAC8_2_HIGHSPEED); break;
1063:.\mem1.c      ****                         }
1064:.\mem1.c      ****                         break;
1065:.\mem1.c      ****                     case 0x03:
1066:.\mem1.c      ****                         switch(val)
1067:.\mem1.c      ****                         {
1068:.\mem1.c      ****                         case 0: VDAC8_2_SetRange(VDAC8_2_RANGE_1V); break;
1069:.\mem1.c      ****                         case 1: VDAC8_2_SetRange(VDAC8_2_RANGE_4V); break;
1070:.\mem1.c      ****                         }
1071:.\mem1.c      ****                         break;
1072:.\mem1.c      ****                     case 0x04: VDAC8_2_SetValue(val); break; 
1073:.\mem1.c      ****                     case 0x05: VDAC8_2_Sleep(); break;
1074:.\mem1.c      ****                     case 0x06: VDAC8_2_Wakeup(); break;     
1075:.\mem1.c      ****                     
1076:.\mem1.c      ****                 }
1077:.\mem1.c      ****             return return_flag;
1078:.\mem1.c      ****         }
1079:.\mem1.c      ****     #endif
1080:.\mem1.c      ****     
1081:.\mem1.c      **** /****************************************************************************************//**
1082:.\mem1.c      **** *  @brief Contains usage scenarios of the first IDAC for use by a Master device. 
1083:.\mem1.c      **** *
1084:.\mem1.c      **** *  @param cmd: 8-bit number describing a desired usage of a function associated 
1085:.\mem1.c      **** *              with the first IDAC
1086:.\mem1.c      **** *  @param val: 16-bit number containing a value that is to be written to that 
1087:.\mem1.c      **** *              function, or modify the component's operation, if applicable.
1088:.\mem1.c      **** *
1089:.\mem1.c      **** *********************************************************************************************/
1090:.\mem1.c      ****     
1091:.\mem1.c      ****     #ifdef CY_IDAC8_IDAC8_1_H
1092:.\mem1.c      ****         bool IDAC0_Control(uint8 cmd, uint16 val, uint32 *result)
1093:.\mem1.c      ****             {
 1162              		.loc 1 1093 0
 1163              		.cfi_startproc
 1164              		@ args = 0, pretend = 0, frame = 16
 1165              		@ frame_needed = 1, uses_anonymous_args = 0
 1166 0000 80B5     		push	{r7, lr}
 1167              		.cfi_def_cfa_offset 8
 1168              		.cfi_offset 7, -8
 1169              		.cfi_offset 14, -4
 1170 0002 84B0     		sub	sp, sp, #16
 1171              		.cfi_def_cfa_offset 24
 1172 0004 00AF     		add	r7, sp, #0
 1173              		.cfi_def_cfa_register 7
 1174 0006 0346     		mov	r3, r0
 1175 0008 3A60     		str	r2, [r7]
 1176 000a FB71     		strb	r3, [r7, #7]
 1177 000c 0B46     		mov	r3, r1	@ movhi
 1178 000e BB80     		strh	r3, [r7, #4]	@ movhi
1094:.\mem1.c      ****                 bool return_flag = 0;
 1179              		.loc 1 1094 0
 1180 0010 0023     		movs	r3, #0
 1181 0012 FB73     		strb	r3, [r7, #15]
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cc7rr7YM.s 			page 41


1095:.\mem1.c      ****                     switch(cmd)
 1182              		.loc 1 1095 0
 1183 0014 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1184 0016 072B     		cmp	r3, #7
 1185 0018 57D8     		bhi	.L107
 1186 001a 01A2     		adr	r2, .L109
 1187 001c 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 1188              		.p2align 2
 1189              	.L109:
 1190 0020 41000000 		.word	.L108+1
 1191 0024 47000000 		.word	.L110+1
 1192 0028 4D000000 		.word	.L111+1
 1193 002c 6B000000 		.word	.L112+1
 1194 0030 89000000 		.word	.L113+1
 1195 0034 B3000000 		.word	.L114+1
 1196 0038 BF000000 		.word	.L115+1
 1197 003c C5000000 		.word	.L116+1
 1198              		.p2align 1
 1199              	.L108:
1096:.\mem1.c      ****                     {
1097:.\mem1.c      ****                         case 0x00: IDAC8_1_Start(); break;
 1200              		.loc 1 1097 0
 1201 0040 FFF7FEFF 		bl	IDAC8_1_Start
 1202 0044 41E0     		b	.L107
 1203              	.L110:
1098:.\mem1.c      ****                         case 0x01: IDAC8_1_Stop(); break;
 1204              		.loc 1 1098 0
 1205 0046 FFF7FEFF 		bl	IDAC8_1_Stop
 1206 004a 3EE0     		b	.L107
 1207              	.L111:
1099:.\mem1.c      ****                         case 0x02: 
1100:.\mem1.c      ****                             switch(val)
 1208              		.loc 1 1100 0
 1209 004c BB88     		ldrh	r3, [r7, #4]
 1210 004e 002B     		cmp	r3, #0
 1211 0050 02D0     		beq	.L118
 1212 0052 012B     		cmp	r3, #1
 1213 0054 04D0     		beq	.L119
1101:.\mem1.c      ****                             {
1102:.\mem1.c      ****                                 case 0: IDAC8_1_SetSpeed(IDAC8_1_LOWSPEED); break;
1103:.\mem1.c      ****                                 case 1: IDAC8_1_SetSpeed(IDAC8_1_HIGHSPEED); break;
1104:.\mem1.c      ****                             }
1105:.\mem1.c      ****                             break;
 1214              		.loc 1 1105 0
 1215 0056 38E0     		b	.L107
 1216              	.L118:
1102:.\mem1.c      ****                                 case 1: IDAC8_1_SetSpeed(IDAC8_1_HIGHSPEED); break;
 1217              		.loc 1 1102 0
 1218 0058 0020     		movs	r0, #0
 1219 005a FFF7FEFF 		bl	IDAC8_1_SetSpeed
 1220 005e 03E0     		b	.L117
 1221              	.L119:
1103:.\mem1.c      ****                             }
 1222              		.loc 1 1103 0
 1223 0060 0220     		movs	r0, #2
 1224 0062 FFF7FEFF 		bl	IDAC8_1_SetSpeed
 1225 0066 00BF     		nop
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cc7rr7YM.s 			page 42


 1226              	.L117:
 1227              		.loc 1 1105 0
 1228 0068 2FE0     		b	.L107
 1229              	.L112:
1106:.\mem1.c      ****                         case 0x03:
1107:.\mem1.c      ****                             switch(val)
 1230              		.loc 1 1107 0
 1231 006a BB88     		ldrh	r3, [r7, #4]
 1232 006c 002B     		cmp	r3, #0
 1233 006e 02D0     		beq	.L121
 1234 0070 012B     		cmp	r3, #1
 1235 0072 04D0     		beq	.L122
1108:.\mem1.c      ****                             {
1109:.\mem1.c      ****                                 case 0: IDAC8_1_SetPolarity(IDAC8_1_SOURCE); break;
1110:.\mem1.c      ****                                 case 1: IDAC8_1_SetPolarity(IDAC8_1_SINK); break;
1111:.\mem1.c      ****                             }
1112:.\mem1.c      ****                             break;
 1236              		.loc 1 1112 0
 1237 0074 29E0     		b	.L107
 1238              	.L121:
1109:.\mem1.c      ****                                 case 1: IDAC8_1_SetPolarity(IDAC8_1_SINK); break;
 1239              		.loc 1 1109 0
 1240 0076 0020     		movs	r0, #0
 1241 0078 FFF7FEFF 		bl	IDAC8_1_SetPolarity
 1242 007c 03E0     		b	.L120
 1243              	.L122:
1110:.\mem1.c      ****                             }
 1244              		.loc 1 1110 0
 1245 007e 0420     		movs	r0, #4
 1246 0080 FFF7FEFF 		bl	IDAC8_1_SetPolarity
 1247 0084 00BF     		nop
 1248              	.L120:
 1249              		.loc 1 1112 0
 1250 0086 20E0     		b	.L107
 1251              	.L113:
1113:.\mem1.c      ****                         case 0x04:
1114:.\mem1.c      ****                             switch(val)
 1252              		.loc 1 1114 0
 1253 0088 BB88     		ldrh	r3, [r7, #4]
 1254 008a 012B     		cmp	r3, #1
 1255 008c 08D0     		beq	.L124
 1256 008e 022B     		cmp	r3, #2
 1257 0090 0AD0     		beq	.L125
 1258 0092 002B     		cmp	r3, #0
 1259 0094 00D0     		beq	.L126
1115:.\mem1.c      ****                             {
1116:.\mem1.c      ****                                 case 0: IDAC8_1_SetRange(IDAC8_1_RANGE_32uA); break;
1117:.\mem1.c      ****                                 case 1: IDAC8_1_SetRange(IDAC8_1_RANGE_255uA); break;
1118:.\mem1.c      ****                                 case 2: IDAC8_1_SetRange(IDAC8_1_RANGE_2mA); break;
1119:.\mem1.c      ****                             }
1120:.\mem1.c      ****                             break;
 1260              		.loc 1 1120 0
 1261 0096 18E0     		b	.L107
 1262              	.L126:
1116:.\mem1.c      ****                                 case 1: IDAC8_1_SetRange(IDAC8_1_RANGE_255uA); break;
 1263              		.loc 1 1116 0
 1264 0098 0020     		movs	r0, #0
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cc7rr7YM.s 			page 43


 1265 009a FFF7FEFF 		bl	IDAC8_1_SetRange
 1266 009e 07E0     		b	.L123
 1267              	.L124:
1117:.\mem1.c      ****                                 case 2: IDAC8_1_SetRange(IDAC8_1_RANGE_2mA); break;
 1268              		.loc 1 1117 0
 1269 00a0 0420     		movs	r0, #4
 1270 00a2 FFF7FEFF 		bl	IDAC8_1_SetRange
 1271 00a6 03E0     		b	.L123
 1272              	.L125:
1118:.\mem1.c      ****                             }
 1273              		.loc 1 1118 0
 1274 00a8 0820     		movs	r0, #8
 1275 00aa FFF7FEFF 		bl	IDAC8_1_SetRange
 1276 00ae 00BF     		nop
 1277              	.L123:
 1278              		.loc 1 1120 0
 1279 00b0 0BE0     		b	.L107
 1280              	.L114:
1121:.\mem1.c      ****                         case 0x05: IDAC8_1_SetValue(val); break;
 1281              		.loc 1 1121 0
 1282 00b2 BB88     		ldrh	r3, [r7, #4]	@ movhi
 1283 00b4 DBB2     		uxtb	r3, r3
 1284 00b6 1846     		mov	r0, r3
 1285 00b8 FFF7FEFF 		bl	IDAC8_1_SetValue
 1286 00bc 05E0     		b	.L107
 1287              	.L115:
1122:.\mem1.c      ****                         case 0x06: IDAC8_1_Sleep(); break;
 1288              		.loc 1 1122 0
 1289 00be FFF7FEFF 		bl	IDAC8_1_Sleep
 1290 00c2 02E0     		b	.L107
 1291              	.L116:
1123:.\mem1.c      ****                         case 0x07: IDAC8_1_Wakeup(); break;     
 1292              		.loc 1 1123 0
 1293 00c4 FFF7FEFF 		bl	IDAC8_1_Wakeup
 1294 00c8 00BF     		nop
 1295              	.L107:
1124:.\mem1.c      ****                         
1125:.\mem1.c      ****                     }
1126:.\mem1.c      ****                 return return_flag;
 1296              		.loc 1 1126 0
 1297 00ca FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
1127:.\mem1.c      ****             }
 1298              		.loc 1 1127 0
 1299 00cc 1846     		mov	r0, r3
 1300 00ce 1037     		adds	r7, r7, #16
 1301              		.cfi_def_cfa_offset 8
 1302 00d0 BD46     		mov	sp, r7
 1303              		.cfi_def_cfa_register 13
 1304              		@ sp needed
 1305 00d2 80BD     		pop	{r7, pc}
 1306              		.cfi_endproc
 1307              	.LFE59:
 1308              		.size	IDAC0_Control, .-IDAC0_Control
 1309              		.section	.text.WAVEDAC_Control,"ax",%progbits
 1310              		.align	2
 1311              		.global	WAVEDAC_Control
 1312              		.thumb
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cc7rr7YM.s 			page 44


 1313              		.thumb_func
 1314              		.type	WAVEDAC_Control, %function
 1315              	WAVEDAC_Control:
 1316              	.LFB60:
1128:.\mem1.c      ****     #endif
1129:.\mem1.c      ****     
1130:.\mem1.c      **** /****************************************************************************************//**
1131:.\mem1.c      **** *  @brief Contains usage scenarios of the second IDAC for use by a Master device. 
1132:.\mem1.c      **** *
1133:.\mem1.c      **** *  @param cmd: 8-bit number describing a desired usage of a function associated 
1134:.\mem1.c      **** *              with the second IDAC
1135:.\mem1.c      **** *  @param val: 16-bit number containing a value that is to be written to that 
1136:.\mem1.c      **** *              function, or modify the component's operation, if applicable.
1137:.\mem1.c      **** *
1138:.\mem1.c      **** *********************************************************************************************/
1139:.\mem1.c      ****     
1140:.\mem1.c      ****     #ifdef CY_IDAC8_IDAC8_2_H
1141:.\mem1.c      ****         bool IDAC1_Control(uint8 cmd, uint16 val, uint32 *result)
1142:.\mem1.c      ****         {
1143:.\mem1.c      ****             bool return_flag = 0;
1144:.\mem1.c      ****                 switch(cmd)
1145:.\mem1.c      ****                 {
1146:.\mem1.c      ****                     case 0x00: IDAC8_2_Start(); break;
1147:.\mem1.c      ****                     case 0x01: IDAC8_2_Stop(); break;
1148:.\mem1.c      ****                     case 0x02: 
1149:.\mem1.c      ****                             switch(val)
1150:.\mem1.c      ****                             {
1151:.\mem1.c      ****                             case 0: IDAC8_2_SetSpeed(IDAC8_2_LOWSPEED); break;
1152:.\mem1.c      ****                             case 1: IDAC8_2_SetSpeed(IDAC8_2_HIGHSPEED); break;
1153:.\mem1.c      ****                             }
1154:.\mem1.c      ****                             break;
1155:.\mem1.c      ****                         case 0x03:
1156:.\mem1.c      ****                             switch(val)
1157:.\mem1.c      ****                             {
1158:.\mem1.c      ****                             case 0: IDAC8_2_SetPolarity(IDAC8_2_SOURCE); break;
1159:.\mem1.c      ****                             case 1: IDAC8_2_SetPolarity(IDAC8_2_SINK); break;
1160:.\mem1.c      ****                             }
1161:.\mem1.c      ****                             break;
1162:.\mem1.c      ****                         case 0x04:
1163:.\mem1.c      ****                             switch(val)
1164:.\mem1.c      ****                             {
1165:.\mem1.c      ****                             case 0: IDAC8_2_SetRange(IDAC8_2_RANGE_32uA); break;
1166:.\mem1.c      ****                             case 1: IDAC8_2_SetRange(IDAC8_2_RANGE_255uA); break;
1167:.\mem1.c      ****                             case 2: IDAC8_2_SetRange(IDAC8_2_RANGE_2mA); break;
1168:.\mem1.c      ****                             }
1169:.\mem1.c      ****                             break;
1170:.\mem1.c      ****                     case 0x05: IDAC8_2_SetValue(val); break;
1171:.\mem1.c      ****                     case 0x06: IDAC8_2_Sleep(); break;
1172:.\mem1.c      ****                     case 0x07: IDAC8_2_Wakeup(); break;     
1173:.\mem1.c      ****                     
1174:.\mem1.c      ****                 }
1175:.\mem1.c      ****                 return return_flag;
1176:.\mem1.c      ****         }
1177:.\mem1.c      ****     #endif
1178:.\mem1.c      ****     
1179:.\mem1.c      **** /****************************************************************************************//**
1180:.\mem1.c      **** *  @brief Contains usage scenarios of the WaveDAC8 for use by a Master device. 
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cc7rr7YM.s 			page 45


1181:.\mem1.c      **** *
1182:.\mem1.c      **** *  @param cmd: 8-bit number describing a desired usage of a function associated 
1183:.\mem1.c      **** *              with the WaveDAC8
1184:.\mem1.c      **** *  @param val: 16-bit number containing a value that is to be written to that 
1185:.\mem1.c      **** *              function, or modify the component's operation, if applicable.
1186:.\mem1.c      **** *
1187:.\mem1.c      **** *********************************************************************************************/
1188:.\mem1.c      ****     
1189:.\mem1.c      ****     #ifdef CY_WaveDAC8_WaveDAC8_1_H
1190:.\mem1.c      ****         bool WAVEDAC_Control(uint8 cmd, uint16 val, uint8 waveType, uint8 amp, uint8 dcB, uint32 *r
1191:.\mem1.c      ****         {
 1317              		.loc 1 1191 0
 1318              		.cfi_startproc
 1319              		@ args = 8, pretend = 0, frame = 16
 1320              		@ frame_needed = 1, uses_anonymous_args = 0
 1321 0000 90B5     		push	{r4, r7, lr}
 1322              		.cfi_def_cfa_offset 12
 1323              		.cfi_offset 4, -12
 1324              		.cfi_offset 7, -8
 1325              		.cfi_offset 14, -4
 1326 0002 85B0     		sub	sp, sp, #20
 1327              		.cfi_def_cfa_offset 32
 1328 0004 00AF     		add	r7, sp, #0
 1329              		.cfi_def_cfa_register 7
 1330 0006 0446     		mov	r4, r0
 1331 0008 0846     		mov	r0, r1
 1332 000a 1146     		mov	r1, r2
 1333 000c 1A46     		mov	r2, r3
 1334 000e 2346     		mov	r3, r4
 1335 0010 FB71     		strb	r3, [r7, #7]
 1336 0012 0346     		mov	r3, r0	@ movhi
 1337 0014 BB80     		strh	r3, [r7, #4]	@ movhi
 1338 0016 0B46     		mov	r3, r1
 1339 0018 BB71     		strb	r3, [r7, #6]
 1340 001a 1346     		mov	r3, r2
 1341 001c FB70     		strb	r3, [r7, #3]
1192:.\mem1.c      ****             bool return_flag = 0;
 1342              		.loc 1 1192 0
 1343 001e 0023     		movs	r3, #0
 1344 0020 FB73     		strb	r3, [r7, #15]
1193:.\mem1.c      ****             
1194:.\mem1.c      ****             switch(cmd)
 1345              		.loc 1 1194 0
 1346 0022 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1347 0024 092B     		cmp	r3, #9
 1348 0026 3AD0     		beq	.L130
 1349 0028 092B     		cmp	r3, #9
 1350 002a 0BDC     		bgt	.L131
 1351 002c 012B     		cmp	r3, #1
 1352 002e 1AD0     		beq	.L132
 1353 0030 012B     		cmp	r3, #1
 1354 0032 02DC     		bgt	.L133
 1355 0034 002B     		cmp	r3, #0
 1356 0036 13D0     		beq	.L134
 1357 0038 53E0     		b	.L129
 1358              	.L133:
 1359 003a 042B     		cmp	r3, #4
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cc7rr7YM.s 			page 46


 1360 003c 16D0     		beq	.L135
 1361 003e 072B     		cmp	r3, #7
 1362 0040 1ED0     		beq	.L136
 1363 0042 4EE0     		b	.L129
 1364              	.L131:
 1365 0044 FD2B     		cmp	r3, #253
 1366 0046 36D0     		beq	.L137
 1367 0048 FD2B     		cmp	r3, #253
 1368 004a 04DC     		bgt	.L138
 1369 004c 0B2B     		cmp	r3, #11
 1370 004e 2CD0     		beq	.L139
 1371 0050 0C2B     		cmp	r3, #12
 1372 0052 2DD0     		beq	.L140
 1373 0054 45E0     		b	.L129
 1374              	.L138:
 1375 0056 FE2B     		cmp	r3, #254
 1376 0058 30D0     		beq	.L141
 1377 005a FF2B     		cmp	r3, #255
 1378 005c 31D0     		beq	.L142
 1379 005e 40E0     		b	.L129
 1380              	.L134:
1195:.\mem1.c      ****                 {
1196:.\mem1.c      ****                     case 0x00: WaveDAC8_1_Start(); break;
 1381              		.loc 1 1196 0
 1382 0060 FFF7FEFF 		bl	WaveDAC8_1_Start
 1383 0064 3DE0     		b	.L129
 1384              	.L132:
1197:.\mem1.c      ****                     case 0x01: WaveDAC8_1_Stop(); break;
 1385              		.loc 1 1197 0
 1386 0066 FFF7FEFF 		bl	WaveDAC8_1_Stop
 1387 006a 3AE0     		b	.L129
 1388              	.L135:
1198:.\mem1.c      ****                     case 0x04: Generate_Wave(waveType, amp, dcB); break;
 1389              		.loc 1 1198 0
 1390 006c B979     		ldrb	r1, [r7, #6]	@ zero_extendqisi2
 1391 006e FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 1392 0070 97F82030 		ldrb	r3, [r7, #32]	@ zero_extendqisi2
 1393 0074 0846     		mov	r0, r1
 1394 0076 1146     		mov	r1, r2
 1395 0078 1A46     		mov	r2, r3
 1396 007a FFF7FEFF 		bl	Generate_Wave
 1397 007e 30E0     		b	.L129
 1398              	.L136:
1199:.\mem1.c      ****                     case 0x07: 
1200:.\mem1.c      ****                         switch (val)
 1399              		.loc 1 1200 0
 1400 0080 BB88     		ldrh	r3, [r7, #4]
 1401 0082 002B     		cmp	r3, #0
 1402 0084 02D0     		beq	.L144
 1403 0086 012B     		cmp	r3, #1
 1404 0088 04D0     		beq	.L145
1201:.\mem1.c      ****                         {
1202:.\mem1.c      ****                         case 0: WaveDAC8_1_SetSpeed(WaveDAC8_1_LOWSPEED); break;
1203:.\mem1.c      ****                         case 1: WaveDAC8_1_SetSpeed(WaveDAC8_1_HIGHSPEED); break;
1204:.\mem1.c      ****                         }
1205:.\mem1.c      ****                         break;
 1405              		.loc 1 1205 0
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cc7rr7YM.s 			page 47


 1406 008a 2AE0     		b	.L129
 1407              	.L144:
1202:.\mem1.c      ****                         case 1: WaveDAC8_1_SetSpeed(WaveDAC8_1_HIGHSPEED); break;
 1408              		.loc 1 1202 0
 1409 008c 0020     		movs	r0, #0
 1410 008e FFF7FEFF 		bl	WaveDAC8_1_VDAC8_SetSpeed
 1411 0092 03E0     		b	.L143
 1412              	.L145:
1203:.\mem1.c      ****                         }
 1413              		.loc 1 1203 0
 1414 0094 0220     		movs	r0, #2
 1415 0096 FFF7FEFF 		bl	WaveDAC8_1_VDAC8_SetSpeed
 1416 009a 00BF     		nop
 1417              	.L143:
 1418              		.loc 1 1205 0
 1419 009c 21E0     		b	.L129
 1420              	.L130:
1206:.\mem1.c      ****                     case 0x09: WaveDAC8_1_SetValue(val); break;
 1421              		.loc 1 1206 0
 1422 009e BB88     		ldrh	r3, [r7, #4]	@ movhi
 1423 00a0 DBB2     		uxtb	r3, r3
 1424 00a2 1846     		mov	r0, r3
 1425 00a4 FFF7FEFF 		bl	WaveDAC8_1_VDAC8_SetValue
 1426 00a8 1BE0     		b	.L129
 1427              	.L139:
1207:.\mem1.c      ****                     case 0x0B: WaveDAC8_1_Sleep(); break;
 1428              		.loc 1 1207 0
 1429 00aa FFF7FEFF 		bl	WaveDAC8_1_Sleep
 1430 00ae 18E0     		b	.L129
 1431              	.L140:
1208:.\mem1.c      ****                     case 0x0C: WaveDAC8_1_Wakeup(); break;
 1432              		.loc 1 1208 0
 1433 00b0 FFF7FEFF 		bl	WaveDAC8_1_Wakeup
 1434 00b4 15E0     		b	.L129
 1435              	.L137:
1209:.\mem1.c      ****                     case 0xFD: WaveDAC_clk_Start(); break;
 1436              		.loc 1 1209 0
 1437 00b6 FFF7FEFF 		bl	WaveDAC_clk_Start
 1438 00ba 12E0     		b	.L129
 1439              	.L141:
1210:.\mem1.c      ****                     case 0xFE: WaveDAC_clk_Stop(); break;
 1440              		.loc 1 1210 0
 1441 00bc FFF7FEFF 		bl	WaveDAC_clk_Stop
 1442 00c0 0FE0     		b	.L129
 1443              	.L142:
1211:.\mem1.c      ****                     case 0xFF: WaveDAC_clk_SetDividerValue(val); *result = WaveDAC_clk_GetDividerRe
 1444              		.loc 1 1211 0
 1445 00c2 BB88     		ldrh	r3, [r7, #4]	@ movhi
 1446 00c4 013B     		subs	r3, r3, #1
 1447 00c6 9BB2     		uxth	r3, r3
 1448 00c8 1846     		mov	r0, r3
 1449 00ca 0121     		movs	r1, #1
 1450 00cc FFF7FEFF 		bl	WaveDAC_clk_SetDividerRegister
 1451 00d0 FFF7FEFF 		bl	WaveDAC_clk_GetDividerRegister
 1452 00d4 0346     		mov	r3, r0
 1453 00d6 1A46     		mov	r2, r3
 1454 00d8 7B6A     		ldr	r3, [r7, #36]
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cc7rr7YM.s 			page 48


 1455 00da 1A60     		str	r2, [r3]
 1456 00dc 0123     		movs	r3, #1
 1457 00de FB73     		strb	r3, [r7, #15]
 1458 00e0 00BF     		nop
 1459              	.L129:
1212:.\mem1.c      ****                         
1213:.\mem1.c      ****                     
1214:.\mem1.c      ****                 }   
1215:.\mem1.c      ****                 
1216:.\mem1.c      ****              return return_flag;
 1460              		.loc 1 1216 0
 1461 00e2 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
1217:.\mem1.c      ****             
1218:.\mem1.c      ****         }
 1462              		.loc 1 1218 0
 1463 00e4 1846     		mov	r0, r3
 1464 00e6 1437     		adds	r7, r7, #20
 1465              		.cfi_def_cfa_offset 12
 1466 00e8 BD46     		mov	sp, r7
 1467              		.cfi_def_cfa_register 13
 1468              		@ sp needed
 1469 00ea 90BD     		pop	{r4, r7, pc}
 1470              		.cfi_endproc
 1471              	.LFE60:
 1472              		.size	WAVEDAC_Control, .-WAVEDAC_Control
 1473              		.global	__aeabi_ui2d
 1474              		.global	__aeabi_ddiv
 1475              		.global	__aeabi_dmul
 1476              		.global	__aeabi_dadd
 1477              		.global	__aeabi_dcmpgt
 1478              		.global	__aeabi_d2uiz
 1479              		.section	.rodata
 1480              		.align	2
 1481              	.LC0:
 1482 0000 80       		.byte	-128
 1483 0001 83       		.byte	-125
 1484 0002 86       		.byte	-122
 1485 0003 89       		.byte	-119
 1486 0004 8C       		.byte	-116
 1487 0005 8F       		.byte	-113
 1488 0006 92       		.byte	-110
 1489 0007 95       		.byte	-107
 1490 0008 98       		.byte	-104
 1491 0009 9C       		.byte	-100
 1492 000a 9F       		.byte	-97
 1493 000b A2       		.byte	-94
 1494 000c A5       		.byte	-91
 1495 000d A8       		.byte	-88
 1496 000e AB       		.byte	-85
 1497 000f AE       		.byte	-82
 1498 0010 B0       		.byte	-80
 1499 0011 B3       		.byte	-77
 1500 0012 B6       		.byte	-74
 1501 0013 B9       		.byte	-71
 1502 0014 BC       		.byte	-68
 1503 0015 BF       		.byte	-65
 1504 0016 C1       		.byte	-63
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cc7rr7YM.s 			page 49


 1505 0017 C4       		.byte	-60
 1506 0018 C7       		.byte	-57
 1507 0019 C9       		.byte	-55
 1508 001a CC       		.byte	-52
 1509 001b CE       		.byte	-50
 1510 001c D1       		.byte	-47
 1511 001d D3       		.byte	-45
 1512 001e D5       		.byte	-43
 1513 001f D8       		.byte	-40
 1514 0020 DA       		.byte	-38
 1515 0021 DC       		.byte	-36
 1516 0022 DE       		.byte	-34
 1517 0023 E0       		.byte	-32
 1518 0024 E2       		.byte	-30
 1519 0025 E4       		.byte	-28
 1520 0026 E6       		.byte	-26
 1521 0027 E8       		.byte	-24
 1522 0028 EA       		.byte	-22
 1523 0029 EC       		.byte	-20
 1524 002a ED       		.byte	-19
 1525 002b EF       		.byte	-17
 1526 002c F0       		.byte	-16
 1527 002d F2       		.byte	-14
 1528 002e F3       		.byte	-13
 1529 002f F5       		.byte	-11
 1530 0030 F6       		.byte	-10
 1531 0031 F7       		.byte	-9
 1532 0032 F8       		.byte	-8
 1533 0033 F9       		.byte	-7
 1534 0034 FA       		.byte	-6
 1535 0035 FB       		.byte	-5
 1536 0036 FC       		.byte	-4
 1537 0037 FC       		.byte	-4
 1538 0038 FD       		.byte	-3
 1539 0039 FE       		.byte	-2
 1540 003a FE       		.byte	-2
 1541 003b FF       		.byte	-1
 1542 003c FF       		.byte	-1
 1543 003d FF       		.byte	-1
 1544 003e FF       		.byte	-1
 1545 003f FF       		.byte	-1
 1546 0040 FF       		.byte	-1
 1547 0041 FF       		.byte	-1
 1548 0042 FF       		.byte	-1
 1549 0043 FF       		.byte	-1
 1550 0044 FF       		.byte	-1
 1551 0045 FF       		.byte	-1
 1552 0046 FE       		.byte	-2
 1553 0047 FE       		.byte	-2
 1554 0048 FD       		.byte	-3
 1555 0049 FC       		.byte	-4
 1556 004a FC       		.byte	-4
 1557 004b FB       		.byte	-5
 1558 004c FA       		.byte	-6
 1559 004d F9       		.byte	-7
 1560 004e F8       		.byte	-8
 1561 004f F7       		.byte	-9
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cc7rr7YM.s 			page 50


 1562 0050 F6       		.byte	-10
 1563 0051 F5       		.byte	-11
 1564 0052 F3       		.byte	-13
 1565 0053 F2       		.byte	-14
 1566 0054 F0       		.byte	-16
 1567 0055 EF       		.byte	-17
 1568 0056 ED       		.byte	-19
 1569 0057 EC       		.byte	-20
 1570 0058 EA       		.byte	-22
 1571 0059 E8       		.byte	-24
 1572 005a E6       		.byte	-26
 1573 005b E4       		.byte	-28
 1574 005c E2       		.byte	-30
 1575 005d E0       		.byte	-32
 1576 005e DE       		.byte	-34
 1577 005f DC       		.byte	-36
 1578 0060 DA       		.byte	-38
 1579 0061 D8       		.byte	-40
 1580 0062 D5       		.byte	-43
 1581 0063 D3       		.byte	-45
 1582 0064 D1       		.byte	-47
 1583 0065 CE       		.byte	-50
 1584 0066 CC       		.byte	-52
 1585 0067 C9       		.byte	-55
 1586 0068 C7       		.byte	-57
 1587 0069 C4       		.byte	-60
 1588 006a C1       		.byte	-63
 1589 006b BF       		.byte	-65
 1590 006c BC       		.byte	-68
 1591 006d B9       		.byte	-71
 1592 006e B6       		.byte	-74
 1593 006f B3       		.byte	-77
 1594 0070 B0       		.byte	-80
 1595 0071 AE       		.byte	-82
 1596 0072 AB       		.byte	-85
 1597 0073 A8       		.byte	-88
 1598 0074 A5       		.byte	-91
 1599 0075 A2       		.byte	-94
 1600 0076 9F       		.byte	-97
 1601 0077 9C       		.byte	-100
 1602 0078 98       		.byte	-104
 1603 0079 95       		.byte	-107
 1604 007a 92       		.byte	-110
 1605 007b 8F       		.byte	-113
 1606 007c 8C       		.byte	-116
 1607 007d 89       		.byte	-119
 1608 007e 86       		.byte	-122
 1609 007f 83       		.byte	-125
 1610 0080 80       		.byte	-128
 1611 0081 7C       		.byte	124
 1612 0082 79       		.byte	121
 1613 0083 76       		.byte	118
 1614 0084 73       		.byte	115
 1615 0085 70       		.byte	112
 1616 0086 6D       		.byte	109
 1617 0087 6A       		.byte	106
 1618 0088 67       		.byte	103
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cc7rr7YM.s 			page 51


 1619 0089 63       		.byte	99
 1620 008a 60       		.byte	96
 1621 008b 5D       		.byte	93
 1622 008c 5A       		.byte	90
 1623 008d 57       		.byte	87
 1624 008e 54       		.byte	84
 1625 008f 51       		.byte	81
 1626 0090 4F       		.byte	79
 1627 0091 4C       		.byte	76
 1628 0092 49       		.byte	73
 1629 0093 46       		.byte	70
 1630 0094 43       		.byte	67
 1631 0095 40       		.byte	64
 1632 0096 3E       		.byte	62
 1633 0097 3B       		.byte	59
 1634 0098 38       		.byte	56
 1635 0099 36       		.byte	54
 1636 009a 33       		.byte	51
 1637 009b 31       		.byte	49
 1638 009c 2E       		.byte	46
 1639 009d 2C       		.byte	44
 1640 009e 2A       		.byte	42
 1641 009f 27       		.byte	39
 1642 00a0 25       		.byte	37
 1643 00a1 23       		.byte	35
 1644 00a2 21       		.byte	33
 1645 00a3 1F       		.byte	31
 1646 00a4 1D       		.byte	29
 1647 00a5 1B       		.byte	27
 1648 00a6 19       		.byte	25
 1649 00a7 17       		.byte	23
 1650 00a8 15       		.byte	21
 1651 00a9 13       		.byte	19
 1652 00aa 12       		.byte	18
 1653 00ab 10       		.byte	16
 1654 00ac 0F       		.byte	15
 1655 00ad 0D       		.byte	13
 1656 00ae 0C       		.byte	12
 1657 00af 0A       		.byte	10
 1658 00b0 09       		.byte	9
 1659 00b1 08       		.byte	8
 1660 00b2 07       		.byte	7
 1661 00b3 06       		.byte	6
 1662 00b4 05       		.byte	5
 1663 00b5 04       		.byte	4
 1664 00b6 03       		.byte	3
 1665 00b7 03       		.byte	3
 1666 00b8 02       		.byte	2
 1667 00b9 01       		.byte	1
 1668 00ba 01       		.byte	1
 1669 00bb 00       		.byte	0
 1670 00bc 00       		.byte	0
 1671 00bd 00       		.byte	0
 1672 00be 00       		.byte	0
 1673 00bf 00       		.byte	0
 1674 00c0 00       		.byte	0
 1675 00c1 00       		.byte	0
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cc7rr7YM.s 			page 52


 1676 00c2 00       		.byte	0
 1677 00c3 00       		.byte	0
 1678 00c4 00       		.byte	0
 1679 00c5 00       		.byte	0
 1680 00c6 01       		.byte	1
 1681 00c7 01       		.byte	1
 1682 00c8 02       		.byte	2
 1683 00c9 03       		.byte	3
 1684 00ca 03       		.byte	3
 1685 00cb 04       		.byte	4
 1686 00cc 05       		.byte	5
 1687 00cd 06       		.byte	6
 1688 00ce 07       		.byte	7
 1689 00cf 08       		.byte	8
 1690 00d0 09       		.byte	9
 1691 00d1 0A       		.byte	10
 1692 00d2 0C       		.byte	12
 1693 00d3 0D       		.byte	13
 1694 00d4 0F       		.byte	15
 1695 00d5 10       		.byte	16
 1696 00d6 12       		.byte	18
 1697 00d7 13       		.byte	19
 1698 00d8 15       		.byte	21
 1699 00d9 17       		.byte	23
 1700 00da 19       		.byte	25
 1701 00db 1B       		.byte	27
 1702 00dc 1D       		.byte	29
 1703 00dd 1F       		.byte	31
 1704 00de 21       		.byte	33
 1705 00df 23       		.byte	35
 1706 00e0 25       		.byte	37
 1707 00e1 27       		.byte	39
 1708 00e2 2A       		.byte	42
 1709 00e3 2C       		.byte	44
 1710 00e4 2E       		.byte	46
 1711 00e5 31       		.byte	49
 1712 00e6 33       		.byte	51
 1713 00e7 36       		.byte	54
 1714 00e8 38       		.byte	56
 1715 00e9 3B       		.byte	59
 1716 00ea 3E       		.byte	62
 1717 00eb 40       		.byte	64
 1718 00ec 43       		.byte	67
 1719 00ed 46       		.byte	70
 1720 00ee 49       		.byte	73
 1721 00ef 4C       		.byte	76
 1722 00f0 4F       		.byte	79
 1723 00f1 51       		.byte	81
 1724 00f2 54       		.byte	84
 1725 00f3 57       		.byte	87
 1726 00f4 5A       		.byte	90
 1727 00f5 5D       		.byte	93
 1728 00f6 60       		.byte	96
 1729 00f7 63       		.byte	99
 1730 00f8 67       		.byte	103
 1731 00f9 6A       		.byte	106
 1732 00fa 6D       		.byte	109
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cc7rr7YM.s 			page 53


 1733 00fb 70       		.byte	112
 1734 00fc 73       		.byte	115
 1735 00fd 76       		.byte	118
 1736 00fe 79       		.byte	121
 1737 00ff 00       		.align	2
 1738              	.LC1:
 1739 0100 01       		.byte	1
 1740 0101 01       		.byte	1
 1741 0102 01       		.byte	1
 1742 0103 01       		.byte	1
 1743 0104 01       		.byte	1
 1744 0105 01       		.byte	1
 1745 0106 01       		.byte	1
 1746 0107 01       		.byte	1
 1747 0108 01       		.byte	1
 1748 0109 01       		.byte	1
 1749 010a 01       		.byte	1
 1750 010b 01       		.byte	1
 1751 010c 01       		.byte	1
 1752 010d 01       		.byte	1
 1753 010e 01       		.byte	1
 1754 010f 01       		.byte	1
 1755 0110 01       		.byte	1
 1756 0111 01       		.byte	1
 1757 0112 01       		.byte	1
 1758 0113 01       		.byte	1
 1759 0114 01       		.byte	1
 1760 0115 01       		.byte	1
 1761 0116 01       		.byte	1
 1762 0117 01       		.byte	1
 1763 0118 01       		.byte	1
 1764 0119 01       		.byte	1
 1765 011a 01       		.byte	1
 1766 011b 01       		.byte	1
 1767 011c 01       		.byte	1
 1768 011d 01       		.byte	1
 1769 011e 01       		.byte	1
 1770 011f 01       		.byte	1
 1771 0120 01       		.byte	1
 1772 0121 01       		.byte	1
 1773 0122 01       		.byte	1
 1774 0123 01       		.byte	1
 1775 0124 01       		.byte	1
 1776 0125 01       		.byte	1
 1777 0126 01       		.byte	1
 1778 0127 01       		.byte	1
 1779 0128 01       		.byte	1
 1780 0129 01       		.byte	1
 1781 012a 01       		.byte	1
 1782 012b 01       		.byte	1
 1783 012c 01       		.byte	1
 1784 012d 01       		.byte	1
 1785 012e 01       		.byte	1
 1786 012f 01       		.byte	1
 1787 0130 01       		.byte	1
 1788 0131 01       		.byte	1
 1789 0132 01       		.byte	1
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cc7rr7YM.s 			page 54


 1790 0133 01       		.byte	1
 1791 0134 01       		.byte	1
 1792 0135 01       		.byte	1
 1793 0136 01       		.byte	1
 1794 0137 01       		.byte	1
 1795 0138 01       		.byte	1
 1796 0139 01       		.byte	1
 1797 013a 01       		.byte	1
 1798 013b 01       		.byte	1
 1799 013c 01       		.byte	1
 1800 013d 01       		.byte	1
 1801 013e 01       		.byte	1
 1802 013f 01       		.byte	1
 1803 0140 01       		.byte	1
 1804 0141 01       		.byte	1
 1805 0142 01       		.byte	1
 1806 0143 01       		.byte	1
 1807 0144 01       		.byte	1
 1808 0145 01       		.byte	1
 1809 0146 01       		.byte	1
 1810 0147 01       		.byte	1
 1811 0148 01       		.byte	1
 1812 0149 01       		.byte	1
 1813 014a 01       		.byte	1
 1814 014b 01       		.byte	1
 1815 014c 01       		.byte	1
 1816 014d 01       		.byte	1
 1817 014e 01       		.byte	1
 1818 014f 01       		.byte	1
 1819 0150 01       		.byte	1
 1820 0151 01       		.byte	1
 1821 0152 01       		.byte	1
 1822 0153 01       		.byte	1
 1823 0154 01       		.byte	1
 1824 0155 01       		.byte	1
 1825 0156 01       		.byte	1
 1826 0157 01       		.byte	1
 1827 0158 01       		.byte	1
 1828 0159 01       		.byte	1
 1829 015a 01       		.byte	1
 1830 015b 01       		.byte	1
 1831 015c 01       		.byte	1
 1832 015d 01       		.byte	1
 1833 015e 01       		.byte	1
 1834 015f 01       		.byte	1
 1835 0160 01       		.byte	1
 1836 0161 01       		.byte	1
 1837 0162 01       		.byte	1
 1838 0163 01       		.byte	1
 1839 0164 01       		.byte	1
 1840 0165 01       		.byte	1
 1841 0166 01       		.byte	1
 1842 0167 01       		.byte	1
 1843 0168 01       		.byte	1
 1844 0169 01       		.byte	1
 1845 016a 01       		.byte	1
 1846 016b 01       		.byte	1
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cc7rr7YM.s 			page 55


 1847 016c 01       		.byte	1
 1848 016d 01       		.byte	1
 1849 016e 01       		.byte	1
 1850 016f 01       		.byte	1
 1851 0170 01       		.byte	1
 1852 0171 01       		.byte	1
 1853 0172 01       		.byte	1
 1854 0173 01       		.byte	1
 1855 0174 01       		.byte	1
 1856 0175 01       		.byte	1
 1857 0176 01       		.byte	1
 1858 0177 01       		.byte	1
 1859 0178 01       		.byte	1
 1860 0179 01       		.byte	1
 1861 017a 01       		.byte	1
 1862 017b 01       		.byte	1
 1863 017c 01       		.byte	1
 1864 017d 01       		.byte	1
 1865 017e 01       		.byte	1
 1866 017f 01       		.byte	1
 1867 0180 FF       		.byte	-1
 1868 0181 FF       		.byte	-1
 1869 0182 FF       		.byte	-1
 1870 0183 FF       		.byte	-1
 1871 0184 FF       		.byte	-1
 1872 0185 FF       		.byte	-1
 1873 0186 FF       		.byte	-1
 1874 0187 FF       		.byte	-1
 1875 0188 FF       		.byte	-1
 1876 0189 FF       		.byte	-1
 1877 018a FF       		.byte	-1
 1878 018b FF       		.byte	-1
 1879 018c FF       		.byte	-1
 1880 018d FF       		.byte	-1
 1881 018e FF       		.byte	-1
 1882 018f FF       		.byte	-1
 1883 0190 FF       		.byte	-1
 1884 0191 FF       		.byte	-1
 1885 0192 FF       		.byte	-1
 1886 0193 FF       		.byte	-1
 1887 0194 FF       		.byte	-1
 1888 0195 FF       		.byte	-1
 1889 0196 FF       		.byte	-1
 1890 0197 FF       		.byte	-1
 1891 0198 FF       		.byte	-1
 1892 0199 FF       		.byte	-1
 1893 019a FF       		.byte	-1
 1894 019b FF       		.byte	-1
 1895 019c FF       		.byte	-1
 1896 019d FF       		.byte	-1
 1897 019e FF       		.byte	-1
 1898 019f FF       		.byte	-1
 1899 01a0 FF       		.byte	-1
 1900 01a1 FF       		.byte	-1
 1901 01a2 FF       		.byte	-1
 1902 01a3 FF       		.byte	-1
 1903 01a4 FF       		.byte	-1
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cc7rr7YM.s 			page 56


 1904 01a5 FF       		.byte	-1
 1905 01a6 FF       		.byte	-1
 1906 01a7 FF       		.byte	-1
 1907 01a8 FF       		.byte	-1
 1908 01a9 FF       		.byte	-1
 1909 01aa FF       		.byte	-1
 1910 01ab FF       		.byte	-1
 1911 01ac FF       		.byte	-1
 1912 01ad FF       		.byte	-1
 1913 01ae FF       		.byte	-1
 1914 01af FF       		.byte	-1
 1915 01b0 FF       		.byte	-1
 1916 01b1 FF       		.byte	-1
 1917 01b2 FF       		.byte	-1
 1918 01b3 FF       		.byte	-1
 1919 01b4 FF       		.byte	-1
 1920 01b5 FF       		.byte	-1
 1921 01b6 FF       		.byte	-1
 1922 01b7 FF       		.byte	-1
 1923 01b8 FF       		.byte	-1
 1924 01b9 FF       		.byte	-1
 1925 01ba FF       		.byte	-1
 1926 01bb FF       		.byte	-1
 1927 01bc FF       		.byte	-1
 1928 01bd FF       		.byte	-1
 1929 01be FF       		.byte	-1
 1930 01bf FF       		.byte	-1
 1931 01c0 FF       		.byte	-1
 1932 01c1 FF       		.byte	-1
 1933 01c2 FF       		.byte	-1
 1934 01c3 FF       		.byte	-1
 1935 01c4 FF       		.byte	-1
 1936 01c5 FF       		.byte	-1
 1937 01c6 FF       		.byte	-1
 1938 01c7 FF       		.byte	-1
 1939 01c8 FF       		.byte	-1
 1940 01c9 FF       		.byte	-1
 1941 01ca FF       		.byte	-1
 1942 01cb FF       		.byte	-1
 1943 01cc FF       		.byte	-1
 1944 01cd FF       		.byte	-1
 1945 01ce FF       		.byte	-1
 1946 01cf FF       		.byte	-1
 1947 01d0 FF       		.byte	-1
 1948 01d1 FF       		.byte	-1
 1949 01d2 FF       		.byte	-1
 1950 01d3 FF       		.byte	-1
 1951 01d4 FF       		.byte	-1
 1952 01d5 FF       		.byte	-1
 1953 01d6 FF       		.byte	-1
 1954 01d7 FF       		.byte	-1
 1955 01d8 FF       		.byte	-1
 1956 01d9 FF       		.byte	-1
 1957 01da FF       		.byte	-1
 1958 01db FF       		.byte	-1
 1959 01dc FF       		.byte	-1
 1960 01dd FF       		.byte	-1
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cc7rr7YM.s 			page 57


 1961 01de FF       		.byte	-1
 1962 01df FF       		.byte	-1
 1963 01e0 FF       		.byte	-1
 1964 01e1 FF       		.byte	-1
 1965 01e2 FF       		.byte	-1
 1966 01e3 FF       		.byte	-1
 1967 01e4 FF       		.byte	-1
 1968 01e5 FF       		.byte	-1
 1969 01e6 FF       		.byte	-1
 1970 01e7 FF       		.byte	-1
 1971 01e8 FF       		.byte	-1
 1972 01e9 FF       		.byte	-1
 1973 01ea FF       		.byte	-1
 1974 01eb FF       		.byte	-1
 1975 01ec FF       		.byte	-1
 1976 01ed FF       		.byte	-1
 1977 01ee FF       		.byte	-1
 1978 01ef FF       		.byte	-1
 1979 01f0 FF       		.byte	-1
 1980 01f1 FF       		.byte	-1
 1981 01f2 FF       		.byte	-1
 1982 01f3 FF       		.byte	-1
 1983 01f4 FF       		.byte	-1
 1984 01f5 FF       		.byte	-1
 1985 01f6 FF       		.byte	-1
 1986 01f7 FF       		.byte	-1
 1987 01f8 FF       		.byte	-1
 1988 01f9 FF       		.byte	-1
 1989 01fa FF       		.byte	-1
 1990 01fb FF       		.byte	-1
 1991 01fc FF       		.byte	-1
 1992 01fd FF       		.byte	-1
 1993 01fe FF       		.byte	-1
 1994 01ff 00       		.align	2
 1995              	.LC2:
 1996 0200 00       		.byte	0
 1997 0201 02       		.byte	2
 1998 0202 04       		.byte	4
 1999 0203 06       		.byte	6
 2000 0204 08       		.byte	8
 2001 0205 0A       		.byte	10
 2002 0206 0C       		.byte	12
 2003 0207 0E       		.byte	14
 2004 0208 10       		.byte	16
 2005 0209 12       		.byte	18
 2006 020a 14       		.byte	20
 2007 020b 16       		.byte	22
 2008 020c 18       		.byte	24
 2009 020d 1A       		.byte	26
 2010 020e 1C       		.byte	28
 2011 020f 1E       		.byte	30
 2012 0210 20       		.byte	32
 2013 0211 22       		.byte	34
 2014 0212 24       		.byte	36
 2015 0213 26       		.byte	38
 2016 0214 28       		.byte	40
 2017 0215 2A       		.byte	42
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cc7rr7YM.s 			page 58


 2018 0216 2C       		.byte	44
 2019 0217 2E       		.byte	46
 2020 0218 30       		.byte	48
 2021 0219 32       		.byte	50
 2022 021a 34       		.byte	52
 2023 021b 36       		.byte	54
 2024 021c 38       		.byte	56
 2025 021d 3A       		.byte	58
 2026 021e 3C       		.byte	60
 2027 021f 3E       		.byte	62
 2028 0220 40       		.byte	64
 2029 0221 42       		.byte	66
 2030 0222 44       		.byte	68
 2031 0223 46       		.byte	70
 2032 0224 48       		.byte	72
 2033 0225 4A       		.byte	74
 2034 0226 4C       		.byte	76
 2035 0227 4E       		.byte	78
 2036 0228 50       		.byte	80
 2037 0229 52       		.byte	82
 2038 022a 54       		.byte	84
 2039 022b 56       		.byte	86
 2040 022c 58       		.byte	88
 2041 022d 5A       		.byte	90
 2042 022e 5C       		.byte	92
 2043 022f 5E       		.byte	94
 2044 0230 60       		.byte	96
 2045 0231 62       		.byte	98
 2046 0232 64       		.byte	100
 2047 0233 66       		.byte	102
 2048 0234 68       		.byte	104
 2049 0235 6A       		.byte	106
 2050 0236 6C       		.byte	108
 2051 0237 6E       		.byte	110
 2052 0238 70       		.byte	112
 2053 0239 72       		.byte	114
 2054 023a 74       		.byte	116
 2055 023b 76       		.byte	118
 2056 023c 78       		.byte	120
 2057 023d 7A       		.byte	122
 2058 023e 7C       		.byte	124
 2059 023f 7E       		.byte	126
 2060 0240 80       		.byte	-128
 2061 0241 82       		.byte	-126
 2062 0242 84       		.byte	-124
 2063 0243 86       		.byte	-122
 2064 0244 88       		.byte	-120
 2065 0245 8A       		.byte	-118
 2066 0246 8C       		.byte	-116
 2067 0247 8E       		.byte	-114
 2068 0248 90       		.byte	-112
 2069 0249 92       		.byte	-110
 2070 024a 94       		.byte	-108
 2071 024b 96       		.byte	-106
 2072 024c 98       		.byte	-104
 2073 024d 9A       		.byte	-102
 2074 024e 9C       		.byte	-100
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cc7rr7YM.s 			page 59


 2075 024f 9E       		.byte	-98
 2076 0250 A0       		.byte	-96
 2077 0251 A2       		.byte	-94
 2078 0252 A4       		.byte	-92
 2079 0253 A6       		.byte	-90
 2080 0254 A8       		.byte	-88
 2081 0255 AA       		.byte	-86
 2082 0256 AC       		.byte	-84
 2083 0257 AE       		.byte	-82
 2084 0258 B0       		.byte	-80
 2085 0259 B2       		.byte	-78
 2086 025a B4       		.byte	-76
 2087 025b B6       		.byte	-74
 2088 025c B8       		.byte	-72
 2089 025d BA       		.byte	-70
 2090 025e BC       		.byte	-68
 2091 025f BE       		.byte	-66
 2092 0260 C0       		.byte	-64
 2093 0261 C2       		.byte	-62
 2094 0262 C4       		.byte	-60
 2095 0263 C6       		.byte	-58
 2096 0264 C8       		.byte	-56
 2097 0265 CA       		.byte	-54
 2098 0266 CC       		.byte	-52
 2099 0267 CE       		.byte	-50
 2100 0268 D0       		.byte	-48
 2101 0269 D2       		.byte	-46
 2102 026a D4       		.byte	-44
 2103 026b D6       		.byte	-42
 2104 026c D8       		.byte	-40
 2105 026d DA       		.byte	-38
 2106 026e DC       		.byte	-36
 2107 026f DE       		.byte	-34
 2108 0270 E0       		.byte	-32
 2109 0271 E2       		.byte	-30
 2110 0272 E4       		.byte	-28
 2111 0273 E6       		.byte	-26
 2112 0274 E8       		.byte	-24
 2113 0275 EA       		.byte	-22
 2114 0276 EC       		.byte	-20
 2115 0277 EE       		.byte	-18
 2116 0278 F0       		.byte	-16
 2117 0279 F2       		.byte	-14
 2118 027a F4       		.byte	-12
 2119 027b F6       		.byte	-10
 2120 027c F8       		.byte	-8
 2121 027d FA       		.byte	-6
 2122 027e FC       		.byte	-4
 2123 027f FE       		.byte	-2
 2124 0280 FF       		.byte	-1
 2125 0281 FE       		.byte	-2
 2126 0282 FC       		.byte	-4
 2127 0283 FA       		.byte	-6
 2128 0284 F8       		.byte	-8
 2129 0285 F6       		.byte	-10
 2130 0286 F4       		.byte	-12
 2131 0287 F2       		.byte	-14
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cc7rr7YM.s 			page 60


 2132 0288 F0       		.byte	-16
 2133 0289 EE       		.byte	-18
 2134 028a EC       		.byte	-20
 2135 028b EA       		.byte	-22
 2136 028c E8       		.byte	-24
 2137 028d E6       		.byte	-26
 2138 028e E4       		.byte	-28
 2139 028f E2       		.byte	-30
 2140 0290 E0       		.byte	-32
 2141 0291 DE       		.byte	-34
 2142 0292 DC       		.byte	-36
 2143 0293 DA       		.byte	-38
 2144 0294 D8       		.byte	-40
 2145 0295 D6       		.byte	-42
 2146 0296 D4       		.byte	-44
 2147 0297 D2       		.byte	-46
 2148 0298 D0       		.byte	-48
 2149 0299 CE       		.byte	-50
 2150 029a CC       		.byte	-52
 2151 029b CA       		.byte	-54
 2152 029c C8       		.byte	-56
 2153 029d C6       		.byte	-58
 2154 029e C4       		.byte	-60
 2155 029f C2       		.byte	-62
 2156 02a0 C0       		.byte	-64
 2157 02a1 BE       		.byte	-66
 2158 02a2 BC       		.byte	-68
 2159 02a3 BA       		.byte	-70
 2160 02a4 B8       		.byte	-72
 2161 02a5 B6       		.byte	-74
 2162 02a6 B4       		.byte	-76
 2163 02a7 B2       		.byte	-78
 2164 02a8 B0       		.byte	-80
 2165 02a9 AE       		.byte	-82
 2166 02aa AC       		.byte	-84
 2167 02ab AA       		.byte	-86
 2168 02ac A8       		.byte	-88
 2169 02ad A6       		.byte	-90
 2170 02ae A4       		.byte	-92
 2171 02af A2       		.byte	-94
 2172 02b0 A0       		.byte	-96
 2173 02b1 9E       		.byte	-98
 2174 02b2 9C       		.byte	-100
 2175 02b3 9A       		.byte	-102
 2176 02b4 98       		.byte	-104
 2177 02b5 96       		.byte	-106
 2178 02b6 94       		.byte	-108
 2179 02b7 92       		.byte	-110
 2180 02b8 90       		.byte	-112
 2181 02b9 8E       		.byte	-114
 2182 02ba 8C       		.byte	-116
 2183 02bb 8A       		.byte	-118
 2184 02bc 88       		.byte	-120
 2185 02bd 86       		.byte	-122
 2186 02be 84       		.byte	-124
 2187 02bf 82       		.byte	-126
 2188 02c0 80       		.byte	-128
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cc7rr7YM.s 			page 61


 2189 02c1 7E       		.byte	126
 2190 02c2 7C       		.byte	124
 2191 02c3 7A       		.byte	122
 2192 02c4 78       		.byte	120
 2193 02c5 76       		.byte	118
 2194 02c6 74       		.byte	116
 2195 02c7 72       		.byte	114
 2196 02c8 70       		.byte	112
 2197 02c9 6E       		.byte	110
 2198 02ca 6C       		.byte	108
 2199 02cb 6A       		.byte	106
 2200 02cc 68       		.byte	104
 2201 02cd 66       		.byte	102
 2202 02ce 64       		.byte	100
 2203 02cf 62       		.byte	98
 2204 02d0 60       		.byte	96
 2205 02d1 5E       		.byte	94
 2206 02d2 5C       		.byte	92
 2207 02d3 5A       		.byte	90
 2208 02d4 58       		.byte	88
 2209 02d5 56       		.byte	86
 2210 02d6 54       		.byte	84
 2211 02d7 52       		.byte	82
 2212 02d8 50       		.byte	80
 2213 02d9 4E       		.byte	78
 2214 02da 4C       		.byte	76
 2215 02db 4A       		.byte	74
 2216 02dc 48       		.byte	72
 2217 02dd 46       		.byte	70
 2218 02de 44       		.byte	68
 2219 02df 42       		.byte	66
 2220 02e0 40       		.byte	64
 2221 02e1 3E       		.byte	62
 2222 02e2 3C       		.byte	60
 2223 02e3 3A       		.byte	58
 2224 02e4 38       		.byte	56
 2225 02e5 36       		.byte	54
 2226 02e6 34       		.byte	52
 2227 02e7 32       		.byte	50
 2228 02e8 30       		.byte	48
 2229 02e9 2E       		.byte	46
 2230 02ea 2C       		.byte	44
 2231 02eb 2A       		.byte	42
 2232 02ec 28       		.byte	40
 2233 02ed 26       		.byte	38
 2234 02ee 24       		.byte	36
 2235 02ef 22       		.byte	34
 2236 02f0 20       		.byte	32
 2237 02f1 1E       		.byte	30
 2238 02f2 1C       		.byte	28
 2239 02f3 1A       		.byte	26
 2240 02f4 18       		.byte	24
 2241 02f5 16       		.byte	22
 2242 02f6 14       		.byte	20
 2243 02f7 12       		.byte	18
 2244 02f8 10       		.byte	16
 2245 02f9 0E       		.byte	14
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cc7rr7YM.s 			page 62


 2246 02fa 0C       		.byte	12
 2247 02fb 0A       		.byte	10
 2248 02fc 08       		.byte	8
 2249 02fd 06       		.byte	6
 2250 02fe 04       		.byte	4
 2251 02ff 00       		.align	2
 2252              	.LC3:
 2253 0300 01       		.byte	1
 2254 0301 02       		.byte	2
 2255 0302 03       		.byte	3
 2256 0303 04       		.byte	4
 2257 0304 05       		.byte	5
 2258 0305 06       		.byte	6
 2259 0306 07       		.byte	7
 2260 0307 08       		.byte	8
 2261 0308 09       		.byte	9
 2262 0309 0A       		.byte	10
 2263 030a 0B       		.byte	11
 2264 030b 0C       		.byte	12
 2265 030c 0D       		.byte	13
 2266 030d 0E       		.byte	14
 2267 030e 0F       		.byte	15
 2268 030f 10       		.byte	16
 2269 0310 11       		.byte	17
 2270 0311 12       		.byte	18
 2271 0312 13       		.byte	19
 2272 0313 14       		.byte	20
 2273 0314 15       		.byte	21
 2274 0315 16       		.byte	22
 2275 0316 17       		.byte	23
 2276 0317 18       		.byte	24
 2277 0318 19       		.byte	25
 2278 0319 1A       		.byte	26
 2279 031a 1B       		.byte	27
 2280 031b 1C       		.byte	28
 2281 031c 1D       		.byte	29
 2282 031d 1E       		.byte	30
 2283 031e 1F       		.byte	31
 2284 031f 20       		.byte	32
 2285 0320 21       		.byte	33
 2286 0321 22       		.byte	34
 2287 0322 23       		.byte	35
 2288 0323 24       		.byte	36
 2289 0324 25       		.byte	37
 2290 0325 26       		.byte	38
 2291 0326 27       		.byte	39
 2292 0327 28       		.byte	40
 2293 0328 29       		.byte	41
 2294 0329 2A       		.byte	42
 2295 032a 2B       		.byte	43
 2296 032b 2C       		.byte	44
 2297 032c 2D       		.byte	45
 2298 032d 2E       		.byte	46
 2299 032e 2F       		.byte	47
 2300 032f 30       		.byte	48
 2301 0330 31       		.byte	49
 2302 0331 32       		.byte	50
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cc7rr7YM.s 			page 63


 2303 0332 33       		.byte	51
 2304 0333 34       		.byte	52
 2305 0334 35       		.byte	53
 2306 0335 36       		.byte	54
 2307 0336 37       		.byte	55
 2308 0337 38       		.byte	56
 2309 0338 39       		.byte	57
 2310 0339 3A       		.byte	58
 2311 033a 3B       		.byte	59
 2312 033b 3C       		.byte	60
 2313 033c 3D       		.byte	61
 2314 033d 3E       		.byte	62
 2315 033e 3F       		.byte	63
 2316 033f 40       		.byte	64
 2317 0340 41       		.byte	65
 2318 0341 42       		.byte	66
 2319 0342 43       		.byte	67
 2320 0343 44       		.byte	68
 2321 0344 45       		.byte	69
 2322 0345 46       		.byte	70
 2323 0346 47       		.byte	71
 2324 0347 48       		.byte	72
 2325 0348 49       		.byte	73
 2326 0349 4A       		.byte	74
 2327 034a 4B       		.byte	75
 2328 034b 4C       		.byte	76
 2329 034c 4D       		.byte	77
 2330 034d 4E       		.byte	78
 2331 034e 4F       		.byte	79
 2332 034f 50       		.byte	80
 2333 0350 51       		.byte	81
 2334 0351 52       		.byte	82
 2335 0352 53       		.byte	83
 2336 0353 54       		.byte	84
 2337 0354 55       		.byte	85
 2338 0355 56       		.byte	86
 2339 0356 57       		.byte	87
 2340 0357 58       		.byte	88
 2341 0358 59       		.byte	89
 2342 0359 5A       		.byte	90
 2343 035a 5B       		.byte	91
 2344 035b 5C       		.byte	92
 2345 035c 5D       		.byte	93
 2346 035d 5E       		.byte	94
 2347 035e 5F       		.byte	95
 2348 035f 60       		.byte	96
 2349 0360 61       		.byte	97
 2350 0361 62       		.byte	98
 2351 0362 63       		.byte	99
 2352 0363 64       		.byte	100
 2353 0364 65       		.byte	101
 2354 0365 66       		.byte	102
 2355 0366 67       		.byte	103
 2356 0367 68       		.byte	104
 2357 0368 69       		.byte	105
 2358 0369 6A       		.byte	106
 2359 036a 6B       		.byte	107
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cc7rr7YM.s 			page 64


 2360 036b 6C       		.byte	108
 2361 036c 6D       		.byte	109
 2362 036d 6E       		.byte	110
 2363 036e 6F       		.byte	111
 2364 036f 70       		.byte	112
 2365 0370 71       		.byte	113
 2366 0371 72       		.byte	114
 2367 0372 73       		.byte	115
 2368 0373 74       		.byte	116
 2369 0374 75       		.byte	117
 2370 0375 76       		.byte	118
 2371 0376 77       		.byte	119
 2372 0377 78       		.byte	120
 2373 0378 79       		.byte	121
 2374 0379 7A       		.byte	122
 2375 037a 7B       		.byte	123
 2376 037b 7C       		.byte	124
 2377 037c 7D       		.byte	125
 2378 037d 7E       		.byte	126
 2379 037e 7F       		.byte	127
 2380 037f 80       		.byte	-128
 2381 0380 81       		.byte	-127
 2382 0381 82       		.byte	-126
 2383 0382 83       		.byte	-125
 2384 0383 84       		.byte	-124
 2385 0384 85       		.byte	-123
 2386 0385 86       		.byte	-122
 2387 0386 87       		.byte	-121
 2388 0387 88       		.byte	-120
 2389 0388 89       		.byte	-119
 2390 0389 8A       		.byte	-118
 2391 038a 8B       		.byte	-117
 2392 038b 8C       		.byte	-116
 2393 038c 8D       		.byte	-115
 2394 038d 8E       		.byte	-114
 2395 038e 8F       		.byte	-113
 2396 038f 90       		.byte	-112
 2397 0390 91       		.byte	-111
 2398 0391 92       		.byte	-110
 2399 0392 93       		.byte	-109
 2400 0393 94       		.byte	-108
 2401 0394 95       		.byte	-107
 2402 0395 96       		.byte	-106
 2403 0396 97       		.byte	-105
 2404 0397 98       		.byte	-104
 2405 0398 99       		.byte	-103
 2406 0399 9A       		.byte	-102
 2407 039a 9B       		.byte	-101
 2408 039b 9C       		.byte	-100
 2409 039c 9D       		.byte	-99
 2410 039d 9E       		.byte	-98
 2411 039e 9F       		.byte	-97
 2412 039f A0       		.byte	-96
 2413 03a0 A1       		.byte	-95
 2414 03a1 A2       		.byte	-94
 2415 03a2 A3       		.byte	-93
 2416 03a3 A4       		.byte	-92
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cc7rr7YM.s 			page 65


 2417 03a4 A5       		.byte	-91
 2418 03a5 A6       		.byte	-90
 2419 03a6 A7       		.byte	-89
 2420 03a7 A8       		.byte	-88
 2421 03a8 A9       		.byte	-87
 2422 03a9 AA       		.byte	-86
 2423 03aa AB       		.byte	-85
 2424 03ab AC       		.byte	-84
 2425 03ac AD       		.byte	-83
 2426 03ad AE       		.byte	-82
 2427 03ae AF       		.byte	-81
 2428 03af B0       		.byte	-80
 2429 03b0 B1       		.byte	-79
 2430 03b1 B2       		.byte	-78
 2431 03b2 B3       		.byte	-77
 2432 03b3 B4       		.byte	-76
 2433 03b4 B5       		.byte	-75
 2434 03b5 B6       		.byte	-74
 2435 03b6 B7       		.byte	-73
 2436 03b7 B8       		.byte	-72
 2437 03b8 B9       		.byte	-71
 2438 03b9 BA       		.byte	-70
 2439 03ba BB       		.byte	-69
 2440 03bb BC       		.byte	-68
 2441 03bc BD       		.byte	-67
 2442 03bd BE       		.byte	-66
 2443 03be BF       		.byte	-65
 2444 03bf C0       		.byte	-64
 2445 03c0 C1       		.byte	-63
 2446 03c1 C2       		.byte	-62
 2447 03c2 C3       		.byte	-61
 2448 03c3 C4       		.byte	-60
 2449 03c4 C5       		.byte	-59
 2450 03c5 C6       		.byte	-58
 2451 03c6 C7       		.byte	-57
 2452 03c7 C8       		.byte	-56
 2453 03c8 C9       		.byte	-55
 2454 03c9 CA       		.byte	-54
 2455 03ca CB       		.byte	-53
 2456 03cb CC       		.byte	-52
 2457 03cc CD       		.byte	-51
 2458 03cd CE       		.byte	-50
 2459 03ce CF       		.byte	-49
 2460 03cf D0       		.byte	-48
 2461 03d0 D1       		.byte	-47
 2462 03d1 D2       		.byte	-46
 2463 03d2 D3       		.byte	-45
 2464 03d3 D4       		.byte	-44
 2465 03d4 D5       		.byte	-43
 2466 03d5 D6       		.byte	-42
 2467 03d6 D7       		.byte	-41
 2468 03d7 D8       		.byte	-40
 2469 03d8 D9       		.byte	-39
 2470 03d9 DA       		.byte	-38
 2471 03da DB       		.byte	-37
 2472 03db DC       		.byte	-36
 2473 03dc DD       		.byte	-35
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cc7rr7YM.s 			page 66


 2474 03dd DE       		.byte	-34
 2475 03de DF       		.byte	-33
 2476 03df E0       		.byte	-32
 2477 03e0 E1       		.byte	-31
 2478 03e1 E2       		.byte	-30
 2479 03e2 E3       		.byte	-29
 2480 03e3 E4       		.byte	-28
 2481 03e4 E5       		.byte	-27
 2482 03e5 E6       		.byte	-26
 2483 03e6 E7       		.byte	-25
 2484 03e7 E8       		.byte	-24
 2485 03e8 E9       		.byte	-23
 2486 03e9 EA       		.byte	-22
 2487 03ea EB       		.byte	-21
 2488 03eb EC       		.byte	-20
 2489 03ec ED       		.byte	-19
 2490 03ed EE       		.byte	-18
 2491 03ee EF       		.byte	-17
 2492 03ef F0       		.byte	-16
 2493 03f0 F1       		.byte	-15
 2494 03f1 F2       		.byte	-14
 2495 03f2 F3       		.byte	-13
 2496 03f3 F4       		.byte	-12
 2497 03f4 F5       		.byte	-11
 2498 03f5 F6       		.byte	-10
 2499 03f6 F7       		.byte	-9
 2500 03f7 F8       		.byte	-8
 2501 03f8 F9       		.byte	-7
 2502 03f9 FA       		.byte	-6
 2503 03fa FB       		.byte	-5
 2504 03fb FC       		.byte	-4
 2505 03fc FD       		.byte	-3
 2506 03fd FE       		.byte	-2
 2507 03fe FF       		.byte	-1
 2508 03ff 00       		.section	.text.Generate_Wave,"ax",%progbits
 2509              		.align	2
 2510              		.global	Generate_Wave
 2511              		.thumb
 2512              		.thumb_func
 2513              		.type	Generate_Wave, %function
 2514              	Generate_Wave:
 2515              	.LFB61:
1219:.\mem1.c      ****         
1220:.\mem1.c      **** /**************************************************************************//**
1221:.\mem1.c      **** *  @brief Helper function for the WaveDAC; If a Master device requests that it 
1222:.\mem1.c      **** *         wants to generate a specific Waveform, this function will read a second
1223:.\mem1.c      **** *         set of data from the Master device which contains the desired waveform,
1224:.\mem1.c      **** *         the desired peak voltage, and the desired DC Bias, and then it will
1225:.\mem1.c      **** *         generate the desired waveform using the WaveDAC8.
1226:.\mem1.c      **** *
1227:.\mem1.c      **** *******************************************************************************/
1228:.\mem1.c      ****         void Generate_Wave(uint8 waveType, uint8 amp, uint8 dcB)
1229:.\mem1.c      ****         {
 2516              		.loc 1 1229 0
 2517              		.cfi_startproc
 2518              		@ args = 0, pretend = 0, frame = 1312
 2519              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cc7rr7YM.s 			page 67


 2520 0000 B0B5     		push	{r4, r5, r7, lr}
 2521              		.cfi_def_cfa_offset 16
 2522              		.cfi_offset 4, -16
 2523              		.cfi_offset 5, -12
 2524              		.cfi_offset 7, -8
 2525              		.cfi_offset 14, -4
 2526 0002 ADF5A46D 		sub	sp, sp, #1312
 2527              		.cfi_def_cfa_offset 1328
 2528 0006 00AF     		add	r7, sp, #0
 2529              		.cfi_def_cfa_register 7
 2530 0008 0446     		mov	r4, r0
 2531 000a 0846     		mov	r0, r1
 2532 000c 1146     		mov	r1, r2
 2533 000e FB1D     		adds	r3, r7, #7
 2534 0010 2246     		mov	r2, r4
 2535 0012 1A70     		strb	r2, [r3]
 2536 0014 BB1D     		adds	r3, r7, #6
 2537 0016 0246     		mov	r2, r0
 2538 0018 1A70     		strb	r2, [r3]
 2539 001a 7B1D     		adds	r3, r7, #5
 2540 001c 0A46     		mov	r2, r1
 2541 001e 1A70     		strb	r2, [r3]
1230:.\mem1.c      ****               
1231:.\mem1.c      ****             #define WAVE_SIZE           (255)
1232:.\mem1.c      ****             #define SINE                (0x00)
1233:.\mem1.c      ****             #define SQUARE              (0x01)
1234:.\mem1.c      ****             #define TRIANGLE            (0x02)
1235:.\mem1.c      ****             #define SAWTOOTH            (0x03)
1236:.\mem1.c      ****             
1237:.\mem1.c      ****             
1238:.\mem1.c      ****             uint8 SINEWave[WAVE_SIZE] = {
 2542              		.loc 1 1238 0
 2543 0020 07F58163 		add	r3, r7, #1032
 2544 0024 BC4A     		ldr	r2, .L172+8
 2545 0026 1946     		mov	r1, r3
 2546 0028 FF23     		movs	r3, #255
 2547 002a 0846     		mov	r0, r1
 2548 002c 1146     		mov	r1, r2
 2549 002e 1A46     		mov	r2, r3
 2550 0030 FFF7FEFF 		bl	memcpy
1239:.\mem1.c      ****                         128,131,134,137,140,143,146,149,152,156,159,162,165,168,171,174,
1240:.\mem1.c      ****                         176,179,182,185,188,191,193,196,199,201,204,206,209,211,213,216,
1241:.\mem1.c      ****                         218,220,222,224,226,228,230,232,234,236,237,239,240,242,243,245,
1242:.\mem1.c      ****                         246,247,248,249,250,251,252,252,253,254,254,255,255,255,255,255,
1243:.\mem1.c      ****                         255,255,255,255,255,255,254,254,253,252,252,251,250,249,248,247,
1244:.\mem1.c      ****                         246,245,243,242,240,239,237,236,234,232,230,228,226,224,222,220,
1245:.\mem1.c      ****                         218,216,213,211,209,206,204,201,199,196,193,191,188,185,182,179,
1246:.\mem1.c      ****                         176,174,171,168,165,162,159,156,152,149,146,143,140,137,134,131,
1247:.\mem1.c      ****                         128,124,121,118,115,112,109,106,103,99, 96, 93, 90, 87, 84, 81, 
1248:.\mem1.c      ****                         79, 76, 73, 70, 67, 64, 62, 59, 56, 54, 51, 49, 46, 44, 42, 39, 
1249:.\mem1.c      ****                         37, 35, 33, 31, 29, 27, 25, 23, 21, 19, 18, 16, 15, 13, 12, 10, 
1250:.\mem1.c      ****                         9,  8,  7,  6,  5,  4,  3,  3,  2,  1,  1,  0,  0,  0,  0,  0,  
1251:.\mem1.c      ****                         0,  0,  0,  0,  0,  0,  1,  1,  2,  3,  3,  4,  5,  6,  7,  8,  
1252:.\mem1.c      ****                         9,  10, 12, 13, 15, 16, 18, 19, 21, 23, 25, 27, 29, 31, 33, 35, 
1253:.\mem1.c      ****                         37, 39, 42, 44, 46, 49, 51, 54, 56, 59, 62, 64, 67, 70, 73, 76, 
1254:.\mem1.c      ****                         79, 81, 84, 87, 90, 93, 96, 99, 103,106,109,112,115,118,121
1255:.\mem1.c      ****                         };
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cc7rr7YM.s 			page 68


1256:.\mem1.c      ****             uint8 SQUAREWave[WAVE_SIZE] = {
 2551              		.loc 1 1256 0
 2552 0034 07F54273 		add	r3, r7, #776
 2553 0038 B84A     		ldr	r2, .L172+12
 2554 003a 1946     		mov	r1, r3
 2555 003c FF23     		movs	r3, #255
 2556 003e 0846     		mov	r0, r1
 2557 0040 1146     		mov	r1, r2
 2558 0042 1A46     		mov	r2, r3
 2559 0044 FFF7FEFF 		bl	memcpy
1257:.\mem1.c      ****                         1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1258:.\mem1.c      ****                         1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1259:.\mem1.c      ****                         1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1260:.\mem1.c      ****                         1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1261:.\mem1.c      ****                         1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 255, 255, 25
1262:.\mem1.c      ****                         255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 
1263:.\mem1.c      ****                         255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 
1264:.\mem1.c      ****                         255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 
1265:.\mem1.c      ****                         255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 
1266:.\mem1.c      ****                         255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 
1267:.\mem1.c      ****                         255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 
1268:.\mem1.c      ****                         255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 
1269:.\mem1.c      ****                         255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255};
1270:.\mem1.c      ****                         
1271:.\mem1.c      ****             uint8 TRIANGLEWave[WAVE_SIZE] = {
 2560              		.loc 1 1271 0
 2561 0048 07F50273 		add	r3, r7, #520
 2562 004c B44A     		ldr	r2, .L172+16
 2563 004e 1946     		mov	r1, r3
 2564 0050 FF23     		movs	r3, #255
 2565 0052 0846     		mov	r0, r1
 2566 0054 1146     		mov	r1, r2
 2567 0056 1A46     		mov	r2, r3
 2568 0058 FFF7FEFF 		bl	memcpy
1272:.\mem1.c      ****                         0, 2, 4, 6, 8, 10, 12, 14, 16, 18, 20, 22, 24, 26, 28, 30, 32, 34, 36, 38, 
1273:.\mem1.c      ****                         44, 46, 48, 50, 52, 54, 56, 58, 60, 62, 64, 66, 68, 70, 72, 74, 76, 78, 80,
1274:.\mem1.c      ****                         86, 88, 90, 92, 94, 96, 98, 100, 102, 104, 106, 108, 110, 112, 114, 116, 11
1275:.\mem1.c      ****                         122, 124, 126, 128, 130, 132, 134, 136, 138, 140, 142, 144, 146, 148, 150, 
1276:.\mem1.c      ****                         156, 158, 160, 162, 164, 166, 168, 170, 172, 174, 176, 178, 180, 182, 184, 
1277:.\mem1.c      ****                         190, 192, 194, 196, 198, 200, 202, 204, 206, 208, 210, 212, 214, 216, 218, 
1278:.\mem1.c      ****                         224, 226, 228, 230, 232, 234, 236, 238, 240, 242, 244, 246, 248, 250, 252, 
1279:.\mem1.c      ****                         254, 252, 250, 248, 246, 244, 242, 240, 238, 236, 234, 232, 230, 228, 226, 
1280:.\mem1.c      ****                         220, 218, 216, 214, 212, 210, 208, 206, 204, 202, 200, 198, 196, 194, 192, 
1281:.\mem1.c      ****                         186, 184, 182, 180, 178, 176, 174, 172, 170, 168, 166, 164, 162, 160, 158, 
1282:.\mem1.c      ****                         152, 150, 148, 146, 144, 142, 140, 138, 136, 134, 132, 130, 128, 126, 124, 
1283:.\mem1.c      ****                         118, 116, 114, 112, 110, 108, 106, 104, 102, 100, 98, 96, 94, 92, 90, 88, 8
1284:.\mem1.c      ****                         80, 78, 76, 74, 72, 70, 68, 66, 64, 62, 60, 58, 56, 54, 52, 50, 48, 46, 44,
1285:.\mem1.c      ****                         38, 36, 34, 32, 30, 28, 26, 24, 22, 20, 18, 16, 14, 12, 10, 8, 6, 4
1286:.\mem1.c      ****                         };
1287:.\mem1.c      ****             uint8 SAWTOOTHWave[WAVE_SIZE] = {
 2569              		.loc 1 1287 0
 2570 005c 07F58473 		add	r3, r7, #264
 2571 0060 B04A     		ldr	r2, .L172+20
 2572 0062 1946     		mov	r1, r3
 2573 0064 FF23     		movs	r3, #255
 2574 0066 0846     		mov	r0, r1
 2575 0068 1146     		mov	r1, r2
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cc7rr7YM.s 			page 69


 2576 006a 1A46     		mov	r2, r3
 2577 006c FFF7FEFF 		bl	memcpy
1288:.\mem1.c      ****                             1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 
1289:.\mem1.c      ****                             23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40,
1290:.\mem1.c      ****                             43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60,
1291:.\mem1.c      ****                             63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80,
1292:.\mem1.c      ****                             83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100
1293:.\mem1.c      ****                             103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 1
1294:.\mem1.c      ****                             119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 1
1295:.\mem1.c      ****                             135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 1
1296:.\mem1.c      ****                             151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 1
1297:.\mem1.c      ****                             167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 1
1298:.\mem1.c      ****                             183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 1
1299:.\mem1.c      ****                             199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 2
1300:.\mem1.c      ****                             215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 2
1301:.\mem1.c      ****                             231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 2
1302:.\mem1.c      ****                             247, 248, 249, 250, 251, 252, 253, 254,255
1303:.\mem1.c      ****                     	};
1304:.\mem1.c      ****             
1305:.\mem1.c      ****             
1306:.\mem1.c      ****             
1307:.\mem1.c      ****             uint8 newWave[WAVE_SIZE];
1308:.\mem1.c      ****             memset(newWave, 0, WAVE_SIZE);
 2578              		.loc 1 1308 0
 2579 0070 07F10803 		add	r3, r7, #8
 2580 0074 1846     		mov	r0, r3
 2581 0076 0021     		movs	r1, #0
 2582 0078 FF22     		movs	r2, #255
 2583 007a FFF7FEFF 		bl	memset
1309:.\mem1.c      ****             double val;
1310:.\mem1.c      ****             uint8 newVal = 0;
 2584              		.loc 1 1310 0
 2585 007e 0023     		movs	r3, #0
 2586 0080 87F80735 		strb	r3, [r7, #1287]
1311:.\mem1.c      ****             
1312:.\mem1.c      ****             if (waveType == SINE)
 2587              		.loc 1 1312 0
 2588 0084 FB1D     		adds	r3, r7, #7
 2589 0086 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2590 0088 002B     		cmp	r3, #0
 2591 008a 65D1     		bne	.L148
 2592              	.LBB2:
1313:.\mem1.c      ****             {
1314:.\mem1.c      ****               int i;
1315:.\mem1.c      ****               for(i = 0; i < WAVE_SIZE; i++)
 2593              		.loc 1 1315 0
 2594 008c 0023     		movs	r3, #0
 2595 008e C7F81435 		str	r3, [r7, #1300]
 2596 0092 5CE0     		b	.L149
 2597              	.L152:
1316:.\mem1.c      ****                 {
1317:.\mem1.c      ****                     val = (((double)SINEWave[i]) * (((double)amp)/255.0)) + (double)dcB;
 2598              		.loc 1 1317 0
 2599 0094 07F58162 		add	r2, r7, #1032
 2600 0098 D7F81435 		ldr	r3, [r7, #1300]
 2601 009c 1344     		add	r3, r3, r2
 2602 009e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cc7rr7YM.s 			page 70


 2603 00a0 1846     		mov	r0, r3
 2604 00a2 FFF7FEFF 		bl	__aeabi_ui2d
 2605 00a6 0446     		mov	r4, r0
 2606 00a8 0D46     		mov	r5, r1
 2607 00aa BB1D     		adds	r3, r7, #6
 2608 00ac 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2609 00ae 1846     		mov	r0, r3
 2610 00b0 FFF7FEFF 		bl	__aeabi_ui2d
 2611 00b4 0246     		mov	r2, r0
 2612 00b6 0B46     		mov	r3, r1
 2613 00b8 1046     		mov	r0, r2
 2614 00ba 1946     		mov	r1, r3
 2615 00bc 94A3     		adr	r3, .L172
 2616 00be D3E90023 		ldrd	r2, [r3]
 2617 00c2 FFF7FEFF 		bl	__aeabi_ddiv
 2618 00c6 0246     		mov	r2, r0
 2619 00c8 0B46     		mov	r3, r1
 2620 00ca 2046     		mov	r0, r4
 2621 00cc 2946     		mov	r1, r5
 2622 00ce FFF7FEFF 		bl	__aeabi_dmul
 2623 00d2 0246     		mov	r2, r0
 2624 00d4 0B46     		mov	r3, r1
 2625 00d6 1446     		mov	r4, r2
 2626 00d8 1D46     		mov	r5, r3
 2627 00da 7B1D     		adds	r3, r7, #5
 2628 00dc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2629 00de 1846     		mov	r0, r3
 2630 00e0 FFF7FEFF 		bl	__aeabi_ui2d
 2631 00e4 0246     		mov	r2, r0
 2632 00e6 0B46     		mov	r3, r1
 2633 00e8 2046     		mov	r0, r4
 2634 00ea 2946     		mov	r1, r5
 2635 00ec FFF7FEFF 		bl	__aeabi_dadd
 2636 00f0 0246     		mov	r2, r0
 2637 00f2 0B46     		mov	r3, r1
 2638 00f4 07F5A361 		add	r1, r7, #1304
 2639 00f8 C1E90023 		strd	r2, [r1]
1318:.\mem1.c      ****                     if(val > 255){val = 255;}
 2640              		.loc 1 1318 0
 2641 00fc 07F5A363 		add	r3, r7, #1304
 2642 0100 D3E90001 		ldrd	r0, [r3]
 2643 0104 82A3     		adr	r3, .L172
 2644 0106 D3E90023 		ldrd	r2, [r3]
 2645 010a FFF7FEFF 		bl	__aeabi_dcmpgt
 2646 010e 0346     		mov	r3, r0
 2647 0110 002B     		cmp	r3, #0
 2648 0112 06D0     		beq	.L150
 2649              		.loc 1 1318 0 is_stmt 0 discriminator 1
 2650 0114 7EA3     		adr	r3, .L172
 2651 0116 D3E90023 		ldrd	r2, [r3]
 2652 011a 07F5A361 		add	r1, r7, #1304
 2653 011e C1E90023 		strd	r2, [r1]
 2654              	.L150:
1319:.\mem1.c      ****                     newVal = (uint8)val; 
 2655              		.loc 1 1319 0 is_stmt 1 discriminator 2
 2656 0122 07F5A363 		add	r3, r7, #1304
 2657 0126 D3E90001 		ldrd	r0, [r3]
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cc7rr7YM.s 			page 71


 2658 012a FFF7FEFF 		bl	__aeabi_d2uiz
 2659 012e 0346     		mov	r3, r0
 2660 0130 87F80735 		strb	r3, [r7, #1287]
1320:.\mem1.c      ****                     newWave[i] = newVal;
 2661              		.loc 1 1320 0 discriminator 2
 2662 0134 07F10802 		add	r2, r7, #8
 2663 0138 D7F81435 		ldr	r3, [r7, #1300]
 2664 013c 1344     		add	r3, r3, r2
 2665 013e 97F80725 		ldrb	r2, [r7, #1287]
 2666 0142 1A70     		strb	r2, [r3]
1315:.\mem1.c      ****                 {
 2667              		.loc 1 1315 0 discriminator 2
 2668 0144 D7F81435 		ldr	r3, [r7, #1300]
 2669 0148 0133     		adds	r3, r3, #1
 2670 014a C7F81435 		str	r3, [r7, #1300]
 2671              	.L149:
1315:.\mem1.c      ****                 {
 2672              		.loc 1 1315 0 is_stmt 0 discriminator 1
 2673 014e D7F81435 		ldr	r3, [r7, #1300]
 2674 0152 FE2B     		cmp	r3, #254
 2675 0154 9EDD     		ble	.L152
 2676              	.LBE2:
 2677 0156 68E0     		b	.L153
 2678              	.L148:
1321:.\mem1.c      ****     	        }
1322:.\mem1.c      ****                            
1323:.\mem1.c      ****             }
1324:.\mem1.c      ****             
1325:.\mem1.c      ****             else if (waveType == SQUARE)
 2679              		.loc 1 1325 0 is_stmt 1
 2680 0158 FB1D     		adds	r3, r7, #7
 2681 015a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2682 015c 012B     		cmp	r3, #1
 2683 015e 64D1     		bne	.L153
 2684              	.LBB3:
1326:.\mem1.c      ****             {
1327:.\mem1.c      ****               int i;
1328:.\mem1.c      ****               for(i = 0; i < WAVE_SIZE; i++)
 2685              		.loc 1 1328 0
 2686 0160 0023     		movs	r3, #0
 2687 0162 C7F81035 		str	r3, [r7, #1296]
 2688 0166 5CE0     		b	.L154
 2689              	.L157:
1329:.\mem1.c      ****                 {
1330:.\mem1.c      ****                     val = (((double)SQUAREWave[i]) * (((double)amp)/255.0)) + (double)dcB;
 2690              		.loc 1 1330 0
 2691 0168 07F54272 		add	r2, r7, #776
 2692 016c D7F81035 		ldr	r3, [r7, #1296]
 2693 0170 1344     		add	r3, r3, r2
 2694 0172 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2695 0174 1846     		mov	r0, r3
 2696 0176 FFF7FEFF 		bl	__aeabi_ui2d
 2697 017a 0446     		mov	r4, r0
 2698 017c 0D46     		mov	r5, r1
 2699 017e BB1D     		adds	r3, r7, #6
 2700 0180 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2701 0182 1846     		mov	r0, r3
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cc7rr7YM.s 			page 72


 2702 0184 FFF7FEFF 		bl	__aeabi_ui2d
 2703 0188 0246     		mov	r2, r0
 2704 018a 0B46     		mov	r3, r1
 2705 018c 1046     		mov	r0, r2
 2706 018e 1946     		mov	r1, r3
 2707 0190 5FA3     		adr	r3, .L172
 2708 0192 D3E90023 		ldrd	r2, [r3]
 2709 0196 FFF7FEFF 		bl	__aeabi_ddiv
 2710 019a 0246     		mov	r2, r0
 2711 019c 0B46     		mov	r3, r1
 2712 019e 2046     		mov	r0, r4
 2713 01a0 2946     		mov	r1, r5
 2714 01a2 FFF7FEFF 		bl	__aeabi_dmul
 2715 01a6 0246     		mov	r2, r0
 2716 01a8 0B46     		mov	r3, r1
 2717 01aa 1446     		mov	r4, r2
 2718 01ac 1D46     		mov	r5, r3
 2719 01ae 7B1D     		adds	r3, r7, #5
 2720 01b0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2721 01b2 1846     		mov	r0, r3
 2722 01b4 FFF7FEFF 		bl	__aeabi_ui2d
 2723 01b8 0246     		mov	r2, r0
 2724 01ba 0B46     		mov	r3, r1
 2725 01bc 2046     		mov	r0, r4
 2726 01be 2946     		mov	r1, r5
 2727 01c0 FFF7FEFF 		bl	__aeabi_dadd
 2728 01c4 0246     		mov	r2, r0
 2729 01c6 0B46     		mov	r3, r1
 2730 01c8 07F5A361 		add	r1, r7, #1304
 2731 01cc C1E90023 		strd	r2, [r1]
1331:.\mem1.c      ****                     if(val > 255){val = 255;}
 2732              		.loc 1 1331 0
 2733 01d0 07F5A363 		add	r3, r7, #1304
 2734 01d4 D3E90001 		ldrd	r0, [r3]
 2735 01d8 4DA3     		adr	r3, .L172
 2736 01da D3E90023 		ldrd	r2, [r3]
 2737 01de FFF7FEFF 		bl	__aeabi_dcmpgt
 2738 01e2 0346     		mov	r3, r0
 2739 01e4 002B     		cmp	r3, #0
 2740 01e6 06D0     		beq	.L155
 2741              		.loc 1 1331 0 is_stmt 0 discriminator 1
 2742 01e8 49A3     		adr	r3, .L172
 2743 01ea D3E90023 		ldrd	r2, [r3]
 2744 01ee 07F5A361 		add	r1, r7, #1304
 2745 01f2 C1E90023 		strd	r2, [r1]
 2746              	.L155:
1332:.\mem1.c      ****                     newVal = (uint8)val; 
 2747              		.loc 1 1332 0 is_stmt 1 discriminator 2
 2748 01f6 07F5A363 		add	r3, r7, #1304
 2749 01fa D3E90001 		ldrd	r0, [r3]
 2750 01fe FFF7FEFF 		bl	__aeabi_d2uiz
 2751 0202 0346     		mov	r3, r0
 2752 0204 87F80735 		strb	r3, [r7, #1287]
1333:.\mem1.c      ****                     newWave[i] = newVal;
 2753              		.loc 1 1333 0 discriminator 2
 2754 0208 07F10802 		add	r2, r7, #8
 2755 020c D7F81035 		ldr	r3, [r7, #1296]
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cc7rr7YM.s 			page 73


 2756 0210 1344     		add	r3, r3, r2
 2757 0212 97F80725 		ldrb	r2, [r7, #1287]
 2758 0216 1A70     		strb	r2, [r3]
1328:.\mem1.c      ****                 {
 2759              		.loc 1 1328 0 discriminator 2
 2760 0218 D7F81035 		ldr	r3, [r7, #1296]
 2761 021c 0133     		adds	r3, r3, #1
 2762 021e C7F81035 		str	r3, [r7, #1296]
 2763              	.L154:
1328:.\mem1.c      ****                 {
 2764              		.loc 1 1328 0 is_stmt 0 discriminator 1
 2765 0222 D7F81035 		ldr	r3, [r7, #1296]
 2766 0226 FE2B     		cmp	r3, #254
 2767 0228 9EDD     		ble	.L157
 2768              	.L153:
 2769              	.LBE3:
1334:.\mem1.c      ****     	        }
1335:.\mem1.c      ****                            
1336:.\mem1.c      ****             }
1337:.\mem1.c      ****             
1338:.\mem1.c      ****             if (waveType == TRIANGLE)
 2770              		.loc 1 1338 0 is_stmt 1
 2771 022a FB1D     		adds	r3, r7, #7
 2772 022c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2773 022e 022B     		cmp	r3, #2
 2774 0230 64D1     		bne	.L158
 2775              	.LBB4:
1339:.\mem1.c      ****             {
1340:.\mem1.c      ****               int i;
1341:.\mem1.c      ****               for(i = 0; i < WAVE_SIZE; i++)
 2776              		.loc 1 1341 0
 2777 0232 0023     		movs	r3, #0
 2778 0234 C7F80C35 		str	r3, [r7, #1292]
 2779 0238 5CE0     		b	.L159
 2780              	.L162:
1342:.\mem1.c      ****                 {
1343:.\mem1.c      ****                     val = (((double)TRIANGLEWave[i]) * (((double)amp)/255.0)) + (double)dcB;
 2781              		.loc 1 1343 0
 2782 023a 07F50272 		add	r2, r7, #520
 2783 023e D7F80C35 		ldr	r3, [r7, #1292]
 2784 0242 1344     		add	r3, r3, r2
 2785 0244 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2786 0246 1846     		mov	r0, r3
 2787 0248 FFF7FEFF 		bl	__aeabi_ui2d
 2788 024c 0446     		mov	r4, r0
 2789 024e 0D46     		mov	r5, r1
 2790 0250 BB1D     		adds	r3, r7, #6
 2791 0252 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2792 0254 1846     		mov	r0, r3
 2793 0256 FFF7FEFF 		bl	__aeabi_ui2d
 2794 025a 0246     		mov	r2, r0
 2795 025c 0B46     		mov	r3, r1
 2796 025e 1046     		mov	r0, r2
 2797 0260 1946     		mov	r1, r3
 2798 0262 2BA3     		adr	r3, .L172
 2799 0264 D3E90023 		ldrd	r2, [r3]
 2800 0268 FFF7FEFF 		bl	__aeabi_ddiv
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cc7rr7YM.s 			page 74


 2801 026c 0246     		mov	r2, r0
 2802 026e 0B46     		mov	r3, r1
 2803 0270 2046     		mov	r0, r4
 2804 0272 2946     		mov	r1, r5
 2805 0274 FFF7FEFF 		bl	__aeabi_dmul
 2806 0278 0246     		mov	r2, r0
 2807 027a 0B46     		mov	r3, r1
 2808 027c 1446     		mov	r4, r2
 2809 027e 1D46     		mov	r5, r3
 2810 0280 7B1D     		adds	r3, r7, #5
 2811 0282 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2812 0284 1846     		mov	r0, r3
 2813 0286 FFF7FEFF 		bl	__aeabi_ui2d
 2814 028a 0246     		mov	r2, r0
 2815 028c 0B46     		mov	r3, r1
 2816 028e 2046     		mov	r0, r4
 2817 0290 2946     		mov	r1, r5
 2818 0292 FFF7FEFF 		bl	__aeabi_dadd
 2819 0296 0246     		mov	r2, r0
 2820 0298 0B46     		mov	r3, r1
 2821 029a 07F5A361 		add	r1, r7, #1304
 2822 029e C1E90023 		strd	r2, [r1]
1344:.\mem1.c      ****                     if(val > 255){val = 255;}
 2823              		.loc 1 1344 0
 2824 02a2 07F5A363 		add	r3, r7, #1304
 2825 02a6 D3E90001 		ldrd	r0, [r3]
 2826 02aa 19A3     		adr	r3, .L172
 2827 02ac D3E90023 		ldrd	r2, [r3]
 2828 02b0 FFF7FEFF 		bl	__aeabi_dcmpgt
 2829 02b4 0346     		mov	r3, r0
 2830 02b6 002B     		cmp	r3, #0
 2831 02b8 06D0     		beq	.L160
 2832              		.loc 1 1344 0 is_stmt 0 discriminator 1
 2833 02ba 15A3     		adr	r3, .L172
 2834 02bc D3E90023 		ldrd	r2, [r3]
 2835 02c0 07F5A361 		add	r1, r7, #1304
 2836 02c4 C1E90023 		strd	r2, [r1]
 2837              	.L160:
1345:.\mem1.c      ****                     newVal = (uint8)val; 
 2838              		.loc 1 1345 0 is_stmt 1 discriminator 2
 2839 02c8 07F5A363 		add	r3, r7, #1304
 2840 02cc D3E90001 		ldrd	r0, [r3]
 2841 02d0 FFF7FEFF 		bl	__aeabi_d2uiz
 2842 02d4 0346     		mov	r3, r0
 2843 02d6 87F80735 		strb	r3, [r7, #1287]
1346:.\mem1.c      ****                     newWave[i] = newVal;
 2844              		.loc 1 1346 0 discriminator 2
 2845 02da 07F10802 		add	r2, r7, #8
 2846 02de D7F80C35 		ldr	r3, [r7, #1292]
 2847 02e2 1344     		add	r3, r3, r2
 2848 02e4 97F80725 		ldrb	r2, [r7, #1287]
 2849 02e8 1A70     		strb	r2, [r3]
1341:.\mem1.c      ****                 {
 2850              		.loc 1 1341 0 discriminator 2
 2851 02ea D7F80C35 		ldr	r3, [r7, #1292]
 2852 02ee 0133     		adds	r3, r3, #1
 2853 02f0 C7F80C35 		str	r3, [r7, #1292]
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cc7rr7YM.s 			page 75


 2854              	.L159:
1341:.\mem1.c      ****                 {
 2855              		.loc 1 1341 0 is_stmt 0 discriminator 1
 2856 02f4 D7F80C35 		ldr	r3, [r7, #1292]
 2857 02f8 FE2B     		cmp	r3, #254
 2858 02fa 9EDD     		ble	.L162
 2859              	.L158:
 2860              	.LBE4:
1347:.\mem1.c      ****     	        }
1348:.\mem1.c      ****                            
1349:.\mem1.c      ****             }
1350:.\mem1.c      ****             
1351:.\mem1.c      ****            if (waveType == SAWTOOTH)
 2861              		.loc 1 1351 0 is_stmt 1
 2862 02fc FB1D     		adds	r3, r7, #7
 2863 02fe 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2864 0300 032B     		cmp	r3, #3
 2865 0302 72D1     		bne	.L163
 2866              	.LBB5:
1352:.\mem1.c      ****             {
1353:.\mem1.c      ****               int i;
1354:.\mem1.c      ****               for(i = 0; i < WAVE_SIZE; i++)
 2867              		.loc 1 1354 0
 2868 0304 0023     		movs	r3, #0
 2869 0306 C7F80835 		str	r3, [r7, #1288]
 2870 030a 6AE0     		b	.L164
 2871              	.L173:
 2872 030c AFF30080 		.align	3
 2873              	.L172:
 2874 0310 00000000 		.word	0
 2875 0314 00E06F40 		.word	1081073664
 2876 0318 00000000 		.word	.LC0
 2877 031c 00010000 		.word	.LC1
 2878 0320 00020000 		.word	.LC2
 2879 0324 00030000 		.word	.LC3
 2880              	.L167:
1355:.\mem1.c      ****                 {
1356:.\mem1.c      ****                     val = (((double)SAWTOOTHWave[i]) * (((double)amp)/255.0)) + (double)dcB;
 2881              		.loc 1 1356 0
 2882 0328 07F58472 		add	r2, r7, #264
 2883 032c D7F80835 		ldr	r3, [r7, #1288]
 2884 0330 1344     		add	r3, r3, r2
 2885 0332 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2886 0334 1846     		mov	r0, r3
 2887 0336 FFF7FEFF 		bl	__aeabi_ui2d
 2888 033a 0446     		mov	r4, r0
 2889 033c 0D46     		mov	r5, r1
 2890 033e BB1D     		adds	r3, r7, #6
 2891 0340 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2892 0342 1846     		mov	r0, r3
 2893 0344 FFF7FEFF 		bl	__aeabi_ui2d
 2894 0348 0246     		mov	r2, r0
 2895 034a 0B46     		mov	r3, r1
 2896 034c 1046     		mov	r0, r2
 2897 034e 1946     		mov	r1, r3
 2898 0350 2BA3     		adr	r3, .L174
 2899 0352 D3E90023 		ldrd	r2, [r3]
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cc7rr7YM.s 			page 76


 2900 0356 FFF7FEFF 		bl	__aeabi_ddiv
 2901 035a 0246     		mov	r2, r0
 2902 035c 0B46     		mov	r3, r1
 2903 035e 2046     		mov	r0, r4
 2904 0360 2946     		mov	r1, r5
 2905 0362 FFF7FEFF 		bl	__aeabi_dmul
 2906 0366 0246     		mov	r2, r0
 2907 0368 0B46     		mov	r3, r1
 2908 036a 1446     		mov	r4, r2
 2909 036c 1D46     		mov	r5, r3
 2910 036e 7B1D     		adds	r3, r7, #5
 2911 0370 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2912 0372 1846     		mov	r0, r3
 2913 0374 FFF7FEFF 		bl	__aeabi_ui2d
 2914 0378 0246     		mov	r2, r0
 2915 037a 0B46     		mov	r3, r1
 2916 037c 2046     		mov	r0, r4
 2917 037e 2946     		mov	r1, r5
 2918 0380 FFF7FEFF 		bl	__aeabi_dadd
 2919 0384 0246     		mov	r2, r0
 2920 0386 0B46     		mov	r3, r1
 2921 0388 07F5A361 		add	r1, r7, #1304
 2922 038c C1E90023 		strd	r2, [r1]
1357:.\mem1.c      ****                     if(val > 255){val = 255;}
 2923              		.loc 1 1357 0
 2924 0390 07F5A363 		add	r3, r7, #1304
 2925 0394 D3E90001 		ldrd	r0, [r3]
 2926 0398 19A3     		adr	r3, .L174
 2927 039a D3E90023 		ldrd	r2, [r3]
 2928 039e FFF7FEFF 		bl	__aeabi_dcmpgt
 2929 03a2 0346     		mov	r3, r0
 2930 03a4 002B     		cmp	r3, #0
 2931 03a6 06D0     		beq	.L165
 2932              		.loc 1 1357 0 is_stmt 0 discriminator 1
 2933 03a8 15A3     		adr	r3, .L174
 2934 03aa D3E90023 		ldrd	r2, [r3]
 2935 03ae 07F5A361 		add	r1, r7, #1304
 2936 03b2 C1E90023 		strd	r2, [r1]
 2937              	.L165:
1358:.\mem1.c      ****                     newVal = (uint8)val; 
 2938              		.loc 1 1358 0 is_stmt 1 discriminator 2
 2939 03b6 07F5A363 		add	r3, r7, #1304
 2940 03ba D3E90001 		ldrd	r0, [r3]
 2941 03be FFF7FEFF 		bl	__aeabi_d2uiz
 2942 03c2 0346     		mov	r3, r0
 2943 03c4 87F80735 		strb	r3, [r7, #1287]
1359:.\mem1.c      ****                     newWave[i] = newVal;
 2944              		.loc 1 1359 0 discriminator 2
 2945 03c8 07F10802 		add	r2, r7, #8
 2946 03cc D7F80835 		ldr	r3, [r7, #1288]
 2947 03d0 1344     		add	r3, r3, r2
 2948 03d2 97F80725 		ldrb	r2, [r7, #1287]
 2949 03d6 1A70     		strb	r2, [r3]
1354:.\mem1.c      ****                 {
 2950              		.loc 1 1354 0 discriminator 2
 2951 03d8 D7F80835 		ldr	r3, [r7, #1288]
 2952 03dc 0133     		adds	r3, r3, #1
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cc7rr7YM.s 			page 77


 2953 03de C7F80835 		str	r3, [r7, #1288]
 2954              	.L164:
1354:.\mem1.c      ****                 {
 2955              		.loc 1 1354 0 is_stmt 0 discriminator 1
 2956 03e2 D7F80835 		ldr	r3, [r7, #1288]
 2957 03e6 FE2B     		cmp	r3, #254
 2958 03e8 9EDD     		ble	.L167
 2959              	.L163:
 2960              	.LBE5:
1360:.\mem1.c      ****     	        }
1361:.\mem1.c      ****                            
1362:.\mem1.c      ****             }
1363:.\mem1.c      ****             
1364:.\mem1.c      ****             WaveDAC8_1_Wave2Setup(newWave, WAVE_SIZE);
 2961              		.loc 1 1364 0 is_stmt 1
 2962 03ea 07F10803 		add	r3, r7, #8
 2963 03ee 1846     		mov	r0, r3
 2964 03f0 FF21     		movs	r1, #255
 2965 03f2 FFF7FEFF 		bl	WaveDAC8_1_Wave2Setup
1365:.\mem1.c      ****             
1366:.\mem1.c      ****             
1367:.\mem1.c      ****             
1368:.\mem1.c      ****         }
 2966              		.loc 1 1368 0
 2967 03f6 07F5A467 		add	r7, r7, #1312
 2968              		.cfi_def_cfa_offset 16
 2969 03fa BD46     		mov	sp, r7
 2970              		.cfi_def_cfa_register 13
 2971              		@ sp needed
 2972 03fc B0BD     		pop	{r4, r5, r7, pc}
 2973              	.L175:
 2974 03fe 00BF     		.align	3
 2975              	.L174:
 2976 0400 00000000 		.word	0
 2977 0404 00E06F40 		.word	1081073664
 2978              		.cfi_endproc
 2979              	.LFE61:
 2980              		.size	Generate_Wave, .-Generate_Wave
 2981              		.section	.text.PWM_Control_0,"ax",%progbits
 2982              		.align	2
 2983              		.global	PWM_Control_0
 2984              		.thumb
 2985              		.thumb_func
 2986              		.type	PWM_Control_0, %function
 2987              	PWM_Control_0:
 2988              	.LFB62:
1369:.\mem1.c      ****     #endif    
1370:.\mem1.c      ****     
1371:.\mem1.c      **** /****************************************************************************************//**
1372:.\mem1.c      **** *  @brief Contains usage scenarios of the first PWM component for use by a Master device. 
1373:.\mem1.c      **** *
1374:.\mem1.c      **** *  @param cmd: 8-bit number describing a desired usage of a function associated 
1375:.\mem1.c      **** *              with the first PWM component
1376:.\mem1.c      **** *  @param val: 16-bit number containing a value that is to be written to that 
1377:.\mem1.c      **** *              function, or modify the component's operation, if applicable.
1378:.\mem1.c      **** *
1379:.\mem1.c      **** *********************************************************************************************/
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cc7rr7YM.s 			page 78


1380:.\mem1.c      ****  
1381:.\mem1.c      ****     #ifdef CY_PWM_PWM_1_H
1382:.\mem1.c      ****         bool PWM_Control_0(uint8 cmd, uint16 val, uint32 *result)
1383:.\mem1.c      ****         {
 2989              		.loc 1 1383 0
 2990              		.cfi_startproc
 2991              		@ args = 0, pretend = 0, frame = 16
 2992              		@ frame_needed = 1, uses_anonymous_args = 0
 2993 0000 80B5     		push	{r7, lr}
 2994              		.cfi_def_cfa_offset 8
 2995              		.cfi_offset 7, -8
 2996              		.cfi_offset 14, -4
 2997 0002 84B0     		sub	sp, sp, #16
 2998              		.cfi_def_cfa_offset 24
 2999 0004 00AF     		add	r7, sp, #0
 3000              		.cfi_def_cfa_register 7
 3001 0006 0346     		mov	r3, r0
 3002 0008 3A60     		str	r2, [r7]
 3003 000a FB71     		strb	r3, [r7, #7]
 3004 000c 0B46     		mov	r3, r1	@ movhi
 3005 000e BB80     		strh	r3, [r7, #4]	@ movhi
1384:.\mem1.c      ****             bool return_flag = 0;
 3006              		.loc 1 1384 0
 3007 0010 0023     		movs	r3, #0
 3008 0012 FB73     		strb	r3, [r7, #15]
1385:.\mem1.c      ****             
1386:.\mem1.c      ****             switch(cmd)
 3009              		.loc 1 1386 0
 3010 0014 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3011 0016 0E2B     		cmp	r3, #14
 3012 0018 2FD0     		beq	.L178
 3013 001a 0E2B     		cmp	r3, #14
 3014 001c 0BDC     		bgt	.L179
 3015 001e 012B     		cmp	r3, #1
 3016 0020 1AD0     		beq	.L180
 3017 0022 012B     		cmp	r3, #1
 3018 0024 02DC     		bgt	.L181
 3019 0026 002B     		cmp	r3, #0
 3020 0028 13D0     		beq	.L182
 3021 002a 4DE0     		b	.L177
 3022              	.L181:
 3023 002c 0C2B     		cmp	r3, #12
 3024 002e 16D0     		beq	.L183
 3025 0030 0D2B     		cmp	r3, #13
 3026 0032 19D0     		beq	.L184
 3027 0034 48E0     		b	.L177
 3028              	.L179:
 3029 0036 192B     		cmp	r3, #25
 3030 0038 30D0     		beq	.L185
 3031 003a 192B     		cmp	r3, #25
 3032 003c 04DC     		bgt	.L186
 3033 003e 0F2B     		cmp	r3, #15
 3034 0040 20D0     		beq	.L187
 3035 0042 182B     		cmp	r3, #24
 3036 0044 27D0     		beq	.L188
 3037 0046 3FE0     		b	.L177
 3038              	.L186:
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cc7rr7YM.s 			page 79


 3039 0048 1A2B     		cmp	r3, #26
 3040 004a 2AD0     		beq	.L189
 3041 004c FF2B     		cmp	r3, #255
 3042 004e 2BD0     		beq	.L190
 3043 0050 3AE0     		b	.L177
 3044              	.L182:
1387:.\mem1.c      ****             {
1388:.\mem1.c      ****                 case 0x00: PWM_1_Start(); break;
 3045              		.loc 1 1388 0
 3046 0052 FFF7FEFF 		bl	PWM_1_Start
 3047 0056 37E0     		b	.L177
 3048              	.L180:
1389:.\mem1.c      ****                 case 0x01: PWM_1_Stop(); break;
 3049              		.loc 1 1389 0
 3050 0058 FFF7FEFF 		bl	PWM_1_Stop
 3051 005c 34E0     		b	.L177
 3052              	.L183:
1390:.\mem1.c      ****                 case 0x0C: PWM_1_WritePeriod(val); break;
 3053              		.loc 1 1390 0
 3054 005e BB88     		ldrh	r3, [r7, #4]
 3055 0060 1846     		mov	r0, r3
 3056 0062 FFF7FEFF 		bl	PWM_1_WritePeriod
 3057 0066 2FE0     		b	.L177
 3058              	.L184:
1391:.\mem1.c      ****                 case 0x0D: *result = PWM_1_ReadPeriod(); return_flag = 1; break;
 3059              		.loc 1 1391 0
 3060 0068 FFF7FEFF 		bl	PWM_1_ReadPeriod
 3061 006c 0346     		mov	r3, r0
 3062 006e 1A46     		mov	r2, r3
 3063 0070 3B68     		ldr	r3, [r7]
 3064 0072 1A60     		str	r2, [r3]
 3065 0074 0123     		movs	r3, #1
 3066 0076 FB73     		strb	r3, [r7, #15]
 3067 0078 26E0     		b	.L177
 3068              	.L178:
1392:.\mem1.c      ****                 case 0x0E: PWM_1_WriteCompare(val); break;
 3069              		.loc 1 1392 0
 3070 007a BB88     		ldrh	r3, [r7, #4]
 3071 007c 1846     		mov	r0, r3
 3072 007e FFF7FEFF 		bl	PWM_1_WriteCompare
 3073 0082 21E0     		b	.L177
 3074              	.L187:
1393:.\mem1.c      ****                 case 0x0F: *result  = PWM_1_ReadCompare(); return_flag = 1; break;
 3075              		.loc 1 1393 0
 3076 0084 FFF7FEFF 		bl	PWM_1_ReadCompare
 3077 0088 0346     		mov	r3, r0
 3078 008a 1A46     		mov	r2, r3
 3079 008c 3B68     		ldr	r3, [r7]
 3080 008e 1A60     		str	r2, [r3]
 3081 0090 0123     		movs	r3, #1
 3082 0092 FB73     		strb	r3, [r7, #15]
 3083 0094 18E0     		b	.L177
 3084              	.L188:
1394:.\mem1.c      ****                 case 0x18: PWM_1_ClearFIFO(); break; 
 3085              		.loc 1 1394 0
 3086 0096 FFF7FEFF 		bl	PWM_1_ClearFIFO
 3087 009a 15E0     		b	.L177
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cc7rr7YM.s 			page 80


 3088              	.L185:
1395:.\mem1.c      ****                 case 0x19: PWM_1_Sleep(); break; 
 3089              		.loc 1 1395 0
 3090 009c FFF7FEFF 		bl	PWM_1_Sleep
 3091 00a0 12E0     		b	.L177
 3092              	.L189:
1396:.\mem1.c      ****                 case 0x1A: PWM_1_Wakeup(); break; 
 3093              		.loc 1 1396 0
 3094 00a2 FFF7FEFF 		bl	PWM_1_Wakeup
 3095 00a6 0FE0     		b	.L177
 3096              	.L190:
1397:.\mem1.c      ****                 case 0xFF: PWM_CLK_1_SetDividerValue(val); *result = PWM_CLK_1_GetDividerRegister()
 3097              		.loc 1 1397 0
 3098 00a8 BB88     		ldrh	r3, [r7, #4]	@ movhi
 3099 00aa 013B     		subs	r3, r3, #1
 3100 00ac 9BB2     		uxth	r3, r3
 3101 00ae 1846     		mov	r0, r3
 3102 00b0 0121     		movs	r1, #1
 3103 00b2 FFF7FEFF 		bl	PWM_CLK_1_SetDividerRegister
 3104 00b6 FFF7FEFF 		bl	PWM_CLK_1_GetDividerRegister
 3105 00ba 0346     		mov	r3, r0
 3106 00bc 1A46     		mov	r2, r3
 3107 00be 3B68     		ldr	r3, [r7]
 3108 00c0 1A60     		str	r2, [r3]
 3109 00c2 0123     		movs	r3, #1
 3110 00c4 FB73     		strb	r3, [r7, #15]
 3111 00c6 00BF     		nop
 3112              	.L177:
1398:.\mem1.c      ****                 
1399:.\mem1.c      ****             }
1400:.\mem1.c      ****             
1401:.\mem1.c      ****             return return_flag;
 3113              		.loc 1 1401 0
 3114 00c8 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
1402:.\mem1.c      ****         }
 3115              		.loc 1 1402 0
 3116 00ca 1846     		mov	r0, r3
 3117 00cc 1037     		adds	r7, r7, #16
 3118              		.cfi_def_cfa_offset 8
 3119 00ce BD46     		mov	sp, r7
 3120              		.cfi_def_cfa_register 13
 3121              		@ sp needed
 3122 00d0 80BD     		pop	{r7, pc}
 3123              		.cfi_endproc
 3124              	.LFE62:
 3125              		.size	PWM_Control_0, .-PWM_Control_0
 3126 00d2 00BF     		.section	.text.PWM_Control_1,"ax",%progbits
 3127              		.align	2
 3128              		.global	PWM_Control_1
 3129              		.thumb
 3130              		.thumb_func
 3131              		.type	PWM_Control_1, %function
 3132              	PWM_Control_1:
 3133              	.LFB63:
1403:.\mem1.c      ****     #endif
1404:.\mem1.c      **** /****************************************************************************************//**
1405:.\mem1.c      **** *  @brief Contains usage scenarios of the second PWM component for use by a Master device. 
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cc7rr7YM.s 			page 81


1406:.\mem1.c      **** *
1407:.\mem1.c      **** *  @param cmd: 8-bit number describing a desired usage of a function associated 
1408:.\mem1.c      **** *              with the second PWM component
1409:.\mem1.c      **** *  @param val: 16-bit number containing a value that is to be written to that 
1410:.\mem1.c      **** *              function, or modify the component's operation, if applicable.
1411:.\mem1.c      **** *
1412:.\mem1.c      **** *********************************************************************************************/
1413:.\mem1.c      ****     
1414:.\mem1.c      ****      #ifdef CY_PWM_PWM_2_H
1415:.\mem1.c      ****         bool PWM_Control_1(uint8 cmd, uint16 val, uint32 *result)
1416:.\mem1.c      ****         {
 3134              		.loc 1 1416 0
 3135              		.cfi_startproc
 3136              		@ args = 0, pretend = 0, frame = 16
 3137              		@ frame_needed = 1, uses_anonymous_args = 0
 3138 0000 80B5     		push	{r7, lr}
 3139              		.cfi_def_cfa_offset 8
 3140              		.cfi_offset 7, -8
 3141              		.cfi_offset 14, -4
 3142 0002 84B0     		sub	sp, sp, #16
 3143              		.cfi_def_cfa_offset 24
 3144 0004 00AF     		add	r7, sp, #0
 3145              		.cfi_def_cfa_register 7
 3146 0006 0346     		mov	r3, r0
 3147 0008 3A60     		str	r2, [r7]
 3148 000a FB71     		strb	r3, [r7, #7]
 3149 000c 0B46     		mov	r3, r1	@ movhi
 3150 000e BB80     		strh	r3, [r7, #4]	@ movhi
1417:.\mem1.c      ****             bool return_flag = 0;
 3151              		.loc 1 1417 0
 3152 0010 0023     		movs	r3, #0
 3153 0012 FB73     		strb	r3, [r7, #15]
1418:.\mem1.c      ****             
1419:.\mem1.c      ****             switch(cmd)
 3154              		.loc 1 1419 0
 3155 0014 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3156 0016 0E2B     		cmp	r3, #14
 3157 0018 2FD0     		beq	.L194
 3158 001a 0E2B     		cmp	r3, #14
 3159 001c 0BDC     		bgt	.L195
 3160 001e 012B     		cmp	r3, #1
 3161 0020 1AD0     		beq	.L196
 3162 0022 012B     		cmp	r3, #1
 3163 0024 02DC     		bgt	.L197
 3164 0026 002B     		cmp	r3, #0
 3165 0028 13D0     		beq	.L198
 3166 002a 4DE0     		b	.L193
 3167              	.L197:
 3168 002c 0C2B     		cmp	r3, #12
 3169 002e 16D0     		beq	.L199
 3170 0030 0D2B     		cmp	r3, #13
 3171 0032 19D0     		beq	.L200
 3172 0034 48E0     		b	.L193
 3173              	.L195:
 3174 0036 192B     		cmp	r3, #25
 3175 0038 30D0     		beq	.L201
 3176 003a 192B     		cmp	r3, #25
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cc7rr7YM.s 			page 82


 3177 003c 04DC     		bgt	.L202
 3178 003e 0F2B     		cmp	r3, #15
 3179 0040 20D0     		beq	.L203
 3180 0042 182B     		cmp	r3, #24
 3181 0044 27D0     		beq	.L204
 3182 0046 3FE0     		b	.L193
 3183              	.L202:
 3184 0048 1A2B     		cmp	r3, #26
 3185 004a 2AD0     		beq	.L205
 3186 004c FF2B     		cmp	r3, #255
 3187 004e 2BD0     		beq	.L206
 3188 0050 3AE0     		b	.L193
 3189              	.L198:
1420:.\mem1.c      ****             {
1421:.\mem1.c      ****                 case 0x00: PWM_2_Start(); break;
 3190              		.loc 1 1421 0
 3191 0052 FFF7FEFF 		bl	PWM_2_Start
 3192 0056 37E0     		b	.L193
 3193              	.L196:
1422:.\mem1.c      ****                 case 0x01: PWM_2_Stop(); break;
 3194              		.loc 1 1422 0
 3195 0058 FFF7FEFF 		bl	PWM_2_Stop
 3196 005c 34E0     		b	.L193
 3197              	.L199:
1423:.\mem1.c      ****                 case 0x0C: PWM_2_WritePeriod(val); break;
 3198              		.loc 1 1423 0
 3199 005e BB88     		ldrh	r3, [r7, #4]
 3200 0060 1846     		mov	r0, r3
 3201 0062 FFF7FEFF 		bl	PWM_2_WritePeriod
 3202 0066 2FE0     		b	.L193
 3203              	.L200:
1424:.\mem1.c      ****                 case 0x0D: *result = PWM_2_ReadPeriod(); return_flag = 1; break;
 3204              		.loc 1 1424 0
 3205 0068 FFF7FEFF 		bl	PWM_2_ReadPeriod
 3206 006c 0346     		mov	r3, r0
 3207 006e 1A46     		mov	r2, r3
 3208 0070 3B68     		ldr	r3, [r7]
 3209 0072 1A60     		str	r2, [r3]
 3210 0074 0123     		movs	r3, #1
 3211 0076 FB73     		strb	r3, [r7, #15]
 3212 0078 26E0     		b	.L193
 3213              	.L194:
1425:.\mem1.c      ****                 case 0x0E: PWM_2_WriteCompare(val); break;
 3214              		.loc 1 1425 0
 3215 007a BB88     		ldrh	r3, [r7, #4]
 3216 007c 1846     		mov	r0, r3
 3217 007e FFF7FEFF 		bl	PWM_2_WriteCompare
 3218 0082 21E0     		b	.L193
 3219              	.L203:
1426:.\mem1.c      ****                 case 0x0F: *result  = PWM_2_ReadCompare(); return_flag = 1; break;
 3220              		.loc 1 1426 0
 3221 0084 FFF7FEFF 		bl	PWM_2_ReadCompare
 3222 0088 0346     		mov	r3, r0
 3223 008a 1A46     		mov	r2, r3
 3224 008c 3B68     		ldr	r3, [r7]
 3225 008e 1A60     		str	r2, [r3]
 3226 0090 0123     		movs	r3, #1
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cc7rr7YM.s 			page 83


 3227 0092 FB73     		strb	r3, [r7, #15]
 3228 0094 18E0     		b	.L193
 3229              	.L204:
1427:.\mem1.c      ****                 case 0x18: PWM_2_ClearFIFO(); break; 
 3230              		.loc 1 1427 0
 3231 0096 FFF7FEFF 		bl	PWM_2_ClearFIFO
 3232 009a 15E0     		b	.L193
 3233              	.L201:
1428:.\mem1.c      ****                 case 0x19: PWM_2_Sleep(); break; 
 3234              		.loc 1 1428 0
 3235 009c FFF7FEFF 		bl	PWM_2_Sleep
 3236 00a0 12E0     		b	.L193
 3237              	.L205:
1429:.\mem1.c      ****                 case 0x1A: PWM_2_Wakeup(); break; 
 3238              		.loc 1 1429 0
 3239 00a2 FFF7FEFF 		bl	PWM_2_Wakeup
 3240 00a6 0FE0     		b	.L193
 3241              	.L206:
1430:.\mem1.c      ****                 case 0xFF: PWM_CLK_1_SetDividerValue(val); *result = PWM_CLK_1_GetDividerRegister()
 3242              		.loc 1 1430 0
 3243 00a8 BB88     		ldrh	r3, [r7, #4]	@ movhi
 3244 00aa 013B     		subs	r3, r3, #1
 3245 00ac 9BB2     		uxth	r3, r3
 3246 00ae 1846     		mov	r0, r3
 3247 00b0 0121     		movs	r1, #1
 3248 00b2 FFF7FEFF 		bl	PWM_CLK_1_SetDividerRegister
 3249 00b6 FFF7FEFF 		bl	PWM_CLK_1_GetDividerRegister
 3250 00ba 0346     		mov	r3, r0
 3251 00bc 1A46     		mov	r2, r3
 3252 00be 3B68     		ldr	r3, [r7]
 3253 00c0 1A60     		str	r2, [r3]
 3254 00c2 0123     		movs	r3, #1
 3255 00c4 FB73     		strb	r3, [r7, #15]
 3256 00c6 00BF     		nop
 3257              	.L193:
1431:.\mem1.c      ****                 
1432:.\mem1.c      ****             }
1433:.\mem1.c      ****             
1434:.\mem1.c      ****             return return_flag;
 3258              		.loc 1 1434 0
 3259 00c8 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
1435:.\mem1.c      ****         }
 3260              		.loc 1 1435 0
 3261 00ca 1846     		mov	r0, r3
 3262 00cc 1037     		adds	r7, r7, #16
 3263              		.cfi_def_cfa_offset 8
 3264 00ce BD46     		mov	sp, r7
 3265              		.cfi_def_cfa_register 13
 3266              		@ sp needed
 3267 00d0 80BD     		pop	{r7, pc}
 3268              		.cfi_endproc
 3269              	.LFE63:
 3270              		.size	PWM_Control_1, .-PWM_Control_1
 3271 00d2 00BF     		.section	.text.PWM_Control_2,"ax",%progbits
 3272              		.align	2
 3273              		.global	PWM_Control_2
 3274              		.thumb
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cc7rr7YM.s 			page 84


 3275              		.thumb_func
 3276              		.type	PWM_Control_2, %function
 3277              	PWM_Control_2:
 3278              	.LFB64:
1436:.\mem1.c      ****     #endif
1437:.\mem1.c      **** /****************************************************************************************//**
1438:.\mem1.c      **** *  @brief Contains usage scenarios of the third PWM component for use by a Master device. 
1439:.\mem1.c      **** *
1440:.\mem1.c      **** *  @param cmd: 8-bit number describing a desired usage of a function associated 
1441:.\mem1.c      **** *              with the third PWM component
1442:.\mem1.c      **** *  @param val: 16-bit number containing a value that is to be written to that 
1443:.\mem1.c      **** *              function, or modify the component's operation, if applicable.
1444:.\mem1.c      **** *
1445:.\mem1.c      **** *********************************************************************************************/
1446:.\mem1.c      ****      #ifdef CY_PWM_PWM_3_H
1447:.\mem1.c      ****         bool PWM_Control_2(uint8 cmd, uint16 val, uint32 *result)
1448:.\mem1.c      ****         {
 3279              		.loc 1 1448 0
 3280              		.cfi_startproc
 3281              		@ args = 0, pretend = 0, frame = 16
 3282              		@ frame_needed = 1, uses_anonymous_args = 0
 3283 0000 80B5     		push	{r7, lr}
 3284              		.cfi_def_cfa_offset 8
 3285              		.cfi_offset 7, -8
 3286              		.cfi_offset 14, -4
 3287 0002 84B0     		sub	sp, sp, #16
 3288              		.cfi_def_cfa_offset 24
 3289 0004 00AF     		add	r7, sp, #0
 3290              		.cfi_def_cfa_register 7
 3291 0006 0346     		mov	r3, r0
 3292 0008 3A60     		str	r2, [r7]
 3293 000a FB71     		strb	r3, [r7, #7]
 3294 000c 0B46     		mov	r3, r1	@ movhi
 3295 000e BB80     		strh	r3, [r7, #4]	@ movhi
1449:.\mem1.c      ****             bool return_flag = 0;
 3296              		.loc 1 1449 0
 3297 0010 0023     		movs	r3, #0
 3298 0012 FB73     		strb	r3, [r7, #15]
1450:.\mem1.c      ****             
1451:.\mem1.c      ****             switch(cmd)
 3299              		.loc 1 1451 0
 3300 0014 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3301 0016 0E2B     		cmp	r3, #14
 3302 0018 2FD0     		beq	.L210
 3303 001a 0E2B     		cmp	r3, #14
 3304 001c 0BDC     		bgt	.L211
 3305 001e 012B     		cmp	r3, #1
 3306 0020 1AD0     		beq	.L212
 3307 0022 012B     		cmp	r3, #1
 3308 0024 02DC     		bgt	.L213
 3309 0026 002B     		cmp	r3, #0
 3310 0028 13D0     		beq	.L214
 3311 002a 4DE0     		b	.L209
 3312              	.L213:
 3313 002c 0C2B     		cmp	r3, #12
 3314 002e 16D0     		beq	.L215
 3315 0030 0D2B     		cmp	r3, #13
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cc7rr7YM.s 			page 85


 3316 0032 19D0     		beq	.L216
 3317 0034 48E0     		b	.L209
 3318              	.L211:
 3319 0036 192B     		cmp	r3, #25
 3320 0038 30D0     		beq	.L217
 3321 003a 192B     		cmp	r3, #25
 3322 003c 04DC     		bgt	.L218
 3323 003e 0F2B     		cmp	r3, #15
 3324 0040 20D0     		beq	.L219
 3325 0042 182B     		cmp	r3, #24
 3326 0044 27D0     		beq	.L220
 3327 0046 3FE0     		b	.L209
 3328              	.L218:
 3329 0048 1A2B     		cmp	r3, #26
 3330 004a 2AD0     		beq	.L221
 3331 004c FF2B     		cmp	r3, #255
 3332 004e 2BD0     		beq	.L222
 3333 0050 3AE0     		b	.L209
 3334              	.L214:
1452:.\mem1.c      ****             {
1453:.\mem1.c      ****                 case 0x00: PWM_3_Start(); break;
 3335              		.loc 1 1453 0
 3336 0052 FFF7FEFF 		bl	PWM_3_Start
 3337 0056 37E0     		b	.L209
 3338              	.L212:
1454:.\mem1.c      ****                 case 0x01: PWM_3_Stop(); break;
 3339              		.loc 1 1454 0
 3340 0058 FFF7FEFF 		bl	PWM_3_Stop
 3341 005c 34E0     		b	.L209
 3342              	.L215:
1455:.\mem1.c      ****                 case 0x0C: PWM_3_WritePeriod(val); break;
 3343              		.loc 1 1455 0
 3344 005e BB88     		ldrh	r3, [r7, #4]
 3345 0060 1846     		mov	r0, r3
 3346 0062 FFF7FEFF 		bl	PWM_3_WritePeriod
 3347 0066 2FE0     		b	.L209
 3348              	.L216:
1456:.\mem1.c      ****                 case 0x0D: *result = PWM_3_ReadPeriod(); return_flag = 1; break;
 3349              		.loc 1 1456 0
 3350 0068 FFF7FEFF 		bl	PWM_3_ReadPeriod
 3351 006c 0346     		mov	r3, r0
 3352 006e 1A46     		mov	r2, r3
 3353 0070 3B68     		ldr	r3, [r7]
 3354 0072 1A60     		str	r2, [r3]
 3355 0074 0123     		movs	r3, #1
 3356 0076 FB73     		strb	r3, [r7, #15]
 3357 0078 26E0     		b	.L209
 3358              	.L210:
1457:.\mem1.c      ****                 case 0x0E: PWM_3_WriteCompare(val); break;
 3359              		.loc 1 1457 0
 3360 007a BB88     		ldrh	r3, [r7, #4]
 3361 007c 1846     		mov	r0, r3
 3362 007e FFF7FEFF 		bl	PWM_3_WriteCompare
 3363 0082 21E0     		b	.L209
 3364              	.L219:
1458:.\mem1.c      ****                 case 0x0F: *result  = PWM_3_ReadCompare(); return_flag = 1; break;
 3365              		.loc 1 1458 0
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cc7rr7YM.s 			page 86


 3366 0084 FFF7FEFF 		bl	PWM_3_ReadCompare
 3367 0088 0346     		mov	r3, r0
 3368 008a 1A46     		mov	r2, r3
 3369 008c 3B68     		ldr	r3, [r7]
 3370 008e 1A60     		str	r2, [r3]
 3371 0090 0123     		movs	r3, #1
 3372 0092 FB73     		strb	r3, [r7, #15]
 3373 0094 18E0     		b	.L209
 3374              	.L220:
1459:.\mem1.c      ****                 case 0x18: PWM_3_ClearFIFO(); break; 
 3375              		.loc 1 1459 0
 3376 0096 FFF7FEFF 		bl	PWM_3_ClearFIFO
 3377 009a 15E0     		b	.L209
 3378              	.L217:
1460:.\mem1.c      ****                 case 0x19: PWM_3_Sleep(); break; 
 3379              		.loc 1 1460 0
 3380 009c FFF7FEFF 		bl	PWM_3_Sleep
 3381 00a0 12E0     		b	.L209
 3382              	.L221:
1461:.\mem1.c      ****                 case 0x1A: PWM_3_Wakeup(); break; 
 3383              		.loc 1 1461 0
 3384 00a2 FFF7FEFF 		bl	PWM_3_Wakeup
 3385 00a6 0FE0     		b	.L209
 3386              	.L222:
1462:.\mem1.c      ****                 case 0xFF: PWM_CLK_2_SetDividerValue(val); *result = PWM_CLK_2_GetDividerRegister()
 3387              		.loc 1 1462 0
 3388 00a8 BB88     		ldrh	r3, [r7, #4]	@ movhi
 3389 00aa 013B     		subs	r3, r3, #1
 3390 00ac 9BB2     		uxth	r3, r3
 3391 00ae 1846     		mov	r0, r3
 3392 00b0 0121     		movs	r1, #1
 3393 00b2 FFF7FEFF 		bl	PWM_CLK_2_SetDividerRegister
 3394 00b6 FFF7FEFF 		bl	PWM_CLK_2_GetDividerRegister
 3395 00ba 0346     		mov	r3, r0
 3396 00bc 1A46     		mov	r2, r3
 3397 00be 3B68     		ldr	r3, [r7]
 3398 00c0 1A60     		str	r2, [r3]
 3399 00c2 0123     		movs	r3, #1
 3400 00c4 FB73     		strb	r3, [r7, #15]
 3401 00c6 00BF     		nop
 3402              	.L209:
1463:.\mem1.c      ****                 
1464:.\mem1.c      ****             }
1465:.\mem1.c      ****             
1466:.\mem1.c      ****             return return_flag;
 3403              		.loc 1 1466 0
 3404 00c8 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
1467:.\mem1.c      ****         }
 3405              		.loc 1 1467 0
 3406 00ca 1846     		mov	r0, r3
 3407 00cc 1037     		adds	r7, r7, #16
 3408              		.cfi_def_cfa_offset 8
 3409 00ce BD46     		mov	sp, r7
 3410              		.cfi_def_cfa_register 13
 3411              		@ sp needed
 3412 00d0 80BD     		pop	{r7, pc}
 3413              		.cfi_endproc
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cc7rr7YM.s 			page 87


 3414              	.LFE64:
 3415              		.size	PWM_Control_2, .-PWM_Control_2
 3416 00d2 00BF     		.section	.text.PWM_Control_3,"ax",%progbits
 3417              		.align	2
 3418              		.global	PWM_Control_3
 3419              		.thumb
 3420              		.thumb_func
 3421              		.type	PWM_Control_3, %function
 3422              	PWM_Control_3:
 3423              	.LFB65:
1468:.\mem1.c      ****     #endif
1469:.\mem1.c      **** /****************************************************************************************//**
1470:.\mem1.c      **** *  @brief Contains usage scenarios of the fourth PWM component for use by a Master device. 
1471:.\mem1.c      **** *
1472:.\mem1.c      **** *  @param cmd: 8-bit number describing a desired usage of a function associated 
1473:.\mem1.c      **** *              with the fourth PWM component
1474:.\mem1.c      **** *  @param val: 16-bit number containing a value that is to be written to that 
1475:.\mem1.c      **** *              function, or modify the component's operation, if applicable.
1476:.\mem1.c      **** *
1477:.\mem1.c      **** *********************************************************************************************/
1478:.\mem1.c      ****      #ifdef CY_PWM_PWM_4_H
1479:.\mem1.c      ****         bool PWM_Control_3(uint8 cmd, uint16 val, uint32 *result)
1480:.\mem1.c      ****         {
 3424              		.loc 1 1480 0
 3425              		.cfi_startproc
 3426              		@ args = 0, pretend = 0, frame = 16
 3427              		@ frame_needed = 1, uses_anonymous_args = 0
 3428 0000 80B5     		push	{r7, lr}
 3429              		.cfi_def_cfa_offset 8
 3430              		.cfi_offset 7, -8
 3431              		.cfi_offset 14, -4
 3432 0002 84B0     		sub	sp, sp, #16
 3433              		.cfi_def_cfa_offset 24
 3434 0004 00AF     		add	r7, sp, #0
 3435              		.cfi_def_cfa_register 7
 3436 0006 0346     		mov	r3, r0
 3437 0008 3A60     		str	r2, [r7]
 3438 000a FB71     		strb	r3, [r7, #7]
 3439 000c 0B46     		mov	r3, r1	@ movhi
 3440 000e BB80     		strh	r3, [r7, #4]	@ movhi
1481:.\mem1.c      ****             bool return_flag = 0;
 3441              		.loc 1 1481 0
 3442 0010 0023     		movs	r3, #0
 3443 0012 FB73     		strb	r3, [r7, #15]
1482:.\mem1.c      ****             
1483:.\mem1.c      ****             switch(cmd)
 3444              		.loc 1 1483 0
 3445 0014 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3446 0016 0E2B     		cmp	r3, #14
 3447 0018 2FD0     		beq	.L226
 3448 001a 0E2B     		cmp	r3, #14
 3449 001c 0BDC     		bgt	.L227
 3450 001e 012B     		cmp	r3, #1
 3451 0020 1AD0     		beq	.L228
 3452 0022 012B     		cmp	r3, #1
 3453 0024 02DC     		bgt	.L229
 3454 0026 002B     		cmp	r3, #0
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cc7rr7YM.s 			page 88


 3455 0028 13D0     		beq	.L230
 3456 002a 4DE0     		b	.L225
 3457              	.L229:
 3458 002c 0C2B     		cmp	r3, #12
 3459 002e 16D0     		beq	.L231
 3460 0030 0D2B     		cmp	r3, #13
 3461 0032 19D0     		beq	.L232
 3462 0034 48E0     		b	.L225
 3463              	.L227:
 3464 0036 192B     		cmp	r3, #25
 3465 0038 30D0     		beq	.L233
 3466 003a 192B     		cmp	r3, #25
 3467 003c 04DC     		bgt	.L234
 3468 003e 0F2B     		cmp	r3, #15
 3469 0040 20D0     		beq	.L235
 3470 0042 182B     		cmp	r3, #24
 3471 0044 27D0     		beq	.L236
 3472 0046 3FE0     		b	.L225
 3473              	.L234:
 3474 0048 1A2B     		cmp	r3, #26
 3475 004a 2AD0     		beq	.L237
 3476 004c FF2B     		cmp	r3, #255
 3477 004e 2BD0     		beq	.L238
 3478 0050 3AE0     		b	.L225
 3479              	.L230:
1484:.\mem1.c      ****             {
1485:.\mem1.c      ****                 case 0x00: PWM_4_Start(); break;
 3480              		.loc 1 1485 0
 3481 0052 FFF7FEFF 		bl	PWM_4_Start
 3482 0056 37E0     		b	.L225
 3483              	.L228:
1486:.\mem1.c      ****                 case 0x01: PWM_4_Stop(); break;
 3484              		.loc 1 1486 0
 3485 0058 FFF7FEFF 		bl	PWM_4_Stop
 3486 005c 34E0     		b	.L225
 3487              	.L231:
1487:.\mem1.c      ****                 case 0x0C: PWM_4_WritePeriod(val); break;
 3488              		.loc 1 1487 0
 3489 005e BB88     		ldrh	r3, [r7, #4]
 3490 0060 1846     		mov	r0, r3
 3491 0062 FFF7FEFF 		bl	PWM_4_WritePeriod
 3492 0066 2FE0     		b	.L225
 3493              	.L232:
1488:.\mem1.c      ****                 case 0x0D: *result = PWM_4_ReadPeriod(); return_flag = 1; break;
 3494              		.loc 1 1488 0
 3495 0068 FFF7FEFF 		bl	PWM_4_ReadPeriod
 3496 006c 0346     		mov	r3, r0
 3497 006e 1A46     		mov	r2, r3
 3498 0070 3B68     		ldr	r3, [r7]
 3499 0072 1A60     		str	r2, [r3]
 3500 0074 0123     		movs	r3, #1
 3501 0076 FB73     		strb	r3, [r7, #15]
 3502 0078 26E0     		b	.L225
 3503              	.L226:
1489:.\mem1.c      ****                 case 0x0E: PWM_4_WriteCompare(val); break;
 3504              		.loc 1 1489 0
 3505 007a BB88     		ldrh	r3, [r7, #4]
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cc7rr7YM.s 			page 89


 3506 007c 1846     		mov	r0, r3
 3507 007e FFF7FEFF 		bl	PWM_4_WriteCompare
 3508 0082 21E0     		b	.L225
 3509              	.L235:
1490:.\mem1.c      ****                 case 0x0F: *result  = PWM_4_ReadCompare(); return_flag = 1; break;
 3510              		.loc 1 1490 0
 3511 0084 FFF7FEFF 		bl	PWM_4_ReadCompare
 3512 0088 0346     		mov	r3, r0
 3513 008a 1A46     		mov	r2, r3
 3514 008c 3B68     		ldr	r3, [r7]
 3515 008e 1A60     		str	r2, [r3]
 3516 0090 0123     		movs	r3, #1
 3517 0092 FB73     		strb	r3, [r7, #15]
 3518 0094 18E0     		b	.L225
 3519              	.L236:
1491:.\mem1.c      ****                 case 0x18: PWM_4_ClearFIFO(); break; 
 3520              		.loc 1 1491 0
 3521 0096 FFF7FEFF 		bl	PWM_4_ClearFIFO
 3522 009a 15E0     		b	.L225
 3523              	.L233:
1492:.\mem1.c      ****                 case 0x19: PWM_4_Sleep(); break; 
 3524              		.loc 1 1492 0
 3525 009c FFF7FEFF 		bl	PWM_4_Sleep
 3526 00a0 12E0     		b	.L225
 3527              	.L237:
1493:.\mem1.c      ****                 case 0x1A: PWM_4_Wakeup(); break; 
 3528              		.loc 1 1493 0
 3529 00a2 FFF7FEFF 		bl	PWM_4_Wakeup
 3530 00a6 0FE0     		b	.L225
 3531              	.L238:
1494:.\mem1.c      ****                 case 0xFF: PWM_CLK_2_SetDividerValue(val); *result = PWM_CLK_2_GetDividerRegister()
 3532              		.loc 1 1494 0
 3533 00a8 BB88     		ldrh	r3, [r7, #4]	@ movhi
 3534 00aa 013B     		subs	r3, r3, #1
 3535 00ac 9BB2     		uxth	r3, r3
 3536 00ae 1846     		mov	r0, r3
 3537 00b0 0121     		movs	r1, #1
 3538 00b2 FFF7FEFF 		bl	PWM_CLK_2_SetDividerRegister
 3539 00b6 FFF7FEFF 		bl	PWM_CLK_2_GetDividerRegister
 3540 00ba 0346     		mov	r3, r0
 3541 00bc 1A46     		mov	r2, r3
 3542 00be 3B68     		ldr	r3, [r7]
 3543 00c0 1A60     		str	r2, [r3]
 3544 00c2 0123     		movs	r3, #1
 3545 00c4 FB73     		strb	r3, [r7, #15]
 3546 00c6 00BF     		nop
 3547              	.L225:
1495:.\mem1.c      ****                 
1496:.\mem1.c      ****             }
1497:.\mem1.c      ****             
1498:.\mem1.c      ****             return return_flag;
 3548              		.loc 1 1498 0
 3549 00c8 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
1499:.\mem1.c      ****         }
 3550              		.loc 1 1499 0
 3551 00ca 1846     		mov	r0, r3
 3552 00cc 1037     		adds	r7, r7, #16
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cc7rr7YM.s 			page 90


 3553              		.cfi_def_cfa_offset 8
 3554 00ce BD46     		mov	sp, r7
 3555              		.cfi_def_cfa_register 13
 3556              		@ sp needed
 3557 00d0 80BD     		pop	{r7, pc}
 3558              		.cfi_endproc
 3559              	.LFE65:
 3560              		.size	PWM_Control_3, .-PWM_Control_3
 3561 00d2 00BF     		.section	.text.PWM_Control_4,"ax",%progbits
 3562              		.align	2
 3563              		.global	PWM_Control_4
 3564              		.thumb
 3565              		.thumb_func
 3566              		.type	PWM_Control_4, %function
 3567              	PWM_Control_4:
 3568              	.LFB66:
1500:.\mem1.c      ****     #endif
1501:.\mem1.c      ****     
1502:.\mem1.c      **** /****************************************************************************************//**
1503:.\mem1.c      **** *  @brief Contains usage scenarios of the fifth PWM component for use by a Master device. 
1504:.\mem1.c      **** *
1505:.\mem1.c      **** *  @param cmd: 8-bit number describing a desired usage of a function associated 
1506:.\mem1.c      **** *              with the fifth PWM component
1507:.\mem1.c      **** *  @param val: 16-bit number containing a value that is to be written to that 
1508:.\mem1.c      **** *              function, or modify the component's operation, if applicable.
1509:.\mem1.c      **** *
1510:.\mem1.c      **** *********************************************************************************************/
1511:.\mem1.c      ****     
1512:.\mem1.c      ****      #ifdef CY_PWM_PWM_5_H
1513:.\mem1.c      ****         bool PWM_Control_4(uint8 cmd, uint16 val, uint32 *result)
1514:.\mem1.c      ****         {
 3569              		.loc 1 1514 0
 3570              		.cfi_startproc
 3571              		@ args = 0, pretend = 0, frame = 16
 3572              		@ frame_needed = 1, uses_anonymous_args = 0
 3573 0000 80B5     		push	{r7, lr}
 3574              		.cfi_def_cfa_offset 8
 3575              		.cfi_offset 7, -8
 3576              		.cfi_offset 14, -4
 3577 0002 84B0     		sub	sp, sp, #16
 3578              		.cfi_def_cfa_offset 24
 3579 0004 00AF     		add	r7, sp, #0
 3580              		.cfi_def_cfa_register 7
 3581 0006 0346     		mov	r3, r0
 3582 0008 3A60     		str	r2, [r7]
 3583 000a FB71     		strb	r3, [r7, #7]
 3584 000c 0B46     		mov	r3, r1	@ movhi
 3585 000e BB80     		strh	r3, [r7, #4]	@ movhi
1515:.\mem1.c      ****             bool return_flag = 0;
 3586              		.loc 1 1515 0
 3587 0010 0023     		movs	r3, #0
 3588 0012 FB73     		strb	r3, [r7, #15]
1516:.\mem1.c      ****             
1517:.\mem1.c      ****             switch(cmd)
 3589              		.loc 1 1517 0
 3590 0014 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3591 0016 0E2B     		cmp	r3, #14
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cc7rr7YM.s 			page 91


 3592 0018 2FD0     		beq	.L242
 3593 001a 0E2B     		cmp	r3, #14
 3594 001c 0BDC     		bgt	.L243
 3595 001e 012B     		cmp	r3, #1
 3596 0020 1AD0     		beq	.L244
 3597 0022 012B     		cmp	r3, #1
 3598 0024 02DC     		bgt	.L245
 3599 0026 002B     		cmp	r3, #0
 3600 0028 13D0     		beq	.L246
 3601 002a 4DE0     		b	.L241
 3602              	.L245:
 3603 002c 0C2B     		cmp	r3, #12
 3604 002e 16D0     		beq	.L247
 3605 0030 0D2B     		cmp	r3, #13
 3606 0032 19D0     		beq	.L248
 3607 0034 48E0     		b	.L241
 3608              	.L243:
 3609 0036 192B     		cmp	r3, #25
 3610 0038 30D0     		beq	.L249
 3611 003a 192B     		cmp	r3, #25
 3612 003c 04DC     		bgt	.L250
 3613 003e 0F2B     		cmp	r3, #15
 3614 0040 20D0     		beq	.L251
 3615 0042 182B     		cmp	r3, #24
 3616 0044 27D0     		beq	.L252
 3617 0046 3FE0     		b	.L241
 3618              	.L250:
 3619 0048 1A2B     		cmp	r3, #26
 3620 004a 2AD0     		beq	.L253
 3621 004c FF2B     		cmp	r3, #255
 3622 004e 2BD0     		beq	.L254
 3623 0050 3AE0     		b	.L241
 3624              	.L246:
1518:.\mem1.c      ****             {
1519:.\mem1.c      ****                 case 0x00: PWM_5_Start(); break;
 3625              		.loc 1 1519 0
 3626 0052 FFF7FEFF 		bl	PWM_5_Start
 3627 0056 37E0     		b	.L241
 3628              	.L244:
1520:.\mem1.c      ****                 case 0x01: PWM_5_Stop(); break;
 3629              		.loc 1 1520 0
 3630 0058 FFF7FEFF 		bl	PWM_5_Stop
 3631 005c 34E0     		b	.L241
 3632              	.L247:
1521:.\mem1.c      ****                 case 0x0C: PWM_5_WritePeriod(val); break;
 3633              		.loc 1 1521 0
 3634 005e BB88     		ldrh	r3, [r7, #4]
 3635 0060 1846     		mov	r0, r3
 3636 0062 FFF7FEFF 		bl	PWM_5_WritePeriod
 3637 0066 2FE0     		b	.L241
 3638              	.L248:
1522:.\mem1.c      ****                 case 0x0D: *result = PWM_5_ReadPeriod(); return_flag = 1; break;
 3639              		.loc 1 1522 0
 3640 0068 FFF7FEFF 		bl	PWM_5_ReadPeriod
 3641 006c 0346     		mov	r3, r0
 3642 006e 1A46     		mov	r2, r3
 3643 0070 3B68     		ldr	r3, [r7]
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cc7rr7YM.s 			page 92


 3644 0072 1A60     		str	r2, [r3]
 3645 0074 0123     		movs	r3, #1
 3646 0076 FB73     		strb	r3, [r7, #15]
 3647 0078 26E0     		b	.L241
 3648              	.L242:
1523:.\mem1.c      ****                 case 0x0E: PWM_5_WriteCompare(val); break;
 3649              		.loc 1 1523 0
 3650 007a BB88     		ldrh	r3, [r7, #4]
 3651 007c 1846     		mov	r0, r3
 3652 007e FFF7FEFF 		bl	PWM_5_WriteCompare
 3653 0082 21E0     		b	.L241
 3654              	.L251:
1524:.\mem1.c      ****                 case 0x0F: *result  = PWM_5_ReadCompare(); return_flag = 1; break;
 3655              		.loc 1 1524 0
 3656 0084 FFF7FEFF 		bl	PWM_5_ReadCompare
 3657 0088 0346     		mov	r3, r0
 3658 008a 1A46     		mov	r2, r3
 3659 008c 3B68     		ldr	r3, [r7]
 3660 008e 1A60     		str	r2, [r3]
 3661 0090 0123     		movs	r3, #1
 3662 0092 FB73     		strb	r3, [r7, #15]
 3663 0094 18E0     		b	.L241
 3664              	.L252:
1525:.\mem1.c      ****                 case 0x18: PWM_5_ClearFIFO(); break; 
 3665              		.loc 1 1525 0
 3666 0096 FFF7FEFF 		bl	PWM_5_ClearFIFO
 3667 009a 15E0     		b	.L241
 3668              	.L249:
1526:.\mem1.c      ****                 case 0x19: PWM_5_Sleep(); break; 
 3669              		.loc 1 1526 0
 3670 009c FFF7FEFF 		bl	PWM_5_Sleep
 3671 00a0 12E0     		b	.L241
 3672              	.L253:
1527:.\mem1.c      ****                 case 0x1A: PWM_5_Wakeup(); break; 
 3673              		.loc 1 1527 0
 3674 00a2 FFF7FEFF 		bl	PWM_5_Wakeup
 3675 00a6 0FE0     		b	.L241
 3676              	.L254:
1528:.\mem1.c      ****                 case 0xFF: PWM_CLK_3_SetDividerValue(val); *result = PWM_CLK_3_GetDividerRegister()
 3677              		.loc 1 1528 0
 3678 00a8 BB88     		ldrh	r3, [r7, #4]	@ movhi
 3679 00aa 013B     		subs	r3, r3, #1
 3680 00ac 9BB2     		uxth	r3, r3
 3681 00ae 1846     		mov	r0, r3
 3682 00b0 0121     		movs	r1, #1
 3683 00b2 FFF7FEFF 		bl	PWM_CLK_3_SetDividerRegister
 3684 00b6 FFF7FEFF 		bl	PWM_CLK_3_GetDividerRegister
 3685 00ba 0346     		mov	r3, r0
 3686 00bc 1A46     		mov	r2, r3
 3687 00be 3B68     		ldr	r3, [r7]
 3688 00c0 1A60     		str	r2, [r3]
 3689 00c2 0123     		movs	r3, #1
 3690 00c4 FB73     		strb	r3, [r7, #15]
 3691 00c6 00BF     		nop
 3692              	.L241:
1529:.\mem1.c      ****                 
1530:.\mem1.c      ****             }
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cc7rr7YM.s 			page 93


1531:.\mem1.c      ****             
1532:.\mem1.c      ****             return return_flag;
 3693              		.loc 1 1532 0
 3694 00c8 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
1533:.\mem1.c      ****         }
 3695              		.loc 1 1533 0
 3696 00ca 1846     		mov	r0, r3
 3697 00cc 1037     		adds	r7, r7, #16
 3698              		.cfi_def_cfa_offset 8
 3699 00ce BD46     		mov	sp, r7
 3700              		.cfi_def_cfa_register 13
 3701              		@ sp needed
 3702 00d0 80BD     		pop	{r7, pc}
 3703              		.cfi_endproc
 3704              	.LFE66:
 3705              		.size	PWM_Control_4, .-PWM_Control_4
 3706 00d2 00BF     		.section	.text.PWM_Control_5,"ax",%progbits
 3707              		.align	2
 3708              		.global	PWM_Control_5
 3709              		.thumb
 3710              		.thumb_func
 3711              		.type	PWM_Control_5, %function
 3712              	PWM_Control_5:
 3713              	.LFB67:
1534:.\mem1.c      ****     #endif
1535:.\mem1.c      ****     
1536:.\mem1.c      **** /****************************************************************************************//**
1537:.\mem1.c      **** *  @brief Contains usage scenarios of the sixth PWM component for use by a Master device. 
1538:.\mem1.c      **** *
1539:.\mem1.c      **** *  @param cmd: 8-bit number describing a desired usage of a function associated 
1540:.\mem1.c      **** *              with the sixth PWM component
1541:.\mem1.c      **** *  @param val: 16-bit number containing a value that is to be written to that 
1542:.\mem1.c      **** *              function, or modify the component's operation, if applicable.
1543:.\mem1.c      **** *
1544:.\mem1.c      **** *********************************************************************************************/
1545:.\mem1.c      ****     
1546:.\mem1.c      ****      #ifdef CY_PWM_PWM_6_H
1547:.\mem1.c      ****         bool PWM_Control_5(uint8 cmd, uint16 val, uint32 *result)
1548:.\mem1.c      ****         {
 3714              		.loc 1 1548 0
 3715              		.cfi_startproc
 3716              		@ args = 0, pretend = 0, frame = 16
 3717              		@ frame_needed = 1, uses_anonymous_args = 0
 3718 0000 80B5     		push	{r7, lr}
 3719              		.cfi_def_cfa_offset 8
 3720              		.cfi_offset 7, -8
 3721              		.cfi_offset 14, -4
 3722 0002 84B0     		sub	sp, sp, #16
 3723              		.cfi_def_cfa_offset 24
 3724 0004 00AF     		add	r7, sp, #0
 3725              		.cfi_def_cfa_register 7
 3726 0006 0346     		mov	r3, r0
 3727 0008 3A60     		str	r2, [r7]
 3728 000a FB71     		strb	r3, [r7, #7]
 3729 000c 0B46     		mov	r3, r1	@ movhi
 3730 000e BB80     		strh	r3, [r7, #4]	@ movhi
1549:.\mem1.c      ****             bool return_flag = 0;
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cc7rr7YM.s 			page 94


 3731              		.loc 1 1549 0
 3732 0010 0023     		movs	r3, #0
 3733 0012 FB73     		strb	r3, [r7, #15]
1550:.\mem1.c      ****             
1551:.\mem1.c      ****             switch(cmd)
 3734              		.loc 1 1551 0
 3735 0014 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3736 0016 0E2B     		cmp	r3, #14
 3737 0018 2FD0     		beq	.L258
 3738 001a 0E2B     		cmp	r3, #14
 3739 001c 0BDC     		bgt	.L259
 3740 001e 012B     		cmp	r3, #1
 3741 0020 1AD0     		beq	.L260
 3742 0022 012B     		cmp	r3, #1
 3743 0024 02DC     		bgt	.L261
 3744 0026 002B     		cmp	r3, #0
 3745 0028 13D0     		beq	.L262
 3746 002a 4DE0     		b	.L257
 3747              	.L261:
 3748 002c 0C2B     		cmp	r3, #12
 3749 002e 16D0     		beq	.L263
 3750 0030 0D2B     		cmp	r3, #13
 3751 0032 19D0     		beq	.L264
 3752 0034 48E0     		b	.L257
 3753              	.L259:
 3754 0036 192B     		cmp	r3, #25
 3755 0038 30D0     		beq	.L265
 3756 003a 192B     		cmp	r3, #25
 3757 003c 04DC     		bgt	.L266
 3758 003e 0F2B     		cmp	r3, #15
 3759 0040 20D0     		beq	.L267
 3760 0042 182B     		cmp	r3, #24
 3761 0044 27D0     		beq	.L268
 3762 0046 3FE0     		b	.L257
 3763              	.L266:
 3764 0048 1A2B     		cmp	r3, #26
 3765 004a 2AD0     		beq	.L269
 3766 004c FF2B     		cmp	r3, #255
 3767 004e 2BD0     		beq	.L270
 3768 0050 3AE0     		b	.L257
 3769              	.L262:
1552:.\mem1.c      ****             {
1553:.\mem1.c      ****                 case 0x00: PWM_6_Start(); break;
 3770              		.loc 1 1553 0
 3771 0052 FFF7FEFF 		bl	PWM_6_Start
 3772 0056 37E0     		b	.L257
 3773              	.L260:
1554:.\mem1.c      ****                 case 0x01: PWM_6_Stop(); break;
 3774              		.loc 1 1554 0
 3775 0058 FFF7FEFF 		bl	PWM_6_Stop
 3776 005c 34E0     		b	.L257
 3777              	.L263:
1555:.\mem1.c      ****                 case 0x0C: PWM_6_WritePeriod(val); break;
 3778              		.loc 1 1555 0
 3779 005e BB88     		ldrh	r3, [r7, #4]
 3780 0060 1846     		mov	r0, r3
 3781 0062 FFF7FEFF 		bl	PWM_6_WritePeriod
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cc7rr7YM.s 			page 95


 3782 0066 2FE0     		b	.L257
 3783              	.L264:
1556:.\mem1.c      ****                 case 0x0D: *result = PWM_6_ReadPeriod(); return_flag = 1; break;
 3784              		.loc 1 1556 0
 3785 0068 FFF7FEFF 		bl	PWM_6_ReadPeriod
 3786 006c 0346     		mov	r3, r0
 3787 006e 1A46     		mov	r2, r3
 3788 0070 3B68     		ldr	r3, [r7]
 3789 0072 1A60     		str	r2, [r3]
 3790 0074 0123     		movs	r3, #1
 3791 0076 FB73     		strb	r3, [r7, #15]
 3792 0078 26E0     		b	.L257
 3793              	.L258:
1557:.\mem1.c      ****                 case 0x0E: PWM_6_WriteCompare(val); break;
 3794              		.loc 1 1557 0
 3795 007a BB88     		ldrh	r3, [r7, #4]
 3796 007c 1846     		mov	r0, r3
 3797 007e FFF7FEFF 		bl	PWM_6_WriteCompare
 3798 0082 21E0     		b	.L257
 3799              	.L267:
1558:.\mem1.c      ****                 case 0x0F: *result  = PWM_6_ReadCompare(); return_flag = 1; break;
 3800              		.loc 1 1558 0
 3801 0084 FFF7FEFF 		bl	PWM_6_ReadCompare
 3802 0088 0346     		mov	r3, r0
 3803 008a 1A46     		mov	r2, r3
 3804 008c 3B68     		ldr	r3, [r7]
 3805 008e 1A60     		str	r2, [r3]
 3806 0090 0123     		movs	r3, #1
 3807 0092 FB73     		strb	r3, [r7, #15]
 3808 0094 18E0     		b	.L257
 3809              	.L268:
1559:.\mem1.c      ****                 case 0x18: PWM_6_ClearFIFO(); break; 
 3810              		.loc 1 1559 0
 3811 0096 FFF7FEFF 		bl	PWM_6_ClearFIFO
 3812 009a 15E0     		b	.L257
 3813              	.L265:
1560:.\mem1.c      ****                 case 0x19: PWM_6_Sleep(); break; 
 3814              		.loc 1 1560 0
 3815 009c FFF7FEFF 		bl	PWM_6_Sleep
 3816 00a0 12E0     		b	.L257
 3817              	.L269:
1561:.\mem1.c      ****                 case 0x1A: PWM_6_Wakeup(); break; 
 3818              		.loc 1 1561 0
 3819 00a2 FFF7FEFF 		bl	PWM_6_Wakeup
 3820 00a6 0FE0     		b	.L257
 3821              	.L270:
1562:.\mem1.c      ****                 case 0xFF: PWM_CLK_3_SetDividerValue(val); *result = PWM_CLK_3_GetDividerRegister()
 3822              		.loc 1 1562 0
 3823 00a8 BB88     		ldrh	r3, [r7, #4]	@ movhi
 3824 00aa 013B     		subs	r3, r3, #1
 3825 00ac 9BB2     		uxth	r3, r3
 3826 00ae 1846     		mov	r0, r3
 3827 00b0 0121     		movs	r1, #1
 3828 00b2 FFF7FEFF 		bl	PWM_CLK_3_SetDividerRegister
 3829 00b6 FFF7FEFF 		bl	PWM_CLK_3_GetDividerRegister
 3830 00ba 0346     		mov	r3, r0
 3831 00bc 1A46     		mov	r2, r3
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cc7rr7YM.s 			page 96


 3832 00be 3B68     		ldr	r3, [r7]
 3833 00c0 1A60     		str	r2, [r3]
 3834 00c2 0123     		movs	r3, #1
 3835 00c4 FB73     		strb	r3, [r7, #15]
 3836 00c6 00BF     		nop
 3837              	.L257:
1563:.\mem1.c      ****             }
1564:.\mem1.c      ****             
1565:.\mem1.c      ****             return return_flag;
 3838              		.loc 1 1565 0
 3839 00c8 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
1566:.\mem1.c      ****         }
 3840              		.loc 1 1566 0
 3841 00ca 1846     		mov	r0, r3
 3842 00cc 1037     		adds	r7, r7, #16
 3843              		.cfi_def_cfa_offset 8
 3844 00ce BD46     		mov	sp, r7
 3845              		.cfi_def_cfa_register 13
 3846              		@ sp needed
 3847 00d0 80BD     		pop	{r7, pc}
 3848              		.cfi_endproc
 3849              	.LFE67:
 3850              		.size	PWM_Control_5, .-PWM_Control_5
 3851 00d2 00BF     		.section	.text.PWM_Control_6,"ax",%progbits
 3852              		.align	2
 3853              		.global	PWM_Control_6
 3854              		.thumb
 3855              		.thumb_func
 3856              		.type	PWM_Control_6, %function
 3857              	PWM_Control_6:
 3858              	.LFB68:
1567:.\mem1.c      ****         
1568:.\mem1.c      ****     #endif
1569:.\mem1.c      ****  /****************************************************************************************//**
1570:.\mem1.c      **** *  @brief Contains usage scenarios of the seventh PWM component for use by a Master device. 
1571:.\mem1.c      **** *
1572:.\mem1.c      **** *  @param cmd: 8-bit number describing a desired usage of a function associated 
1573:.\mem1.c      **** *              with the seventh PWM component
1574:.\mem1.c      **** *  @param val: 16-bit number containing a value that is to be written to that 
1575:.\mem1.c      **** *              function, or modify the component's operation, if applicable.
1576:.\mem1.c      **** *
1577:.\mem1.c      **** *********************************************************************************************/
1578:.\mem1.c      ****     
1579:.\mem1.c      ****      #ifdef CY_PWM_PWM_7_H
1580:.\mem1.c      ****         bool PWM_Control_6(uint8 cmd, uint16 val, uint32 *result)
1581:.\mem1.c      ****         {
 3859              		.loc 1 1581 0
 3860              		.cfi_startproc
 3861              		@ args = 0, pretend = 0, frame = 16
 3862              		@ frame_needed = 1, uses_anonymous_args = 0
 3863 0000 80B5     		push	{r7, lr}
 3864              		.cfi_def_cfa_offset 8
 3865              		.cfi_offset 7, -8
 3866              		.cfi_offset 14, -4
 3867 0002 84B0     		sub	sp, sp, #16
 3868              		.cfi_def_cfa_offset 24
 3869 0004 00AF     		add	r7, sp, #0
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cc7rr7YM.s 			page 97


 3870              		.cfi_def_cfa_register 7
 3871 0006 0346     		mov	r3, r0
 3872 0008 3A60     		str	r2, [r7]
 3873 000a FB71     		strb	r3, [r7, #7]
 3874 000c 0B46     		mov	r3, r1	@ movhi
 3875 000e BB80     		strh	r3, [r7, #4]	@ movhi
1582:.\mem1.c      ****             bool return_flag = 0;
 3876              		.loc 1 1582 0
 3877 0010 0023     		movs	r3, #0
 3878 0012 FB73     		strb	r3, [r7, #15]
1583:.\mem1.c      ****             
1584:.\mem1.c      ****             switch(cmd)
 3879              		.loc 1 1584 0
 3880 0014 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3881 0016 0E2B     		cmp	r3, #14
 3882 0018 2FD0     		beq	.L274
 3883 001a 0E2B     		cmp	r3, #14
 3884 001c 0BDC     		bgt	.L275
 3885 001e 012B     		cmp	r3, #1
 3886 0020 1AD0     		beq	.L276
 3887 0022 012B     		cmp	r3, #1
 3888 0024 02DC     		bgt	.L277
 3889 0026 002B     		cmp	r3, #0
 3890 0028 13D0     		beq	.L278
 3891 002a 4DE0     		b	.L273
 3892              	.L277:
 3893 002c 0C2B     		cmp	r3, #12
 3894 002e 16D0     		beq	.L279
 3895 0030 0D2B     		cmp	r3, #13
 3896 0032 19D0     		beq	.L280
 3897 0034 48E0     		b	.L273
 3898              	.L275:
 3899 0036 192B     		cmp	r3, #25
 3900 0038 30D0     		beq	.L281
 3901 003a 192B     		cmp	r3, #25
 3902 003c 04DC     		bgt	.L282
 3903 003e 0F2B     		cmp	r3, #15
 3904 0040 20D0     		beq	.L283
 3905 0042 182B     		cmp	r3, #24
 3906 0044 27D0     		beq	.L284
 3907 0046 3FE0     		b	.L273
 3908              	.L282:
 3909 0048 1A2B     		cmp	r3, #26
 3910 004a 2AD0     		beq	.L285
 3911 004c FF2B     		cmp	r3, #255
 3912 004e 2BD0     		beq	.L286
 3913 0050 3AE0     		b	.L273
 3914              	.L278:
1585:.\mem1.c      ****             {
1586:.\mem1.c      ****                 case 0x00: PWM_7_Start(); break;
 3915              		.loc 1 1586 0
 3916 0052 FFF7FEFF 		bl	PWM_7_Start
 3917 0056 37E0     		b	.L273
 3918              	.L276:
1587:.\mem1.c      ****                 case 0x01: PWM_7_Stop(); break;
 3919              		.loc 1 1587 0
 3920 0058 FFF7FEFF 		bl	PWM_7_Stop
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cc7rr7YM.s 			page 98


 3921 005c 34E0     		b	.L273
 3922              	.L279:
1588:.\mem1.c      ****                 case 0x0C: PWM_7_WritePeriod(val); break;
 3923              		.loc 1 1588 0
 3924 005e BB88     		ldrh	r3, [r7, #4]
 3925 0060 1846     		mov	r0, r3
 3926 0062 FFF7FEFF 		bl	PWM_7_WritePeriod
 3927 0066 2FE0     		b	.L273
 3928              	.L280:
1589:.\mem1.c      ****                 case 0x0D: *result = PWM_7_ReadPeriod(); return_flag = 1; break;
 3929              		.loc 1 1589 0
 3930 0068 FFF7FEFF 		bl	PWM_7_ReadPeriod
 3931 006c 0346     		mov	r3, r0
 3932 006e 1A46     		mov	r2, r3
 3933 0070 3B68     		ldr	r3, [r7]
 3934 0072 1A60     		str	r2, [r3]
 3935 0074 0123     		movs	r3, #1
 3936 0076 FB73     		strb	r3, [r7, #15]
 3937 0078 26E0     		b	.L273
 3938              	.L274:
1590:.\mem1.c      ****                 case 0x0E: PWM_7_WriteCompare(val); break;
 3939              		.loc 1 1590 0
 3940 007a BB88     		ldrh	r3, [r7, #4]
 3941 007c 1846     		mov	r0, r3
 3942 007e FFF7FEFF 		bl	PWM_7_WriteCompare
 3943 0082 21E0     		b	.L273
 3944              	.L283:
1591:.\mem1.c      ****                 case 0x0F: *result  = PWM_7_ReadCompare(); return_flag = 1; break;
 3945              		.loc 1 1591 0
 3946 0084 FFF7FEFF 		bl	PWM_7_ReadCompare
 3947 0088 0346     		mov	r3, r0
 3948 008a 1A46     		mov	r2, r3
 3949 008c 3B68     		ldr	r3, [r7]
 3950 008e 1A60     		str	r2, [r3]
 3951 0090 0123     		movs	r3, #1
 3952 0092 FB73     		strb	r3, [r7, #15]
 3953 0094 18E0     		b	.L273
 3954              	.L284:
1592:.\mem1.c      ****                 case 0x18: PWM_7_ClearFIFO(); break; 
 3955              		.loc 1 1592 0
 3956 0096 FFF7FEFF 		bl	PWM_7_ClearFIFO
 3957 009a 15E0     		b	.L273
 3958              	.L281:
1593:.\mem1.c      ****                 case 0x19: PWM_7_Sleep(); break; 
 3959              		.loc 1 1593 0
 3960 009c FFF7FEFF 		bl	PWM_7_Sleep
 3961 00a0 12E0     		b	.L273
 3962              	.L285:
1594:.\mem1.c      ****                 case 0x1A: PWM_7_Wakeup(); break; 
 3963              		.loc 1 1594 0
 3964 00a2 FFF7FEFF 		bl	PWM_7_Wakeup
 3965 00a6 0FE0     		b	.L273
 3966              	.L286:
1595:.\mem1.c      ****                 case 0xFF: PWM_CLK_4_SetDividerValue(val); *result = PWM_CLK_4_GetDividerRegister()
 3967              		.loc 1 1595 0
 3968 00a8 BB88     		ldrh	r3, [r7, #4]	@ movhi
 3969 00aa 013B     		subs	r3, r3, #1
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cc7rr7YM.s 			page 99


 3970 00ac 9BB2     		uxth	r3, r3
 3971 00ae 1846     		mov	r0, r3
 3972 00b0 0121     		movs	r1, #1
 3973 00b2 FFF7FEFF 		bl	PWM_CLK_4_SetDividerRegister
 3974 00b6 FFF7FEFF 		bl	PWM_CLK_4_GetDividerRegister
 3975 00ba 0346     		mov	r3, r0
 3976 00bc 1A46     		mov	r2, r3
 3977 00be 3B68     		ldr	r3, [r7]
 3978 00c0 1A60     		str	r2, [r3]
 3979 00c2 0123     		movs	r3, #1
 3980 00c4 FB73     		strb	r3, [r7, #15]
 3981 00c6 00BF     		nop
 3982              	.L273:
1596:.\mem1.c      ****             }
1597:.\mem1.c      ****             
1598:.\mem1.c      ****             return return_flag;
 3983              		.loc 1 1598 0
 3984 00c8 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
1599:.\mem1.c      ****         }
 3985              		.loc 1 1599 0
 3986 00ca 1846     		mov	r0, r3
 3987 00cc 1037     		adds	r7, r7, #16
 3988              		.cfi_def_cfa_offset 8
 3989 00ce BD46     		mov	sp, r7
 3990              		.cfi_def_cfa_register 13
 3991              		@ sp needed
 3992 00d0 80BD     		pop	{r7, pc}
 3993              		.cfi_endproc
 3994              	.LFE68:
 3995              		.size	PWM_Control_6, .-PWM_Control_6
 3996 00d2 00BF     		.section	.text.PWM_Control_7,"ax",%progbits
 3997              		.align	2
 3998              		.global	PWM_Control_7
 3999              		.thumb
 4000              		.thumb_func
 4001              		.type	PWM_Control_7, %function
 4002              	PWM_Control_7:
 4003              	.LFB69:
1600:.\mem1.c      ****     #endif
1601:.\mem1.c      **** /****************************************************************************************//**
1602:.\mem1.c      **** *  @brief Contains usage scenarios of the eighth PWM component for use by a Master device. 
1603:.\mem1.c      **** *
1604:.\mem1.c      **** *  @param cmd: 8-bit number describing a desired usage of a function associated 
1605:.\mem1.c      **** *              with the eighth PWM component
1606:.\mem1.c      **** *  @param val: 16-bit number containing a value that is to be written to that 
1607:.\mem1.c      **** *              function, or modify the component's operation, if applicable.
1608:.\mem1.c      **** *
1609:.\mem1.c      **** *********************************************************************************************/
1610:.\mem1.c      ****  #ifdef CY_PWM_PWM_8_H
1611:.\mem1.c      ****     bool PWM_Control_7(uint8 cmd, uint16 val, uint32 *result)
1612:.\mem1.c      ****     {
 4004              		.loc 1 1612 0
 4005              		.cfi_startproc
 4006              		@ args = 0, pretend = 0, frame = 16
 4007              		@ frame_needed = 1, uses_anonymous_args = 0
 4008 0000 80B5     		push	{r7, lr}
 4009              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cc7rr7YM.s 			page 100


 4010              		.cfi_offset 7, -8
 4011              		.cfi_offset 14, -4
 4012 0002 84B0     		sub	sp, sp, #16
 4013              		.cfi_def_cfa_offset 24
 4014 0004 00AF     		add	r7, sp, #0
 4015              		.cfi_def_cfa_register 7
 4016 0006 0346     		mov	r3, r0
 4017 0008 3A60     		str	r2, [r7]
 4018 000a FB71     		strb	r3, [r7, #7]
 4019 000c 0B46     		mov	r3, r1	@ movhi
 4020 000e BB80     		strh	r3, [r7, #4]	@ movhi
1613:.\mem1.c      ****         bool return_flag = 0;
 4021              		.loc 1 1613 0
 4022 0010 0023     		movs	r3, #0
 4023 0012 FB73     		strb	r3, [r7, #15]
1614:.\mem1.c      ****         
1615:.\mem1.c      ****         switch(cmd)
 4024              		.loc 1 1615 0
 4025 0014 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4026 0016 0E2B     		cmp	r3, #14
 4027 0018 2FD0     		beq	.L290
 4028 001a 0E2B     		cmp	r3, #14
 4029 001c 0BDC     		bgt	.L291
 4030 001e 012B     		cmp	r3, #1
 4031 0020 1AD0     		beq	.L292
 4032 0022 012B     		cmp	r3, #1
 4033 0024 02DC     		bgt	.L293
 4034 0026 002B     		cmp	r3, #0
 4035 0028 13D0     		beq	.L294
 4036 002a 4DE0     		b	.L289
 4037              	.L293:
 4038 002c 0C2B     		cmp	r3, #12
 4039 002e 16D0     		beq	.L295
 4040 0030 0D2B     		cmp	r3, #13
 4041 0032 19D0     		beq	.L296
 4042 0034 48E0     		b	.L289
 4043              	.L291:
 4044 0036 192B     		cmp	r3, #25
 4045 0038 30D0     		beq	.L297
 4046 003a 192B     		cmp	r3, #25
 4047 003c 04DC     		bgt	.L298
 4048 003e 0F2B     		cmp	r3, #15
 4049 0040 20D0     		beq	.L299
 4050 0042 182B     		cmp	r3, #24
 4051 0044 27D0     		beq	.L300
 4052 0046 3FE0     		b	.L289
 4053              	.L298:
 4054 0048 1A2B     		cmp	r3, #26
 4055 004a 2AD0     		beq	.L301
 4056 004c FF2B     		cmp	r3, #255
 4057 004e 2BD0     		beq	.L302
 4058 0050 3AE0     		b	.L289
 4059              	.L294:
1616:.\mem1.c      ****         {
1617:.\mem1.c      ****             case 0x00: PWM_8_Start(); break;
 4060              		.loc 1 1617 0
 4061 0052 FFF7FEFF 		bl	PWM_8_Start
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cc7rr7YM.s 			page 101


 4062 0056 37E0     		b	.L289
 4063              	.L292:
1618:.\mem1.c      ****             case 0x01: PWM_8_Stop(); break;
 4064              		.loc 1 1618 0
 4065 0058 FFF7FEFF 		bl	PWM_8_Stop
 4066 005c 34E0     		b	.L289
 4067              	.L295:
1619:.\mem1.c      ****             case 0x0C: PWM_8_WritePeriod(val); break;
 4068              		.loc 1 1619 0
 4069 005e BB88     		ldrh	r3, [r7, #4]
 4070 0060 1846     		mov	r0, r3
 4071 0062 FFF7FEFF 		bl	PWM_8_WritePeriod
 4072 0066 2FE0     		b	.L289
 4073              	.L296:
1620:.\mem1.c      ****             case 0x0D: *result = PWM_8_ReadPeriod(); return_flag = 1; break;
 4074              		.loc 1 1620 0
 4075 0068 FFF7FEFF 		bl	PWM_8_ReadPeriod
 4076 006c 0346     		mov	r3, r0
 4077 006e 1A46     		mov	r2, r3
 4078 0070 3B68     		ldr	r3, [r7]
 4079 0072 1A60     		str	r2, [r3]
 4080 0074 0123     		movs	r3, #1
 4081 0076 FB73     		strb	r3, [r7, #15]
 4082 0078 26E0     		b	.L289
 4083              	.L290:
1621:.\mem1.c      ****             case 0x0E: PWM_8_WriteCompare(val); break;
 4084              		.loc 1 1621 0
 4085 007a BB88     		ldrh	r3, [r7, #4]
 4086 007c 1846     		mov	r0, r3
 4087 007e FFF7FEFF 		bl	PWM_8_WriteCompare
 4088 0082 21E0     		b	.L289
 4089              	.L299:
1622:.\mem1.c      ****             case 0x0F: *result  = PWM_8_ReadCompare(); return_flag = 1; break;
 4090              		.loc 1 1622 0
 4091 0084 FFF7FEFF 		bl	PWM_8_ReadCompare
 4092 0088 0346     		mov	r3, r0
 4093 008a 1A46     		mov	r2, r3
 4094 008c 3B68     		ldr	r3, [r7]
 4095 008e 1A60     		str	r2, [r3]
 4096 0090 0123     		movs	r3, #1
 4097 0092 FB73     		strb	r3, [r7, #15]
 4098 0094 18E0     		b	.L289
 4099              	.L300:
1623:.\mem1.c      ****             case 0x18: PWM_8_ClearFIFO(); break; 
 4100              		.loc 1 1623 0
 4101 0096 FFF7FEFF 		bl	PWM_8_ClearFIFO
 4102 009a 15E0     		b	.L289
 4103              	.L297:
1624:.\mem1.c      ****             case 0x19: PWM_8_Sleep(); break; 
 4104              		.loc 1 1624 0
 4105 009c FFF7FEFF 		bl	PWM_8_Sleep
 4106 00a0 12E0     		b	.L289
 4107              	.L301:
1625:.\mem1.c      ****             case 0x1A: PWM_8_Wakeup(); break;
 4108              		.loc 1 1625 0
 4109 00a2 FFF7FEFF 		bl	PWM_8_Wakeup
 4110 00a6 0FE0     		b	.L289
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cc7rr7YM.s 			page 102


 4111              	.L302:
1626:.\mem1.c      ****             case 0xFF: PWM_CLK_4_SetDividerValue(val); *result = PWM_CLK_4_GetDividerRegister(); re
 4112              		.loc 1 1626 0
 4113 00a8 BB88     		ldrh	r3, [r7, #4]	@ movhi
 4114 00aa 013B     		subs	r3, r3, #1
 4115 00ac 9BB2     		uxth	r3, r3
 4116 00ae 1846     		mov	r0, r3
 4117 00b0 0121     		movs	r1, #1
 4118 00b2 FFF7FEFF 		bl	PWM_CLK_4_SetDividerRegister
 4119 00b6 FFF7FEFF 		bl	PWM_CLK_4_GetDividerRegister
 4120 00ba 0346     		mov	r3, r0
 4121 00bc 1A46     		mov	r2, r3
 4122 00be 3B68     		ldr	r3, [r7]
 4123 00c0 1A60     		str	r2, [r3]
 4124 00c2 0123     		movs	r3, #1
 4125 00c4 FB73     		strb	r3, [r7, #15]
 4126 00c6 00BF     		nop
 4127              	.L289:
1627:.\mem1.c      ****         }
1628:.\mem1.c      ****         
1629:.\mem1.c      ****         return return_flag;
 4128              		.loc 1 1629 0
 4129 00c8 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
1630:.\mem1.c      ****     }
 4130              		.loc 1 1630 0
 4131 00ca 1846     		mov	r0, r3
 4132 00cc 1037     		adds	r7, r7, #16
 4133              		.cfi_def_cfa_offset 8
 4134 00ce BD46     		mov	sp, r7
 4135              		.cfi_def_cfa_register 13
 4136              		@ sp needed
 4137 00d0 80BD     		pop	{r7, pc}
 4138              		.cfi_endproc
 4139              	.LFE69:
 4140              		.size	PWM_Control_7, .-PWM_Control_7
 4141 00d2 00BF     		.section	.text.GPIO_Control,"ax",%progbits
 4142              		.align	2
 4143              		.global	GPIO_Control
 4144              		.thumb
 4145              		.thumb_func
 4146              		.type	GPIO_Control, %function
 4147              	GPIO_Control:
 4148              	.LFB70:
1631:.\mem1.c      **** #endif
1632:.\mem1.c      **** 
1633:.\mem1.c      **** 
1634:.\mem1.c      **** #ifdef CY_PWM_PWM_9_H
1635:.\mem1.c      ****     bool PWM_Control_8(uint8 cmd, uint16 val, uint32 *result)
1636:.\mem1.c      ****     {
1637:.\mem1.c      ****         bool return_flag = 0;
1638:.\mem1.c      ****         
1639:.\mem1.c      ****         switch(cmd)
1640:.\mem1.c      ****         {
1641:.\mem1.c      ****             case 0x00: PWM_9_Start(); break;
1642:.\mem1.c      ****             case 0x01: PWM_9_Stop(); break;
1643:.\mem1.c      ****             case 0x0C: PWM_9_WritePeriod(val); break;
1644:.\mem1.c      ****             case 0x0D: *result = PWM_9_ReadPeriod(); return_flag = 1; break;
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cc7rr7YM.s 			page 103


1645:.\mem1.c      ****             case 0x0E: PWM_9_WriteCompare(val); break;
1646:.\mem1.c      ****             case 0x0F: *result  = PWM_9_ReadCompare(); return_flag = 1; break;
1647:.\mem1.c      ****             case 0x18: PWM_9_ClearFIFO(); break; 
1648:.\mem1.c      ****             case 0x19: PWM_9_Sleep(); break; 
1649:.\mem1.c      ****             case 0x1A: PWM_9_Wakeup(); break;
1650:.\mem1.c      ****             case 0xFF: PWM_CLK_5_SetDividerValue(val); *result = PWM_CLK_5_GetDividerRegister(); re
1651:.\mem1.c      ****         }
1652:.\mem1.c      ****         
1653:.\mem1.c      ****         return return_flag;
1654:.\mem1.c      ****     }
1655:.\mem1.c      **** #endif
1656:.\mem1.c      **** 
1657:.\mem1.c      **** #ifdef CY_PWM_PWM_10_H
1658:.\mem1.c      ****     bool PWM_Control_9(uint8 cmd, uint16 val, uint32 *result)
1659:.\mem1.c      ****     {
1660:.\mem1.c      ****         bool return_flag = 0;
1661:.\mem1.c      ****         
1662:.\mem1.c      ****         switch(cmd)
1663:.\mem1.c      ****         {
1664:.\mem1.c      ****             case 0x00: PWM_10_Start(); break;
1665:.\mem1.c      ****             case 0x01: PWM_10_Stop(); break;
1666:.\mem1.c      ****             case 0x0C: PWM_10_WritePeriod(val); break;
1667:.\mem1.c      ****             case 0x0D: *result = PWM_10_ReadPeriod(); return_flag = 1; break;
1668:.\mem1.c      ****             case 0x0E: PWM_10_WriteCompare(val); break;
1669:.\mem1.c      ****             case 0x0F: *result  = PWM_10_ReadCompare(); return_flag = 1; break;
1670:.\mem1.c      ****             case 0x18: PWM_10_ClearFIFO(); break; 
1671:.\mem1.c      ****             case 0x19: PWM_10_Sleep(); break; 
1672:.\mem1.c      ****             case 0x1A: PWM_10_Wakeup(); break;
1673:.\mem1.c      ****             case 0xFF: PWM_CLK_5_SetDividerValue(val); *result = PWM_CLK_5_GetDividerRegister(); re
1674:.\mem1.c      ****         }
1675:.\mem1.c      ****         
1676:.\mem1.c      ****         return return_flag;
1677:.\mem1.c      ****     }
1678:.\mem1.c      **** #endif
1679:.\mem1.c      **** 
1680:.\mem1.c      **** #ifdef CY_PWM_PWM_11_H
1681:.\mem1.c      ****     bool PWM_Control_10(uint8 cmd, uint16 val, uint32 *result)
1682:.\mem1.c      ****     {
1683:.\mem1.c      ****         bool return_flag = 0;
1684:.\mem1.c      ****         
1685:.\mem1.c      ****         switch(cmd)
1686:.\mem1.c      ****         {
1687:.\mem1.c      ****             case 0x00: PWM_11_Start(); break;
1688:.\mem1.c      ****             case 0x01: PWM_11_Stop(); break;
1689:.\mem1.c      ****             case 0x0C: PWM_11_WritePeriod(val); break;
1690:.\mem1.c      ****             case 0x0D: *result = PWM_11_ReadPeriod(); return_flag = 1; break;
1691:.\mem1.c      ****             case 0x0E: PWM_11_WriteCompare(val); break;
1692:.\mem1.c      ****             case 0x0F: *result  = PWM_11_ReadCompare(); return_flag = 1; break;
1693:.\mem1.c      ****             case 0x18: PWM_11_ClearFIFO(); break; 
1694:.\mem1.c      ****             case 0x19: PWM_11_Sleep(); break; 
1695:.\mem1.c      ****             case 0x1A: PWM_11_Wakeup(); break;
1696:.\mem1.c      ****             case 0xFF: PWM_CLK_5_SetDividerValue(val); *result = PWM_CLK_5_GetDividerRegister(); re
1697:.\mem1.c      ****         }
1698:.\mem1.c      ****         
1699:.\mem1.c      ****         return return_flag;
1700:.\mem1.c      ****     }
1701:.\mem1.c      **** #endif
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cc7rr7YM.s 			page 104


1702:.\mem1.c      **** 
1703:.\mem1.c      **** #ifdef CY_PWM_PWM_12_H
1704:.\mem1.c      ****     bool PWM_Control_11(uint8 cmd, uint16 val, uint32 *result)
1705:.\mem1.c      ****     {
1706:.\mem1.c      ****         bool return_flag = 0;
1707:.\mem1.c      ****         
1708:.\mem1.c      ****         switch(cmd)
1709:.\mem1.c      ****         {
1710:.\mem1.c      ****             case 0x00: PWM_12_Start(); break;
1711:.\mem1.c      ****             case 0x01: PWM_12_Stop(); break;
1712:.\mem1.c      ****             case 0x0C: PWM_12_WritePeriod(val); break;
1713:.\mem1.c      ****             case 0x0D: *result = PWM_12_ReadPeriod(); return_flag = 1; break;
1714:.\mem1.c      ****             case 0x0E: PWM_12_WriteCompare(val); break;
1715:.\mem1.c      ****             case 0x0F: *result  = PWM_12_ReadCompare(); return_flag = 1; break;
1716:.\mem1.c      ****             case 0x18: PWM_12_ClearFIFO(); break; 
1717:.\mem1.c      ****             case 0x19: PWM_12_Sleep(); break; 
1718:.\mem1.c      ****             case 0x1A: PWM_12_Wakeup(); break;
1719:.\mem1.c      ****             case 0xFF: PWM_CLK_5_SetDividerValue(val); *result = PWM_CLK_5_GetDividerRegister(); re
1720:.\mem1.c      ****         }
1721:.\mem1.c      ****         
1722:.\mem1.c      ****         return return_flag;
1723:.\mem1.c      ****     }
1724:.\mem1.c      **** #endif
1725:.\mem1.c      **** 
1726:.\mem1.c      **** bool GPIO_Control(uint8 cmd, uint8 port, uint8 pin, uint16 val, uint32 *result)
1727:.\mem1.c      **** {
 4149              		.loc 1 1727 0
 4150              		.cfi_startproc
 4151              		@ args = 4, pretend = 0, frame = 16
 4152              		@ frame_needed = 1, uses_anonymous_args = 0
 4153 0000 90B5     		push	{r4, r7, lr}
 4154              		.cfi_def_cfa_offset 12
 4155              		.cfi_offset 4, -12
 4156              		.cfi_offset 7, -8
 4157              		.cfi_offset 14, -4
 4158 0002 85B0     		sub	sp, sp, #20
 4159              		.cfi_def_cfa_offset 32
 4160 0004 00AF     		add	r7, sp, #0
 4161              		.cfi_def_cfa_register 7
 4162 0006 0446     		mov	r4, r0
 4163 0008 0846     		mov	r0, r1
 4164 000a 1146     		mov	r1, r2
 4165 000c 1A46     		mov	r2, r3
 4166 000e 2346     		mov	r3, r4
 4167 0010 FB71     		strb	r3, [r7, #7]
 4168 0012 0346     		mov	r3, r0
 4169 0014 BB71     		strb	r3, [r7, #6]
 4170 0016 0B46     		mov	r3, r1
 4171 0018 7B71     		strb	r3, [r7, #5]
 4172 001a 1346     		mov	r3, r2	@ movhi
 4173 001c 7B80     		strh	r3, [r7, #2]	@ movhi
1728:.\mem1.c      ****   
1729:.\mem1.c      ****     uint16 config_MASK = 0x00;
 4174              		.loc 1 1729 0
 4175 001e 0023     		movs	r3, #0
 4176 0020 FB81     		strh	r3, [r7, #14]	@ movhi
1730:.\mem1.c      ****     
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cc7rr7YM.s 			page 105


1731:.\mem1.c      ****     bool return_flag = 0;
 4177              		.loc 1 1731 0
 4178 0022 0023     		movs	r3, #0
 4179 0024 7B73     		strb	r3, [r7, #13]
1732:.\mem1.c      ****     
1733:.\mem1.c      ****     switch(cmd)
 4180              		.loc 1 1733 0
 4181 0026 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4182 0028 042B     		cmp	r3, #4
 4183 002a 00F2A383 		bhi	.L305
 4184 002e 01A2     		adr	r2, .L307
 4185 0030 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 4186              		.p2align 2
 4187              	.L307:
 4188 0034 49000000 		.word	.L306+1
 4189 0038 EB020000 		.word	.L308+1
 4190 003c 75070000 		.word	.L305+1
 4191 0040 FB040000 		.word	.L309+1
 4192 0044 75070000 		.word	.L305+1
 4193              		.p2align 1
 4194              	.L306:
1734:.\mem1.c      ****             {
1735:.\mem1.c      ****                 
1736:.\mem1.c      ****                 case 0x00://Read
1737:.\mem1.c      ****                 
1738:.\mem1.c      ****                     switch(port)
 4195              		.loc 1 1738 0
 4196 0048 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 4197 004a 0F2B     		cmp	r3, #15
 4198 004c 00F28D83 		bhi	.L442
 4199 0050 01A2     		adr	r2, .L313
 4200 0052 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 4201 0056 00BF     		.p2align 2
 4202              	.L313:
 4203 0058 DB020000 		.word	.L443+1
 4204 005c 6B070000 		.word	.L442+1
 4205 0060 99000000 		.word	.L314+1
 4206 0064 DB020000 		.word	.L443+1
 4207 0068 DB020000 		.word	.L443+1
 4208 006c 5B010000 		.word	.L317+1
 4209 0070 DB020000 		.word	.L443+1
 4210 0074 6B070000 		.word	.L442+1
 4211 0078 6B070000 		.word	.L442+1
 4212 007c 6B070000 		.word	.L442+1
 4213 0080 6B070000 		.word	.L442+1
 4214 0084 6B070000 		.word	.L442+1
 4215 0088 1B020000 		.word	.L319+1
 4216 008c 6B070000 		.word	.L442+1
 4217 0090 6B070000 		.word	.L442+1
 4218 0094 DB020000 		.word	.L443+1
 4219              		.p2align 1
 4220              	.L314:
1739:.\mem1.c      ****                         {
1740:.\mem1.c      ****                             case 0x00: 
1741:.\mem1.c      ****                                     switch(pin)
1742:.\mem1.c      ****                                     {   
1743:.\mem1.c      ****                                         #ifdef CY_PINS_GPIO_0_0_H 
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cc7rr7YM.s 			page 106


1744:.\mem1.c      ****                                             case 0x00: *result = GPIO_0_0_Read(); return_flag = 1; 
1745:.\mem1.c      ****                                         #endif
1746:.\mem1.c      ****                                         #ifdef CY_PINS_GPIO_0_1_H 
1747:.\mem1.c      ****                                             case 0x01: *result = GPIO_0_1_Read(); return_flag = 1; 
1748:.\mem1.c      ****                                         #endif
1749:.\mem1.c      ****                                         #ifdef CY_PINS_GPIO_0_2_H 
1750:.\mem1.c      ****                                             case 0x02: *result = GPIO_0_2_Read(); return_flag = 1; 
1751:.\mem1.c      ****                                         #endif
1752:.\mem1.c      ****                                         #ifdef CY_PINS_GPIO_0_3_H 
1753:.\mem1.c      ****                                             case 0x03: *result = GPIO_0_3_Read(); return_flag = 1; 
1754:.\mem1.c      ****                                         #endif
1755:.\mem1.c      ****                                         #ifdef CY_PINS_GPIO_0_4_H 
1756:.\mem1.c      ****                                             case 0x04: *result = GPIO_0_4_Read(); return_flag = 1; 
1757:.\mem1.c      ****                                         #endif
1758:.\mem1.c      ****                                         #ifdef CY_PINS_GPIO_0_5_H 
1759:.\mem1.c      ****                                             case 0x05: *result = GPIO_0_5_Read(); return_flag = 1; 
1760:.\mem1.c      ****                                         #endif
1761:.\mem1.c      ****                                         #ifdef CY_PINS_GPIO_0_6_H 
1762:.\mem1.c      ****                                             case 0x06: *result = GPIO_0_6_Read(); return_flag = 1; 
1763:.\mem1.c      ****                                         #endif
1764:.\mem1.c      ****                                         #ifdef CY_PINS_GPIO_0_7_H 
1765:.\mem1.c      ****                                             case 0x07: *result = GPIO_0_7_Read(); return_flag = 1; 
1766:.\mem1.c      ****                                         #endif
1767:.\mem1.c      ****                                     }
1768:.\mem1.c      ****                                     break;
1769:.\mem1.c      ****                             
1770:.\mem1.c      ****                             case 0x02: 
1771:.\mem1.c      ****                                     switch(pin)
 4221              		.loc 1 1771 0
 4222 0098 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 4223 009a 072B     		cmp	r3, #7
 4224 009c 00F21F81 		bhi	.L444
 4225 00a0 01A2     		adr	r2, .L323
 4226 00a2 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 4227 00a6 00BF     		.p2align 2
 4228              	.L323:
 4229 00a8 C9000000 		.word	.L322+1
 4230 00ac DB000000 		.word	.L324+1
 4231 00b0 ED000000 		.word	.L325+1
 4232 00b4 FF000000 		.word	.L326+1
 4233 00b8 11010000 		.word	.L327+1
 4234 00bc 23010000 		.word	.L328+1
 4235 00c0 35010000 		.word	.L329+1
 4236 00c4 47010000 		.word	.L330+1
 4237              		.p2align 1
 4238              	.L322:
1772:.\mem1.c      ****                                     {   
1773:.\mem1.c      ****                                         #ifdef CY_PINS_GPIO_2_0_H 
1774:.\mem1.c      ****                                             case 0x00: *result = GPIO_2_0_Read(); return_flag = 1; 
 4239              		.loc 1 1774 0
 4240 00c8 FFF7FEFF 		bl	GPIO_2_0_Read
 4241 00cc 0346     		mov	r3, r0
 4242 00ce 1A46     		mov	r2, r3
 4243 00d0 3B6A     		ldr	r3, [r7, #32]
 4244 00d2 1A60     		str	r2, [r3]
 4245 00d4 0123     		movs	r3, #1
 4246 00d6 7B73     		strb	r3, [r7, #13]
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cc7rr7YM.s 			page 107


 4247 00d8 3EE0     		b	.L321
 4248              	.L324:
1775:.\mem1.c      ****                                         #endif
1776:.\mem1.c      ****                                         #ifdef CY_PINS_GPIO_2_1_H 
1777:.\mem1.c      ****                                             case 0x01: *result = GPIO_2_1_Read(); return_flag = 1; 
 4249              		.loc 1 1777 0
 4250 00da FFF7FEFF 		bl	GPIO_2_1_Read
 4251 00de 0346     		mov	r3, r0
 4252 00e0 1A46     		mov	r2, r3
 4253 00e2 3B6A     		ldr	r3, [r7, #32]
 4254 00e4 1A60     		str	r2, [r3]
 4255 00e6 0123     		movs	r3, #1
 4256 00e8 7B73     		strb	r3, [r7, #13]
 4257 00ea 35E0     		b	.L321
 4258              	.L325:
1778:.\mem1.c      ****                                         #endif
1779:.\mem1.c      ****                                         #ifdef CY_PINS_GPIO_2_2_H 
1780:.\mem1.c      ****                                             case 0x02: *result = GPIO_2_2_Read(); return_flag = 1; 
 4259              		.loc 1 1780 0
 4260 00ec FFF7FEFF 		bl	GPIO_2_2_Read
 4261 00f0 0346     		mov	r3, r0
 4262 00f2 1A46     		mov	r2, r3
 4263 00f4 3B6A     		ldr	r3, [r7, #32]
 4264 00f6 1A60     		str	r2, [r3]
 4265 00f8 0123     		movs	r3, #1
 4266 00fa 7B73     		strb	r3, [r7, #13]
 4267 00fc 2CE0     		b	.L321
 4268              	.L326:
1781:.\mem1.c      ****                                         #endif
1782:.\mem1.c      ****                                         #ifdef CY_PINS_GPIO_2_3_H 
1783:.\mem1.c      ****                                             case 0x03: *result = GPIO_2_3_Read(); return_flag = 1; 
 4269              		.loc 1 1783 0
 4270 00fe FFF7FEFF 		bl	GPIO_2_3_Read
 4271 0102 0346     		mov	r3, r0
 4272 0104 1A46     		mov	r2, r3
 4273 0106 3B6A     		ldr	r3, [r7, #32]
 4274 0108 1A60     		str	r2, [r3]
 4275 010a 0123     		movs	r3, #1
 4276 010c 7B73     		strb	r3, [r7, #13]
 4277 010e 23E0     		b	.L321
 4278              	.L327:
1784:.\mem1.c      ****                                         #endif
1785:.\mem1.c      ****                                         #ifdef CY_PINS_GPIO_2_4_H 
1786:.\mem1.c      ****                                             case 0x04: *result = GPIO_2_4_Read(); return_flag = 1; 
 4279              		.loc 1 1786 0
 4280 0110 FFF7FEFF 		bl	GPIO_2_4_Read
 4281 0114 0346     		mov	r3, r0
 4282 0116 1A46     		mov	r2, r3
 4283 0118 3B6A     		ldr	r3, [r7, #32]
 4284 011a 1A60     		str	r2, [r3]
 4285 011c 0123     		movs	r3, #1
 4286 011e 7B73     		strb	r3, [r7, #13]
 4287 0120 1AE0     		b	.L321
 4288              	.L328:
1787:.\mem1.c      ****                                         #endif
1788:.\mem1.c      ****                                         #ifdef CY_PINS_GPIO_2_5_H 
1789:.\mem1.c      ****                                             case 0x05: *result = GPIO_2_5_Read(); return_flag = 1; 
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cc7rr7YM.s 			page 108


 4289              		.loc 1 1789 0
 4290 0122 FFF7FEFF 		bl	GPIO_2_5_Read
 4291 0126 0346     		mov	r3, r0
 4292 0128 1A46     		mov	r2, r3
 4293 012a 3B6A     		ldr	r3, [r7, #32]
 4294 012c 1A60     		str	r2, [r3]
 4295 012e 0123     		movs	r3, #1
 4296 0130 7B73     		strb	r3, [r7, #13]
 4297 0132 11E0     		b	.L321
 4298              	.L329:
1790:.\mem1.c      ****                                         #endif
1791:.\mem1.c      ****                                         #ifdef CY_PINS_GPIO_2_6_H 
1792:.\mem1.c      ****                                             case 0x06: *result = GPIO_2_6_Read(); return_flag = 1; 
 4299              		.loc 1 1792 0
 4300 0134 FFF7FEFF 		bl	GPIO_2_6_Read
 4301 0138 0346     		mov	r3, r0
 4302 013a 1A46     		mov	r2, r3
 4303 013c 3B6A     		ldr	r3, [r7, #32]
 4304 013e 1A60     		str	r2, [r3]
 4305 0140 0123     		movs	r3, #1
 4306 0142 7B73     		strb	r3, [r7, #13]
 4307 0144 08E0     		b	.L321
 4308              	.L330:
1793:.\mem1.c      ****                                         #endif
1794:.\mem1.c      ****                                         #ifdef CY_PINS_GPIO_2_7_H 
1795:.\mem1.c      ****                                             case 0x07: *result = GPIO_2_7_Read(); return_flag = 1; 
 4309              		.loc 1 1795 0
 4310 0146 FFF7FEFF 		bl	GPIO_2_7_Read
 4311 014a 0346     		mov	r3, r0
 4312 014c 1A46     		mov	r2, r3
 4313 014e 3B6A     		ldr	r3, [r7, #32]
 4314 0150 1A60     		str	r2, [r3]
 4315 0152 0123     		movs	r3, #1
 4316 0154 7B73     		strb	r3, [r7, #13]
 4317 0156 00BF     		nop
 4318              	.L321:
1796:.\mem1.c      ****                                         #endif
1797:.\mem1.c      ****                                     }
1798:.\mem1.c      ****                                     break;
 4319              		.loc 1 1798 0 discriminator 2
 4320 0158 C1E0     		b	.L444
 4321              	.L317:
1799:.\mem1.c      ****                                     
1800:.\mem1.c      ****                             case 0x03: 
1801:.\mem1.c      ****                                     switch(pin)
1802:.\mem1.c      ****                                     {   
1803:.\mem1.c      ****                                         #ifdef CY_PINS_GPIO_3_0_H 
1804:.\mem1.c      ****                                             case 0x00: *result = GPIO_3_0_Read(); return_flag = 1; 
1805:.\mem1.c      ****                                         #endif
1806:.\mem1.c      ****                                         #ifdef CY_PINS_GPIO_3_1_H 
1807:.\mem1.c      ****                                             case 0x01: *result = GPIO_3_1_Read(); return_flag = 1; 
1808:.\mem1.c      ****                                         #endif
1809:.\mem1.c      ****                                         #ifdef CY_PINS_GPIO_3_2_H 
1810:.\mem1.c      ****                                             case 0x02: *result = GPIO_3_2_Read(); return_flag = 1; 
1811:.\mem1.c      ****                                         #endif
1812:.\mem1.c      ****                                         #ifdef CY_PINS_GPIO_3_3_H 
1813:.\mem1.c      ****                                             case 0x03: *result = GPIO_3_3_Read(); return_flag = 1; 
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cc7rr7YM.s 			page 109


1814:.\mem1.c      ****                                         #endif
1815:.\mem1.c      ****                                         #ifdef CY_PINS_GPIO_3_4_H 
1816:.\mem1.c      ****                                             case 0x04: *result = GPIO_3_4_Read(); return_flag = 1; 
1817:.\mem1.c      ****                                         #endif
1818:.\mem1.c      ****                                         #ifdef CY_PINS_GPIO_3_5_H 
1819:.\mem1.c      ****                                             case 0x05: *result = GPIO_3_5_Read(); return_flag = 1; 
1820:.\mem1.c      ****                                         #endif
1821:.\mem1.c      ****                                         #ifdef CY_PINS_GPIO_3_6_H 
1822:.\mem1.c      ****                                             case 0x06: *result = GPIO_3_6_Read(); return_flag = 1; 
1823:.\mem1.c      ****                                         #endif
1824:.\mem1.c      ****                                         #ifdef CY_PINS_GPIO_3_7_H 
1825:.\mem1.c      ****                                             case 0x07: *result = GPIO_3_7_Read(); return_flag = 1; 
1826:.\mem1.c      ****                                         #endif
1827:.\mem1.c      ****                                     }
1828:.\mem1.c      ****                                     break;
1829:.\mem1.c      ****                                     
1830:.\mem1.c      ****                             case 0x04: 
1831:.\mem1.c      ****                                     switch(pin)
1832:.\mem1.c      ****                                     {   
1833:.\mem1.c      ****                                         #ifdef CY_PINS_GPIO_4_0_H 
1834:.\mem1.c      ****                                             case 0x00: *result = GPIO_2_0_Read(); return_flag = 1; 
1835:.\mem1.c      ****                                         #endif
1836:.\mem1.c      ****                                         #ifdef CY_PINS_GPIO_4_1_H 
1837:.\mem1.c      ****                                             case 0x01: *result = GPIO_4_1_Read(); return_flag = 1; 
1838:.\mem1.c      ****                                         #endif
1839:.\mem1.c      ****                                         #ifdef CY_PINS_GPIO_4_2_H 
1840:.\mem1.c      ****                                             case 0x02: *result = GPIO_4_2_Read(); return_flag = 1; 
1841:.\mem1.c      ****                                         #endif
1842:.\mem1.c      ****                                         #ifdef CY_PINS_GPIO_4_3_H 
1843:.\mem1.c      ****                                             case 0x03: *result = GPIO_4_3_Read(); return_flag = 1; 
1844:.\mem1.c      ****                                         #endif
1845:.\mem1.c      ****                                         #ifdef CY_PINS_GPIO_4_4_H 
1846:.\mem1.c      ****                                             case 0x04: *result = GPIO_4_4_Read(); return_flag = 1; 
1847:.\mem1.c      ****                                         #endif
1848:.\mem1.c      ****                                         #ifdef CY_PINS_GPIO_4_5_H 
1849:.\mem1.c      ****                                             case 0x05: *result = GPIO_4_5_Read(); return_flag = 1; 
1850:.\mem1.c      ****                                         #endif
1851:.\mem1.c      ****                                         #ifdef CY_PINS_GPIO_4_6_H 
1852:.\mem1.c      ****                                             case 0x06: *result = GPIO_4_6_Read(); return_flag = 1; 
1853:.\mem1.c      ****                                         #endif
1854:.\mem1.c      ****                                         #ifdef CY_PINS_GPIO_4_7_H 
1855:.\mem1.c      ****                                             case 0x07: *result = GPIO_4_7_Read(); return_flag = 1; 
1856:.\mem1.c      ****                                         #endif
1857:.\mem1.c      ****                                     }
1858:.\mem1.c      ****                                     break;
1859:.\mem1.c      ****                                     
1860:.\mem1.c      ****                             case 0x05: 
1861:.\mem1.c      ****                                     switch(pin)
 4322              		.loc 1 1861 0
 4323 015a 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 4324 015c 072B     		cmp	r3, #7
 4325 015e 00F2C080 		bhi	.L445
 4326 0162 01A2     		adr	r2, .L333
 4327 0164 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 4328              		.p2align 2
 4329              	.L333:
 4330 0168 89010000 		.word	.L332+1
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cc7rr7YM.s 			page 110


 4331 016c 9B010000 		.word	.L334+1
 4332 0170 AD010000 		.word	.L335+1
 4333 0174 BF010000 		.word	.L336+1
 4334 0178 D1010000 		.word	.L337+1
 4335 017c E3010000 		.word	.L338+1
 4336 0180 F5010000 		.word	.L339+1
 4337 0184 07020000 		.word	.L340+1
 4338              		.p2align 1
 4339              	.L332:
1862:.\mem1.c      ****                                     {   
1863:.\mem1.c      ****                                         #ifdef CY_PINS_GPIO_5_0_H 
1864:.\mem1.c      ****                                             case 0x00: *result = GPIO_5_0_Read(); return_flag = 1; 
 4340              		.loc 1 1864 0
 4341 0188 FFF7FEFF 		bl	GPIO_5_0_Read
 4342 018c 0346     		mov	r3, r0
 4343 018e 1A46     		mov	r2, r3
 4344 0190 3B6A     		ldr	r3, [r7, #32]
 4345 0192 1A60     		str	r2, [r3]
 4346 0194 0123     		movs	r3, #1
 4347 0196 7B73     		strb	r3, [r7, #13]
 4348 0198 3EE0     		b	.L331
 4349              	.L334:
1865:.\mem1.c      ****                                         #endif
1866:.\mem1.c      ****                                         #ifdef CY_PINS_GPIO_5_1_H 
1867:.\mem1.c      ****                                             case 0x01: *result = GPIO_5_1_Read(); return_flag = 1; 
 4350              		.loc 1 1867 0
 4351 019a FFF7FEFF 		bl	GPIO_5_1_Read
 4352 019e 0346     		mov	r3, r0
 4353 01a0 1A46     		mov	r2, r3
 4354 01a2 3B6A     		ldr	r3, [r7, #32]
 4355 01a4 1A60     		str	r2, [r3]
 4356 01a6 0123     		movs	r3, #1
 4357 01a8 7B73     		strb	r3, [r7, #13]
 4358 01aa 35E0     		b	.L331
 4359              	.L335:
1868:.\mem1.c      ****                                         #endif
1869:.\mem1.c      ****                                         #ifdef CY_PINS_GPIO_5_2_H 
1870:.\mem1.c      ****                                             case 0x02: *result = GPIO_5_2_Read(); return_flag = 1; 
 4360              		.loc 1 1870 0
 4361 01ac FFF7FEFF 		bl	GPIO_5_2_Read
 4362 01b0 0346     		mov	r3, r0
 4363 01b2 1A46     		mov	r2, r3
 4364 01b4 3B6A     		ldr	r3, [r7, #32]
 4365 01b6 1A60     		str	r2, [r3]
 4366 01b8 0123     		movs	r3, #1
 4367 01ba 7B73     		strb	r3, [r7, #13]
 4368 01bc 2CE0     		b	.L331
 4369              	.L336:
1871:.\mem1.c      ****                                         #endif
1872:.\mem1.c      ****                                         #ifdef CY_PINS_GPIO_5_3_H 
1873:.\mem1.c      ****                                             case 0x03: *result = GPIO_5_3_Read(); return_flag = 1; 
 4370              		.loc 1 1873 0
 4371 01be FFF7FEFF 		bl	GPIO_5_3_Read
 4372 01c2 0346     		mov	r3, r0
 4373 01c4 1A46     		mov	r2, r3
 4374 01c6 3B6A     		ldr	r3, [r7, #32]
 4375 01c8 1A60     		str	r2, [r3]
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cc7rr7YM.s 			page 111


 4376 01ca 0123     		movs	r3, #1
 4377 01cc 7B73     		strb	r3, [r7, #13]
 4378 01ce 23E0     		b	.L331
 4379              	.L337:
1874:.\mem1.c      ****                                         #endif
1875:.\mem1.c      ****                                         #ifdef CY_PINS_GPIO_5_4_H 
1876:.\mem1.c      ****                                             case 0x04: *result = GPIO_5_4_Read(); return_flag = 1; 
 4380              		.loc 1 1876 0
 4381 01d0 FFF7FEFF 		bl	GPIO_5_4_Read
 4382 01d4 0346     		mov	r3, r0
 4383 01d6 1A46     		mov	r2, r3
 4384 01d8 3B6A     		ldr	r3, [r7, #32]
 4385 01da 1A60     		str	r2, [r3]
 4386 01dc 0123     		movs	r3, #1
 4387 01de 7B73     		strb	r3, [r7, #13]
 4388 01e0 1AE0     		b	.L331
 4389              	.L338:
1877:.\mem1.c      ****                                         #endif
1878:.\mem1.c      ****                                         #ifdef CY_PINS_GPIO_5_5_H 
1879:.\mem1.c      ****                                             case 0x05: *result = GPIO_5_5_Read(); return_flag = 1; 
 4390              		.loc 1 1879 0
 4391 01e2 FFF7FEFF 		bl	GPIO_5_5_Read
 4392 01e6 0346     		mov	r3, r0
 4393 01e8 1A46     		mov	r2, r3
 4394 01ea 3B6A     		ldr	r3, [r7, #32]
 4395 01ec 1A60     		str	r2, [r3]
 4396 01ee 0123     		movs	r3, #1
 4397 01f0 7B73     		strb	r3, [r7, #13]
 4398 01f2 11E0     		b	.L331
 4399              	.L339:
1880:.\mem1.c      ****                                         #endif
1881:.\mem1.c      ****                                         #ifdef CY_PINS_GPIO_5_6_H 
1882:.\mem1.c      ****                                             case 0x06: *result = GPIO_5_6_Read(); return_flag = 1; 
 4400              		.loc 1 1882 0
 4401 01f4 FFF7FEFF 		bl	GPIO_5_6_Read
 4402 01f8 0346     		mov	r3, r0
 4403 01fa 1A46     		mov	r2, r3
 4404 01fc 3B6A     		ldr	r3, [r7, #32]
 4405 01fe 1A60     		str	r2, [r3]
 4406 0200 0123     		movs	r3, #1
 4407 0202 7B73     		strb	r3, [r7, #13]
 4408 0204 08E0     		b	.L331
 4409              	.L340:
1883:.\mem1.c      ****                                         #endif
1884:.\mem1.c      ****                                         #ifdef CY_PINS_GPIO_5_7_H 
1885:.\mem1.c      ****                                             case 0x07: *result = GPIO_5_7_Read(); return_flag = 1; 
 4410              		.loc 1 1885 0
 4411 0206 FFF7FEFF 		bl	GPIO_5_7_Read
 4412 020a 0346     		mov	r3, r0
 4413 020c 1A46     		mov	r2, r3
 4414 020e 3B6A     		ldr	r3, [r7, #32]
 4415 0210 1A60     		str	r2, [r3]
 4416 0212 0123     		movs	r3, #1
 4417 0214 7B73     		strb	r3, [r7, #13]
 4418 0216 00BF     		nop
 4419              	.L331:
1886:.\mem1.c      ****                                         #endif
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cc7rr7YM.s 			page 112


1887:.\mem1.c      ****                                     }
1888:.\mem1.c      ****                                     break;
 4420              		.loc 1 1888 0 discriminator 5
 4421 0218 63E0     		b	.L445
 4422              	.L319:
1889:.\mem1.c      ****                                     
1890:.\mem1.c      ****                             case 0x06: 
1891:.\mem1.c      ****                                     switch(pin)
1892:.\mem1.c      ****                                     {   
1893:.\mem1.c      ****                                        #ifdef CY_PINS_GPIO_6_0_H 
1894:.\mem1.c      ****                                             case 0x00: *result = GPIO_6_0_Read(); return_flag = 1; 
1895:.\mem1.c      ****                                         #endif
1896:.\mem1.c      ****                                         #ifdef CY_PINS_GPIO_6_1_H 
1897:.\mem1.c      ****                                             case 0x01: *result = GPIO_6_1_Read(); return_flag = 1; 
1898:.\mem1.c      ****                                         #endif
1899:.\mem1.c      ****                                         #ifdef CY_PINS_GPIO_6_2_H 
1900:.\mem1.c      ****                                             case 0x02: *result = GPIO_6_2_Read(); return_flag = 1; 
1901:.\mem1.c      ****                                         #endif
1902:.\mem1.c      ****                                         #ifdef CY_PINS_GPIO_6_3_H 
1903:.\mem1.c      ****                                             case 0x03: *result = GPIO_6_3_Read(); return_flag = 1; 
1904:.\mem1.c      ****                                         #endif
1905:.\mem1.c      ****                                         #ifdef CY_PINS_GPIO_6_4_H 
1906:.\mem1.c      ****                                             case 0x04: *result = GPIO_6_4_Read(); return_flag = 1; 
1907:.\mem1.c      ****                                         #endif
1908:.\mem1.c      ****                                         #ifdef CY_PINS_GPIO_6_5_H 
1909:.\mem1.c      ****                                             case 0x05: *result = GPIO_6_5_Read(); return_flag = 1; 
1910:.\mem1.c      ****                                         #endif
1911:.\mem1.c      ****                                         #ifdef CY_PINS_GPIO_6_6_H 
1912:.\mem1.c      ****                                             case 0x06: *result = GPIO_6_6_Read(); return_flag = 1; 
1913:.\mem1.c      ****                                         #endif
1914:.\mem1.c      ****                                         #ifdef CY_PINS_GPIO_6_7_H 
1915:.\mem1.c      ****                                             case 0x07: *result = GPIO_6_7_Read(); return_flag = 1; 
1916:.\mem1.c      ****                                         #endif
1917:.\mem1.c      ****                                     }
1918:.\mem1.c      ****                                     break;
1919:.\mem1.c      ****                             
1920:.\mem1.c      ****                             case 0x0C: 
1921:.\mem1.c      ****                                     switch(pin)
 4423              		.loc 1 1921 0
 4424 021a 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 4425 021c 072B     		cmp	r3, #7
 4426 021e 62D8     		bhi	.L446
 4427 0220 01A2     		adr	r2, .L343
 4428 0222 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 4429 0226 00BF     		.p2align 2
 4430              	.L343:
 4431 0228 49020000 		.word	.L342+1
 4432 022c 5B020000 		.word	.L344+1
 4433 0230 6D020000 		.word	.L345+1
 4434 0234 7F020000 		.word	.L346+1
 4435 0238 91020000 		.word	.L347+1
 4436 023c A3020000 		.word	.L348+1
 4437 0240 B5020000 		.word	.L349+1
 4438 0244 C7020000 		.word	.L350+1
 4439              		.p2align 1
 4440              	.L342:
1922:.\mem1.c      ****                                     {   
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cc7rr7YM.s 			page 113


1923:.\mem1.c      ****                                         #ifdef CY_PINS_GPIO_12_0_H 
1924:.\mem1.c      ****                                             case 0x00: *result = GPIO_12_0_Read(); return_flag = 1;
 4441              		.loc 1 1924 0
 4442 0248 FFF7FEFF 		bl	GPIO_12_0_Read
 4443 024c 0346     		mov	r3, r0
 4444 024e 1A46     		mov	r2, r3
 4445 0250 3B6A     		ldr	r3, [r7, #32]
 4446 0252 1A60     		str	r2, [r3]
 4447 0254 0123     		movs	r3, #1
 4448 0256 7B73     		strb	r3, [r7, #13]
 4449 0258 3EE0     		b	.L341
 4450              	.L344:
1925:.\mem1.c      ****                                         #endif
1926:.\mem1.c      ****                                         #ifdef CY_PINS_GPIO_12_1_H 
1927:.\mem1.c      ****                                             case 0x01: *result = GPIO_12_1_Read(); return_flag = 1;
 4451              		.loc 1 1927 0
 4452 025a FFF7FEFF 		bl	GPIO_12_1_Read
 4453 025e 0346     		mov	r3, r0
 4454 0260 1A46     		mov	r2, r3
 4455 0262 3B6A     		ldr	r3, [r7, #32]
 4456 0264 1A60     		str	r2, [r3]
 4457 0266 0123     		movs	r3, #1
 4458 0268 7B73     		strb	r3, [r7, #13]
 4459 026a 35E0     		b	.L341
 4460              	.L345:
1928:.\mem1.c      ****                                         #endif
1929:.\mem1.c      ****                                         #ifdef CY_PINS_GPIO_12_2_H 
1930:.\mem1.c      ****                                             case 0x02: *result = GPIO_12_2_Read(); return_flag = 1;
 4461              		.loc 1 1930 0
 4462 026c FFF7FEFF 		bl	GPIO_12_2_Read
 4463 0270 0346     		mov	r3, r0
 4464 0272 1A46     		mov	r2, r3
 4465 0274 3B6A     		ldr	r3, [r7, #32]
 4466 0276 1A60     		str	r2, [r3]
 4467 0278 0123     		movs	r3, #1
 4468 027a 7B73     		strb	r3, [r7, #13]
 4469 027c 2CE0     		b	.L341
 4470              	.L346:
1931:.\mem1.c      ****                                         #endif
1932:.\mem1.c      ****                                         #ifdef CY_PINS_GPIO_12_3_H 
1933:.\mem1.c      ****                                             case 0x03: *result = GPIO_12_3_Read(); return_flag = 1;
 4471              		.loc 1 1933 0
 4472 027e FFF7FEFF 		bl	GPIO_12_3_Read
 4473 0282 0346     		mov	r3, r0
 4474 0284 1A46     		mov	r2, r3
 4475 0286 3B6A     		ldr	r3, [r7, #32]
 4476 0288 1A60     		str	r2, [r3]
 4477 028a 0123     		movs	r3, #1
 4478 028c 7B73     		strb	r3, [r7, #13]
 4479 028e 23E0     		b	.L341
 4480              	.L347:
1934:.\mem1.c      ****                                         #endif
1935:.\mem1.c      ****                                         #ifdef CY_PINS_GPIO_12_4_H 
1936:.\mem1.c      ****                                             case 0x04: *result = GPIO_12_4_Read(); return_flag = 1;
 4481              		.loc 1 1936 0
 4482 0290 FFF7FEFF 		bl	GPIO_12_4_Read
 4483 0294 0346     		mov	r3, r0
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cc7rr7YM.s 			page 114


 4484 0296 1A46     		mov	r2, r3
 4485 0298 3B6A     		ldr	r3, [r7, #32]
 4486 029a 1A60     		str	r2, [r3]
 4487 029c 0123     		movs	r3, #1
 4488 029e 7B73     		strb	r3, [r7, #13]
 4489 02a0 1AE0     		b	.L341
 4490              	.L348:
1937:.\mem1.c      ****                                         #endif
1938:.\mem1.c      ****                                         #ifdef CY_PINS_GPIO_12_5_H 
1939:.\mem1.c      ****                                             case 0x05: *result = GPIO_12_5_Read(); return_flag = 1;
 4491              		.loc 1 1939 0
 4492 02a2 FFF7FEFF 		bl	GPIO_12_5_Read
 4493 02a6 0346     		mov	r3, r0
 4494 02a8 1A46     		mov	r2, r3
 4495 02aa 3B6A     		ldr	r3, [r7, #32]
 4496 02ac 1A60     		str	r2, [r3]
 4497 02ae 0123     		movs	r3, #1
 4498 02b0 7B73     		strb	r3, [r7, #13]
 4499 02b2 11E0     		b	.L341
 4500              	.L349:
1940:.\mem1.c      ****                                         #endif
1941:.\mem1.c      ****                                         #ifdef CY_PINS_GPIO_12_6_H 
1942:.\mem1.c      ****                                             case 0x06: *result = GPIO_12_6_Read(); return_flag = 1;
 4501              		.loc 1 1942 0
 4502 02b4 FFF7FEFF 		bl	GPIO_12_6_Read
 4503 02b8 0346     		mov	r3, r0
 4504 02ba 1A46     		mov	r2, r3
 4505 02bc 3B6A     		ldr	r3, [r7, #32]
 4506 02be 1A60     		str	r2, [r3]
 4507 02c0 0123     		movs	r3, #1
 4508 02c2 7B73     		strb	r3, [r7, #13]
 4509 02c4 08E0     		b	.L341
 4510              	.L350:
1943:.\mem1.c      ****                                         #endif
1944:.\mem1.c      ****                                         #ifdef CY_PINS_GPIO_12_7_H 
1945:.\mem1.c      ****                                             case 0x07: *result = GPIO_12_7_Read(); return_flag = 1;
 4511              		.loc 1 1945 0
 4512 02c6 FFF7FEFF 		bl	GPIO_12_7_Read
 4513 02ca 0346     		mov	r3, r0
 4514 02cc 1A46     		mov	r2, r3
 4515 02ce 3B6A     		ldr	r3, [r7, #32]
 4516 02d0 1A60     		str	r2, [r3]
 4517 02d2 0123     		movs	r3, #1
 4518 02d4 7B73     		strb	r3, [r7, #13]
 4519 02d6 00BF     		nop
 4520              	.L341:
1946:.\mem1.c      ****                                         #endif
1947:.\mem1.c      ****                                     }
1948:.\mem1.c      ****                                     break;
 4521              		.loc 1 1948 0 discriminator 7
 4522 02d8 05E0     		b	.L446
 4523              	.L443:
1768:.\mem1.c      ****                             
 4524              		.loc 1 1768 0
 4525 02da 00BF     		nop
 4526 02dc 45E2     		b	.L442
 4527              	.L444:
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cc7rr7YM.s 			page 115


1798:.\mem1.c      ****                                     
 4528              		.loc 1 1798 0
 4529 02de 00BF     		nop
 4530 02e0 43E2     		b	.L442
 4531              	.L445:
1888:.\mem1.c      ****                                     
 4532              		.loc 1 1888 0
 4533 02e2 00BF     		nop
 4534 02e4 41E2     		b	.L442
 4535              	.L446:
 4536              		.loc 1 1948 0
 4537 02e6 00BF     		nop
1949:.\mem1.c      ****                                     
1950:.\mem1.c      ****                                 case 0x0F: 
1951:.\mem1.c      ****                                     switch(pin)
1952:.\mem1.c      ****                                     {   
1953:.\mem1.c      ****                                         #ifdef CY_PINS_GPIO_15_0_H 
1954:.\mem1.c      ****                                             case 0x00: *result = GPIO_15_0_Read(); return_flag = 1;
1955:.\mem1.c      ****                                         #endif
1956:.\mem1.c      ****                                         #ifdef CY_PINS_GPIO_15_1_H 
1957:.\mem1.c      ****                                             case 0x01: *result = GPIO_15_1_Read(); return_flag = 1;
1958:.\mem1.c      ****                                         #endif
1959:.\mem1.c      ****                                         #ifdef CY_PINS_GPIO_15_2_H 
1960:.\mem1.c      ****                                             case 0x02: *result = GPIO_15_2_Read(); return_flag = 1;
1961:.\mem1.c      ****                                         #endif
1962:.\mem1.c      ****                                         #ifdef CY_PINS_GPIO_15_3_H 
1963:.\mem1.c      ****                                             case 0x03: *result = GPIO_15_3_Read(); return_flag = 1;
1964:.\mem1.c      ****                                         #endif
1965:.\mem1.c      ****                                         #ifdef CY_PINS_GPIO_15_4_H 
1966:.\mem1.c      ****                                             case 0x04: *result = GPIO_15_4_Read(); return_flag = 1;
1967:.\mem1.c      ****                                         #endif
1968:.\mem1.c      ****                                         #ifdef CY_PINS_GPIO_15_5_H 
1969:.\mem1.c      ****                                             case 0x05: *result = GPIO_15_5_Read(); return_flag = 1;
1970:.\mem1.c      ****                                         #endif
1971:.\mem1.c      ****                                         #ifdef CY_PINS_GPIO_15_6_H 
1972:.\mem1.c      ****                                             case 0x06: *result = GPIO_15_6_Read(); return_flag = 1;
1973:.\mem1.c      ****                                         #endif
1974:.\mem1.c      ****                                         #ifdef CY_PINS_GPIO_15_7_H 
1975:.\mem1.c      ****                                             case 0x07: *result = GPIO_15_7_Read(); return_flag = 1;
1976:.\mem1.c      ****                                         #endif
1977:.\mem1.c      ****                                     }
1978:.\mem1.c      ****                                     break;
1979:.\mem1.c      ****                             
1980:.\mem1.c      ****                         }
1981:.\mem1.c      ****                         break;     
 4538              		.loc 1 1981 0
 4539 02e8 3FE2     		b	.L442
 4540              	.L308:
1982:.\mem1.c      ****                 
1983:.\mem1.c      ****                 
1984:.\mem1.c      ****                 case 0x01://Write
1985:.\mem1.c      ****                 
1986:.\mem1.c      ****                    switch(port)
 4541              		.loc 1 1986 0
 4542 02ea BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 4543 02ec 0F2B     		cmp	r3, #15
 4544 02ee 00F23E82 		bhi	.L447
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cc7rr7YM.s 			page 116


 4545 02f2 01A2     		adr	r2, .L353
 4546 02f4 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 4547              		.p2align 2
 4548              	.L353:
 4549 02f8 EB040000 		.word	.L448+1
 4550 02fc 6F070000 		.word	.L447+1
 4551 0300 39030000 		.word	.L354+1
 4552 0304 EB040000 		.word	.L448+1
 4553 0308 EB040000 		.word	.L448+1
 4554 030c CB030000 		.word	.L357+1
 4555 0310 EB040000 		.word	.L448+1
 4556 0314 6F070000 		.word	.L447+1
 4557 0318 6F070000 		.word	.L447+1
 4558 031c 6F070000 		.word	.L447+1
 4559 0320 6F070000 		.word	.L447+1
 4560 0324 6F070000 		.word	.L447+1
 4561 0328 5B040000 		.word	.L359+1
 4562 032c 6F070000 		.word	.L447+1
 4563 0330 6F070000 		.word	.L447+1
 4564 0334 EB040000 		.word	.L448+1
 4565              		.p2align 1
 4566              	.L354:
1987:.\mem1.c      ****                         {
1988:.\mem1.c      ****                             case 0x00: 
1989:.\mem1.c      ****                                     switch(pin)
1990:.\mem1.c      ****                                     {   
1991:.\mem1.c      ****                                         #ifdef CY_PINS_GPIO_0_0_H 
1992:.\mem1.c      ****                                             case 0x00: GPIO_0_0_Write(val); break;
1993:.\mem1.c      ****                                         #endif
1994:.\mem1.c      ****                                         #ifdef CY_PINS_GPIO_0_1_H 
1995:.\mem1.c      ****                                             case 0x01: GPIO_0_1_Write(val); break;
1996:.\mem1.c      ****                                         #endif
1997:.\mem1.c      ****                                         #ifdef CY_PINS_GPIO_0_2_H 
1998:.\mem1.c      ****                                             case 0x02: GPIO_0_2_Write(val); break;
1999:.\mem1.c      ****                                         #endif
2000:.\mem1.c      ****                                         #ifdef CY_PINS_GPIO_0_3_H 
2001:.\mem1.c      ****                                             case 0x03: GPIO_0_3_Write(val); break;
2002:.\mem1.c      ****                                         #endif
2003:.\mem1.c      ****                                         #ifdef CY_PINS_GPIO_0_4_H 
2004:.\mem1.c      ****                                             case 0x04: GPIO_0_4_Write(val); break;
2005:.\mem1.c      ****                                         #endif
2006:.\mem1.c      ****                                         #ifdef CY_PINS_GPIO_0_5_H 
2007:.\mem1.c      ****                                             case 0x05: GPIO_0_5_Write(val); break;
2008:.\mem1.c      ****                                         #endif
2009:.\mem1.c      ****                                         #ifdef CY_PINS_GPIO_0_6_H 
2010:.\mem1.c      ****                                             case 0x06: GPIO_0_6_Write(val); break;
2011:.\mem1.c      ****                                         #endif
2012:.\mem1.c      ****                                         #ifdef CY_PINS_GPIO_0_7_H 
2013:.\mem1.c      ****                                             case 0x07: GPIO_0_7_Write(val); break;
2014:.\mem1.c      ****                                         #endif
2015:.\mem1.c      ****                                     }
2016:.\mem1.c      ****                                     break;
2017:.\mem1.c      ****                             
2018:.\mem1.c      ****                             case 0x02: 
2019:.\mem1.c      ****                                     switch(pin)
 4567              		.loc 1 2019 0
 4568 0338 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cc7rr7YM.s 			page 117


 4569 033a 072B     		cmp	r3, #7
 4570 033c 00F2D780 		bhi	.L449
 4571 0340 01A2     		adr	r2, .L363
 4572 0342 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 4573 0346 00BF     		.p2align 2
 4574              	.L363:
 4575 0348 69030000 		.word	.L362+1
 4576 034c 75030000 		.word	.L364+1
 4577 0350 81030000 		.word	.L365+1
 4578 0354 8D030000 		.word	.L366+1
 4579 0358 99030000 		.word	.L367+1
 4580 035c A5030000 		.word	.L368+1
 4581 0360 B1030000 		.word	.L369+1
 4582 0364 BD030000 		.word	.L370+1
 4583              		.p2align 1
 4584              	.L362:
2020:.\mem1.c      ****                                     {   
2021:.\mem1.c      ****                                         #ifdef CY_PINS_GPIO_2_0_H 
2022:.\mem1.c      ****                                             case 0x00: GPIO_2_0_Write(val); break;
 4585              		.loc 1 2022 0
 4586 0368 7B88     		ldrh	r3, [r7, #2]	@ movhi
 4587 036a DBB2     		uxtb	r3, r3
 4588 036c 1846     		mov	r0, r3
 4589 036e FFF7FEFF 		bl	GPIO_2_0_Write
 4590 0372 29E0     		b	.L361
 4591              	.L364:
2023:.\mem1.c      ****                                         #endif
2024:.\mem1.c      ****                                         #ifdef CY_PINS_GPIO_2_1_H 
2025:.\mem1.c      ****                                             case 0x01: GPIO_2_1_Write(val); break;
 4592              		.loc 1 2025 0
 4593 0374 7B88     		ldrh	r3, [r7, #2]	@ movhi
 4594 0376 DBB2     		uxtb	r3, r3
 4595 0378 1846     		mov	r0, r3
 4596 037a FFF7FEFF 		bl	GPIO_2_1_Write
 4597 037e 23E0     		b	.L361
 4598              	.L365:
2026:.\mem1.c      ****                                         #endif
2027:.\mem1.c      ****                                         #ifdef CY_PINS_GPIO_2_2_H 
2028:.\mem1.c      ****                                             case 0x02: GPIO_2_2_Write(val); break;
 4599              		.loc 1 2028 0
 4600 0380 7B88     		ldrh	r3, [r7, #2]	@ movhi
 4601 0382 DBB2     		uxtb	r3, r3
 4602 0384 1846     		mov	r0, r3
 4603 0386 FFF7FEFF 		bl	GPIO_2_2_Write
 4604 038a 1DE0     		b	.L361
 4605              	.L366:
2029:.\mem1.c      ****                                         #endif
2030:.\mem1.c      ****                                         #ifdef CY_PINS_GPIO_2_3_H 
2031:.\mem1.c      ****                                             case 0x03: GPIO_2_3_Write(val); break;
 4606              		.loc 1 2031 0
 4607 038c 7B88     		ldrh	r3, [r7, #2]	@ movhi
 4608 038e DBB2     		uxtb	r3, r3
 4609 0390 1846     		mov	r0, r3
 4610 0392 FFF7FEFF 		bl	GPIO_2_3_Write
 4611 0396 17E0     		b	.L361
 4612              	.L367:
2032:.\mem1.c      ****                                         #endif
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cc7rr7YM.s 			page 118


2033:.\mem1.c      ****                                         #ifdef CY_PINS_GPIO_2_4_H 
2034:.\mem1.c      ****                                             case 0x04: GPIO_2_4_Write(val); break;
 4613              		.loc 1 2034 0
 4614 0398 7B88     		ldrh	r3, [r7, #2]	@ movhi
 4615 039a DBB2     		uxtb	r3, r3
 4616 039c 1846     		mov	r0, r3
 4617 039e FFF7FEFF 		bl	GPIO_2_4_Write
 4618 03a2 11E0     		b	.L361
 4619              	.L368:
2035:.\mem1.c      ****                                         #endif
2036:.\mem1.c      ****                                         #ifdef CY_PINS_GPIO_2_5_H 
2037:.\mem1.c      ****                                             case 0x05: GPIO_2_5_Write(val); break;
 4620              		.loc 1 2037 0
 4621 03a4 7B88     		ldrh	r3, [r7, #2]	@ movhi
 4622 03a6 DBB2     		uxtb	r3, r3
 4623 03a8 1846     		mov	r0, r3
 4624 03aa FFF7FEFF 		bl	GPIO_2_5_Write
 4625 03ae 0BE0     		b	.L361
 4626              	.L369:
2038:.\mem1.c      ****                                         #endif
2039:.\mem1.c      ****                                         #ifdef CY_PINS_GPIO_2_6_H 
2040:.\mem1.c      ****                                             case 0x06: GPIO_2_6_Write(val); break;
 4627              		.loc 1 2040 0
 4628 03b0 7B88     		ldrh	r3, [r7, #2]	@ movhi
 4629 03b2 DBB2     		uxtb	r3, r3
 4630 03b4 1846     		mov	r0, r3
 4631 03b6 FFF7FEFF 		bl	GPIO_2_6_Write
 4632 03ba 05E0     		b	.L361
 4633              	.L370:
2041:.\mem1.c      ****                                         #endif
2042:.\mem1.c      ****                                         #ifdef CY_PINS_GPIO_2_7_H 
2043:.\mem1.c      ****                                             case 0x07: GPIO_2_7_Write(val); break;
 4634              		.loc 1 2043 0
 4635 03bc 7B88     		ldrh	r3, [r7, #2]	@ movhi
 4636 03be DBB2     		uxtb	r3, r3
 4637 03c0 1846     		mov	r0, r3
 4638 03c2 FFF7FEFF 		bl	GPIO_2_7_Write
 4639 03c6 00BF     		nop
 4640              	.L361:
2044:.\mem1.c      ****                                         #endif
2045:.\mem1.c      ****                                     }
2046:.\mem1.c      ****                                     break;
 4641              		.loc 1 2046 0 discriminator 10
 4642 03c8 91E0     		b	.L449
 4643              	.L357:
2047:.\mem1.c      ****                             
2048:.\mem1.c      ****                             case 0x03: 
2049:.\mem1.c      ****                                     switch(pin)
2050:.\mem1.c      ****                                     {   
2051:.\mem1.c      ****                                         #ifdef CY_PINS_GPIO_3_0_H 
2052:.\mem1.c      ****                                             case 0x00: GPIO_3_0_Write(val); break;
2053:.\mem1.c      ****                                         #endif
2054:.\mem1.c      ****                                         #ifdef CY_PINS_GPIO_3_1_H 
2055:.\mem1.c      ****                                             case 0x01: GPIO_3_1_Write(val); break;
2056:.\mem1.c      ****                                         #endif
2057:.\mem1.c      ****                                         #ifdef CY_PINS_GPIO_3_2_H 
2058:.\mem1.c      ****                                             case 0x02: GPIO_3_2_Write(val); break;
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cc7rr7YM.s 			page 119


2059:.\mem1.c      ****                                         #endif
2060:.\mem1.c      ****                                         #ifdef CY_PINS_GPIO_3_3_H 
2061:.\mem1.c      ****                                             case 0x03: GPIO_3_3_Write(val); break;
2062:.\mem1.c      ****                                         #endif
2063:.\mem1.c      ****                                         #ifdef CY_PINS_GPIO_3_4_H 
2064:.\mem1.c      ****                                             case 0x04: GPIO_3_4_Write(val); break;
2065:.\mem1.c      ****                                         #endif
2066:.\mem1.c      ****                                         #ifdef CY_PINS_GPIO_3_5_H 
2067:.\mem1.c      ****                                             case 0x05: GPIO_3_5_Write(val); break;
2068:.\mem1.c      ****                                         #endif
2069:.\mem1.c      ****                                         #ifdef CY_PINS_GPIO_3_6_H 
2070:.\mem1.c      ****                                             case 0x06: GPIO_3_6_Write(val); break;
2071:.\mem1.c      ****                                         #endif
2072:.\mem1.c      ****                                         #ifdef CY_PINS_GPIO_3_7_H 
2073:.\mem1.c      ****                                             case 0x07: GPIO_3_7_Write(val); break;
2074:.\mem1.c      ****                                         #endif
2075:.\mem1.c      ****                                     }
2076:.\mem1.c      ****                                     break;
2077:.\mem1.c      ****                                     
2078:.\mem1.c      ****                             case 0x04: 
2079:.\mem1.c      ****                                     switch(pin)
2080:.\mem1.c      ****                                     {   
2081:.\mem1.c      ****                                         #ifdef CY_PINS_GPIO_4_0_H 
2082:.\mem1.c      ****                                             case 0x00: GPIO_4_0_Write(val); break;
2083:.\mem1.c      ****                                         #endif
2084:.\mem1.c      ****                                         #ifdef CY_PINS_GPIO_4_1_H 
2085:.\mem1.c      ****                                             case 0x01: GPIO_4_1_Write(val); break;
2086:.\mem1.c      ****                                         #endif
2087:.\mem1.c      ****                                         #ifdef CY_PINS_GPIO_4_2_H 
2088:.\mem1.c      ****                                             case 0x02: GPIO_4_2_Write(val); break;
2089:.\mem1.c      ****                                         #endif
2090:.\mem1.c      ****                                         #ifdef CY_PINS_GPIO_4_3_H 
2091:.\mem1.c      ****                                             case 0x03: GPIO_4_3_Write(val); break;
2092:.\mem1.c      ****                                         #endif
2093:.\mem1.c      ****                                         #ifdef CY_PINS_GPIO_4_4_H 
2094:.\mem1.c      ****                                             case 0x04: GPIO_4_4_Write(val); break;
2095:.\mem1.c      ****                                         #endif
2096:.\mem1.c      ****                                         #ifdef CY_PINS_GPIO_4_5_H 
2097:.\mem1.c      ****                                             case 0x05: GPIO_4_5_Write(val); break;
2098:.\mem1.c      ****                                         #endif
2099:.\mem1.c      ****                                         #ifdef CY_PINS_GPIO_4_6_H 
2100:.\mem1.c      ****                                             case 0x06: GPIO_4_6_Write(val); break;
2101:.\mem1.c      ****                                         #endif
2102:.\mem1.c      ****                                         #ifdef CY_PINS_GPIO_4_7_H 
2103:.\mem1.c      ****                                             case 0x07: GPIO_4_7_Write(val); break;
2104:.\mem1.c      ****                                         #endif
2105:.\mem1.c      ****                                     }
2106:.\mem1.c      ****                                     break;
2107:.\mem1.c      ****                                     
2108:.\mem1.c      ****                             case 0x05: 
2109:.\mem1.c      ****                                     switch(pin)
 4644              		.loc 1 2109 0
 4645 03ca 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 4646 03cc 072B     		cmp	r3, #7
 4647 03ce 00F29080 		bhi	.L450
 4648 03d2 01A2     		adr	r2, .L373
 4649 03d4 52F823F0 		ldr	pc, [r2, r3, lsl #2]
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cc7rr7YM.s 			page 120


 4650              		.p2align 2
 4651              	.L373:
 4652 03d8 F9030000 		.word	.L372+1
 4653 03dc 05040000 		.word	.L374+1
 4654 03e0 11040000 		.word	.L375+1
 4655 03e4 1D040000 		.word	.L376+1
 4656 03e8 29040000 		.word	.L377+1
 4657 03ec 35040000 		.word	.L378+1
 4658 03f0 41040000 		.word	.L379+1
 4659 03f4 4D040000 		.word	.L380+1
 4660              		.p2align 1
 4661              	.L372:
2110:.\mem1.c      ****                                     {   
2111:.\mem1.c      ****                                         #ifdef CY_PINS_GPIO_5_0_H 
2112:.\mem1.c      ****                                             case 0x00: GPIO_5_0_Write(val); break;
 4662              		.loc 1 2112 0
 4663 03f8 7B88     		ldrh	r3, [r7, #2]	@ movhi
 4664 03fa DBB2     		uxtb	r3, r3
 4665 03fc 1846     		mov	r0, r3
 4666 03fe FFF7FEFF 		bl	GPIO_5_0_Write
 4667 0402 29E0     		b	.L371
 4668              	.L374:
2113:.\mem1.c      ****                                         #endif
2114:.\mem1.c      ****                                         #ifdef CY_PINS_GPIO_5_1_H 
2115:.\mem1.c      ****                                             case 0x01: GPIO_5_1_Write(val); break;
 4669              		.loc 1 2115 0
 4670 0404 7B88     		ldrh	r3, [r7, #2]	@ movhi
 4671 0406 DBB2     		uxtb	r3, r3
 4672 0408 1846     		mov	r0, r3
 4673 040a FFF7FEFF 		bl	GPIO_5_1_Write
 4674 040e 23E0     		b	.L371
 4675              	.L375:
2116:.\mem1.c      ****                                         #endif
2117:.\mem1.c      ****                                         #ifdef CY_PINS_GPIO_5_2_H 
2118:.\mem1.c      ****                                             case 0x02: GPIO_5_2_Write(val); break;
 4676              		.loc 1 2118 0
 4677 0410 7B88     		ldrh	r3, [r7, #2]	@ movhi
 4678 0412 DBB2     		uxtb	r3, r3
 4679 0414 1846     		mov	r0, r3
 4680 0416 FFF7FEFF 		bl	GPIO_5_2_Write
 4681 041a 1DE0     		b	.L371
 4682              	.L376:
2119:.\mem1.c      ****                                         #endif
2120:.\mem1.c      ****                                         #ifdef CY_PINS_GPIO_5_3_H 
2121:.\mem1.c      ****                                             case 0x03: GPIO_5_3_Write(val); break;
 4683              		.loc 1 2121 0
 4684 041c 7B88     		ldrh	r3, [r7, #2]	@ movhi
 4685 041e DBB2     		uxtb	r3, r3
 4686 0420 1846     		mov	r0, r3
 4687 0422 FFF7FEFF 		bl	GPIO_5_3_Write
 4688 0426 17E0     		b	.L371
 4689              	.L377:
2122:.\mem1.c      ****                                         #endif
2123:.\mem1.c      ****                                         #ifdef CY_PINS_GPIO_5_4_H 
2124:.\mem1.c      ****                                             case 0x04: GPIO_5_4_Write(val); break;
 4690              		.loc 1 2124 0
 4691 0428 7B88     		ldrh	r3, [r7, #2]	@ movhi
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cc7rr7YM.s 			page 121


 4692 042a DBB2     		uxtb	r3, r3
 4693 042c 1846     		mov	r0, r3
 4694 042e FFF7FEFF 		bl	GPIO_5_4_Write
 4695 0432 11E0     		b	.L371
 4696              	.L378:
2125:.\mem1.c      ****                                         #endif
2126:.\mem1.c      ****                                         #ifdef CY_PINS_GPIO_5_5_H 
2127:.\mem1.c      ****                                             case 0x05: GPIO_5_5_Write(val); break;
 4697              		.loc 1 2127 0
 4698 0434 7B88     		ldrh	r3, [r7, #2]	@ movhi
 4699 0436 DBB2     		uxtb	r3, r3
 4700 0438 1846     		mov	r0, r3
 4701 043a FFF7FEFF 		bl	GPIO_5_5_Write
 4702 043e 0BE0     		b	.L371
 4703              	.L379:
2128:.\mem1.c      ****                                         #endif
2129:.\mem1.c      ****                                         #ifdef CY_PINS_GPIO_5_6_H 
2130:.\mem1.c      ****                                             case 0x06: GPIO_5_6_Write(val); break;
 4704              		.loc 1 2130 0
 4705 0440 7B88     		ldrh	r3, [r7, #2]	@ movhi
 4706 0442 DBB2     		uxtb	r3, r3
 4707 0444 1846     		mov	r0, r3
 4708 0446 FFF7FEFF 		bl	GPIO_5_6_Write
 4709 044a 05E0     		b	.L371
 4710              	.L380:
2131:.\mem1.c      ****                                         #endif
2132:.\mem1.c      ****                                         #ifdef CY_PINS_GPIO_5_7_H 
2133:.\mem1.c      ****                                             case 0x07: GPIO_5_7_Write(val); break;
 4711              		.loc 1 2133 0
 4712 044c 7B88     		ldrh	r3, [r7, #2]	@ movhi
 4713 044e DBB2     		uxtb	r3, r3
 4714 0450 1846     		mov	r0, r3
 4715 0452 FFF7FEFF 		bl	GPIO_5_7_Write
 4716 0456 00BF     		nop
 4717              	.L371:
2134:.\mem1.c      ****                                         #endif
2135:.\mem1.c      ****                                     }
2136:.\mem1.c      ****                                     break;
 4718              		.loc 1 2136 0 discriminator 13
 4719 0458 4BE0     		b	.L450
 4720              	.L359:
2137:.\mem1.c      ****                                     
2138:.\mem1.c      ****                             case 0x06: 
2139:.\mem1.c      ****                                     switch(pin)
2140:.\mem1.c      ****                                     {   
2141:.\mem1.c      ****                                         #ifdef CY_PINS_GPIO_6_0_H 
2142:.\mem1.c      ****                                             case 0x00: GPIO_6_0_Write(val); break;
2143:.\mem1.c      ****                                         #endif
2144:.\mem1.c      ****                                         #ifdef CY_PINS_GPIO_6_1_H 
2145:.\mem1.c      ****                                             case 0x01: GPIO_6_1_Write(val); break;
2146:.\mem1.c      ****                                         #endif
2147:.\mem1.c      ****                                         #ifdef CY_PINS_GPIO_6_2_H 
2148:.\mem1.c      ****                                             case 0x02: GPIO_6_2_Write(val); break;
2149:.\mem1.c      ****                                         #endif
2150:.\mem1.c      ****                                         #ifdef CY_PINS_GPIO_6_3_H 
2151:.\mem1.c      ****                                             case 0x03: GPIO_6_3_Write(val); break;
2152:.\mem1.c      ****                                         #endif
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cc7rr7YM.s 			page 122


2153:.\mem1.c      ****                                         #ifdef CY_PINS_GPIO_6_4_H 
2154:.\mem1.c      ****                                             case 0x04: GPIO_6_4_Write(val); break;
2155:.\mem1.c      ****                                         #endif
2156:.\mem1.c      ****                                         #ifdef CY_PINS_GPIO_6_5_H 
2157:.\mem1.c      ****                                             case 0x05: GPIO_6_5_Write(val); break;
2158:.\mem1.c      ****                                         #endif
2159:.\mem1.c      ****                                         #ifdef CY_PINS_GPIO_6_6_H 
2160:.\mem1.c      ****                                             case 0x06: GPIO_6_6_Write(val); break;
2161:.\mem1.c      ****                                         #endif
2162:.\mem1.c      ****                                         #ifdef CY_PINS_GPIO_6_7_H 
2163:.\mem1.c      ****                                             case 0x07: GPIO_6_7_Write(val); break;
2164:.\mem1.c      ****                                         #endif
2165:.\mem1.c      ****                                     }
2166:.\mem1.c      ****                                     break;
2167:.\mem1.c      ****                             
2168:.\mem1.c      ****                             case 0x0C: 
2169:.\mem1.c      ****                                     switch(pin)
 4721              		.loc 1 2169 0
 4722 045a 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 4723 045c 072B     		cmp	r3, #7
 4724 045e 4AD8     		bhi	.L451
 4725 0460 01A2     		adr	r2, .L383
 4726 0462 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 4727 0466 00BF     		.p2align 2
 4728              	.L383:
 4729 0468 89040000 		.word	.L382+1
 4730 046c 95040000 		.word	.L384+1
 4731 0470 A1040000 		.word	.L385+1
 4732 0474 AD040000 		.word	.L386+1
 4733 0478 B9040000 		.word	.L387+1
 4734 047c C5040000 		.word	.L388+1
 4735 0480 D1040000 		.word	.L389+1
 4736 0484 DD040000 		.word	.L390+1
 4737              		.p2align 1
 4738              	.L382:
2170:.\mem1.c      ****                                     {   
2171:.\mem1.c      ****                                         #ifdef CY_PINS_GPIO_12_0_H 
2172:.\mem1.c      ****                                             case 0x00: GPIO_12_0_Write(val); break;
 4739              		.loc 1 2172 0
 4740 0488 7B88     		ldrh	r3, [r7, #2]	@ movhi
 4741 048a DBB2     		uxtb	r3, r3
 4742 048c 1846     		mov	r0, r3
 4743 048e FFF7FEFF 		bl	GPIO_12_0_Write
 4744 0492 29E0     		b	.L381
 4745              	.L384:
2173:.\mem1.c      ****                                         #endif
2174:.\mem1.c      ****                                         #ifdef CY_PINS_GPIO_12_1_H 
2175:.\mem1.c      ****                                             case 0x01: GPIO_12_1_Write(val); break;
 4746              		.loc 1 2175 0
 4747 0494 7B88     		ldrh	r3, [r7, #2]	@ movhi
 4748 0496 DBB2     		uxtb	r3, r3
 4749 0498 1846     		mov	r0, r3
 4750 049a FFF7FEFF 		bl	GPIO_12_1_Write
 4751 049e 23E0     		b	.L381
 4752              	.L385:
2176:.\mem1.c      ****                                         #endif
2177:.\mem1.c      ****                                         #ifdef CY_PINS_GPIO_12_2_H 
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cc7rr7YM.s 			page 123


2178:.\mem1.c      ****                                             case 0x02: GPIO_12_2_Write(val); break;
 4753              		.loc 1 2178 0
 4754 04a0 7B88     		ldrh	r3, [r7, #2]	@ movhi
 4755 04a2 DBB2     		uxtb	r3, r3
 4756 04a4 1846     		mov	r0, r3
 4757 04a6 FFF7FEFF 		bl	GPIO_12_2_Write
 4758 04aa 1DE0     		b	.L381
 4759              	.L386:
2179:.\mem1.c      ****                                         #endif
2180:.\mem1.c      ****                                         #ifdef CY_PINS_GPIO_12_3_H 
2181:.\mem1.c      ****                                             case 0x03: GPIO_12_3_Write(val); break;
 4760              		.loc 1 2181 0
 4761 04ac 7B88     		ldrh	r3, [r7, #2]	@ movhi
 4762 04ae DBB2     		uxtb	r3, r3
 4763 04b0 1846     		mov	r0, r3
 4764 04b2 FFF7FEFF 		bl	GPIO_12_3_Write
 4765 04b6 17E0     		b	.L381
 4766              	.L387:
2182:.\mem1.c      ****                                         #endif
2183:.\mem1.c      ****                                         #ifdef CY_PINS_GPIO_12_4_H 
2184:.\mem1.c      ****                                             case 0x04: GPIO_12_4_Write(val); break;
 4767              		.loc 1 2184 0
 4768 04b8 7B88     		ldrh	r3, [r7, #2]	@ movhi
 4769 04ba DBB2     		uxtb	r3, r3
 4770 04bc 1846     		mov	r0, r3
 4771 04be FFF7FEFF 		bl	GPIO_12_4_Write
 4772 04c2 11E0     		b	.L381
 4773              	.L388:
2185:.\mem1.c      ****                                         #endif
2186:.\mem1.c      ****                                         #ifdef CY_PINS_GPIO_12_5_H 
2187:.\mem1.c      ****                                             case 0x05: GPIO_12_5_Write(val); break;
 4774              		.loc 1 2187 0
 4775 04c4 7B88     		ldrh	r3, [r7, #2]	@ movhi
 4776 04c6 DBB2     		uxtb	r3, r3
 4777 04c8 1846     		mov	r0, r3
 4778 04ca FFF7FEFF 		bl	GPIO_12_5_Write
 4779 04ce 0BE0     		b	.L381
 4780              	.L389:
2188:.\mem1.c      ****                                         #endif
2189:.\mem1.c      ****                                         #ifdef CY_PINS_GPIO_12_6_H 
2190:.\mem1.c      ****                                             case 0x06: GPIO_12_6_Write(val); break;
 4781              		.loc 1 2190 0
 4782 04d0 7B88     		ldrh	r3, [r7, #2]	@ movhi
 4783 04d2 DBB2     		uxtb	r3, r3
 4784 04d4 1846     		mov	r0, r3
 4785 04d6 FFF7FEFF 		bl	GPIO_12_6_Write
 4786 04da 05E0     		b	.L381
 4787              	.L390:
2191:.\mem1.c      ****                                         #endif
2192:.\mem1.c      ****                                         #ifdef CY_PINS_GPIO_12_7_H 
2193:.\mem1.c      ****                                             case 0x07: GPIO_12_7_Write(val); break;
 4788              		.loc 1 2193 0
 4789 04dc 7B88     		ldrh	r3, [r7, #2]	@ movhi
 4790 04de DBB2     		uxtb	r3, r3
 4791 04e0 1846     		mov	r0, r3
 4792 04e2 FFF7FEFF 		bl	GPIO_12_7_Write
 4793 04e6 00BF     		nop
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cc7rr7YM.s 			page 124


 4794              	.L381:
2194:.\mem1.c      ****                                         #endif
2195:.\mem1.c      ****                                     }
2196:.\mem1.c      ****                                     break;
 4795              		.loc 1 2196 0 discriminator 15
 4796 04e8 05E0     		b	.L451
 4797              	.L448:
2016:.\mem1.c      ****                             
 4798              		.loc 1 2016 0
 4799 04ea 00BF     		nop
 4800 04ec 3FE1     		b	.L447
 4801              	.L449:
2046:.\mem1.c      ****                             
 4802              		.loc 1 2046 0
 4803 04ee 00BF     		nop
 4804 04f0 3DE1     		b	.L447
 4805              	.L450:
2136:.\mem1.c      ****                                     
 4806              		.loc 1 2136 0
 4807 04f2 00BF     		nop
 4808 04f4 3BE1     		b	.L447
 4809              	.L451:
 4810              		.loc 1 2196 0
 4811 04f6 00BF     		nop
2197:.\mem1.c      ****                                     
2198:.\mem1.c      ****                             case 0x0F: 
2199:.\mem1.c      ****                                     switch(pin)
2200:.\mem1.c      ****                                     {   
2201:.\mem1.c      ****                                         #ifdef CY_PINS_GPIO_15_0_H 
2202:.\mem1.c      ****                                             case 0x00: GPIO_15_0_Write(val); break;
2203:.\mem1.c      ****                                         #endif
2204:.\mem1.c      ****                                         #ifdef CY_PINS_GPIO_15_1_H 
2205:.\mem1.c      ****                                             case 0x01: GPIO_15_1_Write(val); break;
2206:.\mem1.c      ****                                         #endif
2207:.\mem1.c      ****                                         #ifdef CY_PINS_GPIO_15_2_H 
2208:.\mem1.c      ****                                             case 0x02: GPIO_15_2_Write(val); break;
2209:.\mem1.c      ****                                         #endif
2210:.\mem1.c      ****                                         #ifdef CY_PINS_GPIO_15_3_H 
2211:.\mem1.c      ****                                             case 0x03: GPIO_15_3_Write(val); break;
2212:.\mem1.c      ****                                         #endif
2213:.\mem1.c      ****                                         #ifdef CY_PINS_GPIO_15_4_H 
2214:.\mem1.c      ****                                             case 0x04: GPIO_15_4_Write(val); break;
2215:.\mem1.c      ****                                         #endif
2216:.\mem1.c      ****                                         #ifdef CY_PINS_GPIO_15_5_H 
2217:.\mem1.c      ****                                             case 0x05: GPIO_15_5_Write(val); break;
2218:.\mem1.c      ****                                         #endif
2219:.\mem1.c      ****                                         #ifdef CY_PINS_GPIO_15_6_H 
2220:.\mem1.c      ****                                             case 0x06: GPIO_15_6_Write(val); break;
2221:.\mem1.c      ****                                         #endif
2222:.\mem1.c      ****                                         #ifdef CY_PINS_GPIO_15_7_H 
2223:.\mem1.c      ****                                             case 0x07: GPIO_15_7_Write(val); break;
2224:.\mem1.c      ****                                         #endif
2225:.\mem1.c      ****                                     }
2226:.\mem1.c      ****                                     break;
2227:.\mem1.c      ****                             
2228:.\mem1.c      ****                         }
2229:.\mem1.c      ****                         break;      
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cc7rr7YM.s 			page 125


 4812              		.loc 1 2229 0
 4813 04f8 39E1     		b	.L447
 4814              	.L309:
2230:.\mem1.c      ****                 
2231:.\mem1.c      ****                 
2232:.\mem1.c      ****                 case 0x03: //set drive mode
2233:.\mem1.c      ****                         switch(val)
 4815              		.loc 1 2233 0
 4816 04fa 7B88     		ldrh	r3, [r7, #2]
 4817 04fc 013B     		subs	r3, r3, #1
 4818 04fe 072B     		cmp	r3, #7
 4819 0500 2AD8     		bhi	.L391
 4820 0502 01A2     		adr	r2, .L393
 4821 0504 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 4822              		.p2align 2
 4823              	.L393:
 4824 0508 29050000 		.word	.L392+1
 4825 050c 2F050000 		.word	.L394+1
 4826 0510 35050000 		.word	.L395+1
 4827 0514 3B050000 		.word	.L396+1
 4828 0518 41050000 		.word	.L397+1
 4829 051c 47050000 		.word	.L398+1
 4830 0520 4D050000 		.word	.L399+1
 4831 0524 53050000 		.word	.L400+1
 4832              		.p2align 1
 4833              	.L392:
2234:.\mem1.c      ****                         {
2235:.\mem1.c      ****                                 case 0x01: config_MASK = PIN_DM_ALG_HIZ; break;
 4834              		.loc 1 2235 0
 4835 0528 0023     		movs	r3, #0
 4836 052a FB81     		strh	r3, [r7, #14]	@ movhi
 4837 052c 14E0     		b	.L391
 4838              	.L394:
2236:.\mem1.c      ****                                 case 0x02: config_MASK = PIN_DM_DIG_HIZ; break;
 4839              		.loc 1 2236 0
 4840 052e 0223     		movs	r3, #2
 4841 0530 FB81     		strh	r3, [r7, #14]	@ movhi
 4842 0532 11E0     		b	.L391
 4843              	.L395:
2237:.\mem1.c      ****                                 case 0x03: config_MASK = PIN_DM_RES_UP; break;
 4844              		.loc 1 2237 0
 4845 0534 0423     		movs	r3, #4
 4846 0536 FB81     		strh	r3, [r7, #14]	@ movhi
 4847 0538 0EE0     		b	.L391
 4848              	.L396:
2238:.\mem1.c      ****                                 case 0x04: config_MASK = PIN_DM_RES_DWN; break;
 4849              		.loc 1 2238 0
 4850 053a 0623     		movs	r3, #6
 4851 053c FB81     		strh	r3, [r7, #14]	@ movhi
 4852 053e 0BE0     		b	.L391
 4853              	.L397:
2239:.\mem1.c      ****                                 case 0x05: config_MASK = PIN_DM_OD_LO; break;
 4854              		.loc 1 2239 0
 4855 0540 0823     		movs	r3, #8
 4856 0542 FB81     		strh	r3, [r7, #14]	@ movhi
 4857 0544 08E0     		b	.L391
 4858              	.L398:
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cc7rr7YM.s 			page 126


2240:.\mem1.c      ****                                 case 0x06: config_MASK = PIN_DM_OD_HI; break;
 4859              		.loc 1 2240 0
 4860 0546 0A23     		movs	r3, #10
 4861 0548 FB81     		strh	r3, [r7, #14]	@ movhi
 4862 054a 05E0     		b	.L391
 4863              	.L399:
2241:.\mem1.c      ****                                 case 0x07: config_MASK = PIN_DM_STRONG; break;
 4864              		.loc 1 2241 0
 4865 054c 0C23     		movs	r3, #12
 4866 054e FB81     		strh	r3, [r7, #14]	@ movhi
 4867 0550 02E0     		b	.L391
 4868              	.L400:
2242:.\mem1.c      ****                                 case 0x08: config_MASK = PIN_DM_RES_UPDWN; break;
 4869              		.loc 1 2242 0
 4870 0552 0E23     		movs	r3, #14
 4871 0554 FB81     		strh	r3, [r7, #14]	@ movhi
 4872 0556 00BF     		nop
 4873              	.L391:
2243:.\mem1.c      ****                                 
2244:.\mem1.c      ****                                 
2245:.\mem1.c      ****                         }
2246:.\mem1.c      ****                         
2247:.\mem1.c      ****                         switch(port)
 4874              		.loc 1 2247 0
 4875 0558 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 4876 055a 0F2B     		cmp	r3, #15
 4877 055c 00F20981 		bhi	.L452
 4878 0560 01A2     		adr	r2, .L403
 4879 0562 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 4880 0566 00BF     		.p2align 2
 4881              	.L403:
 4882 0568 5B070000 		.word	.L453+1
 4883 056c 73070000 		.word	.L452+1
 4884 0570 A9050000 		.word	.L404+1
 4885 0574 5B070000 		.word	.L453+1
 4886 0578 5B070000 		.word	.L453+1
 4887 057c 3B060000 		.word	.L407+1
 4888 0580 5B070000 		.word	.L453+1
 4889 0584 73070000 		.word	.L452+1
 4890 0588 73070000 		.word	.L452+1
 4891 058c 73070000 		.word	.L452+1
 4892 0590 73070000 		.word	.L452+1
 4893 0594 73070000 		.word	.L452+1
 4894 0598 CB060000 		.word	.L409+1
 4895 059c 73070000 		.word	.L452+1
 4896 05a0 73070000 		.word	.L452+1
 4897 05a4 5B070000 		.word	.L453+1
 4898              		.p2align 1
 4899              	.L404:
2248:.\mem1.c      ****                         {
2249:.\mem1.c      ****                             case 0x00: 
2250:.\mem1.c      ****                                     switch(pin)
2251:.\mem1.c      ****                                     {   
2252:.\mem1.c      ****                                         #ifdef CY_PINS_GPIO_0_0_H 
2253:.\mem1.c      ****                                             case 0x00: GPIO_0_0_SetDriveMode(config_MASK); break; 
2254:.\mem1.c      ****                                         #endif
2255:.\mem1.c      ****                                         #ifdef CY_PINS_GPIO_0_1_H 
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cc7rr7YM.s 			page 127


2256:.\mem1.c      ****                                             case 0x01: GPIO_0_1_SetDriveMode(config_MASK); break; 
2257:.\mem1.c      ****                                         #endif
2258:.\mem1.c      ****                                         #ifdef CY_PINS_GPIO_0_2_H 
2259:.\mem1.c      ****                                             case 0x02: GPIO_0_2_SetDriveMode(config_MASK); break; 
2260:.\mem1.c      ****                                         #endif
2261:.\mem1.c      ****                                         #ifdef CY_PINS_GPIO_0_3_H 
2262:.\mem1.c      ****                                             case 0x03: GPIO_0_3_SetDriveMode(config_MASK); break;
2263:.\mem1.c      ****                                         #endif
2264:.\mem1.c      ****                                         #ifdef CY_PINS_GPIO_0_4_H 
2265:.\mem1.c      ****                                             case 0x04: GPIO_0_4_SetDriveMode(config_MASK); break;
2266:.\mem1.c      ****                                         #endif
2267:.\mem1.c      ****                                         #ifdef CY_PINS_GPIO_0_5_H 
2268:.\mem1.c      ****                                             case 0x05: GPIO_0_5_SetDriveMode(config_MASK); break;
2269:.\mem1.c      ****                                         #endif
2270:.\mem1.c      ****                                         #ifdef CY_PINS_GPIO_0_6_H 
2271:.\mem1.c      ****                                             case 0x06: GPIO_0_6_SetDriveMode(config_MASK); break;
2272:.\mem1.c      ****                                         #endif
2273:.\mem1.c      ****                                         #ifdef CY_PINS_GPIO_0_7_H 
2274:.\mem1.c      ****                                             case 0x07: GPIO_0_7_SetDriveMode(config_MASK); break;
2275:.\mem1.c      ****                                         #endif
2276:.\mem1.c      ****                                     }
2277:.\mem1.c      ****                                     break;
2278:.\mem1.c      ****                                     
2279:.\mem1.c      ****                             case 0x02: 
2280:.\mem1.c      ****                                     switch(pin)
 4900              		.loc 1 2280 0
 4901 05a8 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 4902 05aa 072B     		cmp	r3, #7
 4903 05ac 00F2D780 		bhi	.L454
 4904 05b0 01A2     		adr	r2, .L413
 4905 05b2 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 4906 05b6 00BF     		.p2align 2
 4907              	.L413:
 4908 05b8 D9050000 		.word	.L412+1
 4909 05bc E5050000 		.word	.L414+1
 4910 05c0 F1050000 		.word	.L415+1
 4911 05c4 FD050000 		.word	.L416+1
 4912 05c8 09060000 		.word	.L417+1
 4913 05cc 15060000 		.word	.L418+1
 4914 05d0 21060000 		.word	.L419+1
 4915 05d4 2D060000 		.word	.L420+1
 4916              		.p2align 1
 4917              	.L412:
2281:.\mem1.c      ****                                     {   
2282:.\mem1.c      ****                                         #ifdef CY_PINS_GPIO_2_0_H 
2283:.\mem1.c      ****                                             case 0x00: GPIO_2_0_SetDriveMode(config_MASK); break; 
 4918              		.loc 1 2283 0
 4919 05d8 FB89     		ldrh	r3, [r7, #14]	@ movhi
 4920 05da DBB2     		uxtb	r3, r3
 4921 05dc 1846     		mov	r0, r3
 4922 05de FFF7FEFF 		bl	GPIO_2_0_SetDriveMode
 4923 05e2 29E0     		b	.L411
 4924              	.L414:
2284:.\mem1.c      ****                                         #endif
2285:.\mem1.c      ****                                         #ifdef CY_PINS_GPIO_2_1_H 
2286:.\mem1.c      ****                                             case 0x01: GPIO_2_1_SetDriveMode(config_MASK); break; 
 4925              		.loc 1 2286 0
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cc7rr7YM.s 			page 128


 4926 05e4 FB89     		ldrh	r3, [r7, #14]	@ movhi
 4927 05e6 DBB2     		uxtb	r3, r3
 4928 05e8 1846     		mov	r0, r3
 4929 05ea FFF7FEFF 		bl	GPIO_2_1_SetDriveMode
 4930 05ee 23E0     		b	.L411
 4931              	.L415:
2287:.\mem1.c      ****                                         #endif
2288:.\mem1.c      ****                                         #ifdef CY_PINS_GPIO_2_2_H 
2289:.\mem1.c      ****                                             case 0x02: GPIO_2_2_SetDriveMode(config_MASK); break; 
 4932              		.loc 1 2289 0
 4933 05f0 FB89     		ldrh	r3, [r7, #14]	@ movhi
 4934 05f2 DBB2     		uxtb	r3, r3
 4935 05f4 1846     		mov	r0, r3
 4936 05f6 FFF7FEFF 		bl	GPIO_2_2_SetDriveMode
 4937 05fa 1DE0     		b	.L411
 4938              	.L416:
2290:.\mem1.c      ****                                         #endif
2291:.\mem1.c      ****                                         #ifdef CY_PINS_GPIO_2_3_H 
2292:.\mem1.c      ****                                             case 0x03: GPIO_2_3_SetDriveMode(config_MASK); break;
 4939              		.loc 1 2292 0
 4940 05fc FB89     		ldrh	r3, [r7, #14]	@ movhi
 4941 05fe DBB2     		uxtb	r3, r3
 4942 0600 1846     		mov	r0, r3
 4943 0602 FFF7FEFF 		bl	GPIO_2_3_SetDriveMode
 4944 0606 17E0     		b	.L411
 4945              	.L417:
2293:.\mem1.c      ****                                         #endif
2294:.\mem1.c      ****                                         #ifdef CY_PINS_GPIO_2_4_H 
2295:.\mem1.c      ****                                             case 0x04: GPIO_2_4_SetDriveMode(config_MASK); break;
 4946              		.loc 1 2295 0
 4947 0608 FB89     		ldrh	r3, [r7, #14]	@ movhi
 4948 060a DBB2     		uxtb	r3, r3
 4949 060c 1846     		mov	r0, r3
 4950 060e FFF7FEFF 		bl	GPIO_2_4_SetDriveMode
 4951 0612 11E0     		b	.L411
 4952              	.L418:
2296:.\mem1.c      ****                                         #endif
2297:.\mem1.c      ****                                         #ifdef CY_PINS_GPIO_2_5_H 
2298:.\mem1.c      ****                                             case 0x05: GPIO_2_5_SetDriveMode(config_MASK); break;
 4953              		.loc 1 2298 0
 4954 0614 FB89     		ldrh	r3, [r7, #14]	@ movhi
 4955 0616 DBB2     		uxtb	r3, r3
 4956 0618 1846     		mov	r0, r3
 4957 061a FFF7FEFF 		bl	GPIO_2_5_SetDriveMode
 4958 061e 0BE0     		b	.L411
 4959              	.L419:
2299:.\mem1.c      ****                                         #endif
2300:.\mem1.c      ****                                         #ifdef CY_PINS_GPIO_2_6_H 
2301:.\mem1.c      ****                                             case 0x06: GPIO_2_6_SetDriveMode(config_MASK); break;
 4960              		.loc 1 2301 0
 4961 0620 FB89     		ldrh	r3, [r7, #14]	@ movhi
 4962 0622 DBB2     		uxtb	r3, r3
 4963 0624 1846     		mov	r0, r3
 4964 0626 FFF7FEFF 		bl	GPIO_2_6_SetDriveMode
 4965 062a 05E0     		b	.L411
 4966              	.L420:
2302:.\mem1.c      ****                                         #endif
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cc7rr7YM.s 			page 129


2303:.\mem1.c      ****                                         #ifdef CY_PINS_GPIO_2_7_H 
2304:.\mem1.c      ****                                             case 0x07: GPIO_2_7_SetDriveMode(config_MASK); break;
 4967              		.loc 1 2304 0
 4968 062c FB89     		ldrh	r3, [r7, #14]	@ movhi
 4969 062e DBB2     		uxtb	r3, r3
 4970 0630 1846     		mov	r0, r3
 4971 0632 FFF7FEFF 		bl	GPIO_2_7_SetDriveMode
 4972 0636 00BF     		nop
 4973              	.L411:
2305:.\mem1.c      ****                                         #endif
2306:.\mem1.c      ****                                     }
2307:.\mem1.c      ****                                     break;
 4974              		.loc 1 2307 0 discriminator 18
 4975 0638 91E0     		b	.L454
 4976              	.L407:
2308:.\mem1.c      ****                             case 0x03: 
2309:.\mem1.c      ****                                     switch(pin)
2310:.\mem1.c      ****                                     {   
2311:.\mem1.c      ****                                         #ifdef CY_PINS_GPIO_3_0_H 
2312:.\mem1.c      ****                                             case 0x00: GPIO_3_0_SetDriveMode(config_MASK); break; 
2313:.\mem1.c      ****                                         #endif
2314:.\mem1.c      ****                                         #ifdef CY_PINS_GPIO_3_1_H 
2315:.\mem1.c      ****                                             case 0x01: GPIO_3_1_SetDriveMode(config_MASK); break; 
2316:.\mem1.c      ****                                         #endif
2317:.\mem1.c      ****                                         #ifdef CY_PINS_GPIO_3_2_H 
2318:.\mem1.c      ****                                             case 0x02: GPIO_3_2_SetDriveMode(config_MASK); break; 
2319:.\mem1.c      ****                                         #endif
2320:.\mem1.c      ****                                         #ifdef CY_PINS_GPIO_3_3_H 
2321:.\mem1.c      ****                                             case 0x03: GPIO_3_3_SetDriveMode(config_MASK); break;
2322:.\mem1.c      ****                                         #endif
2323:.\mem1.c      ****                                         #ifdef CY_PINS_GPIO_3_4_H 
2324:.\mem1.c      ****                                             case 0x04: GPIO_3_4_SetDriveMode(config_MASK); break;
2325:.\mem1.c      ****                                         #endif
2326:.\mem1.c      ****                                         #ifdef CY_PINS_GPIO_3_5_H 
2327:.\mem1.c      ****                                             case 0x05: GPIO_3_5_SetDriveMode(config_MASK); break;
2328:.\mem1.c      ****                                         #endif
2329:.\mem1.c      ****                                         #ifdef CY_PINS_GPIO_3_6_H 
2330:.\mem1.c      ****                                             case 0x06: GPIO_3_6_SetDriveMode(config_MASK); break;
2331:.\mem1.c      ****                                         #endif
2332:.\mem1.c      ****                                         #ifdef CY_PINS_GPIO_3_7_H 
2333:.\mem1.c      ****                                             case 0x07: GPIO_3_7_SetDriveMode(config_MASK); break;
2334:.\mem1.c      ****                                         #endif
2335:.\mem1.c      ****                                     }
2336:.\mem1.c      ****                                     break;
2337:.\mem1.c      ****                                     
2338:.\mem1.c      ****                             case 0x04: 
2339:.\mem1.c      ****                                     switch(pin)
2340:.\mem1.c      ****                                     {   
2341:.\mem1.c      ****                                         #ifdef CY_PINS_GPIO_4_0_H 
2342:.\mem1.c      ****                                             case 0x00: GPIO_4_0_SetDriveMode(config_MASK); break; 
2343:.\mem1.c      ****                                         #endif
2344:.\mem1.c      ****                                         #ifdef CY_PINS_GPIO_4_1_H 
2345:.\mem1.c      ****                                             case 0x01: GPIO_4_1_SetDriveMode(config_MASK); break; 
2346:.\mem1.c      ****                                         #endif
2347:.\mem1.c      ****                                         #ifdef CY_PINS_GPIO_4_2_H 
2348:.\mem1.c      ****                                             case 0x02: GPIO_4_2_SetDriveMode(config_MASK); break; 
2349:.\mem1.c      ****                                         #endif
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cc7rr7YM.s 			page 130


2350:.\mem1.c      ****                                         #ifdef CY_PINS_GPIO_4_3_H 
2351:.\mem1.c      ****                                             case 0x03: GPIO_4_3_SetDriveMode(config_MASK); break;
2352:.\mem1.c      ****                                         #endif
2353:.\mem1.c      ****                                         #ifdef CY_PINS_GPIO_4_4_H 
2354:.\mem1.c      ****                                             case 0x04: GPIO_4_4_SetDriveMode(config_MASK); break;
2355:.\mem1.c      ****                                         #endif
2356:.\mem1.c      ****                                         #ifdef CY_PINS_GPIO_4_5_H 
2357:.\mem1.c      ****                                             case 0x05: GPIO_4_5_SetDriveMode(config_MASK); break;
2358:.\mem1.c      ****                                         #endif
2359:.\mem1.c      ****                                         #ifdef CY_PINS_GPIO_4_6_H 
2360:.\mem1.c      ****                                             case 0x06: GPIO_4_6_SetDriveMode(config_MASK); break;
2361:.\mem1.c      ****                                         #endif
2362:.\mem1.c      ****                                     }
2363:.\mem1.c      ****                                     break;
2364:.\mem1.c      ****                                     
2365:.\mem1.c      ****                             case 0x05: 
2366:.\mem1.c      ****                                     switch(pin)
 4977              		.loc 1 2366 0
 4978 063a 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 4979 063c 072B     		cmp	r3, #7
 4980 063e 00F29080 		bhi	.L455
 4981 0642 01A2     		adr	r2, .L423
 4982 0644 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 4983              		.p2align 2
 4984              	.L423:
 4985 0648 69060000 		.word	.L422+1
 4986 064c 75060000 		.word	.L424+1
 4987 0650 81060000 		.word	.L425+1
 4988 0654 8D060000 		.word	.L426+1
 4989 0658 99060000 		.word	.L427+1
 4990 065c A5060000 		.word	.L428+1
 4991 0660 B1060000 		.word	.L429+1
 4992 0664 BD060000 		.word	.L430+1
 4993              		.p2align 1
 4994              	.L422:
2367:.\mem1.c      ****                                     {   
2368:.\mem1.c      ****                                         #ifdef CY_PINS_GPIO_5_0_H 
2369:.\mem1.c      ****                                             case 0x00: GPIO_5_0_SetDriveMode(config_MASK); break; 
 4995              		.loc 1 2369 0
 4996 0668 FB89     		ldrh	r3, [r7, #14]	@ movhi
 4997 066a DBB2     		uxtb	r3, r3
 4998 066c 1846     		mov	r0, r3
 4999 066e FFF7FEFF 		bl	GPIO_5_0_SetDriveMode
 5000 0672 29E0     		b	.L421
 5001              	.L424:
2370:.\mem1.c      ****                                         #endif
2371:.\mem1.c      ****                                         #ifdef CY_PINS_GPIO_5_1_H 
2372:.\mem1.c      ****                                             case 0x01: GPIO_5_1_SetDriveMode(config_MASK); break; 
 5002              		.loc 1 2372 0
 5003 0674 FB89     		ldrh	r3, [r7, #14]	@ movhi
 5004 0676 DBB2     		uxtb	r3, r3
 5005 0678 1846     		mov	r0, r3
 5006 067a FFF7FEFF 		bl	GPIO_5_1_SetDriveMode
 5007 067e 23E0     		b	.L421
 5008              	.L425:
2373:.\mem1.c      ****                                         #endif
2374:.\mem1.c      ****                                         #ifdef CY_PINS_GPIO_5_2_H 
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cc7rr7YM.s 			page 131


2375:.\mem1.c      ****                                             case 0x02: GPIO_5_2_SetDriveMode(config_MASK); break; 
 5009              		.loc 1 2375 0
 5010 0680 FB89     		ldrh	r3, [r7, #14]	@ movhi
 5011 0682 DBB2     		uxtb	r3, r3
 5012 0684 1846     		mov	r0, r3
 5013 0686 FFF7FEFF 		bl	GPIO_5_2_SetDriveMode
 5014 068a 1DE0     		b	.L421
 5015              	.L426:
2376:.\mem1.c      ****                                         #endif
2377:.\mem1.c      ****                                         #ifdef CY_PINS_GPIO_5_3_H 
2378:.\mem1.c      ****                                             case 0x03: GPIO_5_3_SetDriveMode(config_MASK); break;
 5016              		.loc 1 2378 0
 5017 068c FB89     		ldrh	r3, [r7, #14]	@ movhi
 5018 068e DBB2     		uxtb	r3, r3
 5019 0690 1846     		mov	r0, r3
 5020 0692 FFF7FEFF 		bl	GPIO_5_3_SetDriveMode
 5021 0696 17E0     		b	.L421
 5022              	.L427:
2379:.\mem1.c      ****                                         #endif
2380:.\mem1.c      ****                                         #ifdef CY_PINS_GPIO_5_4_H 
2381:.\mem1.c      ****                                             case 0x04: GPIO_5_4_SetDriveMode(config_MASK); break;
 5023              		.loc 1 2381 0
 5024 0698 FB89     		ldrh	r3, [r7, #14]	@ movhi
 5025 069a DBB2     		uxtb	r3, r3
 5026 069c 1846     		mov	r0, r3
 5027 069e FFF7FEFF 		bl	GPIO_5_4_SetDriveMode
 5028 06a2 11E0     		b	.L421
 5029              	.L428:
2382:.\mem1.c      ****                                         #endif
2383:.\mem1.c      ****                                         #ifdef CY_PINS_GPIO_5_5_H 
2384:.\mem1.c      ****                                             case 0x05: GPIO_5_5_SetDriveMode(config_MASK); break;
 5030              		.loc 1 2384 0
 5031 06a4 FB89     		ldrh	r3, [r7, #14]	@ movhi
 5032 06a6 DBB2     		uxtb	r3, r3
 5033 06a8 1846     		mov	r0, r3
 5034 06aa FFF7FEFF 		bl	GPIO_5_5_SetDriveMode
 5035 06ae 0BE0     		b	.L421
 5036              	.L429:
2385:.\mem1.c      ****                                         #endif
2386:.\mem1.c      ****                                         #ifdef CY_PINS_GPIO_5_6_H 
2387:.\mem1.c      ****                                             case 0x06: GPIO_5_6_SetDriveMode(config_MASK); break;
 5037              		.loc 1 2387 0
 5038 06b0 FB89     		ldrh	r3, [r7, #14]	@ movhi
 5039 06b2 DBB2     		uxtb	r3, r3
 5040 06b4 1846     		mov	r0, r3
 5041 06b6 FFF7FEFF 		bl	GPIO_5_6_SetDriveMode
 5042 06ba 05E0     		b	.L421
 5043              	.L430:
2388:.\mem1.c      ****                                         #endif
2389:.\mem1.c      ****                                         #ifdef CY_PINS_GPIO_5_7_H 
2390:.\mem1.c      ****                                             case 0x07: GPIO_5_7_SetDriveMode(config_MASK); break;
 5044              		.loc 1 2390 0
 5045 06bc FB89     		ldrh	r3, [r7, #14]	@ movhi
 5046 06be DBB2     		uxtb	r3, r3
 5047 06c0 1846     		mov	r0, r3
 5048 06c2 FFF7FEFF 		bl	GPIO_5_7_SetDriveMode
 5049 06c6 00BF     		nop
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cc7rr7YM.s 			page 132


 5050              	.L421:
2391:.\mem1.c      ****                                         #endif
2392:.\mem1.c      ****                                     }
2393:.\mem1.c      ****                                     break;
 5051              		.loc 1 2393 0 discriminator 21
 5052 06c8 4BE0     		b	.L455
 5053              	.L409:
2394:.\mem1.c      ****                                     
2395:.\mem1.c      ****                             case 0x06: 
2396:.\mem1.c      ****                                     switch(pin)
2397:.\mem1.c      ****                                     {   
2398:.\mem1.c      ****                                         #ifdef CY_PINS_GPIO_6_0_H 
2399:.\mem1.c      ****                                             case 0x00: GPIO_6_0_SetDriveMode(config_MASK); break; 
2400:.\mem1.c      ****                                         #endif
2401:.\mem1.c      ****                                         #ifdef CY_PINS_GPIO_6_1_H 
2402:.\mem1.c      ****                                             case 0x01: GPIO_6_1_SetDriveMode(config_MASK); break; 
2403:.\mem1.c      ****                                         #endif
2404:.\mem1.c      ****                                         #ifdef CY_PINS_GPIO_6_2_H 
2405:.\mem1.c      ****                                             case 0x02: GPIO_6_2_SetDriveMode(config_MASK); break; 
2406:.\mem1.c      ****                                         #endif
2407:.\mem1.c      ****                                         #ifdef CY_PINS_GPIO_6_3_H 
2408:.\mem1.c      ****                                             case 0x03: GPIO_6_3_SetDriveMode(config_MASK); break;
2409:.\mem1.c      ****                                         #endif
2410:.\mem1.c      ****                                         #ifdef CY_PINS_GPIO_6_4_H 
2411:.\mem1.c      ****                                             case 0x04: GPIO_6_4_SetDriveMode(config_MASK); break;
2412:.\mem1.c      ****                                         #endif
2413:.\mem1.c      ****                                         #ifdef CY_PINS_GPIO_6_5_H 
2414:.\mem1.c      ****                                             case 0x05: GPIO_6_5_SetDriveMode(config_MASK); break;
2415:.\mem1.c      ****                                         #endif
2416:.\mem1.c      ****                                         #ifdef CY_PINS_GPIO_6_6_H 
2417:.\mem1.c      ****                                             case 0x06: GPIO_6_6_SetDriveMode(config_MASK); break;
2418:.\mem1.c      ****                                         #endif
2419:.\mem1.c      ****                                         #ifdef CY_PINS_GPIO_6_7_H 
2420:.\mem1.c      ****                                             case 0x07: GPIO_6_7_SetDriveMode(config_MASK); break;
2421:.\mem1.c      ****                                         #endif
2422:.\mem1.c      ****                                     }
2423:.\mem1.c      ****                                     break;
2424:.\mem1.c      ****                             
2425:.\mem1.c      ****                             case 0x0C: 
2426:.\mem1.c      ****                                     switch(pin)
 5054              		.loc 1 2426 0
 5055 06ca 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 5056 06cc 072B     		cmp	r3, #7
 5057 06ce 4AD8     		bhi	.L456
 5058 06d0 01A2     		adr	r2, .L433
 5059 06d2 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 5060 06d6 00BF     		.p2align 2
 5061              	.L433:
 5062 06d8 F9060000 		.word	.L432+1
 5063 06dc 05070000 		.word	.L434+1
 5064 06e0 11070000 		.word	.L435+1
 5065 06e4 1D070000 		.word	.L436+1
 5066 06e8 29070000 		.word	.L437+1
 5067 06ec 35070000 		.word	.L438+1
 5068 06f0 41070000 		.word	.L439+1
 5069 06f4 4D070000 		.word	.L440+1
 5070              		.p2align 1
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cc7rr7YM.s 			page 133


 5071              	.L432:
2427:.\mem1.c      ****                                     {   
2428:.\mem1.c      ****                                         #ifdef CY_PINS_GPIO_12_0_H 
2429:.\mem1.c      ****                                             case 0x00: GPIO_12_0_SetDriveMode(config_MASK); break; 
 5072              		.loc 1 2429 0
 5073 06f8 FB89     		ldrh	r3, [r7, #14]	@ movhi
 5074 06fa DBB2     		uxtb	r3, r3
 5075 06fc 1846     		mov	r0, r3
 5076 06fe FFF7FEFF 		bl	GPIO_12_0_SetDriveMode
 5077 0702 29E0     		b	.L431
 5078              	.L434:
2430:.\mem1.c      ****                                         #endif
2431:.\mem1.c      ****                                         #ifdef CY_PINS_GPIO_12_1_H 
2432:.\mem1.c      ****                                             case 0x01: GPIO_12_1_SetDriveMode(config_MASK); break; 
 5079              		.loc 1 2432 0
 5080 0704 FB89     		ldrh	r3, [r7, #14]	@ movhi
 5081 0706 DBB2     		uxtb	r3, r3
 5082 0708 1846     		mov	r0, r3
 5083 070a FFF7FEFF 		bl	GPIO_12_1_SetDriveMode
 5084 070e 23E0     		b	.L431
 5085              	.L435:
2433:.\mem1.c      ****                                         #endif
2434:.\mem1.c      ****                                         #ifdef CY_PINS_GPIO_12_2_H 
2435:.\mem1.c      ****                                             case 0x02: GPIO_12_2_SetDriveMode(config_MASK); break; 
 5086              		.loc 1 2435 0
 5087 0710 FB89     		ldrh	r3, [r7, #14]	@ movhi
 5088 0712 DBB2     		uxtb	r3, r3
 5089 0714 1846     		mov	r0, r3
 5090 0716 FFF7FEFF 		bl	GPIO_12_2_SetDriveMode
 5091 071a 1DE0     		b	.L431
 5092              	.L436:
2436:.\mem1.c      ****                                         #endif
2437:.\mem1.c      ****                                         #ifdef CY_PINS_GPIO_12_3_H 
2438:.\mem1.c      ****                                             case 0x03: GPIO_12_3_SetDriveMode(config_MASK); break;
 5093              		.loc 1 2438 0
 5094 071c FB89     		ldrh	r3, [r7, #14]	@ movhi
 5095 071e DBB2     		uxtb	r3, r3
 5096 0720 1846     		mov	r0, r3
 5097 0722 FFF7FEFF 		bl	GPIO_12_3_SetDriveMode
 5098 0726 17E0     		b	.L431
 5099              	.L437:
2439:.\mem1.c      ****                                         #endif
2440:.\mem1.c      ****                                         #ifdef CY_PINS_GPIO_12_4_H 
2441:.\mem1.c      ****                                             case 0x04: GPIO_12_4_SetDriveMode(config_MASK); break;
 5100              		.loc 1 2441 0
 5101 0728 FB89     		ldrh	r3, [r7, #14]	@ movhi
 5102 072a DBB2     		uxtb	r3, r3
 5103 072c 1846     		mov	r0, r3
 5104 072e FFF7FEFF 		bl	GPIO_12_4_SetDriveMode
 5105 0732 11E0     		b	.L431
 5106              	.L438:
2442:.\mem1.c      ****                                         #endif
2443:.\mem1.c      ****                                         #ifdef CY_PINS_GPIO_12_5_H 
2444:.\mem1.c      ****                                             case 0x05: GPIO_12_5_SetDriveMode(config_MASK); break;
 5107              		.loc 1 2444 0
 5108 0734 FB89     		ldrh	r3, [r7, #14]	@ movhi
 5109 0736 DBB2     		uxtb	r3, r3
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cc7rr7YM.s 			page 134


 5110 0738 1846     		mov	r0, r3
 5111 073a FFF7FEFF 		bl	GPIO_12_5_SetDriveMode
 5112 073e 0BE0     		b	.L431
 5113              	.L439:
2445:.\mem1.c      ****                                         #endif
2446:.\mem1.c      ****                                         #ifdef CY_PINS_GPIO_12_6_H 
2447:.\mem1.c      ****                                             case 0x06: GPIO_12_6_SetDriveMode(config_MASK); break;
 5114              		.loc 1 2447 0
 5115 0740 FB89     		ldrh	r3, [r7, #14]	@ movhi
 5116 0742 DBB2     		uxtb	r3, r3
 5117 0744 1846     		mov	r0, r3
 5118 0746 FFF7FEFF 		bl	GPIO_12_6_SetDriveMode
 5119 074a 05E0     		b	.L431
 5120              	.L440:
2448:.\mem1.c      ****                                         #endif
2449:.\mem1.c      ****                                         #ifdef CY_PINS_GPIO_12_7_H 
2450:.\mem1.c      ****                                             case 0x07: GPIO_12_7_SetDriveMode(config_MASK); break;
 5121              		.loc 1 2450 0
 5122 074c FB89     		ldrh	r3, [r7, #14]	@ movhi
 5123 074e DBB2     		uxtb	r3, r3
 5124 0750 1846     		mov	r0, r3
 5125 0752 FFF7FEFF 		bl	GPIO_12_7_SetDriveMode
 5126 0756 00BF     		nop
 5127              	.L431:
2451:.\mem1.c      ****                                         #endif
2452:.\mem1.c      ****                                     }
2453:.\mem1.c      ****                                     break;
 5128              		.loc 1 2453 0 discriminator 23
 5129 0758 05E0     		b	.L456
 5130              	.L453:
2277:.\mem1.c      ****                                     
 5131              		.loc 1 2277 0
 5132 075a 00BF     		nop
 5133 075c 09E0     		b	.L452
 5134              	.L454:
2307:.\mem1.c      ****                             case 0x03: 
 5135              		.loc 1 2307 0
 5136 075e 00BF     		nop
 5137 0760 07E0     		b	.L452
 5138              	.L455:
2393:.\mem1.c      ****                                     
 5139              		.loc 1 2393 0
 5140 0762 00BF     		nop
 5141 0764 05E0     		b	.L452
 5142              	.L456:
 5143              		.loc 1 2453 0
 5144 0766 00BF     		nop
2454:.\mem1.c      ****                             
2455:.\mem1.c      ****                             case 0x0F: 
2456:.\mem1.c      ****                                     switch(pin)
2457:.\mem1.c      ****                                     {   
2458:.\mem1.c      ****                                         #ifdef CY_PINS_GPIO_15_0_H 
2459:.\mem1.c      ****                                             case 0x00: GPIO_15_0_SetDriveMode(config_MASK); break; 
2460:.\mem1.c      ****                                         #endif
2461:.\mem1.c      ****                                         #ifdef CY_PINS_GPIO_15_1_H 
2462:.\mem1.c      ****                                             case 0x01: GPIO_15_1_SetDriveMode(config_MASK); break; 
2463:.\mem1.c      ****                                         #endif
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cc7rr7YM.s 			page 135


2464:.\mem1.c      ****                                         #ifdef CY_PINS_GPIO_15_2_H 
2465:.\mem1.c      ****                                             case 0x02: GPIO_15_2_SetDriveMode(config_MASK); break; 
2466:.\mem1.c      ****                                         #endif
2467:.\mem1.c      ****                                         #ifdef CY_PINS_GPIO_15_3_H 
2468:.\mem1.c      ****                                             case 0x03: GPIO_15_3_SetDriveMode(config_MASK); break;
2469:.\mem1.c      ****                                         #endif
2470:.\mem1.c      ****                                         #ifdef CY_PINS_GPIO_15_4_H 
2471:.\mem1.c      ****                                             case 0x04: GPIO_15_4_SetDriveMode(config_MASK); break;
2472:.\mem1.c      ****                                         #endif
2473:.\mem1.c      ****                                         #ifdef CY_PINS_GPIO_15_5_H 
2474:.\mem1.c      ****                                             case 0x05: GPIO_15_5_SetDriveMode(config_MASK); break;
2475:.\mem1.c      ****                                         #endif
2476:.\mem1.c      ****                                         #ifdef CY_PINS_GPIO_15_6_H 
2477:.\mem1.c      ****                                             case 0x06: GPIO_15_6_SetDriveMode(config_MASK); break;
2478:.\mem1.c      ****                                         #endif
2479:.\mem1.c      ****                                         #ifdef CY_PINS_GPIO_15_7_H 
2480:.\mem1.c      ****                                             case 0x07: GPIO_15_7_SetDriveMode(config_MASK); break;
2481:.\mem1.c      ****                                         #endif
2482:.\mem1.c      ****                                     }
2483:.\mem1.c      ****                                     break;
2484:.\mem1.c      ****                             
2485:.\mem1.c      ****                         }
2486:.\mem1.c      ****                         break; 
 5145              		.loc 1 2486 0
 5146 0768 03E0     		b	.L452
 5147              	.L442:
1981:.\mem1.c      ****                 
 5148              		.loc 1 1981 0
 5149 076a 00BF     		nop
 5150 076c 02E0     		b	.L305
 5151              	.L447:
2229:.\mem1.c      ****                 
 5152              		.loc 1 2229 0
 5153 076e 00BF     		nop
 5154 0770 00E0     		b	.L305
 5155              	.L452:
 5156              		.loc 1 2486 0
 5157 0772 00BF     		nop
 5158              	.L305:
2487:.\mem1.c      ****                         
2488:.\mem1.c      ****                         case 0x04: //ranger
2489:.\mem1.c      ****                         
2490:.\mem1.c      ****                         break;
2491:.\mem1.c      ****                         
2492:.\mem1.c      ****             
2493:.\mem1.c      ****             }
2494:.\mem1.c      ****             
2495:.\mem1.c      ****             return return_flag;
 5159              		.loc 1 2495 0
 5160 0774 7B7B     		ldrb	r3, [r7, #13]	@ zero_extendqisi2
2496:.\mem1.c      **** }
 5161              		.loc 1 2496 0
 5162 0776 1846     		mov	r0, r3
 5163 0778 1437     		adds	r7, r7, #20
 5164              		.cfi_def_cfa_offset 12
 5165 077a BD46     		mov	sp, r7
 5166              		.cfi_def_cfa_register 13
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cc7rr7YM.s 			page 136


 5167              		@ sp needed
 5168 077c 90BD     		pop	{r4, r7, pc}
 5169              		.cfi_endproc
 5170              	.LFE70:
 5171              		.size	GPIO_Control, .-GPIO_Control
 5172 077e 00BF     		.section	.text.Analog_Read,"ax",%progbits
 5173              		.align	2
 5174              		.global	Analog_Read
 5175              		.thumb
 5176              		.thumb_func
 5177              		.type	Analog_Read, %function
 5178              	Analog_Read:
 5179              	.LFB71:
2497:.\mem1.c      **** 
2498:.\mem1.c      **** #ifdef CY_ADC_SAR_Seq_1_H
2499:.\mem1.c      ****     bool Analog_Read(uint8 cmd, uint16 dat, uint32 *result)
2500:.\mem1.c      ****     {
 5180              		.loc 1 2500 0
 5181              		.cfi_startproc
 5182              		@ args = 0, pretend = 0, frame = 16
 5183              		@ frame_needed = 1, uses_anonymous_args = 0
 5184 0000 80B5     		push	{r7, lr}
 5185              		.cfi_def_cfa_offset 8
 5186              		.cfi_offset 7, -8
 5187              		.cfi_offset 14, -4
 5188 0002 84B0     		sub	sp, sp, #16
 5189              		.cfi_def_cfa_offset 24
 5190 0004 00AF     		add	r7, sp, #0
 5191              		.cfi_def_cfa_register 7
 5192 0006 0346     		mov	r3, r0
 5193 0008 3A60     		str	r2, [r7]
 5194 000a FB71     		strb	r3, [r7, #7]
 5195 000c 0B46     		mov	r3, r1	@ movhi
 5196 000e BB80     		strh	r3, [r7, #4]	@ movhi
2501:.\mem1.c      ****         bool return_flag = false;
 5197              		.loc 1 2501 0
 5198 0010 0023     		movs	r3, #0
 5199 0012 FB73     		strb	r3, [r7, #15]
2502:.\mem1.c      ****         
2503:.\mem1.c      ****         ADC_SAR_Seq_1_Start();
 5200              		.loc 1 2503 0
 5201 0014 FFF7FEFF 		bl	ADC_SAR_Seq_1_Start
2504:.\mem1.c      ****         if (cmd == 0x00 || cmd == 0x01)
 5202              		.loc 1 2504 0
 5203 0018 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 5204 001a 002B     		cmp	r3, #0
 5205 001c 02D0     		beq	.L458
 5206              		.loc 1 2504 0 is_stmt 0 discriminator 1
 5207 001e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 5208 0020 012B     		cmp	r3, #1
 5209 0022 10D1     		bne	.L459
 5210              	.L458:
2505:.\mem1.c      ****         {
2506:.\mem1.c      ****             ADC_SAR_Seq_1_StartConvert();
 5211              		.loc 1 2506 0 is_stmt 1
 5212 0024 FFF7FEFF 		bl	ADC_SAR_Seq_1_StartConvert
2507:.\mem1.c      ****             ADC_SAR_Seq_1_IsEndConversion(ADC_SAR_Seq_1_WAIT_FOR_RESULT);
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cc7rr7YM.s 			page 137


 5213              		.loc 1 2507 0
 5214 0028 0020     		movs	r0, #0
 5215 002a FFF7FEFF 		bl	ADC_SAR_Seq_1_IsEndConversion
2508:.\mem1.c      ****             *result = ADC_SAR_Seq_1_GetResult16(dat);
 5216              		.loc 1 2508 0
 5217 002e BB88     		ldrh	r3, [r7, #4]
 5218 0030 1846     		mov	r0, r3
 5219 0032 FFF7FEFF 		bl	ADC_SAR_Seq_1_GetResult16
 5220 0036 0346     		mov	r3, r0
 5221 0038 1A46     		mov	r2, r3
 5222 003a 3B68     		ldr	r3, [r7]
 5223 003c 1A60     		str	r2, [r3]
2509:.\mem1.c      ****             ADC_SAR_Seq_1_StopConvert();
 5224              		.loc 1 2509 0
 5225 003e FFF7FEFF 		bl	ADC_SAR_Seq_1_StopConvert
2510:.\mem1.c      ****             ADC_SAR_Seq_1_Stop();
 5226              		.loc 1 2510 0
 5227 0042 FFF7FEFF 		bl	ADC_SAR_Seq_1_Stop
 5228              	.L459:
2511:.\mem1.c      ****         }
2512:.\mem1.c      ****         
2513:.\mem1.c      ****         switch(cmd)
 5229              		.loc 1 2513 0
 5230 0046 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 5231 0048 032B     		cmp	r3, #3
 5232 004a 39D8     		bhi	.L460
 5233 004c 01A2     		adr	r2, .L462
 5234 004e 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 5235 0052 00BF     		.p2align 2
 5236              	.L462:
 5237 0054 65000000 		.word	.L461+1
 5238 0058 6B000000 		.word	.L463+1
 5239 005c 87000000 		.word	.L464+1
 5240 0060 95000000 		.word	.L465+1
 5241              		.p2align 1
 5242              	.L461:
2514:.\mem1.c      ****         {
2515:.\mem1.c      ****             case 0x00: return_flag = true; break;
 5243              		.loc 1 2515 0
 5244 0064 0123     		movs	r3, #1
 5245 0066 FB73     		strb	r3, [r7, #15]
 5246 0068 2AE0     		b	.L460
 5247              	.L463:
2516:.\mem1.c      ****             case 0x01: *result = ADC_SAR_Seq_1_CountsTo_uVolts(*result); return_flag = true; break;
 5248              		.loc 1 2516 0
 5249 006a 3B68     		ldr	r3, [r7]
 5250 006c 1B68     		ldr	r3, [r3]
 5251 006e 9BB2     		uxth	r3, r3
 5252 0070 1BB2     		sxth	r3, r3
 5253 0072 1846     		mov	r0, r3
 5254 0074 FFF7FEFF 		bl	ADC_SAR_Seq_1_CountsTo_uVolts
 5255 0078 0346     		mov	r3, r0
 5256 007a 1A46     		mov	r2, r3
 5257 007c 3B68     		ldr	r3, [r7]
 5258 007e 1A60     		str	r2, [r3]
 5259 0080 0123     		movs	r3, #1
 5260 0082 FB73     		strb	r3, [r7, #15]
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cc7rr7YM.s 			page 138


 5261 0084 1CE0     		b	.L460
 5262              	.L464:
2517:.\mem1.c      ****             case 0x02: ADC_SAR_Seq_1_SetOffset(dat); ADC_SAR_Seq_1_Stop(); break;
 5263              		.loc 1 2517 0
 5264 0086 BB88     		ldrh	r3, [r7, #4]
 5265 0088 1846     		mov	r0, r3
 5266 008a FFF7FEFF 		bl	ADC_SAR_Seq_1_SetOffset
 5267 008e FFF7FEFF 		bl	ADC_SAR_Seq_1_Stop
 5268 0092 15E0     		b	.L460
 5269              	.L465:
2518:.\mem1.c      ****             case 0x03: 
2519:.\mem1.c      ****                 switch(dat)
 5270              		.loc 1 2519 0
 5271 0094 BB88     		ldrh	r3, [r7, #4]
 5272 0096 0A2B     		cmp	r3, #10
 5273 0098 07D0     		beq	.L467
 5274 009a 0C2B     		cmp	r3, #12
 5275 009c 09D0     		beq	.L468
 5276 009e 082B     		cmp	r3, #8
 5277 00a0 0BD1     		bne	.L466
2520:.\mem1.c      ****                 {   
2521:.\mem1.c      ****                     case 0x08: ADC_SAR_Seq_1_SetResolution(ADC_SAR_Seq_1_BITS_8); break;
 5278              		.loc 1 2521 0
 5279 00a2 0820     		movs	r0, #8
 5280 00a4 FFF7FEFF 		bl	ADC_SAR_Seq_1_SetResolution
 5281 00a8 07E0     		b	.L466
 5282              	.L467:
2522:.\mem1.c      ****                     case 0x0A: ADC_SAR_Seq_1_SetResolution(ADC_SAR_Seq_1_BITS_10); break;
 5283              		.loc 1 2522 0
 5284 00aa 0A20     		movs	r0, #10
 5285 00ac FFF7FEFF 		bl	ADC_SAR_Seq_1_SetResolution
 5286 00b0 03E0     		b	.L466
 5287              	.L468:
2523:.\mem1.c      ****                     case 0x0C: ADC_SAR_Seq_1_SetResolution(ADC_SAR_Seq_1_BITS_12); break;
 5288              		.loc 1 2523 0
 5289 00b2 0C20     		movs	r0, #12
 5290 00b4 FFF7FEFF 		bl	ADC_SAR_Seq_1_SetResolution
 5291 00b8 00BF     		nop
 5292              	.L466:
2524:.\mem1.c      ****                     
2525:.\mem1.c      ****                 }
2526:.\mem1.c      ****                 ADC_SAR_Seq_1_Stop();
 5293              		.loc 1 2526 0
 5294 00ba FFF7FEFF 		bl	ADC_SAR_Seq_1_Stop
2527:.\mem1.c      ****                 break;
 5295              		.loc 1 2527 0
 5296 00be 00BF     		nop
 5297              	.L460:
2528:.\mem1.c      ****         }
2529:.\mem1.c      ****         
2530:.\mem1.c      ****         return return_flag;
 5298              		.loc 1 2530 0
 5299 00c0 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
2531:.\mem1.c      ****     }
 5300              		.loc 1 2531 0
 5301 00c2 1846     		mov	r0, r3
 5302 00c4 1037     		adds	r7, r7, #16
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cc7rr7YM.s 			page 139


 5303              		.cfi_def_cfa_offset 8
 5304 00c6 BD46     		mov	sp, r7
 5305              		.cfi_def_cfa_register 13
 5306              		@ sp needed
 5307 00c8 80BD     		pop	{r7, pc}
 5308              		.cfi_endproc
 5309              	.LFE71:
 5310              		.size	Analog_Read, .-Analog_Read
 5311 00ca 00BF     		.section	.text.CapSense_Read,"ax",%progbits
 5312              		.align	2
 5313              		.global	CapSense_Read
 5314              		.thumb
 5315              		.thumb_func
 5316              		.type	CapSense_Read, %function
 5317              	CapSense_Read:
 5318              	.LFB72:
2532:.\mem1.c      **** #endif
2533:.\mem1.c      **** 
2534:.\mem1.c      **** #ifdef CY_CAPSENSE_CSD_CapSense_1_H
2535:.\mem1.c      ****     bool CapSense_Read(uint8 cmd, uint16 dat, uint32 *result)
2536:.\mem1.c      ****     {
 5319              		.loc 1 2536 0
 5320              		.cfi_startproc
 5321              		@ args = 0, pretend = 0, frame = 16
 5322              		@ frame_needed = 1, uses_anonymous_args = 0
 5323 0000 80B5     		push	{r7, lr}
 5324              		.cfi_def_cfa_offset 8
 5325              		.cfi_offset 7, -8
 5326              		.cfi_offset 14, -4
 5327 0002 84B0     		sub	sp, sp, #16
 5328              		.cfi_def_cfa_offset 24
 5329 0004 00AF     		add	r7, sp, #0
 5330              		.cfi_def_cfa_register 7
 5331 0006 0346     		mov	r3, r0
 5332 0008 3A60     		str	r2, [r7]
 5333 000a FB71     		strb	r3, [r7, #7]
 5334 000c 0B46     		mov	r3, r1	@ movhi
 5335 000e BB80     		strh	r3, [r7, #4]	@ movhi
2537:.\mem1.c      ****          bool return_flag = 0;
 5336              		.loc 1 2537 0
 5337 0010 0023     		movs	r3, #0
 5338 0012 FB73     		strb	r3, [r7, #15]
2538:.\mem1.c      ****          unsigned int j = 0;
 5339              		.loc 1 2538 0
 5340 0014 0023     		movs	r3, #0
 5341 0016 BB60     		str	r3, [r7, #8]
2539:.\mem1.c      **** 
2540:.\mem1.c      ****                 switch(cmd)
 5342              		.loc 1 2540 0
 5343 0018 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 5344 001a 032B     		cmp	r3, #3
 5345 001c 1AD0     		beq	.L473
 5346 001e 032B     		cmp	r3, #3
 5347 0020 06DC     		bgt	.L474
 5348 0022 012B     		cmp	r3, #1
 5349 0024 10D0     		beq	.L475
 5350 0026 012B     		cmp	r3, #1
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cc7rr7YM.s 			page 140


 5351 0028 11DC     		bgt	.L476
 5352 002a 002B     		cmp	r3, #0
 5353 002c 07D0     		beq	.L477
 5354 002e 68E0     		b	.L472
 5355              	.L474:
 5356 0030 182B     		cmp	r3, #24
 5357 0032 28D0     		beq	.L478
 5358 0034 FF2B     		cmp	r3, #255
 5359 0036 3CD0     		beq	.L479
 5360 0038 0F2B     		cmp	r3, #15
 5361 003a 0ED0     		beq	.L480
 5362 003c 61E0     		b	.L472
 5363              	.L477:
2541:.\mem1.c      ****                 {
2542:.\mem1.c      ****                     case 0x00: CapSense_1_Start(); CapSense_1_InitializeAllBaselines(); break;
 5364              		.loc 1 2542 0
 5365 003e FFF7FEFF 		bl	CapSense_1_Start
 5366 0042 FFF7FEFF 		bl	CapSense_1_InitializeAllBaselines
 5367 0046 5CE0     		b	.L472
 5368              	.L475:
2543:.\mem1.c      ****                     case 0x01: CapSense_1_Stop(); break;
 5369              		.loc 1 2543 0
 5370 0048 FFF7FEFF 		bl	CapSense_1_Stop
 5371 004c 59E0     		b	.L472
 5372              	.L476:
2544:.\mem1.c      ****                     case 0x02: CapSense_1_Sleep(); break;
 5373              		.loc 1 2544 0
 5374 004e FFF7FEFF 		bl	CapSense_1_Sleep
 5375 0052 56E0     		b	.L472
 5376              	.L473:
2545:.\mem1.c      ****                     case 0x03: CapSense_1_Wakeup(); break;
 5377              		.loc 1 2545 0
 5378 0054 FFF7FEFF 		bl	CapSense_1_Wakeup
 5379 0058 53E0     		b	.L472
 5380              	.L480:
2546:.\mem1.c      ****                     case 0x0F:
2547:.\mem1.c      ****                         /* Update all baselines */
2548:.\mem1.c      ****                         CapSense_1_UpdateEnabledBaselines();
 5381              		.loc 1 2548 0
 5382 005a FFF7FEFF 		bl	CapSense_1_UpdateEnabledBaselines
2549:.\mem1.c      ****                    		/* Start scanning all enabled sensors */
2550:.\mem1.c      ****                     	CapSense_1_ScanEnabledWidgets();
 5383              		.loc 1 2550 0
 5384 005e FFF7FEFF 		bl	CapSense_1_ScanEnabledWidgets
2551:.\mem1.c      ****                         /* Wait for scanning to complete */
2552:.\mem1.c      ****                 		while(CapSense_1_IsBusy() != 0);
 5385              		.loc 1 2552 0
 5386 0062 00BF     		nop
 5387              	.L481:
 5388              		.loc 1 2552 0 is_stmt 0 discriminator 1
 5389 0064 FFF7FEFF 		bl	CapSense_1_IsBusy
 5390 0068 0346     		mov	r3, r0
 5391 006a 002B     		cmp	r3, #0
 5392 006c FAD1     		bne	.L481
2553:.\mem1.c      ****                         *result = CapSense_1_ReadSensorRaw(dat); return_flag = 1;
 5393              		.loc 1 2553 0 is_stmt 1
 5394 006e BB88     		ldrh	r3, [r7, #4]	@ movhi
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cc7rr7YM.s 			page 141


 5395 0070 DBB2     		uxtb	r3, r3
 5396 0072 1846     		mov	r0, r3
 5397 0074 FFF7FEFF 		bl	CapSense_1_ReadSensorRaw
 5398 0078 0346     		mov	r3, r0
 5399 007a 1A46     		mov	r2, r3
 5400 007c 3B68     		ldr	r3, [r7]
 5401 007e 1A60     		str	r2, [r3]
 5402 0080 0123     		movs	r3, #1
 5403 0082 FB73     		strb	r3, [r7, #15]
2554:.\mem1.c      ****                         break;
 5404              		.loc 1 2554 0
 5405 0084 3DE0     		b	.L472
 5406              	.L478:
2555:.\mem1.c      ****                     case 0x18:
2556:.\mem1.c      ****                         /* Update all baselines */
2557:.\mem1.c      ****                         CapSense_1_UpdateEnabledBaselines();
 5407              		.loc 1 2557 0
 5408 0086 FFF7FEFF 		bl	CapSense_1_UpdateEnabledBaselines
2558:.\mem1.c      ****                    		/* Start scanning all enabled sensors */
2559:.\mem1.c      ****                     	CapSense_1_ScanEnabledWidgets();
 5409              		.loc 1 2559 0
 5410 008a FFF7FEFF 		bl	CapSense_1_ScanEnabledWidgets
2560:.\mem1.c      ****                         /* Wait for scanning to complete */
2561:.\mem1.c      ****                 		while(CapSense_1_IsBusy() != 0);
 5411              		.loc 1 2561 0
 5412 008e 00BF     		nop
 5413              	.L482:
 5414              		.loc 1 2561 0 is_stmt 0 discriminator 1
 5415 0090 FFF7FEFF 		bl	CapSense_1_IsBusy
 5416 0094 0346     		mov	r3, r0
 5417 0096 002B     		cmp	r3, #0
 5418 0098 FAD1     		bne	.L482
2562:.\mem1.c      ****                         *result = CapSense_1_CheckIsWidgetActive(dat); return_flag = 1;
 5419              		.loc 1 2562 0 is_stmt 1
 5420 009a BB88     		ldrh	r3, [r7, #4]	@ movhi
 5421 009c DBB2     		uxtb	r3, r3
 5422 009e 1846     		mov	r0, r3
 5423 00a0 FFF7FEFF 		bl	CapSense_1_CheckIsWidgetActive
 5424 00a4 0346     		mov	r3, r0
 5425 00a6 1A46     		mov	r2, r3
 5426 00a8 3B68     		ldr	r3, [r7]
 5427 00aa 1A60     		str	r2, [r3]
 5428 00ac 0123     		movs	r3, #1
 5429 00ae FB73     		strb	r3, [r7, #15]
2563:.\mem1.c      ****                         break;
 5430              		.loc 1 2563 0
 5431 00b0 27E0     		b	.L472
 5432              	.L479:
2564:.\mem1.c      ****                     case 0xFF:
2565:.\mem1.c      ****                         
2566:.\mem1.c      ****                         /* Update all baselines */
2567:.\mem1.c      ****                         CapSense_1_UpdateEnabledBaselines();
 5433              		.loc 1 2567 0
 5434 00b2 FFF7FEFF 		bl	CapSense_1_UpdateEnabledBaselines
2568:.\mem1.c      ****                         
2569:.\mem1.c      ****                         for (j = 0; j<CapSense_1_TOTAL_SENSOR_COUNT; j++)
 5435              		.loc 1 2569 0
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cc7rr7YM.s 			page 142


 5436 00b6 0023     		movs	r3, #0
 5437 00b8 BB60     		str	r3, [r7, #8]
 5438 00ba 1DE0     		b	.L483
 5439              	.L486:
2570:.\mem1.c      ****                         {
2571:.\mem1.c      ****                        		/* Start scanning all enabled sensors */
2572:.\mem1.c      ****                         	CapSense_1_ScanEnabledWidgets();
 5440              		.loc 1 2572 0
 5441 00bc FFF7FEFF 		bl	CapSense_1_ScanEnabledWidgets
2573:.\mem1.c      ****                             /* Wait for scanning to complete */
2574:.\mem1.c      ****                     		while(CapSense_1_IsBusy() != 0);
 5442              		.loc 1 2574 0
 5443 00c0 00BF     		nop
 5444              	.L484:
 5445              		.loc 1 2574 0 is_stmt 0 discriminator 1
 5446 00c2 FFF7FEFF 		bl	CapSense_1_IsBusy
 5447 00c6 0346     		mov	r3, r0
 5448 00c8 002B     		cmp	r3, #0
 5449 00ca FAD1     		bne	.L484
2575:.\mem1.c      ****                             if (CapSense_1_ReadSensorRaw(j)>=dat)
 5450              		.loc 1 2575 0 is_stmt 1
 5451 00cc BB68     		ldr	r3, [r7, #8]
 5452 00ce DBB2     		uxtb	r3, r3
 5453 00d0 1846     		mov	r0, r3
 5454 00d2 FFF7FEFF 		bl	CapSense_1_ReadSensorRaw
 5455 00d6 0346     		mov	r3, r0
 5456 00d8 1A46     		mov	r2, r3
 5457 00da BB88     		ldrh	r3, [r7, #4]
 5458 00dc 9342     		cmp	r3, r2
 5459 00de 08D8     		bhi	.L485
2576:.\mem1.c      ****                             {
2577:.\mem1.c      ****                                 *result|=(0x01<<j);
 5460              		.loc 1 2577 0
 5461 00e0 3B68     		ldr	r3, [r7]
 5462 00e2 1B68     		ldr	r3, [r3]
 5463 00e4 BA68     		ldr	r2, [r7, #8]
 5464 00e6 0121     		movs	r1, #1
 5465 00e8 01FA02F2 		lsl	r2, r1, r2
 5466 00ec 1A43     		orrs	r2, r2, r3
 5467 00ee 3B68     		ldr	r3, [r7]
 5468 00f0 1A60     		str	r2, [r3]
 5469              	.L485:
2569:.\mem1.c      ****                         {
 5470              		.loc 1 2569 0 discriminator 2
 5471 00f2 BB68     		ldr	r3, [r7, #8]
 5472 00f4 0133     		adds	r3, r3, #1
 5473 00f6 BB60     		str	r3, [r7, #8]
 5474              	.L483:
2569:.\mem1.c      ****                         {
 5475              		.loc 1 2569 0 is_stmt 0 discriminator 1
 5476 00f8 BB68     		ldr	r3, [r7, #8]
 5477 00fa 072B     		cmp	r3, #7
 5478 00fc DED9     		bls	.L486
2578:.\mem1.c      ****                             }
2579:.\mem1.c      ****                         }
2580:.\mem1.c      ****                         return_flag = true;
 5479              		.loc 1 2580 0 is_stmt 1
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cc7rr7YM.s 			page 143


 5480 00fe 0123     		movs	r3, #1
 5481 0100 FB73     		strb	r3, [r7, #15]
 5482              	.L472:
2581:.\mem1.c      ****                         
2582:.\mem1.c      ****                         
2583:.\mem1.c      **** 
2584:.\mem1.c      ****                 }
2585:.\mem1.c      **** 
2586:.\mem1.c      ****                 return return_flag;
 5483              		.loc 1 2586 0
 5484 0102 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
2587:.\mem1.c      ****     }
 5485              		.loc 1 2587 0
 5486 0104 1846     		mov	r0, r3
 5487 0106 1037     		adds	r7, r7, #16
 5488              		.cfi_def_cfa_offset 8
 5489 0108 BD46     		mov	sp, r7
 5490              		.cfi_def_cfa_register 13
 5491              		@ sp needed
 5492 010a 80BD     		pop	{r7, pc}
 5493              		.cfi_endproc
 5494              	.LFE72:
 5495              		.size	CapSense_Read, .-CapSense_Read
 5496              		.section	.text.Range_Finder,"ax",%progbits
 5497              		.align	2
 5498              		.global	Range_Finder
 5499              		.thumb
 5500              		.thumb_func
 5501              		.type	Range_Finder, %function
 5502              	Range_Finder:
 5503              	.LFB73:
2588:.\mem1.c      **** #endif
2589:.\mem1.c      **** #ifdef CY_Timer_v2_60_Timer_H
2590:.\mem1.c      ****     bool Range_Finder(uint8 cmd, uint8 port, uint8 pin, uint8 trigport, uint8 trigpin, uint8 delayu
2591:.\mem1.c      ****         {
 5504              		.loc 1 2591 0
 5505              		.cfi_startproc
 5506              		@ args = 16, pretend = 0, frame = 16
 5507              		@ frame_needed = 1, uses_anonymous_args = 0
 5508 0000 90B5     		push	{r4, r7, lr}
 5509              		.cfi_def_cfa_offset 12
 5510              		.cfi_offset 4, -12
 5511              		.cfi_offset 7, -8
 5512              		.cfi_offset 14, -4
 5513 0002 85B0     		sub	sp, sp, #20
 5514              		.cfi_def_cfa_offset 32
 5515 0004 00AF     		add	r7, sp, #0
 5516              		.cfi_def_cfa_register 7
 5517 0006 0446     		mov	r4, r0
 5518 0008 0846     		mov	r0, r1
 5519 000a 1146     		mov	r1, r2
 5520 000c 1A46     		mov	r2, r3
 5521 000e 2346     		mov	r3, r4
 5522 0010 FB71     		strb	r3, [r7, #7]
 5523 0012 0346     		mov	r3, r0
 5524 0014 BB71     		strb	r3, [r7, #6]
 5525 0016 0B46     		mov	r3, r1
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cc7rr7YM.s 			page 144


 5526 0018 7B71     		strb	r3, [r7, #5]
 5527 001a 1346     		mov	r3, r2
 5528 001c 3B71     		strb	r3, [r7, #4]
2592:.\mem1.c      ****             uint32 us_count = 0;
 5529              		.loc 1 2592 0
 5530 001e 0023     		movs	r3, #0
 5531 0020 FB60     		str	r3, [r7, #12]
2593:.\mem1.c      ****             bool read_timeout = false;
 5532              		.loc 1 2593 0
 5533 0022 0023     		movs	r3, #0
 5534 0024 BB72     		strb	r3, [r7, #10]
2594:.\mem1.c      ****             bool write_timeout = false;
 5535              		.loc 1 2594 0
 5536 0026 0023     		movs	r3, #0
 5537 0028 7B72     		strb	r3, [r7, #9]
2595:.\mem1.c      ****             Timer_Start();
 5538              		.loc 1 2595 0
 5539 002a FFF7FEFF 		bl	Timer_Start
2596:.\mem1.c      ****             TIMER_REG_Write(1);
 5540              		.loc 1 2596 0
 5541 002e 0120     		movs	r0, #1
 5542 0030 FFF7FEFF 		bl	TIMER_REG_Write
2597:.\mem1.c      ****             bool return_flag = false;
 5543              		.loc 1 2597 0
 5544 0034 0023     		movs	r3, #0
 5545 0036 FB72     		strb	r3, [r7, #11]
2598:.\mem1.c      ****            
2599:.\mem1.c      ****             switch (cmd)
 5546              		.loc 1 2599 0
 5547 0038 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 5548 003a 002B     		cmp	r3, #0
 5549 003c 04D0     		beq	.L490
 5550 003e 012B     		cmp	r3, #1
 5551 0040 01F0BA81 		beq	.L491
 5552 0044 01F0BEB9 		b	.L489
 5553              	.L490:
2600:.\mem1.c      ****             {
2601:.\mem1.c      ****                 case 0x00: //cmd case
2602:.\mem1.c      ****                     return_flag = true;
 5554              		.loc 1 2602 0
 5555 0048 0123     		movs	r3, #1
 5556 004a FB72     		strb	r3, [r7, #11]
2603:.\mem1.c      ****                     switch (trigport)
 5557              		.loc 1 2603 0
 5558 004c 3B79     		ldrb	r3, [r7, #4]	@ zero_extendqisi2
 5559 004e 0F2B     		cmp	r3, #15
 5560 0050 00F20F83 		bhi	.L492
 5561 0054 01A2     		adr	r2, .L494
 5562 0056 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 5563 005a 00BF     		.p2align 2
 5564              	.L494:
 5565 005c 9D000000 		.word	.L493+1
 5566 0060 73060000 		.word	.L492+1
 5567 0064 D1000000 		.word	.L495+1
 5568 0068 63020000 		.word	.L496+1
 5569 006c 99020000 		.word	.L497+1
 5570 0070 C9020000 		.word	.L498+1
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cc7rr7YM.s 			page 145


 5571 0074 5B040000 		.word	.L499+1
 5572 0078 73060000 		.word	.L492+1
 5573 007c 73060000 		.word	.L492+1
 5574 0080 73060000 		.word	.L492+1
 5575 0084 73060000 		.word	.L492+1
 5576 0088 73060000 		.word	.L492+1
 5577 008c 91040000 		.word	.L500+1
 5578 0090 73060000 		.word	.L492+1
 5579 0094 73060000 		.word	.L492+1
 5580 0098 23060000 		.word	.L501+1
 5581              		.p2align 1
 5582              	.L493:
2604:.\mem1.c      ****                     {
2605:.\mem1.c      ****                     case 0x00:
2606:.\mem1.c      ****                     	switch(trigpin)
 5583              		.loc 1 2606 0
 5584 009c 97F82030 		ldrb	r3, [r7, #32]	@ zero_extendqisi2
 5585 00a0 072B     		cmp	r3, #7
 5586 00a2 00F2D782 		bhi	.L815
 5587 00a6 01A2     		adr	r2, .L504
 5588 00a8 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 5589              		.p2align 2
 5590              	.L504:
 5591 00ac CD000000 		.word	.L816+1
 5592 00b0 CD000000 		.word	.L816+1
 5593 00b4 CD000000 		.word	.L816+1
 5594 00b8 CD000000 		.word	.L816+1
 5595 00bc CD000000 		.word	.L816+1
 5596 00c0 CD000000 		.word	.L816+1
 5597 00c4 CD000000 		.word	.L816+1
 5598 00c8 CD000000 		.word	.L816+1
 5599              		.p2align 1
 5600              	.L816:
2607:.\mem1.c      ****                     	{
2608:.\mem1.c      ****                     		case 0x00:
2609:.\mem1.c      ****                     			#ifdef CY_PINS_GPIO_0_0_H 
2610:.\mem1.c      ****                     				GPIO_0_0_SetDriveMode(PIN_DM_STRONG); GPIO_0_0_Write(0); CyDelayUs(2); GPIO
2611:.\mem1.c      ****                     			#endif
2612:.\mem1.c      ****                     		break; //0x00
 5601              		.loc 1 2612 0
 5602 00cc 00BF     		nop
2613:.\mem1.c      ****                     		case 0x01:
2614:.\mem1.c      ****                     			#ifdef CY_PINS_GPIO_0_1_H 
2615:.\mem1.c      ****                     				GPIO_0_1_SetDriveMode(PIN_DM_STRONG); GPIO_0_1_Write(0); CyDelayUs(2); GPIO
2616:.\mem1.c      ****                     			#endif
2617:.\mem1.c      ****                     		break; //0x01
2618:.\mem1.c      ****                     		case 0x02:
2619:.\mem1.c      ****                     			#ifdef CY_PINS_GPIO_0_2_H 
2620:.\mem1.c      ****                     				GPIO_0_2_SetDriveMode(PIN_DM_STRONG); GPIO_0_2_Write(0); CyDelayUs(2); GPIO
2621:.\mem1.c      ****                     			#endif
2622:.\mem1.c      ****                     		break; //0x02
2623:.\mem1.c      ****                     		case 0x03:
2624:.\mem1.c      ****                     			#ifdef CY_PINS_GPIO_0_3_H 
2625:.\mem1.c      ****                     				GPIO_0_3_SetDriveMode(PIN_DM_STRONG); GPIO_0_3_Write(0); CyDelayUs(2); GPIO
2626:.\mem1.c      ****                     			#endif
2627:.\mem1.c      ****                     		break; //0x03
2628:.\mem1.c      ****                     		case 0x04:
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cc7rr7YM.s 			page 146


2629:.\mem1.c      ****                     			#ifdef CY_PINS_GPIO_0_4_H 
2630:.\mem1.c      ****                     				GPIO_0_4_SetDriveMode(PIN_DM_STRONG); GPIO_0_4_Write(0); CyDelayUs(2); GPIO
2631:.\mem1.c      ****                     			#endif
2632:.\mem1.c      ****                     		break; //0x04
2633:.\mem1.c      ****                     		case 0x05:
2634:.\mem1.c      ****                     			#ifdef CY_PINS_GPIO_0_5_H 
2635:.\mem1.c      ****                     				GPIO_0_5_SetDriveMode(PIN_DM_STRONG); GPIO_0_5_Write(0); CyDelayUs(2); GPIO
2636:.\mem1.c      ****                     			#endif
2637:.\mem1.c      ****                     		break; //0x05
2638:.\mem1.c      ****                     		case 0x06:
2639:.\mem1.c      ****                     			#ifdef CY_PINS_GPIO_0_6_H 
2640:.\mem1.c      ****                     				GPIO_0_6_SetDriveMode(PIN_DM_STRONG); GPIO_0_6_Write(0); CyDelayUs(2); GPIO
2641:.\mem1.c      ****                     			#endif
2642:.\mem1.c      ****                     		break; //0x06
2643:.\mem1.c      ****                     		case 0x07:
2644:.\mem1.c      ****                     			#ifdef CY_PINS_GPIO_0_7_H 
2645:.\mem1.c      ****                     				GPIO_0_7_SetDriveMode(PIN_DM_STRONG); GPIO_0_7_Write(0); CyDelayUs(2); GPIO
2646:.\mem1.c      ****                     			#endif
2647:.\mem1.c      ****                     		break; //0x07
2648:.\mem1.c      ****                     	}
2649:.\mem1.c      ****                     break; //0x00
 5603              		.loc 1 2649 0
 5604 00ce C1E2     		b	.L815
 5605              	.L495:
2650:.\mem1.c      ****                     case 0x02:
2651:.\mem1.c      ****                     	switch(trigpin)
 5606              		.loc 1 2651 0
 5607 00d0 97F82030 		ldrb	r3, [r7, #32]	@ zero_extendqisi2
 5608 00d4 072B     		cmp	r3, #7
 5609 00d6 00F2BF82 		bhi	.L817
 5610 00da 01A2     		adr	r2, .L514
 5611 00dc 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 5612              		.p2align 2
 5613              	.L514:
 5614 00e0 01010000 		.word	.L513+1
 5615 00e4 2D010000 		.word	.L515+1
 5616 00e8 59010000 		.word	.L516+1
 5617 00ec 85010000 		.word	.L517+1
 5618 00f0 B1010000 		.word	.L518+1
 5619 00f4 DD010000 		.word	.L519+1
 5620 00f8 09020000 		.word	.L520+1
 5621 00fc 35020000 		.word	.L521+1
 5622              		.p2align 1
 5623              	.L513:
2652:.\mem1.c      ****                     	{
2653:.\mem1.c      ****                     		case 0x00:
2654:.\mem1.c      ****                     			#ifdef CY_PINS_GPIO_2_0_H 
2655:.\mem1.c      ****                     				GPIO_2_0_SetDriveMode(PIN_DM_STRONG); GPIO_2_0_Write(0); CyDelayUs(2); GPIO
 5624              		.loc 1 2655 0
 5625 0100 0C20     		movs	r0, #12
 5626 0102 FFF7FEFF 		bl	GPIO_2_0_SetDriveMode
 5627 0106 0020     		movs	r0, #0
 5628 0108 FFF7FEFF 		bl	GPIO_2_0_Write
 5629 010c 0220     		movs	r0, #2
 5630 010e FFF7FEFF 		bl	CyDelayUs
 5631 0112 0120     		movs	r0, #1
 5632 0114 FFF7FEFF 		bl	GPIO_2_0_Write
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cc7rr7YM.s 			page 147


 5633 0118 97F82430 		ldrb	r3, [r7, #36]	@ zero_extendqisi2
 5634 011c 9BB2     		uxth	r3, r3
 5635 011e 1846     		mov	r0, r3
 5636 0120 FFF7FEFF 		bl	CyDelayUs
 5637 0124 0020     		movs	r0, #0
 5638 0126 FFF7FEFF 		bl	GPIO_2_0_Write
 5639 012a 99E0     		b	.L512
 5640              	.L515:
2656:.\mem1.c      ****                     			#endif
2657:.\mem1.c      ****                     		break; //0x00
2658:.\mem1.c      ****                     		case 0x01:
2659:.\mem1.c      ****                     			#ifdef CY_PINS_GPIO_2_1_H 
2660:.\mem1.c      ****                     				GPIO_2_1_SetDriveMode(PIN_DM_STRONG); GPIO_2_1_Write(0); CyDelayUs(2); GPIO
 5641              		.loc 1 2660 0
 5642 012c 0C20     		movs	r0, #12
 5643 012e FFF7FEFF 		bl	GPIO_2_1_SetDriveMode
 5644 0132 0020     		movs	r0, #0
 5645 0134 FFF7FEFF 		bl	GPIO_2_1_Write
 5646 0138 0220     		movs	r0, #2
 5647 013a FFF7FEFF 		bl	CyDelayUs
 5648 013e 0120     		movs	r0, #1
 5649 0140 FFF7FEFF 		bl	GPIO_2_1_Write
 5650 0144 97F82430 		ldrb	r3, [r7, #36]	@ zero_extendqisi2
 5651 0148 9BB2     		uxth	r3, r3
 5652 014a 1846     		mov	r0, r3
 5653 014c FFF7FEFF 		bl	CyDelayUs
 5654 0150 0020     		movs	r0, #0
 5655 0152 FFF7FEFF 		bl	GPIO_2_1_Write
 5656 0156 83E0     		b	.L512
 5657              	.L516:
2661:.\mem1.c      ****                     			#endif
2662:.\mem1.c      ****                     		break; //0x01
2663:.\mem1.c      ****                     		case 0x02:
2664:.\mem1.c      ****                     			#ifdef CY_PINS_GPIO_2_2_H 
2665:.\mem1.c      ****                     				GPIO_2_2_SetDriveMode(PIN_DM_STRONG); GPIO_2_2_Write(0); CyDelayUs(2); GPIO
 5658              		.loc 1 2665 0
 5659 0158 0C20     		movs	r0, #12
 5660 015a FFF7FEFF 		bl	GPIO_2_2_SetDriveMode
 5661 015e 0020     		movs	r0, #0
 5662 0160 FFF7FEFF 		bl	GPIO_2_2_Write
 5663 0164 0220     		movs	r0, #2
 5664 0166 FFF7FEFF 		bl	CyDelayUs
 5665 016a 0120     		movs	r0, #1
 5666 016c FFF7FEFF 		bl	GPIO_2_2_Write
 5667 0170 97F82430 		ldrb	r3, [r7, #36]	@ zero_extendqisi2
 5668 0174 9BB2     		uxth	r3, r3
 5669 0176 1846     		mov	r0, r3
 5670 0178 FFF7FEFF 		bl	CyDelayUs
 5671 017c 0020     		movs	r0, #0
 5672 017e FFF7FEFF 		bl	GPIO_2_2_Write
 5673 0182 6DE0     		b	.L512
 5674              	.L517:
2666:.\mem1.c      ****                     			#endif
2667:.\mem1.c      ****                     		break; //0x02
2668:.\mem1.c      ****                     		case 0x03:
2669:.\mem1.c      ****                     			#ifdef CY_PINS_GPIO_2_3_H 
2670:.\mem1.c      ****                     				GPIO_2_3_SetDriveMode(PIN_DM_STRONG); GPIO_2_3_Write(0); CyDelayUs(2); GPIO
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cc7rr7YM.s 			page 148


 5675              		.loc 1 2670 0
 5676 0184 0C20     		movs	r0, #12
 5677 0186 FFF7FEFF 		bl	GPIO_2_3_SetDriveMode
 5678 018a 0020     		movs	r0, #0
 5679 018c FFF7FEFF 		bl	GPIO_2_3_Write
 5680 0190 0220     		movs	r0, #2
 5681 0192 FFF7FEFF 		bl	CyDelayUs
 5682 0196 0120     		movs	r0, #1
 5683 0198 FFF7FEFF 		bl	GPIO_2_3_Write
 5684 019c 97F82430 		ldrb	r3, [r7, #36]	@ zero_extendqisi2
 5685 01a0 9BB2     		uxth	r3, r3
 5686 01a2 1846     		mov	r0, r3
 5687 01a4 FFF7FEFF 		bl	CyDelayUs
 5688 01a8 0020     		movs	r0, #0
 5689 01aa FFF7FEFF 		bl	GPIO_2_3_Write
 5690 01ae 57E0     		b	.L512
 5691              	.L518:
2671:.\mem1.c      ****                     			#endif
2672:.\mem1.c      ****                     		break; //0x03
2673:.\mem1.c      ****                     		case 0x04:
2674:.\mem1.c      ****                     			#ifdef CY_PINS_GPIO_2_4_H 
2675:.\mem1.c      ****                     				GPIO_2_4_SetDriveMode(PIN_DM_STRONG); GPIO_2_4_Write(0); CyDelayUs(2); GPIO
 5692              		.loc 1 2675 0
 5693 01b0 0C20     		movs	r0, #12
 5694 01b2 FFF7FEFF 		bl	GPIO_2_4_SetDriveMode
 5695 01b6 0020     		movs	r0, #0
 5696 01b8 FFF7FEFF 		bl	GPIO_2_4_Write
 5697 01bc 0220     		movs	r0, #2
 5698 01be FFF7FEFF 		bl	CyDelayUs
 5699 01c2 0120     		movs	r0, #1
 5700 01c4 FFF7FEFF 		bl	GPIO_2_4_Write
 5701 01c8 97F82430 		ldrb	r3, [r7, #36]	@ zero_extendqisi2
 5702 01cc 9BB2     		uxth	r3, r3
 5703 01ce 1846     		mov	r0, r3
 5704 01d0 FFF7FEFF 		bl	CyDelayUs
 5705 01d4 0020     		movs	r0, #0
 5706 01d6 FFF7FEFF 		bl	GPIO_2_4_Write
 5707 01da 41E0     		b	.L512
 5708              	.L519:
2676:.\mem1.c      ****                     			#endif
2677:.\mem1.c      ****                     		break; //0x04
2678:.\mem1.c      ****                     		case 0x05:
2679:.\mem1.c      ****                     			#ifdef CY_PINS_GPIO_2_5_H 
2680:.\mem1.c      ****                     				GPIO_2_5_SetDriveMode(PIN_DM_STRONG); GPIO_2_5_Write(0); CyDelayUs(2); GPIO
 5709              		.loc 1 2680 0
 5710 01dc 0C20     		movs	r0, #12
 5711 01de FFF7FEFF 		bl	GPIO_2_5_SetDriveMode
 5712 01e2 0020     		movs	r0, #0
 5713 01e4 FFF7FEFF 		bl	GPIO_2_5_Write
 5714 01e8 0220     		movs	r0, #2
 5715 01ea FFF7FEFF 		bl	CyDelayUs
 5716 01ee 0120     		movs	r0, #1
 5717 01f0 FFF7FEFF 		bl	GPIO_2_5_Write
 5718 01f4 97F82430 		ldrb	r3, [r7, #36]	@ zero_extendqisi2
 5719 01f8 9BB2     		uxth	r3, r3
 5720 01fa 1846     		mov	r0, r3
 5721 01fc FFF7FEFF 		bl	CyDelayUs
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cc7rr7YM.s 			page 149


 5722 0200 0020     		movs	r0, #0
 5723 0202 FFF7FEFF 		bl	GPIO_2_5_Write
 5724 0206 2BE0     		b	.L512
 5725              	.L520:
2681:.\mem1.c      ****                     			#endif
2682:.\mem1.c      ****                     		break; //0x05
2683:.\mem1.c      ****                     		case 0x06:
2684:.\mem1.c      ****                     			#ifdef CY_PINS_GPIO_2_6_H 
2685:.\mem1.c      ****                     				GPIO_2_6_SetDriveMode(PIN_DM_STRONG); GPIO_2_6_Write(0); CyDelayUs(2); GPIO
 5726              		.loc 1 2685 0
 5727 0208 0C20     		movs	r0, #12
 5728 020a FFF7FEFF 		bl	GPIO_2_6_SetDriveMode
 5729 020e 0020     		movs	r0, #0
 5730 0210 FFF7FEFF 		bl	GPIO_2_6_Write
 5731 0214 0220     		movs	r0, #2
 5732 0216 FFF7FEFF 		bl	CyDelayUs
 5733 021a 0120     		movs	r0, #1
 5734 021c FFF7FEFF 		bl	GPIO_2_6_Write
 5735 0220 97F82430 		ldrb	r3, [r7, #36]	@ zero_extendqisi2
 5736 0224 9BB2     		uxth	r3, r3
 5737 0226 1846     		mov	r0, r3
 5738 0228 FFF7FEFF 		bl	CyDelayUs
 5739 022c 0020     		movs	r0, #0
 5740 022e FFF7FEFF 		bl	GPIO_2_6_Write
 5741 0232 15E0     		b	.L512
 5742              	.L521:
2686:.\mem1.c      ****                     			#endif
2687:.\mem1.c      ****                     		break; //0x06
2688:.\mem1.c      ****                     		case 0x07:
2689:.\mem1.c      ****                     			#ifdef CY_PINS_GPIO_2_7_H 
2690:.\mem1.c      ****                     				GPIO_2_7_SetDriveMode(PIN_DM_STRONG); GPIO_2_7_Write(0); CyDelayUs(2); GPIO
 5743              		.loc 1 2690 0
 5744 0234 0C20     		movs	r0, #12
 5745 0236 FFF7FEFF 		bl	GPIO_2_7_SetDriveMode
 5746 023a 0020     		movs	r0, #0
 5747 023c FFF7FEFF 		bl	GPIO_2_7_Write
 5748 0240 0220     		movs	r0, #2
 5749 0242 FFF7FEFF 		bl	CyDelayUs
 5750 0246 0120     		movs	r0, #1
 5751 0248 FFF7FEFF 		bl	GPIO_2_7_Write
 5752 024c 97F82430 		ldrb	r3, [r7, #36]	@ zero_extendqisi2
 5753 0250 9BB2     		uxth	r3, r3
 5754 0252 1846     		mov	r0, r3
 5755 0254 FFF7FEFF 		bl	CyDelayUs
 5756 0258 0020     		movs	r0, #0
 5757 025a FFF7FEFF 		bl	GPIO_2_7_Write
 5758 025e 00BF     		nop
 5759              	.L512:
2691:.\mem1.c      ****                     			#endif
2692:.\mem1.c      ****                     		break; //0x07
2693:.\mem1.c      ****                     	}
2694:.\mem1.c      ****                     break; //0x02
 5760              		.loc 1 2694 0
 5761 0260 FAE1     		b	.L817
 5762              	.L496:
2695:.\mem1.c      ****                     case 0x03:
2696:.\mem1.c      ****                     	switch(trigpin)
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cc7rr7YM.s 			page 150


 5763              		.loc 1 2696 0
 5764 0262 97F82030 		ldrb	r3, [r7, #32]	@ zero_extendqisi2
 5765 0266 072B     		cmp	r3, #7
 5766 0268 00F2F881 		bhi	.L818
 5767 026c 01A2     		adr	r2, .L524
 5768 026e 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 5769 0272 00BF     		.p2align 2
 5770              	.L524:
 5771 0274 95020000 		.word	.L819+1
 5772 0278 95020000 		.word	.L819+1
 5773 027c 95020000 		.word	.L819+1
 5774 0280 95020000 		.word	.L819+1
 5775 0284 95020000 		.word	.L819+1
 5776 0288 95020000 		.word	.L819+1
 5777 028c 95020000 		.word	.L819+1
 5778 0290 95020000 		.word	.L819+1
 5779              		.p2align 1
 5780              	.L819:
2697:.\mem1.c      ****                     	{
2698:.\mem1.c      ****                     		case 0x00:
2699:.\mem1.c      ****                     			#ifdef CY_PINS_GPIO_3_0_H 
2700:.\mem1.c      ****                     				GPIO_3_0_SetDriveMode(PIN_DM_STRONG); GPIO_3_0_Write(0); CyDelayUs(2); GPIO
2701:.\mem1.c      ****                     			#endif
2702:.\mem1.c      ****                     		break; //0x00
 5781              		.loc 1 2702 0
 5782 0294 00BF     		nop
2703:.\mem1.c      ****                     		case 0x01:
2704:.\mem1.c      ****                     			#ifdef CY_PINS_GPIO_3_1_H 
2705:.\mem1.c      ****                     				GPIO_3_1_SetDriveMode(PIN_DM_STRONG); GPIO_3_1_Write(0); CyDelayUs(2); GPIO
2706:.\mem1.c      ****                     			#endif
2707:.\mem1.c      ****                     		break; //0x01
2708:.\mem1.c      ****                     		case 0x02:
2709:.\mem1.c      ****                     			#ifdef CY_PINS_GPIO_3_2_H 
2710:.\mem1.c      ****                     				GPIO_3_2_SetDriveMode(PIN_DM_STRONG); GPIO_3_2_Write(0); CyDelayUs(2); GPIO
2711:.\mem1.c      ****                     			#endif
2712:.\mem1.c      ****                     		break; //0x02
2713:.\mem1.c      ****                     		case 0x03:
2714:.\mem1.c      ****                     			#ifdef CY_PINS_GPIO_3_3_H 
2715:.\mem1.c      ****                     				GPIO_3_3_SetDriveMode(PIN_DM_STRONG); GPIO_3_3_Write(0); CyDelayUs(2); GPIO
2716:.\mem1.c      ****                     			#endif
2717:.\mem1.c      ****                     		break; //0x03
2718:.\mem1.c      ****                     		case 0x04:
2719:.\mem1.c      ****                     			#ifdef CY_PINS_GPIO_3_4_H 
2720:.\mem1.c      ****                     				GPIO_3_4_SetDriveMode(PIN_DM_STRONG); GPIO_3_4_Write(0); CyDelayUs(2); GPIO
2721:.\mem1.c      ****                     			#endif
2722:.\mem1.c      ****                     		break; //0x04
2723:.\mem1.c      ****                     		case 0x05:
2724:.\mem1.c      ****                     			#ifdef CY_PINS_GPIO_3_5_H 
2725:.\mem1.c      ****                     				GPIO_3_5_SetDriveMode(PIN_DM_STRONG); GPIO_3_5_Write(0); CyDelayUs(2); GPIO
2726:.\mem1.c      ****                     			#endif
2727:.\mem1.c      ****                     		break; //0x05
2728:.\mem1.c      ****                     		case 0x06:
2729:.\mem1.c      ****                     			#ifdef CY_PINS_GPIO_3_6_H 
2730:.\mem1.c      ****                     				GPIO_3_6_SetDriveMode(PIN_DM_STRONG); GPIO_3_6_Write(0); CyDelayUs(2); GPIO
2731:.\mem1.c      ****                     			#endif
2732:.\mem1.c      ****                     		break; //0x06
2733:.\mem1.c      ****                     		case 0x07:
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cc7rr7YM.s 			page 151


2734:.\mem1.c      ****                     			#ifdef CY_PINS_GPIO_3_7_H 
2735:.\mem1.c      ****                     				GPIO_3_7_SetDriveMode(PIN_DM_STRONG); GPIO_3_7_Write(0); CyDelayUs(2); GPIO
2736:.\mem1.c      ****                     			#endif
2737:.\mem1.c      ****                     		break; //0x07
2738:.\mem1.c      ****                     	}
2739:.\mem1.c      ****                     break; //0x03
 5783              		.loc 1 2739 0
 5784 0296 E1E1     		b	.L818
 5785              	.L497:
2740:.\mem1.c      ****                     case 0x04:
2741:.\mem1.c      ****                     	switch(trigpin)
 5786              		.loc 1 2741 0
 5787 0298 97F82030 		ldrb	r3, [r7, #32]	@ zero_extendqisi2
 5788 029c 062B     		cmp	r3, #6
 5789 029e 00F2DF81 		bhi	.L820
 5790 02a2 01A2     		adr	r2, .L534
 5791 02a4 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 5792              		.p2align 2
 5793              	.L534:
 5794 02a8 C5020000 		.word	.L821+1
 5795 02ac C5020000 		.word	.L821+1
 5796 02b0 C5020000 		.word	.L821+1
 5797 02b4 C5020000 		.word	.L821+1
 5798 02b8 C5020000 		.word	.L821+1
 5799 02bc C5020000 		.word	.L821+1
 5800 02c0 C5020000 		.word	.L821+1
 5801              		.p2align 1
 5802              	.L821:
2742:.\mem1.c      ****                     	{
2743:.\mem1.c      ****                     		case 0x00:
2744:.\mem1.c      ****                     			#ifdef CY_PINS_GPIO_4_0_H 
2745:.\mem1.c      ****                     				GPIO_4_0_SetDriveMode(PIN_DM_STRONG); GPIO_4_0_Write(0); CyDelayUs(2); GPIO
2746:.\mem1.c      ****                     			#endif
2747:.\mem1.c      ****                     		break; //0x00
 5803              		.loc 1 2747 0
 5804 02c4 00BF     		nop
2748:.\mem1.c      ****                     		case 0x01:
2749:.\mem1.c      ****                     			#ifdef CY_PINS_GPIO_4_1_H 
2750:.\mem1.c      ****                     				GPIO_4_1_SetDriveMode(PIN_DM_STRONG); GPIO_4_1_Write(0); CyDelayUs(2); GPIO
2751:.\mem1.c      ****                     			#endif
2752:.\mem1.c      ****                     		break; //0x01
2753:.\mem1.c      ****                     		case 0x02:
2754:.\mem1.c      ****                     			#ifdef CY_PINS_GPIO_4_2_H 
2755:.\mem1.c      ****                     				GPIO_4_2_SetDriveMode(PIN_DM_STRONG); GPIO_4_2_Write(0); CyDelayUs(2); GPIO
2756:.\mem1.c      ****                     			#endif
2757:.\mem1.c      ****                     		break; //0x02
2758:.\mem1.c      ****                     		case 0x03:
2759:.\mem1.c      ****                     			#ifdef CY_PINS_GPIO_4_3_H 
2760:.\mem1.c      ****                     				GPIO_4_3_SetDriveMode(PIN_DM_STRONG); GPIO_4_3_Write(0); CyDelayUs(2); GPIO
2761:.\mem1.c      ****                     			#endif
2762:.\mem1.c      ****                     		break; //0x03
2763:.\mem1.c      ****                     		case 0x04:
2764:.\mem1.c      ****                     			#ifdef CY_PINS_GPIO_4_4_H 
2765:.\mem1.c      ****                     				GPIO_4_4_SetDriveMode(PIN_DM_STRONG); GPIO_4_4_Write(0); CyDelayUs(2); GPIO
2766:.\mem1.c      ****                     			#endif
2767:.\mem1.c      ****                     		break; //0x04
2768:.\mem1.c      ****                     		case 0x05:
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cc7rr7YM.s 			page 152


2769:.\mem1.c      ****                     			#ifdef CY_PINS_GPIO_4_5_H 
2770:.\mem1.c      ****                     				GPIO_4_5_SetDriveMode(PIN_DM_STRONG); GPIO_4_5_Write(0); CyDelayUs(2); GPIO
2771:.\mem1.c      ****                     			#endif
2772:.\mem1.c      ****                     		break; //0x05
2773:.\mem1.c      ****                     		case 0x06:
2774:.\mem1.c      ****                     			#ifdef CY_PINS_GPIO_4_6_H 
2775:.\mem1.c      ****                     				GPIO_4_6_SetDriveMode(PIN_DM_STRONG); GPIO_4_6_Write(0); CyDelayUs(2); GPIO
2776:.\mem1.c      ****                     			#endif
2777:.\mem1.c      ****                     		break; //0x06
2778:.\mem1.c      ****                     	}
2779:.\mem1.c      ****                     break; //0x04
 5805              		.loc 1 2779 0
 5806 02c6 CBE1     		b	.L820
 5807              	.L498:
2780:.\mem1.c      ****                     case 0x05:
2781:.\mem1.c      ****                     	switch(trigpin)
 5808              		.loc 1 2781 0
 5809 02c8 97F82030 		ldrb	r3, [r7, #32]	@ zero_extendqisi2
 5810 02cc 072B     		cmp	r3, #7
 5811 02ce 00F2C981 		bhi	.L822
 5812 02d2 01A2     		adr	r2, .L543
 5813 02d4 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 5814              		.p2align 2
 5815              	.L543:
 5816 02d8 F9020000 		.word	.L542+1
 5817 02dc 25030000 		.word	.L544+1
 5818 02e0 51030000 		.word	.L545+1
 5819 02e4 7D030000 		.word	.L546+1
 5820 02e8 A9030000 		.word	.L547+1
 5821 02ec D5030000 		.word	.L548+1
 5822 02f0 01040000 		.word	.L549+1
 5823 02f4 2D040000 		.word	.L550+1
 5824              		.p2align 1
 5825              	.L542:
2782:.\mem1.c      ****                     	{
2783:.\mem1.c      ****                     		case 0x00:
2784:.\mem1.c      ****                     			#ifdef CY_PINS_GPIO_5_0_H 
2785:.\mem1.c      ****                     				GPIO_5_0_SetDriveMode(PIN_DM_STRONG); GPIO_5_0_Write(0); CyDelayUs(2); GPIO
 5826              		.loc 1 2785 0
 5827 02f8 0C20     		movs	r0, #12
 5828 02fa FFF7FEFF 		bl	GPIO_5_0_SetDriveMode
 5829 02fe 0020     		movs	r0, #0
 5830 0300 FFF7FEFF 		bl	GPIO_5_0_Write
 5831 0304 0220     		movs	r0, #2
 5832 0306 FFF7FEFF 		bl	CyDelayUs
 5833 030a 0120     		movs	r0, #1
 5834 030c FFF7FEFF 		bl	GPIO_5_0_Write
 5835 0310 97F82430 		ldrb	r3, [r7, #36]	@ zero_extendqisi2
 5836 0314 9BB2     		uxth	r3, r3
 5837 0316 1846     		mov	r0, r3
 5838 0318 FFF7FEFF 		bl	CyDelayUs
 5839 031c 0020     		movs	r0, #0
 5840 031e FFF7FEFF 		bl	GPIO_5_0_Write
 5841 0322 99E0     		b	.L541
 5842              	.L544:
2786:.\mem1.c      ****                     			#endif
2787:.\mem1.c      ****                     		break; //0x00
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cc7rr7YM.s 			page 153


2788:.\mem1.c      ****                     		case 0x01:
2789:.\mem1.c      ****                     			#ifdef CY_PINS_GPIO_5_1_H 
2790:.\mem1.c      ****                     				GPIO_5_1_SetDriveMode(PIN_DM_STRONG); GPIO_5_1_Write(0); CyDelayUs(2); GPIO
 5843              		.loc 1 2790 0
 5844 0324 0C20     		movs	r0, #12
 5845 0326 FFF7FEFF 		bl	GPIO_5_1_SetDriveMode
 5846 032a 0020     		movs	r0, #0
 5847 032c FFF7FEFF 		bl	GPIO_5_1_Write
 5848 0330 0220     		movs	r0, #2
 5849 0332 FFF7FEFF 		bl	CyDelayUs
 5850 0336 0120     		movs	r0, #1
 5851 0338 FFF7FEFF 		bl	GPIO_5_1_Write
 5852 033c 97F82430 		ldrb	r3, [r7, #36]	@ zero_extendqisi2
 5853 0340 9BB2     		uxth	r3, r3
 5854 0342 1846     		mov	r0, r3
 5855 0344 FFF7FEFF 		bl	CyDelayUs
 5856 0348 0020     		movs	r0, #0
 5857 034a FFF7FEFF 		bl	GPIO_5_1_Write
 5858 034e 83E0     		b	.L541
 5859              	.L545:
2791:.\mem1.c      ****                     			#endif
2792:.\mem1.c      ****                     		break; //0x01
2793:.\mem1.c      ****                     		case 0x02:
2794:.\mem1.c      ****                     			#ifdef CY_PINS_GPIO_5_2_H 
2795:.\mem1.c      ****                     				GPIO_5_2_SetDriveMode(PIN_DM_STRONG); GPIO_5_2_Write(0); CyDelayUs(2); GPIO
 5860              		.loc 1 2795 0
 5861 0350 0C20     		movs	r0, #12
 5862 0352 FFF7FEFF 		bl	GPIO_5_2_SetDriveMode
 5863 0356 0020     		movs	r0, #0
 5864 0358 FFF7FEFF 		bl	GPIO_5_2_Write
 5865 035c 0220     		movs	r0, #2
 5866 035e FFF7FEFF 		bl	CyDelayUs
 5867 0362 0120     		movs	r0, #1
 5868 0364 FFF7FEFF 		bl	GPIO_5_2_Write
 5869 0368 97F82430 		ldrb	r3, [r7, #36]	@ zero_extendqisi2
 5870 036c 9BB2     		uxth	r3, r3
 5871 036e 1846     		mov	r0, r3
 5872 0370 FFF7FEFF 		bl	CyDelayUs
 5873 0374 0020     		movs	r0, #0
 5874 0376 FFF7FEFF 		bl	GPIO_5_2_Write
 5875 037a 6DE0     		b	.L541
 5876              	.L546:
2796:.\mem1.c      ****                     			#endif
2797:.\mem1.c      ****                     		break; //0x02
2798:.\mem1.c      ****                     		case 0x03:
2799:.\mem1.c      ****                     			#ifdef CY_PINS_GPIO_5_3_H 
2800:.\mem1.c      ****                     				GPIO_5_3_SetDriveMode(PIN_DM_STRONG); GPIO_5_3_Write(0); CyDelayUs(2); GPIO
 5877              		.loc 1 2800 0
 5878 037c 0C20     		movs	r0, #12
 5879 037e FFF7FEFF 		bl	GPIO_5_3_SetDriveMode
 5880 0382 0020     		movs	r0, #0
 5881 0384 FFF7FEFF 		bl	GPIO_5_3_Write
 5882 0388 0220     		movs	r0, #2
 5883 038a FFF7FEFF 		bl	CyDelayUs
 5884 038e 0120     		movs	r0, #1
 5885 0390 FFF7FEFF 		bl	GPIO_5_3_Write
 5886 0394 97F82430 		ldrb	r3, [r7, #36]	@ zero_extendqisi2
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cc7rr7YM.s 			page 154


 5887 0398 9BB2     		uxth	r3, r3
 5888 039a 1846     		mov	r0, r3
 5889 039c FFF7FEFF 		bl	CyDelayUs
 5890 03a0 0020     		movs	r0, #0
 5891 03a2 FFF7FEFF 		bl	GPIO_5_3_Write
 5892 03a6 57E0     		b	.L541
 5893              	.L547:
2801:.\mem1.c      ****                     			#endif
2802:.\mem1.c      ****                     		break; //0x03
2803:.\mem1.c      ****                     		case 0x04:
2804:.\mem1.c      ****                     			#ifdef CY_PINS_GPIO_5_4_H 
2805:.\mem1.c      ****                     				GPIO_5_4_SetDriveMode(PIN_DM_STRONG); GPIO_5_4_Write(0); CyDelayUs(2); GPIO
 5894              		.loc 1 2805 0
 5895 03a8 0C20     		movs	r0, #12
 5896 03aa FFF7FEFF 		bl	GPIO_5_4_SetDriveMode
 5897 03ae 0020     		movs	r0, #0
 5898 03b0 FFF7FEFF 		bl	GPIO_5_4_Write
 5899 03b4 0220     		movs	r0, #2
 5900 03b6 FFF7FEFF 		bl	CyDelayUs
 5901 03ba 0120     		movs	r0, #1
 5902 03bc FFF7FEFF 		bl	GPIO_5_4_Write
 5903 03c0 97F82430 		ldrb	r3, [r7, #36]	@ zero_extendqisi2
 5904 03c4 9BB2     		uxth	r3, r3
 5905 03c6 1846     		mov	r0, r3
 5906 03c8 FFF7FEFF 		bl	CyDelayUs
 5907 03cc 0020     		movs	r0, #0
 5908 03ce FFF7FEFF 		bl	GPIO_5_4_Write
 5909 03d2 41E0     		b	.L541
 5910              	.L548:
2806:.\mem1.c      ****                     			#endif
2807:.\mem1.c      ****                     		break; //0x04
2808:.\mem1.c      ****                     		case 0x05:
2809:.\mem1.c      ****                     			#ifdef CY_PINS_GPIO_5_5_H 
2810:.\mem1.c      ****                     				GPIO_5_5_SetDriveMode(PIN_DM_STRONG); GPIO_5_5_Write(0); CyDelayUs(2); GPIO
 5911              		.loc 1 2810 0
 5912 03d4 0C20     		movs	r0, #12
 5913 03d6 FFF7FEFF 		bl	GPIO_5_5_SetDriveMode
 5914 03da 0020     		movs	r0, #0
 5915 03dc FFF7FEFF 		bl	GPIO_5_5_Write
 5916 03e0 0220     		movs	r0, #2
 5917 03e2 FFF7FEFF 		bl	CyDelayUs
 5918 03e6 0120     		movs	r0, #1
 5919 03e8 FFF7FEFF 		bl	GPIO_5_5_Write
 5920 03ec 97F82430 		ldrb	r3, [r7, #36]	@ zero_extendqisi2
 5921 03f0 9BB2     		uxth	r3, r3
 5922 03f2 1846     		mov	r0, r3
 5923 03f4 FFF7FEFF 		bl	CyDelayUs
 5924 03f8 0020     		movs	r0, #0
 5925 03fa FFF7FEFF 		bl	GPIO_5_5_Write
 5926 03fe 2BE0     		b	.L541
 5927              	.L549:
2811:.\mem1.c      ****                     			#endif
2812:.\mem1.c      ****                     		break; //0x05
2813:.\mem1.c      ****                     		case 0x06:
2814:.\mem1.c      ****                     			#ifdef CY_PINS_GPIO_5_6_H 
2815:.\mem1.c      ****                     				GPIO_5_6_SetDriveMode(PIN_DM_STRONG); GPIO_5_6_Write(0); CyDelayUs(2); GPIO
 5928              		.loc 1 2815 0
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cc7rr7YM.s 			page 155


 5929 0400 0C20     		movs	r0, #12
 5930 0402 FFF7FEFF 		bl	GPIO_5_6_SetDriveMode
 5931 0406 0020     		movs	r0, #0
 5932 0408 FFF7FEFF 		bl	GPIO_5_6_Write
 5933 040c 0220     		movs	r0, #2
 5934 040e FFF7FEFF 		bl	CyDelayUs
 5935 0412 0120     		movs	r0, #1
 5936 0414 FFF7FEFF 		bl	GPIO_5_6_Write
 5937 0418 97F82430 		ldrb	r3, [r7, #36]	@ zero_extendqisi2
 5938 041c 9BB2     		uxth	r3, r3
 5939 041e 1846     		mov	r0, r3
 5940 0420 FFF7FEFF 		bl	CyDelayUs
 5941 0424 0020     		movs	r0, #0
 5942 0426 FFF7FEFF 		bl	GPIO_5_6_Write
 5943 042a 15E0     		b	.L541
 5944              	.L550:
2816:.\mem1.c      ****                     			#endif
2817:.\mem1.c      ****                     		break; //0x06
2818:.\mem1.c      ****                     		case 0x07:
2819:.\mem1.c      ****                     			#ifdef CY_PINS_GPIO_5_7_H 
2820:.\mem1.c      ****                     				GPIO_5_7_SetDriveMode(PIN_DM_STRONG); GPIO_5_7_Write(0); CyDelayUs(2); GPIO
 5945              		.loc 1 2820 0
 5946 042c 0C20     		movs	r0, #12
 5947 042e FFF7FEFF 		bl	GPIO_5_7_SetDriveMode
 5948 0432 0020     		movs	r0, #0
 5949 0434 FFF7FEFF 		bl	GPIO_5_7_Write
 5950 0438 0220     		movs	r0, #2
 5951 043a FFF7FEFF 		bl	CyDelayUs
 5952 043e 0120     		movs	r0, #1
 5953 0440 FFF7FEFF 		bl	GPIO_5_7_Write
 5954 0444 97F82430 		ldrb	r3, [r7, #36]	@ zero_extendqisi2
 5955 0448 9BB2     		uxth	r3, r3
 5956 044a 1846     		mov	r0, r3
 5957 044c FFF7FEFF 		bl	CyDelayUs
 5958 0450 0020     		movs	r0, #0
 5959 0452 FFF7FEFF 		bl	GPIO_5_7_Write
 5960 0456 00BF     		nop
 5961              	.L541:
2821:.\mem1.c      ****                     			#endif
2822:.\mem1.c      ****                     		break; //0x07
2823:.\mem1.c      ****                     	}
2824:.\mem1.c      ****                     break; //0x05
 5962              		.loc 1 2824 0
 5963 0458 04E1     		b	.L822
 5964              	.L499:
2825:.\mem1.c      ****                     case 0x06:
2826:.\mem1.c      ****                     	switch(trigpin)
 5965              		.loc 1 2826 0
 5966 045a 97F82030 		ldrb	r3, [r7, #32]	@ zero_extendqisi2
 5967 045e 072B     		cmp	r3, #7
 5968 0460 00F20281 		bhi	.L823
 5969 0464 01A2     		adr	r2, .L553
 5970 0466 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 5971 046a 00BF     		.p2align 2
 5972              	.L553:
 5973 046c 8D040000 		.word	.L824+1
 5974 0470 8D040000 		.word	.L824+1
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cc7rr7YM.s 			page 156


 5975 0474 8D040000 		.word	.L824+1
 5976 0478 8D040000 		.word	.L824+1
 5977 047c 8D040000 		.word	.L824+1
 5978 0480 8D040000 		.word	.L824+1
 5979 0484 8D040000 		.word	.L824+1
 5980 0488 8D040000 		.word	.L824+1
 5981              		.p2align 1
 5982              	.L824:
2827:.\mem1.c      ****                     	{
2828:.\mem1.c      ****                     		case 0x00:
2829:.\mem1.c      ****                     			#ifdef CY_PINS_GPIO_6_0_H 
2830:.\mem1.c      ****                     				GPIO_6_0_SetDriveMode(PIN_DM_STRONG); GPIO_6_0_Write(0); CyDelayUs(2); GPIO
2831:.\mem1.c      ****                     			#endif
2832:.\mem1.c      ****                     		break; //0x00
 5983              		.loc 1 2832 0
 5984 048c 00BF     		nop
2833:.\mem1.c      ****                     		case 0x01:
2834:.\mem1.c      ****                     			#ifdef CY_PINS_GPIO_6_1_H 
2835:.\mem1.c      ****                     				GPIO_6_1_SetDriveMode(PIN_DM_STRONG); GPIO_6_1_Write(0); CyDelayUs(2); GPIO
2836:.\mem1.c      ****                     			#endif
2837:.\mem1.c      ****                     		break; //0x01
2838:.\mem1.c      ****                     		case 0x02:
2839:.\mem1.c      ****                     			#ifdef CY_PINS_GPIO_6_2_H 
2840:.\mem1.c      ****                     				GPIO_6_2_SetDriveMode(PIN_DM_STRONG); GPIO_6_2_Write(0); CyDelayUs(2); GPIO
2841:.\mem1.c      ****                     			#endif
2842:.\mem1.c      ****                     		break; //0x02
2843:.\mem1.c      ****                     		case 0x03:
2844:.\mem1.c      ****                     			#ifdef CY_PINS_GPIO_6_3_H 
2845:.\mem1.c      ****                     				GPIO_6_3_SetDriveMode(PIN_DM_STRONG); GPIO_6_3_Write(0); CyDelayUs(2); GPIO
2846:.\mem1.c      ****                     			#endif
2847:.\mem1.c      ****                     		break; //0x03
2848:.\mem1.c      ****                     		case 0x04:
2849:.\mem1.c      ****                     			#ifdef CY_PINS_GPIO_6_4_H 
2850:.\mem1.c      ****                     				GPIO_6_4_SetDriveMode(PIN_DM_STRONG); GPIO_6_4_Write(0); CyDelayUs(2); GPIO
2851:.\mem1.c      ****                     			#endif
2852:.\mem1.c      ****                     		break; //0x04
2853:.\mem1.c      ****                     		case 0x05:
2854:.\mem1.c      ****                     			#ifdef CY_PINS_GPIO_6_5_H 
2855:.\mem1.c      ****                     				GPIO_6_5_SetDriveMode(PIN_DM_STRONG); GPIO_6_5_Write(0); CyDelayUs(2); GPIO
2856:.\mem1.c      ****                     			#endif
2857:.\mem1.c      ****                     		break; //0x05
2858:.\mem1.c      ****                     		case 0x06:
2859:.\mem1.c      ****                     			#ifdef CY_PINS_GPIO_6_6_H 
2860:.\mem1.c      ****                     				GPIO_6_6_SetDriveMode(PIN_DM_STRONG); GPIO_6_6_Write(0); CyDelayUs(2); GPIO
2861:.\mem1.c      ****                     			#endif
2862:.\mem1.c      ****                     		break; //0x06
2863:.\mem1.c      ****                     		case 0x07:
2864:.\mem1.c      ****                     			#ifdef CY_PINS_GPIO_6_7_H 
2865:.\mem1.c      ****                     				GPIO_6_7_SetDriveMode(PIN_DM_STRONG); GPIO_6_7_Write(0); CyDelayUs(2); GPIO
2866:.\mem1.c      ****                     			#endif
2867:.\mem1.c      ****                     		break; //0x07
2868:.\mem1.c      ****                     	}
2869:.\mem1.c      ****                     break; //0x06
 5985              		.loc 1 2869 0
 5986 048e EBE0     		b	.L823
 5987              	.L500:
2870:.\mem1.c      ****                     case 0x0C:
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cc7rr7YM.s 			page 157


2871:.\mem1.c      ****                     	switch(trigpin)
 5988              		.loc 1 2871 0
 5989 0490 97F82030 		ldrb	r3, [r7, #32]	@ zero_extendqisi2
 5990 0494 072B     		cmp	r3, #7
 5991 0496 00F2E980 		bhi	.L825
 5992 049a 01A2     		adr	r2, .L563
 5993 049c 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 5994              		.p2align 2
 5995              	.L563:
 5996 04a0 C1040000 		.word	.L562+1
 5997 04a4 ED040000 		.word	.L564+1
 5998 04a8 19050000 		.word	.L565+1
 5999 04ac 45050000 		.word	.L566+1
 6000 04b0 71050000 		.word	.L567+1
 6001 04b4 9D050000 		.word	.L568+1
 6002 04b8 C9050000 		.word	.L569+1
 6003 04bc F5050000 		.word	.L570+1
 6004              		.p2align 1
 6005              	.L562:
2872:.\mem1.c      ****                     	{
2873:.\mem1.c      ****                     		case 0x00:
2874:.\mem1.c      ****                     			#ifdef CY_PINS_GPIO_12_0_H 
2875:.\mem1.c      ****                     				GPIO_12_0_SetDriveMode(PIN_DM_STRONG); GPIO_12_0_Write(0); CyDelayUs(2); GP
 6006              		.loc 1 2875 0
 6007 04c0 0C20     		movs	r0, #12
 6008 04c2 FFF7FEFF 		bl	GPIO_12_0_SetDriveMode
 6009 04c6 0020     		movs	r0, #0
 6010 04c8 FFF7FEFF 		bl	GPIO_12_0_Write
 6011 04cc 0220     		movs	r0, #2
 6012 04ce FFF7FEFF 		bl	CyDelayUs
 6013 04d2 0120     		movs	r0, #1
 6014 04d4 FFF7FEFF 		bl	GPIO_12_0_Write
 6015 04d8 97F82430 		ldrb	r3, [r7, #36]	@ zero_extendqisi2
 6016 04dc 9BB2     		uxth	r3, r3
 6017 04de 1846     		mov	r0, r3
 6018 04e0 FFF7FEFF 		bl	CyDelayUs
 6019 04e4 0020     		movs	r0, #0
 6020 04e6 FFF7FEFF 		bl	GPIO_12_0_Write
 6021 04ea 99E0     		b	.L561
 6022              	.L564:
2876:.\mem1.c      ****                     			#endif
2877:.\mem1.c      ****                     		break; //0x00
2878:.\mem1.c      ****                     		case 0x01:
2879:.\mem1.c      ****                     			#ifdef CY_PINS_GPIO_12_1_H 
2880:.\mem1.c      ****                     			    GPIO_12_1_SetDriveMode(PIN_DM_STRONG); GPIO_12_1_Write(0); CyDelayUs(2);
 6023              		.loc 1 2880 0
 6024 04ec 0C20     		movs	r0, #12
 6025 04ee FFF7FEFF 		bl	GPIO_12_1_SetDriveMode
 6026 04f2 0020     		movs	r0, #0
 6027 04f4 FFF7FEFF 		bl	GPIO_12_1_Write
 6028 04f8 0220     		movs	r0, #2
 6029 04fa FFF7FEFF 		bl	CyDelayUs
 6030 04fe 0120     		movs	r0, #1
 6031 0500 FFF7FEFF 		bl	GPIO_12_1_Write
 6032 0504 97F82430 		ldrb	r3, [r7, #36]	@ zero_extendqisi2
 6033 0508 9BB2     		uxth	r3, r3
 6034 050a 1846     		mov	r0, r3
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cc7rr7YM.s 			page 158


 6035 050c FFF7FEFF 		bl	CyDelayUs
 6036 0510 0020     		movs	r0, #0
 6037 0512 FFF7FEFF 		bl	GPIO_12_1_Write
 6038 0516 83E0     		b	.L561
 6039              	.L565:
2881:.\mem1.c      ****                     			#endif
2882:.\mem1.c      ****                     		break; //0x01
2883:.\mem1.c      ****                     		case 0x02:
2884:.\mem1.c      ****                     			#ifdef CY_PINS_GPIO_12_2_H 
2885:.\mem1.c      ****                     				GPIO_12_2_SetDriveMode(PIN_DM_STRONG); GPIO_12_2_Write(0); CyDelayUs(2); GP
 6040              		.loc 1 2885 0
 6041 0518 0C20     		movs	r0, #12
 6042 051a FFF7FEFF 		bl	GPIO_12_2_SetDriveMode
 6043 051e 0020     		movs	r0, #0
 6044 0520 FFF7FEFF 		bl	GPIO_12_2_Write
 6045 0524 0220     		movs	r0, #2
 6046 0526 FFF7FEFF 		bl	CyDelayUs
 6047 052a 0120     		movs	r0, #1
 6048 052c FFF7FEFF 		bl	GPIO_12_2_Write
 6049 0530 97F82430 		ldrb	r3, [r7, #36]	@ zero_extendqisi2
 6050 0534 9BB2     		uxth	r3, r3
 6051 0536 1846     		mov	r0, r3
 6052 0538 FFF7FEFF 		bl	CyDelayUs
 6053 053c 0020     		movs	r0, #0
 6054 053e FFF7FEFF 		bl	GPIO_12_2_Write
 6055 0542 6DE0     		b	.L561
 6056              	.L566:
2886:.\mem1.c      ****                     			#endif
2887:.\mem1.c      ****                     		break; //0x02
2888:.\mem1.c      ****                     		case 0x03:
2889:.\mem1.c      ****                     			#ifdef CY_PINS_GPIO_12_3_H 
2890:.\mem1.c      ****                     				GPIO_12_3_SetDriveMode(PIN_DM_STRONG); GPIO_12_3_Write(0); CyDelayUs(2); GP
 6057              		.loc 1 2890 0
 6058 0544 0C20     		movs	r0, #12
 6059 0546 FFF7FEFF 		bl	GPIO_12_3_SetDriveMode
 6060 054a 0020     		movs	r0, #0
 6061 054c FFF7FEFF 		bl	GPIO_12_3_Write
 6062 0550 0220     		movs	r0, #2
 6063 0552 FFF7FEFF 		bl	CyDelayUs
 6064 0556 0120     		movs	r0, #1
 6065 0558 FFF7FEFF 		bl	GPIO_12_3_Write
 6066 055c 97F82430 		ldrb	r3, [r7, #36]	@ zero_extendqisi2
 6067 0560 9BB2     		uxth	r3, r3
 6068 0562 1846     		mov	r0, r3
 6069 0564 FFF7FEFF 		bl	CyDelayUs
 6070 0568 0020     		movs	r0, #0
 6071 056a FFF7FEFF 		bl	GPIO_12_3_Write
 6072 056e 57E0     		b	.L561
 6073              	.L567:
2891:.\mem1.c      ****                     			#endif
2892:.\mem1.c      ****                     		break; //0x03
2893:.\mem1.c      ****                     		case 0x04:
2894:.\mem1.c      ****                     			#ifdef CY_PINS_GPIO_12_4_H 
2895:.\mem1.c      ****                     				GPIO_12_4_SetDriveMode(PIN_DM_STRONG); GPIO_12_4_Write(0); CyDelayUs(2); GP
 6074              		.loc 1 2895 0
 6075 0570 0C20     		movs	r0, #12
 6076 0572 FFF7FEFF 		bl	GPIO_12_4_SetDriveMode
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cc7rr7YM.s 			page 159


 6077 0576 0020     		movs	r0, #0
 6078 0578 FFF7FEFF 		bl	GPIO_12_4_Write
 6079 057c 0220     		movs	r0, #2
 6080 057e FFF7FEFF 		bl	CyDelayUs
 6081 0582 0120     		movs	r0, #1
 6082 0584 FFF7FEFF 		bl	GPIO_12_4_Write
 6083 0588 97F82430 		ldrb	r3, [r7, #36]	@ zero_extendqisi2
 6084 058c 9BB2     		uxth	r3, r3
 6085 058e 1846     		mov	r0, r3
 6086 0590 FFF7FEFF 		bl	CyDelayUs
 6087 0594 0020     		movs	r0, #0
 6088 0596 FFF7FEFF 		bl	GPIO_12_4_Write
 6089 059a 41E0     		b	.L561
 6090              	.L568:
2896:.\mem1.c      ****                     			#endif
2897:.\mem1.c      ****                     		break; //0x04
2898:.\mem1.c      ****                     		case 0x05:
2899:.\mem1.c      ****                     			#ifdef CY_PINS_GPIO_12_5_H 
2900:.\mem1.c      ****                     				GPIO_12_5_SetDriveMode(PIN_DM_STRONG); GPIO_12_5_Write(0); CyDelayUs(2); GP
 6091              		.loc 1 2900 0
 6092 059c 0C20     		movs	r0, #12
 6093 059e FFF7FEFF 		bl	GPIO_12_5_SetDriveMode
 6094 05a2 0020     		movs	r0, #0
 6095 05a4 FFF7FEFF 		bl	GPIO_12_5_Write
 6096 05a8 0220     		movs	r0, #2
 6097 05aa FFF7FEFF 		bl	CyDelayUs
 6098 05ae 0120     		movs	r0, #1
 6099 05b0 FFF7FEFF 		bl	GPIO_12_5_Write
 6100 05b4 97F82430 		ldrb	r3, [r7, #36]	@ zero_extendqisi2
 6101 05b8 9BB2     		uxth	r3, r3
 6102 05ba 1846     		mov	r0, r3
 6103 05bc FFF7FEFF 		bl	CyDelayUs
 6104 05c0 0020     		movs	r0, #0
 6105 05c2 FFF7FEFF 		bl	GPIO_12_5_Write
 6106 05c6 2BE0     		b	.L561
 6107              	.L569:
2901:.\mem1.c      ****                     			#endif
2902:.\mem1.c      ****                     		break; //0x05
2903:.\mem1.c      ****                     		case 0x06:
2904:.\mem1.c      ****                     			#ifdef CY_PINS_GPIO_12_6_H 
2905:.\mem1.c      ****                     				GPIO_12_6_SetDriveMode(PIN_DM_STRONG); GPIO_12_6_Write(0); CyDelayUs(2); GP
 6108              		.loc 1 2905 0
 6109 05c8 0C20     		movs	r0, #12
 6110 05ca FFF7FEFF 		bl	GPIO_12_6_SetDriveMode
 6111 05ce 0020     		movs	r0, #0
 6112 05d0 FFF7FEFF 		bl	GPIO_12_6_Write
 6113 05d4 0220     		movs	r0, #2
 6114 05d6 FFF7FEFF 		bl	CyDelayUs
 6115 05da 0120     		movs	r0, #1
 6116 05dc FFF7FEFF 		bl	GPIO_12_6_Write
 6117 05e0 97F82430 		ldrb	r3, [r7, #36]	@ zero_extendqisi2
 6118 05e4 9BB2     		uxth	r3, r3
 6119 05e6 1846     		mov	r0, r3
 6120 05e8 FFF7FEFF 		bl	CyDelayUs
 6121 05ec 0020     		movs	r0, #0
 6122 05ee FFF7FEFF 		bl	GPIO_12_6_Write
 6123 05f2 15E0     		b	.L561
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cc7rr7YM.s 			page 160


 6124              	.L570:
2906:.\mem1.c      ****                     			#endif
2907:.\mem1.c      ****                     		break; //0x06
2908:.\mem1.c      ****                     		case 0x07:
2909:.\mem1.c      ****                     			#ifdef CY_PINS_GPIO_12_7_H 
2910:.\mem1.c      ****                     				GPIO_12_7_SetDriveMode(PIN_DM_STRONG); GPIO_12_7_Write(0); CyDelayUs(2); GP
 6125              		.loc 1 2910 0
 6126 05f4 0C20     		movs	r0, #12
 6127 05f6 FFF7FEFF 		bl	GPIO_12_7_SetDriveMode
 6128 05fa 0020     		movs	r0, #0
 6129 05fc FFF7FEFF 		bl	GPIO_12_7_Write
 6130 0600 0220     		movs	r0, #2
 6131 0602 FFF7FEFF 		bl	CyDelayUs
 6132 0606 0120     		movs	r0, #1
 6133 0608 FFF7FEFF 		bl	GPIO_12_7_Write
 6134 060c 97F82430 		ldrb	r3, [r7, #36]	@ zero_extendqisi2
 6135 0610 9BB2     		uxth	r3, r3
 6136 0612 1846     		mov	r0, r3
 6137 0614 FFF7FEFF 		bl	CyDelayUs
 6138 0618 0020     		movs	r0, #0
 6139 061a FFF7FEFF 		bl	GPIO_12_7_Write
 6140 061e 00BF     		nop
 6141              	.L561:
2911:.\mem1.c      ****                     			#endif
2912:.\mem1.c      ****                     		break; //0x07
2913:.\mem1.c      ****                     	}
2914:.\mem1.c      ****                     break; //0x0C
 6142              		.loc 1 2914 0
 6143 0620 24E0     		b	.L825
 6144              	.L501:
2915:.\mem1.c      ****                     case 0x0F:
2916:.\mem1.c      ****                     	switch(trigpin)
 6145              		.loc 1 2916 0
 6146 0622 97F82030 		ldrb	r3, [r7, #32]	@ zero_extendqisi2
 6147 0626 072B     		cmp	r3, #7
 6148 0628 22D8     		bhi	.L826
 6149 062a 01A2     		adr	r2, .L573
 6150 062c 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 6151              		.p2align 2
 6152              	.L573:
 6153 0630 51060000 		.word	.L827+1
 6154 0634 51060000 		.word	.L827+1
 6155 0638 51060000 		.word	.L827+1
 6156 063c 51060000 		.word	.L827+1
 6157 0640 51060000 		.word	.L827+1
 6158 0644 51060000 		.word	.L827+1
 6159 0648 51060000 		.word	.L827+1
 6160 064c 51060000 		.word	.L827+1
 6161              		.p2align 1
 6162              	.L827:
2917:.\mem1.c      ****                     	{
2918:.\mem1.c      ****                     		case 0x00:
2919:.\mem1.c      ****                     			#ifdef CY_PINS_GPIO_15_0_H 
2920:.\mem1.c      ****                     				GPIO_15_0_SetDriveMode(PIN_DM_STRONG); GPIO_15_0_Write(0); CyDelayUs(2); GP
2921:.\mem1.c      ****                     			#endif
2922:.\mem1.c      ****                     		break; //0x00
 6163              		.loc 1 2922 0
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cc7rr7YM.s 			page 161


 6164 0650 00BF     		nop
2923:.\mem1.c      ****                     		case 0x01:
2924:.\mem1.c      ****                     			#ifdef CY_PINS_GPIO_15_1_H 
2925:.\mem1.c      ****                     				GPIO_15_1_SetDriveMode(PIN_DM_STRONG); GPIO_15_1_Write(0); CyDelayUs(2); GP
2926:.\mem1.c      ****                     			#endif
2927:.\mem1.c      ****                     		break; //0x01
2928:.\mem1.c      ****                     		case 0x02:
2929:.\mem1.c      ****                     			#ifdef CY_PINS_GPIO_15_2_H 
2930:.\mem1.c      ****                     				GPIO_15_2_SetDriveMode(PIN_DM_STRONG); GPIO_15_2_Write(0); CyDelayUs(2); GP
2931:.\mem1.c      ****                     			#endif
2932:.\mem1.c      ****                     		break; //0x02
2933:.\mem1.c      ****                     		case 0x03:
2934:.\mem1.c      ****                     			#ifdef CY_PINS_GPIO_15_3_H 
2935:.\mem1.c      ****                     				GPIO_15_3_SetDriveMode(PIN_DM_STRONG); GPIO_15_3_Write(0); CyDelayUs(2); GP
2936:.\mem1.c      ****                     			#endif
2937:.\mem1.c      ****                     		break; //0x03
2938:.\mem1.c      ****                     		case 0x04:
2939:.\mem1.c      ****                     			#ifdef CY_PINS_GPIO_15_4_H 
2940:.\mem1.c      ****                     				GPIO_15_4_SetDriveMode(PIN_DM_STRONG); GPIO_15_4_Write(0); CyDelayUs(2); GP
2941:.\mem1.c      ****                     			#endif
2942:.\mem1.c      ****                     		break; //0x04
2943:.\mem1.c      ****                     		case 0x05:
2944:.\mem1.c      ****                     			#ifdef CY_PINS_GPIO_15_5_H 
2945:.\mem1.c      ****                     				GPIO_15_5_SetDriveMode(PIN_DM_STRONG); GPIO_15_5_Write(0); CyDelayUs(2); GP
2946:.\mem1.c      ****                     			#endif
2947:.\mem1.c      ****                     		break; //0x05
2948:.\mem1.c      ****                     		case 0x06:
2949:.\mem1.c      ****                     			#ifdef CY_PINS_GPIO_15_6_H 
2950:.\mem1.c      ****                     				GPIO_15_6_SetDriveMode(PIN_DM_STRONG); GPIO_15_6_Write(0); CyDelayUs(2); GP
2951:.\mem1.c      ****                     			#endif
2952:.\mem1.c      ****                     		break; //0x06
2953:.\mem1.c      ****                     		case 0x07:
2954:.\mem1.c      ****                     			#ifdef CY_PINS_GPIO_15_7_H 
2955:.\mem1.c      ****                     				GPIO_15_7_SetDriveMode(PIN_DM_STRONG); GPIO_15_7_Write(0); CyDelayUs(2); GP
2956:.\mem1.c      ****                     			#endif
2957:.\mem1.c      ****                     		break; //0x07
2958:.\mem1.c      ****                     	}
2959:.\mem1.c      ****                     break; //0x0F
 6165              		.loc 1 2959 0
 6166 0652 0DE0     		b	.L826
 6167              	.L815:
2649:.\mem1.c      ****                     case 0x02:
 6168              		.loc 1 2649 0
 6169 0654 00BF     		nop
 6170 0656 0CE0     		b	.L492
 6171              	.L817:
2694:.\mem1.c      ****                     case 0x03:
 6172              		.loc 1 2694 0
 6173 0658 00BF     		nop
 6174 065a 0AE0     		b	.L492
 6175              	.L818:
2739:.\mem1.c      ****                     case 0x04:
 6176              		.loc 1 2739 0
 6177 065c 00BF     		nop
 6178 065e 08E0     		b	.L492
 6179              	.L820:
2779:.\mem1.c      ****                     case 0x05:
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cc7rr7YM.s 			page 162


 6180              		.loc 1 2779 0
 6181 0660 00BF     		nop
 6182 0662 06E0     		b	.L492
 6183              	.L822:
2824:.\mem1.c      ****                     case 0x06:
 6184              		.loc 1 2824 0
 6185 0664 00BF     		nop
 6186 0666 04E0     		b	.L492
 6187              	.L823:
2869:.\mem1.c      ****                     case 0x0C:
 6188              		.loc 1 2869 0
 6189 0668 00BF     		nop
 6190 066a 02E0     		b	.L492
 6191              	.L825:
2914:.\mem1.c      ****                     case 0x0F:
 6192              		.loc 1 2914 0
 6193 066c 00BF     		nop
 6194 066e 00E0     		b	.L492
 6195              	.L826:
 6196              		.loc 1 2959 0
 6197 0670 00BF     		nop
 6198              	.L492:
2960:.\mem1.c      ****                     }
2961:.\mem1.c      ****                     
2962:.\mem1.c      ****                     switch(port)
 6199              		.loc 1 2962 0
 6200 0672 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 6201 0674 0F2B     		cmp	r3, #15
 6202 0676 00F2A486 		bhi	.L828
 6203 067a 01A2     		adr	r2, .L583
 6204 067c 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 6205              		.p2align 2
 6206              	.L583:
 6207 0680 C1060000 		.word	.L582+1
 6208 0684 C3130000 		.word	.L828+1
 6209 0688 F7060000 		.word	.L584+1
 6210 068c E50A0000 		.word	.L585+1
 6211 0690 1B0B0000 		.word	.L586+1
 6212 0694 4B0B0000 		.word	.L587+1
 6213 0698 330F0000 		.word	.L588+1
 6214 069c C3130000 		.word	.L828+1
 6215 06a0 C3130000 		.word	.L828+1
 6216 06a4 C3130000 		.word	.L828+1
 6217 06a8 C3130000 		.word	.L828+1
 6218 06ac C3130000 		.word	.L828+1
 6219 06b0 650F0000 		.word	.L589+1
 6220 06b4 C3130000 		.word	.L828+1
 6221 06b8 C3130000 		.word	.L828+1
 6222 06bc 4F130000 		.word	.L590+1
 6223              		.p2align 1
 6224              	.L582:
2963:.\mem1.c      ****                     {
2964:.\mem1.c      ****                             case 0x00:
2965:.\mem1.c      ****                             	switch(pin)
 6225              		.loc 1 2965 0
 6226 06c0 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 6227 06c2 072B     		cmp	r3, #7
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cc7rr7YM.s 			page 163


 6228 06c4 00F25C86 		bhi	.L829
 6229 06c8 01A2     		adr	r2, .L593
 6230 06ca 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 6231 06ce 00BF     		.p2align 2
 6232              	.L593:
 6233 06d0 F1060000 		.word	.L830+1
 6234 06d4 F1060000 		.word	.L830+1
 6235 06d8 F1060000 		.word	.L830+1
 6236 06dc F1060000 		.word	.L830+1
 6237 06e0 F1060000 		.word	.L830+1
 6238 06e4 F1060000 		.word	.L830+1
 6239 06e8 F1060000 		.word	.L830+1
 6240 06ec F1060000 		.word	.L830+1
 6241              		.p2align 1
 6242              	.L830:
2966:.\mem1.c      ****                             	{
2967:.\mem1.c      ****                             		case 0x00:
2968:.\mem1.c      ****                             			#ifdef CY_PINS_GPIO_0_0_H 
2969:.\mem1.c      ****                             				TIMER_REG_Write(0);
2970:.\mem1.c      ****                             				GPIO_0_0_SetDriveMode(PIN_DM_DIG_HIZ);
2971:.\mem1.c      ****                             				while (!(Timer_ReadStatusRegister()&Timer_STATUS_TC)){
2972:.\mem1.c      ****                             				if(*(reg8 *)(CYREG_PRT0_PC0)&CY_PINS_PC_PIN_STATE){break;}
2973:.\mem1.c      ****                             				}
2974:.\mem1.c      ****                             				TIMER_REG_Write(1); CyDelayUs(1); TIMER_REG_Write(0);
2975:.\mem1.c      ****                             				while (!(Timer_ReadStatusRegister()&Timer_STATUS_TC)){
2976:.\mem1.c      ****                             				if (!(*(reg8 *)(CYREG_PRT0_PC0)&CY_PINS_PC_PIN_STATE)){us_count = T
2977:.\mem1.c      ****                             				}
2978:.\mem1.c      ****                             			#endif
2979:.\mem1.c      ****                             		break; //0x00
 6243              		.loc 1 2979 0
 6244 06f0 00BF     		nop
2980:.\mem1.c      ****                             		case 0x01:
2981:.\mem1.c      ****                             			#ifdef CY_PINS_GPIO_0_1_H 
2982:.\mem1.c      ****                             				TIMER_REG_Write(0);
2983:.\mem1.c      ****                             				GPIO_0_1_SetDriveMode(PIN_DM_DIG_HIZ);
2984:.\mem1.c      ****                             				while (!(Timer_ReadStatusRegister()&Timer_STATUS_TC)){
2985:.\mem1.c      ****                             				if(*(reg8 *)(CYREG_PRT0_PC1)&CY_PINS_PC_PIN_STATE){break;}
2986:.\mem1.c      ****                             				}
2987:.\mem1.c      ****                             				TIMER_REG_Write(1); CyDelayUs(1); TIMER_REG_Write(0);
2988:.\mem1.c      ****                             				while (!(Timer_ReadStatusRegister()&Timer_STATUS_TC)){
2989:.\mem1.c      ****                             				if (!(*(reg8 *)(CYREG_PRT0_PC1)&CY_PINS_PC_PIN_STATE)){us_count = T
2990:.\mem1.c      ****                             				}
2991:.\mem1.c      ****                             			#endif
2992:.\mem1.c      ****                             		break; //0x01
2993:.\mem1.c      ****                             		case 0x02:
2994:.\mem1.c      ****                             			#ifdef CY_PINS_GPIO_0_2_H 
2995:.\mem1.c      ****                             				TIMER_REG_Write(0);
2996:.\mem1.c      ****                             				GPIO_0_2_SetDriveMode(PIN_DM_DIG_HIZ);
2997:.\mem1.c      ****                             				while (!(Timer_ReadStatusRegister()&Timer_STATUS_TC)){
2998:.\mem1.c      ****                             				if(*(reg8 *)(CYREG_PRT0_PC2)&CY_PINS_PC_PIN_STATE){break;}
2999:.\mem1.c      ****                             				}
3000:.\mem1.c      ****                             				TIMER_REG_Write(1); CyDelayUs(1); TIMER_REG_Write(0);
3001:.\mem1.c      ****                             				while (!(Timer_ReadStatusRegister()&Timer_STATUS_TC)){
3002:.\mem1.c      ****                             				if (!(*(reg8 *)(CYREG_PRT0_PC2)&CY_PINS_PC_PIN_STATE)){us_count = T
3003:.\mem1.c      ****                             				}
3004:.\mem1.c      ****                             			#endif
3005:.\mem1.c      ****                             		break; //0x02
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cc7rr7YM.s 			page 164


3006:.\mem1.c      ****                             		case 0x03:
3007:.\mem1.c      ****                             			#ifdef CY_PINS_GPIO_0_3_H 
3008:.\mem1.c      ****                             				TIMER_REG_Write(0);
3009:.\mem1.c      ****                             				GPIO_0_3_SetDriveMode(PIN_DM_DIG_HIZ);
3010:.\mem1.c      ****                             				while (!(Timer_ReadStatusRegister()&Timer_STATUS_TC)){
3011:.\mem1.c      ****                             				if(*(reg8 *)(CYREG_PRT0_PC3)&CY_PINS_PC_PIN_STATE){break;}
3012:.\mem1.c      ****                             				}
3013:.\mem1.c      ****                             				TIMER_REG_Write(1); CyDelayUs(1); TIMER_REG_Write(0);
3014:.\mem1.c      ****                             				while (!(Timer_ReadStatusRegister()&Timer_STATUS_TC)){
3015:.\mem1.c      ****                             				if (!(*(reg8 *)(CYREG_PRT0_PC3)&CY_PINS_PC_PIN_STATE)){us_count = T
3016:.\mem1.c      ****                             				}
3017:.\mem1.c      ****                             			#endif
3018:.\mem1.c      ****                             		break; //0x03
3019:.\mem1.c      ****                             		case 0x04:
3020:.\mem1.c      ****                             			#ifdef CY_PINS_GPIO_0_4_H 
3021:.\mem1.c      ****                             				TIMER_REG_Write(0);
3022:.\mem1.c      ****                             				GPIO_0_4_SetDriveMode(PIN_DM_DIG_HIZ);
3023:.\mem1.c      ****                             				while (!(Timer_ReadStatusRegister()&Timer_STATUS_TC)){
3024:.\mem1.c      ****                             				if(*(reg8 *)(CYREG_PRT0_PC4)&CY_PINS_PC_PIN_STATE){break;}
3025:.\mem1.c      ****                             				}
3026:.\mem1.c      ****                             				TIMER_REG_Write(1); CyDelayUs(1); TIMER_REG_Write(0);
3027:.\mem1.c      ****                             				while (!(Timer_ReadStatusRegister()&Timer_STATUS_TC)){
3028:.\mem1.c      ****                             				if (!(*(reg8 *)(CYREG_PRT0_PC4)&CY_PINS_PC_PIN_STATE)){us_count = T
3029:.\mem1.c      ****                             				}
3030:.\mem1.c      ****                             			#endif
3031:.\mem1.c      ****                             		break; //0x04
3032:.\mem1.c      ****                             		case 0x05:
3033:.\mem1.c      ****                             			#ifdef CY_PINS_GPIO_0_5_H 
3034:.\mem1.c      ****                             				TIMER_REG_Write(0);
3035:.\mem1.c      ****                             				GPIO_0_5_SetDriveMode(PIN_DM_DIG_HIZ);
3036:.\mem1.c      ****                             				while (!(Timer_ReadStatusRegister()&Timer_STATUS_TC)){
3037:.\mem1.c      ****                             				if(*(reg8 *)(CYREG_PRT0_PC5)&CY_PINS_PC_PIN_STATE){break;}
3038:.\mem1.c      ****                             				}
3039:.\mem1.c      ****                             				TIMER_REG_Write(1); CyDelayUs(1); TIMER_REG_Write(0);
3040:.\mem1.c      ****                             				while (!(Timer_ReadStatusRegister()&Timer_STATUS_TC)){
3041:.\mem1.c      ****                             				if (!(*(reg8 *)(CYREG_PRT0_PC5)&CY_PINS_PC_PIN_STATE)){us_count = T
3042:.\mem1.c      ****                             				}
3043:.\mem1.c      ****                             			#endif
3044:.\mem1.c      ****                             		break; //0x05
3045:.\mem1.c      ****                             		case 0x06:
3046:.\mem1.c      ****                             			#ifdef CY_PINS_GPIO_0_6_H 
3047:.\mem1.c      ****                             				TIMER_REG_Write(0);
3048:.\mem1.c      ****                             				GPIO_0_6_SetDriveMode(PIN_DM_DIG_HIZ);
3049:.\mem1.c      ****                             				while (!(Timer_ReadStatusRegister()&Timer_STATUS_TC)){
3050:.\mem1.c      ****                             				if(*(reg8 *)(CYREG_PRT0_PC6)&CY_PINS_PC_PIN_STATE){break;}
3051:.\mem1.c      ****                             				}
3052:.\mem1.c      ****                             				TIMER_REG_Write(1); CyDelayUs(1); TIMER_REG_Write(0);
3053:.\mem1.c      ****                             				while (!(Timer_ReadStatusRegister()&Timer_STATUS_TC)){
3054:.\mem1.c      ****                             				if (!(*(reg8 *)(CYREG_PRT0_PC6)&CY_PINS_PC_PIN_STATE)){us_count = T
3055:.\mem1.c      ****                             				}
3056:.\mem1.c      ****                             			#endif
3057:.\mem1.c      ****                             		break; //0x06
3058:.\mem1.c      ****                             		case 0x07:
3059:.\mem1.c      ****                             			#ifdef CY_PINS_GPIO_0_7_H 
3060:.\mem1.c      ****                             				TIMER_REG_Write(0);
3061:.\mem1.c      ****                             				GPIO_0_7_SetDriveMode(PIN_DM_DIG_HIZ);
3062:.\mem1.c      ****                             				while (!(Timer_ReadStatusRegister()&Timer_STATUS_TC)){
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cc7rr7YM.s 			page 165


3063:.\mem1.c      ****                             				if(*(reg8 *)(CYREG_PRT0_PC7)&CY_PINS_PC_PIN_STATE){break;}
3064:.\mem1.c      ****                             				}
3065:.\mem1.c      ****                             				TIMER_REG_Write(1); CyDelayUs(1); TIMER_REG_Write(0);
3066:.\mem1.c      ****                             				while (!(Timer_ReadStatusRegister()&Timer_STATUS_TC)){
3067:.\mem1.c      ****                             				if (!(*(reg8 *)(CYREG_PRT0_PC7)&CY_PINS_PC_PIN_STATE)){us_count = T
3068:.\mem1.c      ****                             				}
3069:.\mem1.c      ****                             			#endif
3070:.\mem1.c      ****                             		break; //0x07
3071:.\mem1.c      ****                             	}
3072:.\mem1.c      ****                             break; //0x00
 6245              		.loc 1 3072 0
 6246 06f2 00F045BE 		b	.L829
 6247              	.L584:
3073:.\mem1.c      ****                             case 0x02:
3074:.\mem1.c      ****                             	switch(pin)
 6248              		.loc 1 3074 0
 6249 06f6 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 6250 06f8 072B     		cmp	r3, #7
 6251 06fa 00F24386 		bhi	.L831
 6252 06fe 01A2     		adr	r2, .L603
 6253 0700 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 6254              		.p2align 2
 6255              	.L603:
 6256 0704 25070000 		.word	.L602+1
 6257 0708 99070000 		.word	.L604+1
 6258 070c 0D080000 		.word	.L605+1
 6259 0710 81080000 		.word	.L606+1
 6260 0714 F5080000 		.word	.L607+1
 6261 0718 69090000 		.word	.L608+1
 6262 071c DD090000 		.word	.L609+1
 6263 0720 6D0A0000 		.word	.L610+1
 6264              		.p2align 1
 6265              	.L602:
3075:.\mem1.c      ****                             	{
3076:.\mem1.c      ****                             		case 0x00:
3077:.\mem1.c      ****                             			#ifdef CY_PINS_GPIO_2_0_H 
3078:.\mem1.c      ****                             				TIMER_REG_Write(0);
 6266              		.loc 1 3078 0
 6267 0724 0020     		movs	r0, #0
 6268 0726 FFF7FEFF 		bl	TIMER_REG_Write
3079:.\mem1.c      ****                             				GPIO_2_0_SetDriveMode(PIN_DM_DIG_HIZ);
 6269              		.loc 1 3079 0
 6270 072a 0220     		movs	r0, #2
 6271 072c FFF7FEFF 		bl	GPIO_2_0_SetDriveMode
3080:.\mem1.c      ****                             				while (!(Timer_ReadStatusRegister()&Timer_STATUS_TC)){
 6272              		.loc 1 3080 0
 6273 0730 07E0     		b	.L611
 6274              	.L613:
3081:.\mem1.c      ****                             				if(*(reg8 *)(CYREG_PRT2_PC0)&CY_PINS_PC_PIN_STATE){break;}
 6275              		.loc 1 3081 0
 6276 0732 BA4B     		ldr	r3, .L842
 6277 0734 1B78     		ldrb	r3, [r3]
 6278 0736 DBB2     		uxtb	r3, r3
 6279 0738 03F01003 		and	r3, r3, #16
 6280 073c 002B     		cmp	r3, #0
 6281 073e 00D0     		beq	.L611
 6282 0740 06E0     		b	.L612
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cc7rr7YM.s 			page 166


 6283              	.L611:
3080:.\mem1.c      ****                             				while (!(Timer_ReadStatusRegister()&Timer_STATUS_TC)){
 6284              		.loc 1 3080 0
 6285 0742 FFF7FEFF 		bl	Timer_ReadStatusRegister
 6286 0746 0346     		mov	r3, r0
 6287 0748 DBB2     		uxtb	r3, r3
 6288 074a 5BB2     		sxtb	r3, r3
 6289 074c 002B     		cmp	r3, #0
 6290 074e F0DA     		bge	.L613
 6291              	.L612:
3082:.\mem1.c      ****                             				}
3083:.\mem1.c      ****                             				TIMER_REG_Write(1); CyDelayUs(1); TIMER_REG_Write(0);
 6292              		.loc 1 3083 0
 6293 0750 0120     		movs	r0, #1
 6294 0752 FFF7FEFF 		bl	TIMER_REG_Write
 6295 0756 0120     		movs	r0, #1
 6296 0758 FFF7FEFF 		bl	CyDelayUs
 6297 075c 0020     		movs	r0, #0
 6298 075e FFF7FEFF 		bl	TIMER_REG_Write
3084:.\mem1.c      ****                             				while (!(Timer_ReadStatusRegister()&Timer_STATUS_TC)){
 6299              		.loc 1 3084 0
 6300 0762 11E0     		b	.L614
 6301              	.L616:
3085:.\mem1.c      ****                             				if (!(*(reg8 *)(CYREG_PRT2_PC0)&CY_PINS_PC_PIN_STATE)){us_count = T
 6302              		.loc 1 3085 0
 6303 0764 AD4B     		ldr	r3, .L842
 6304 0766 1B78     		ldrb	r3, [r3]
 6305 0768 DBB2     		uxtb	r3, r3
 6306 076a 03F01003 		and	r3, r3, #16
 6307 076e 002B     		cmp	r3, #0
 6308 0770 0AD1     		bne	.L614
 6309              		.loc 1 3085 0 is_stmt 0 discriminator 1
 6310 0772 FFF7FEFF 		bl	Timer_ReadPeriod
 6311 0776 0346     		mov	r3, r0
 6312 0778 1C46     		mov	r4, r3
 6313 077a FFF7FEFF 		bl	Timer_ReadCounter
 6314 077e 0346     		mov	r3, r0
 6315 0780 E31A     		subs	r3, r4, r3
 6316 0782 0233     		adds	r3, r3, #2
 6317 0784 FB60     		str	r3, [r7, #12]
 6318 0786 06E0     		b	.L615
 6319              	.L614:
3084:.\mem1.c      ****                             				while (!(Timer_ReadStatusRegister()&Timer_STATUS_TC)){
 6320              		.loc 1 3084 0 is_stmt 1
 6321 0788 FFF7FEFF 		bl	Timer_ReadStatusRegister
 6322 078c 0346     		mov	r3, r0
 6323 078e DBB2     		uxtb	r3, r3
 6324 0790 5BB2     		sxtb	r3, r3
 6325 0792 002B     		cmp	r3, #0
 6326 0794 E6DA     		bge	.L616
 6327              	.L615:
3086:.\mem1.c      ****                             				}
3087:.\mem1.c      ****                             			#endif
3088:.\mem1.c      ****                             		break; //0x00
 6328              		.loc 1 3088 0
 6329 0796 A3E1     		b	.L601
 6330              	.L604:
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cc7rr7YM.s 			page 167


3089:.\mem1.c      ****                             		case 0x01:
3090:.\mem1.c      ****                             			#ifdef CY_PINS_GPIO_2_1_H 
3091:.\mem1.c      ****                             				TIMER_REG_Write(0);
 6331              		.loc 1 3091 0
 6332 0798 0020     		movs	r0, #0
 6333 079a FFF7FEFF 		bl	TIMER_REG_Write
3092:.\mem1.c      ****                             				GPIO_2_1_SetDriveMode(PIN_DM_DIG_HIZ);
 6334              		.loc 1 3092 0
 6335 079e 0220     		movs	r0, #2
 6336 07a0 FFF7FEFF 		bl	GPIO_2_1_SetDriveMode
3093:.\mem1.c      ****                             				while (!(Timer_ReadStatusRegister()&Timer_STATUS_TC)){
 6337              		.loc 1 3093 0
 6338 07a4 07E0     		b	.L617
 6339              	.L619:
3094:.\mem1.c      ****                             				if(*(reg8 *)(CYREG_PRT2_PC1)&CY_PINS_PC_PIN_STATE){break;}
 6340              		.loc 1 3094 0
 6341 07a6 9E4B     		ldr	r3, .L842+4
 6342 07a8 1B78     		ldrb	r3, [r3]
 6343 07aa DBB2     		uxtb	r3, r3
 6344 07ac 03F01003 		and	r3, r3, #16
 6345 07b0 002B     		cmp	r3, #0
 6346 07b2 00D0     		beq	.L617
 6347 07b4 06E0     		b	.L618
 6348              	.L617:
3093:.\mem1.c      ****                             				while (!(Timer_ReadStatusRegister()&Timer_STATUS_TC)){
 6349              		.loc 1 3093 0
 6350 07b6 FFF7FEFF 		bl	Timer_ReadStatusRegister
 6351 07ba 0346     		mov	r3, r0
 6352 07bc DBB2     		uxtb	r3, r3
 6353 07be 5BB2     		sxtb	r3, r3
 6354 07c0 002B     		cmp	r3, #0
 6355 07c2 F0DA     		bge	.L619
 6356              	.L618:
3095:.\mem1.c      ****                             				}
3096:.\mem1.c      ****                             				TIMER_REG_Write(1); CyDelayUs(1); TIMER_REG_Write(0);
 6357              		.loc 1 3096 0
 6358 07c4 0120     		movs	r0, #1
 6359 07c6 FFF7FEFF 		bl	TIMER_REG_Write
 6360 07ca 0120     		movs	r0, #1
 6361 07cc FFF7FEFF 		bl	CyDelayUs
 6362 07d0 0020     		movs	r0, #0
 6363 07d2 FFF7FEFF 		bl	TIMER_REG_Write
3097:.\mem1.c      ****                             				while (!(Timer_ReadStatusRegister()&Timer_STATUS_TC)){
 6364              		.loc 1 3097 0
 6365 07d6 11E0     		b	.L620
 6366              	.L622:
3098:.\mem1.c      ****                             				if (!(*(reg8 *)(CYREG_PRT2_PC1)&CY_PINS_PC_PIN_STATE)){us_count = T
 6367              		.loc 1 3098 0
 6368 07d8 914B     		ldr	r3, .L842+4
 6369 07da 1B78     		ldrb	r3, [r3]
 6370 07dc DBB2     		uxtb	r3, r3
 6371 07de 03F01003 		and	r3, r3, #16
 6372 07e2 002B     		cmp	r3, #0
 6373 07e4 0AD1     		bne	.L620
 6374              		.loc 1 3098 0 is_stmt 0 discriminator 1
 6375 07e6 FFF7FEFF 		bl	Timer_ReadPeriod
 6376 07ea 0346     		mov	r3, r0
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cc7rr7YM.s 			page 168


 6377 07ec 1C46     		mov	r4, r3
 6378 07ee FFF7FEFF 		bl	Timer_ReadCounter
 6379 07f2 0346     		mov	r3, r0
 6380 07f4 E31A     		subs	r3, r4, r3
 6381 07f6 0233     		adds	r3, r3, #2
 6382 07f8 FB60     		str	r3, [r7, #12]
 6383 07fa 06E0     		b	.L621
 6384              	.L620:
3097:.\mem1.c      ****                             				while (!(Timer_ReadStatusRegister()&Timer_STATUS_TC)){
 6385              		.loc 1 3097 0 is_stmt 1
 6386 07fc FFF7FEFF 		bl	Timer_ReadStatusRegister
 6387 0800 0346     		mov	r3, r0
 6388 0802 DBB2     		uxtb	r3, r3
 6389 0804 5BB2     		sxtb	r3, r3
 6390 0806 002B     		cmp	r3, #0
 6391 0808 E6DA     		bge	.L622
 6392              	.L621:
3099:.\mem1.c      ****                             				}
3100:.\mem1.c      ****                             			#endif
3101:.\mem1.c      ****                             		break; //0x01
 6393              		.loc 1 3101 0 discriminator 50
 6394 080a 69E1     		b	.L601
 6395              	.L605:
3102:.\mem1.c      ****                             		case 0x02:
3103:.\mem1.c      ****                             			#ifdef CY_PINS_GPIO_2_2_H 
3104:.\mem1.c      ****                             				TIMER_REG_Write(0);
 6396              		.loc 1 3104 0
 6397 080c 0020     		movs	r0, #0
 6398 080e FFF7FEFF 		bl	TIMER_REG_Write
3105:.\mem1.c      ****                             				GPIO_2_2_SetDriveMode(PIN_DM_DIG_HIZ);
 6399              		.loc 1 3105 0
 6400 0812 0220     		movs	r0, #2
 6401 0814 FFF7FEFF 		bl	GPIO_2_2_SetDriveMode
3106:.\mem1.c      ****                             				while (!(Timer_ReadStatusRegister()&Timer_STATUS_TC)){
 6402              		.loc 1 3106 0
 6403 0818 07E0     		b	.L623
 6404              	.L625:
3107:.\mem1.c      ****                             				if(*(reg8 *)(CYREG_PRT2_PC2)&CY_PINS_PC_PIN_STATE){break;}
 6405              		.loc 1 3107 0
 6406 081a 824B     		ldr	r3, .L842+8
 6407 081c 1B78     		ldrb	r3, [r3]
 6408 081e DBB2     		uxtb	r3, r3
 6409 0820 03F01003 		and	r3, r3, #16
 6410 0824 002B     		cmp	r3, #0
 6411 0826 00D0     		beq	.L623
 6412 0828 06E0     		b	.L624
 6413              	.L623:
3106:.\mem1.c      ****                             				while (!(Timer_ReadStatusRegister()&Timer_STATUS_TC)){
 6414              		.loc 1 3106 0
 6415 082a FFF7FEFF 		bl	Timer_ReadStatusRegister
 6416 082e 0346     		mov	r3, r0
 6417 0830 DBB2     		uxtb	r3, r3
 6418 0832 5BB2     		sxtb	r3, r3
 6419 0834 002B     		cmp	r3, #0
 6420 0836 F0DA     		bge	.L625
 6421              	.L624:
3108:.\mem1.c      ****                             				}
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cc7rr7YM.s 			page 169


3109:.\mem1.c      ****                             				TIMER_REG_Write(1); CyDelayUs(1); TIMER_REG_Write(0);
 6422              		.loc 1 3109 0
 6423 0838 0120     		movs	r0, #1
 6424 083a FFF7FEFF 		bl	TIMER_REG_Write
 6425 083e 0120     		movs	r0, #1
 6426 0840 FFF7FEFF 		bl	CyDelayUs
 6427 0844 0020     		movs	r0, #0
 6428 0846 FFF7FEFF 		bl	TIMER_REG_Write
3110:.\mem1.c      ****                             				while (!(Timer_ReadStatusRegister()&Timer_STATUS_TC)){
 6429              		.loc 1 3110 0
 6430 084a 11E0     		b	.L626
 6431              	.L628:
3111:.\mem1.c      ****                             				if (!(*(reg8 *)(CYREG_PRT2_PC2)&CY_PINS_PC_PIN_STATE)){us_count = T
 6432              		.loc 1 3111 0
 6433 084c 754B     		ldr	r3, .L842+8
 6434 084e 1B78     		ldrb	r3, [r3]
 6435 0850 DBB2     		uxtb	r3, r3
 6436 0852 03F01003 		and	r3, r3, #16
 6437 0856 002B     		cmp	r3, #0
 6438 0858 0AD1     		bne	.L626
 6439              		.loc 1 3111 0 is_stmt 0 discriminator 1
 6440 085a FFF7FEFF 		bl	Timer_ReadPeriod
 6441 085e 0346     		mov	r3, r0
 6442 0860 1C46     		mov	r4, r3
 6443 0862 FFF7FEFF 		bl	Timer_ReadCounter
 6444 0866 0346     		mov	r3, r0
 6445 0868 E31A     		subs	r3, r4, r3
 6446 086a 0233     		adds	r3, r3, #2
 6447 086c FB60     		str	r3, [r7, #12]
 6448 086e 06E0     		b	.L627
 6449              	.L626:
3110:.\mem1.c      ****                             				while (!(Timer_ReadStatusRegister()&Timer_STATUS_TC)){
 6450              		.loc 1 3110 0 is_stmt 1
 6451 0870 FFF7FEFF 		bl	Timer_ReadStatusRegister
 6452 0874 0346     		mov	r3, r0
 6453 0876 DBB2     		uxtb	r3, r3
 6454 0878 5BB2     		sxtb	r3, r3
 6455 087a 002B     		cmp	r3, #0
 6456 087c E6DA     		bge	.L628
 6457              	.L627:
3112:.\mem1.c      ****                             				}
3113:.\mem1.c      ****                             			#endif
3114:.\mem1.c      ****                             		break; //0x02
 6458              		.loc 1 3114 0 discriminator 51
 6459 087e 2FE1     		b	.L601
 6460              	.L606:
3115:.\mem1.c      ****                             		case 0x03:
3116:.\mem1.c      ****                             			#ifdef CY_PINS_GPIO_2_3_H 
3117:.\mem1.c      ****                             				TIMER_REG_Write(0);
 6461              		.loc 1 3117 0
 6462 0880 0020     		movs	r0, #0
 6463 0882 FFF7FEFF 		bl	TIMER_REG_Write
3118:.\mem1.c      ****                             				GPIO_2_3_SetDriveMode(PIN_DM_DIG_HIZ);
 6464              		.loc 1 3118 0
 6465 0886 0220     		movs	r0, #2
 6466 0888 FFF7FEFF 		bl	GPIO_2_3_SetDriveMode
3119:.\mem1.c      ****                             				while (!(Timer_ReadStatusRegister()&Timer_STATUS_TC)){
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cc7rr7YM.s 			page 170


 6467              		.loc 1 3119 0
 6468 088c 07E0     		b	.L629
 6469              	.L631:
3120:.\mem1.c      ****                             				if(*(reg8 *)(CYREG_PRT2_PC3)&CY_PINS_PC_PIN_STATE){break;}
 6470              		.loc 1 3120 0
 6471 088e 664B     		ldr	r3, .L842+12
 6472 0890 1B78     		ldrb	r3, [r3]
 6473 0892 DBB2     		uxtb	r3, r3
 6474 0894 03F01003 		and	r3, r3, #16
 6475 0898 002B     		cmp	r3, #0
 6476 089a 00D0     		beq	.L629
 6477 089c 06E0     		b	.L630
 6478              	.L629:
3119:.\mem1.c      ****                             				while (!(Timer_ReadStatusRegister()&Timer_STATUS_TC)){
 6479              		.loc 1 3119 0
 6480 089e FFF7FEFF 		bl	Timer_ReadStatusRegister
 6481 08a2 0346     		mov	r3, r0
 6482 08a4 DBB2     		uxtb	r3, r3
 6483 08a6 5BB2     		sxtb	r3, r3
 6484 08a8 002B     		cmp	r3, #0
 6485 08aa F0DA     		bge	.L631
 6486              	.L630:
3121:.\mem1.c      ****                             				}
3122:.\mem1.c      ****                             				TIMER_REG_Write(1); CyDelayUs(1); TIMER_REG_Write(0);
 6487              		.loc 1 3122 0
 6488 08ac 0120     		movs	r0, #1
 6489 08ae FFF7FEFF 		bl	TIMER_REG_Write
 6490 08b2 0120     		movs	r0, #1
 6491 08b4 FFF7FEFF 		bl	CyDelayUs
 6492 08b8 0020     		movs	r0, #0
 6493 08ba FFF7FEFF 		bl	TIMER_REG_Write
3123:.\mem1.c      ****                             				while (!(Timer_ReadStatusRegister()&Timer_STATUS_TC)){
 6494              		.loc 1 3123 0
 6495 08be 11E0     		b	.L632
 6496              	.L634:
3124:.\mem1.c      ****                             				if (!(*(reg8 *)(CYREG_PRT2_PC3)&CY_PINS_PC_PIN_STATE)){us_count = T
 6497              		.loc 1 3124 0
 6498 08c0 594B     		ldr	r3, .L842+12
 6499 08c2 1B78     		ldrb	r3, [r3]
 6500 08c4 DBB2     		uxtb	r3, r3
 6501 08c6 03F01003 		and	r3, r3, #16
 6502 08ca 002B     		cmp	r3, #0
 6503 08cc 0AD1     		bne	.L632
 6504              		.loc 1 3124 0 is_stmt 0 discriminator 1
 6505 08ce FFF7FEFF 		bl	Timer_ReadPeriod
 6506 08d2 0346     		mov	r3, r0
 6507 08d4 1C46     		mov	r4, r3
 6508 08d6 FFF7FEFF 		bl	Timer_ReadCounter
 6509 08da 0346     		mov	r3, r0
 6510 08dc E31A     		subs	r3, r4, r3
 6511 08de 0233     		adds	r3, r3, #2
 6512 08e0 FB60     		str	r3, [r7, #12]
 6513 08e2 06E0     		b	.L633
 6514              	.L632:
3123:.\mem1.c      ****                             				while (!(Timer_ReadStatusRegister()&Timer_STATUS_TC)){
 6515              		.loc 1 3123 0 is_stmt 1
 6516 08e4 FFF7FEFF 		bl	Timer_ReadStatusRegister
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cc7rr7YM.s 			page 171


 6517 08e8 0346     		mov	r3, r0
 6518 08ea DBB2     		uxtb	r3, r3
 6519 08ec 5BB2     		sxtb	r3, r3
 6520 08ee 002B     		cmp	r3, #0
 6521 08f0 E6DA     		bge	.L634
 6522              	.L633:
3125:.\mem1.c      ****                             				}
3126:.\mem1.c      ****                             			#endif
3127:.\mem1.c      ****                             		break; //0x03
 6523              		.loc 1 3127 0 discriminator 52
 6524 08f2 F5E0     		b	.L601
 6525              	.L607:
3128:.\mem1.c      ****                             		case 0x04:
3129:.\mem1.c      ****                             			#ifdef CY_PINS_GPIO_2_4_H 
3130:.\mem1.c      ****                             				TIMER_REG_Write(0);
 6526              		.loc 1 3130 0
 6527 08f4 0020     		movs	r0, #0
 6528 08f6 FFF7FEFF 		bl	TIMER_REG_Write
3131:.\mem1.c      ****                             				GPIO_2_4_SetDriveMode(PIN_DM_DIG_HIZ);
 6529              		.loc 1 3131 0
 6530 08fa 0220     		movs	r0, #2
 6531 08fc FFF7FEFF 		bl	GPIO_2_4_SetDriveMode
3132:.\mem1.c      ****                             				while (!(Timer_ReadStatusRegister()&Timer_STATUS_TC)){
 6532              		.loc 1 3132 0
 6533 0900 07E0     		b	.L635
 6534              	.L637:
3133:.\mem1.c      ****                             				if(*(reg8 *)(CYREG_PRT2_PC4)&CY_PINS_PC_PIN_STATE){break;}
 6535              		.loc 1 3133 0
 6536 0902 4A4B     		ldr	r3, .L842+16
 6537 0904 1B78     		ldrb	r3, [r3]
 6538 0906 DBB2     		uxtb	r3, r3
 6539 0908 03F01003 		and	r3, r3, #16
 6540 090c 002B     		cmp	r3, #0
 6541 090e 00D0     		beq	.L635
 6542 0910 06E0     		b	.L636
 6543              	.L635:
3132:.\mem1.c      ****                             				while (!(Timer_ReadStatusRegister()&Timer_STATUS_TC)){
 6544              		.loc 1 3132 0
 6545 0912 FFF7FEFF 		bl	Timer_ReadStatusRegister
 6546 0916 0346     		mov	r3, r0
 6547 0918 DBB2     		uxtb	r3, r3
 6548 091a 5BB2     		sxtb	r3, r3
 6549 091c 002B     		cmp	r3, #0
 6550 091e F0DA     		bge	.L637
 6551              	.L636:
3134:.\mem1.c      ****                             				}
3135:.\mem1.c      ****                             				TIMER_REG_Write(1); CyDelayUs(1); TIMER_REG_Write(0);
 6552              		.loc 1 3135 0
 6553 0920 0120     		movs	r0, #1
 6554 0922 FFF7FEFF 		bl	TIMER_REG_Write
 6555 0926 0120     		movs	r0, #1
 6556 0928 FFF7FEFF 		bl	CyDelayUs
 6557 092c 0020     		movs	r0, #0
 6558 092e FFF7FEFF 		bl	TIMER_REG_Write
3136:.\mem1.c      ****                             				while (!(Timer_ReadStatusRegister()&Timer_STATUS_TC)){
 6559              		.loc 1 3136 0
 6560 0932 11E0     		b	.L638
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cc7rr7YM.s 			page 172


 6561              	.L640:
3137:.\mem1.c      ****                             				if (!(*(reg8 *)(CYREG_PRT2_PC4)&CY_PINS_PC_PIN_STATE)){us_count = T
 6562              		.loc 1 3137 0
 6563 0934 3D4B     		ldr	r3, .L842+16
 6564 0936 1B78     		ldrb	r3, [r3]
 6565 0938 DBB2     		uxtb	r3, r3
 6566 093a 03F01003 		and	r3, r3, #16
 6567 093e 002B     		cmp	r3, #0
 6568 0940 0AD1     		bne	.L638
 6569              		.loc 1 3137 0 is_stmt 0 discriminator 1
 6570 0942 FFF7FEFF 		bl	Timer_ReadPeriod
 6571 0946 0346     		mov	r3, r0
 6572 0948 1C46     		mov	r4, r3
 6573 094a FFF7FEFF 		bl	Timer_ReadCounter
 6574 094e 0346     		mov	r3, r0
 6575 0950 E31A     		subs	r3, r4, r3
 6576 0952 0233     		adds	r3, r3, #2
 6577 0954 FB60     		str	r3, [r7, #12]
 6578 0956 06E0     		b	.L639
 6579              	.L638:
3136:.\mem1.c      ****                             				while (!(Timer_ReadStatusRegister()&Timer_STATUS_TC)){
 6580              		.loc 1 3136 0 is_stmt 1
 6581 0958 FFF7FEFF 		bl	Timer_ReadStatusRegister
 6582 095c 0346     		mov	r3, r0
 6583 095e DBB2     		uxtb	r3, r3
 6584 0960 5BB2     		sxtb	r3, r3
 6585 0962 002B     		cmp	r3, #0
 6586 0964 E6DA     		bge	.L640
 6587              	.L639:
3138:.\mem1.c      ****                             				}
3139:.\mem1.c      ****                             			#endif
3140:.\mem1.c      ****                             		break; //0x04
 6588              		.loc 1 3140 0 discriminator 53
 6589 0966 BBE0     		b	.L601
 6590              	.L608:
3141:.\mem1.c      ****                             		case 0x05:
3142:.\mem1.c      ****                             			#ifdef CY_PINS_GPIO_2_5_H 
3143:.\mem1.c      ****                             				TIMER_REG_Write(0);
 6591              		.loc 1 3143 0
 6592 0968 0020     		movs	r0, #0
 6593 096a FFF7FEFF 		bl	TIMER_REG_Write
3144:.\mem1.c      ****                             				GPIO_2_5_SetDriveMode(PIN_DM_DIG_HIZ);
 6594              		.loc 1 3144 0
 6595 096e 0220     		movs	r0, #2
 6596 0970 FFF7FEFF 		bl	GPIO_2_5_SetDriveMode
3145:.\mem1.c      ****                             				while (!(Timer_ReadStatusRegister()&Timer_STATUS_TC)){
 6597              		.loc 1 3145 0
 6598 0974 07E0     		b	.L641
 6599              	.L643:
3146:.\mem1.c      ****                             				if(*(reg8 *)(CYREG_PRT2_PC5)&CY_PINS_PC_PIN_STATE){break;}
 6600              		.loc 1 3146 0
 6601 0976 2E4B     		ldr	r3, .L842+20
 6602 0978 1B78     		ldrb	r3, [r3]
 6603 097a DBB2     		uxtb	r3, r3
 6604 097c 03F01003 		and	r3, r3, #16
 6605 0980 002B     		cmp	r3, #0
 6606 0982 00D0     		beq	.L641
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cc7rr7YM.s 			page 173


 6607 0984 06E0     		b	.L642
 6608              	.L641:
3145:.\mem1.c      ****                             				while (!(Timer_ReadStatusRegister()&Timer_STATUS_TC)){
 6609              		.loc 1 3145 0
 6610 0986 FFF7FEFF 		bl	Timer_ReadStatusRegister
 6611 098a 0346     		mov	r3, r0
 6612 098c DBB2     		uxtb	r3, r3
 6613 098e 5BB2     		sxtb	r3, r3
 6614 0990 002B     		cmp	r3, #0
 6615 0992 F0DA     		bge	.L643
 6616              	.L642:
3147:.\mem1.c      ****                             				}
3148:.\mem1.c      ****                             				TIMER_REG_Write(1); CyDelayUs(1); TIMER_REG_Write(0);
 6617              		.loc 1 3148 0
 6618 0994 0120     		movs	r0, #1
 6619 0996 FFF7FEFF 		bl	TIMER_REG_Write
 6620 099a 0120     		movs	r0, #1
 6621 099c FFF7FEFF 		bl	CyDelayUs
 6622 09a0 0020     		movs	r0, #0
 6623 09a2 FFF7FEFF 		bl	TIMER_REG_Write
3149:.\mem1.c      ****                             				while (!(Timer_ReadStatusRegister()&Timer_STATUS_TC)){
 6624              		.loc 1 3149 0
 6625 09a6 11E0     		b	.L644
 6626              	.L646:
3150:.\mem1.c      ****                             				if (!(*(reg8 *)(CYREG_PRT2_PC5)&CY_PINS_PC_PIN_STATE)){us_count = T
 6627              		.loc 1 3150 0
 6628 09a8 214B     		ldr	r3, .L842+20
 6629 09aa 1B78     		ldrb	r3, [r3]
 6630 09ac DBB2     		uxtb	r3, r3
 6631 09ae 03F01003 		and	r3, r3, #16
 6632 09b2 002B     		cmp	r3, #0
 6633 09b4 0AD1     		bne	.L644
 6634              		.loc 1 3150 0 is_stmt 0 discriminator 1
 6635 09b6 FFF7FEFF 		bl	Timer_ReadPeriod
 6636 09ba 0346     		mov	r3, r0
 6637 09bc 1C46     		mov	r4, r3
 6638 09be FFF7FEFF 		bl	Timer_ReadCounter
 6639 09c2 0346     		mov	r3, r0
 6640 09c4 E31A     		subs	r3, r4, r3
 6641 09c6 0233     		adds	r3, r3, #2
 6642 09c8 FB60     		str	r3, [r7, #12]
 6643 09ca 06E0     		b	.L645
 6644              	.L644:
3149:.\mem1.c      ****                             				while (!(Timer_ReadStatusRegister()&Timer_STATUS_TC)){
 6645              		.loc 1 3149 0 is_stmt 1
 6646 09cc FFF7FEFF 		bl	Timer_ReadStatusRegister
 6647 09d0 0346     		mov	r3, r0
 6648 09d2 DBB2     		uxtb	r3, r3
 6649 09d4 5BB2     		sxtb	r3, r3
 6650 09d6 002B     		cmp	r3, #0
 6651 09d8 E6DA     		bge	.L646
 6652              	.L645:
3151:.\mem1.c      ****                             				}
3152:.\mem1.c      ****                             			#endif
3153:.\mem1.c      ****                             		break; //0x05
 6653              		.loc 1 3153 0 discriminator 54
 6654 09da 81E0     		b	.L601
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cc7rr7YM.s 			page 174


 6655              	.L609:
3154:.\mem1.c      ****                             		case 0x06:
3155:.\mem1.c      ****                             			#ifdef CY_PINS_GPIO_2_6_H 
3156:.\mem1.c      ****                             				TIMER_REG_Write(0);
 6656              		.loc 1 3156 0
 6657 09dc 0020     		movs	r0, #0
 6658 09de FFF7FEFF 		bl	TIMER_REG_Write
3157:.\mem1.c      ****                             				GPIO_2_6_SetDriveMode(PIN_DM_DIG_HIZ);
 6659              		.loc 1 3157 0
 6660 09e2 0220     		movs	r0, #2
 6661 09e4 FFF7FEFF 		bl	GPIO_2_6_SetDriveMode
3158:.\mem1.c      ****                             				while (!(Timer_ReadStatusRegister()&Timer_STATUS_TC)){
 6662              		.loc 1 3158 0
 6663 09e8 07E0     		b	.L647
 6664              	.L649:
3159:.\mem1.c      ****                             				if(*(reg8 *)(CYREG_PRT2_PC6)&CY_PINS_PC_PIN_STATE){break;}
 6665              		.loc 1 3159 0
 6666 09ea 124B     		ldr	r3, .L842+24
 6667 09ec 1B78     		ldrb	r3, [r3]
 6668 09ee DBB2     		uxtb	r3, r3
 6669 09f0 03F01003 		and	r3, r3, #16
 6670 09f4 002B     		cmp	r3, #0
 6671 09f6 00D0     		beq	.L647
 6672 09f8 06E0     		b	.L648
 6673              	.L647:
3158:.\mem1.c      ****                             				while (!(Timer_ReadStatusRegister()&Timer_STATUS_TC)){
 6674              		.loc 1 3158 0
 6675 09fa FFF7FEFF 		bl	Timer_ReadStatusRegister
 6676 09fe 0346     		mov	r3, r0
 6677 0a00 DBB2     		uxtb	r3, r3
 6678 0a02 5BB2     		sxtb	r3, r3
 6679 0a04 002B     		cmp	r3, #0
 6680 0a06 F0DA     		bge	.L649
 6681              	.L648:
3160:.\mem1.c      ****                             				}
3161:.\mem1.c      ****                             				TIMER_REG_Write(1); CyDelayUs(1); TIMER_REG_Write(0);
 6682              		.loc 1 3161 0
 6683 0a08 0120     		movs	r0, #1
 6684 0a0a FFF7FEFF 		bl	TIMER_REG_Write
 6685 0a0e 0120     		movs	r0, #1
 6686 0a10 FFF7FEFF 		bl	CyDelayUs
 6687 0a14 0020     		movs	r0, #0
 6688 0a16 FFF7FEFF 		bl	TIMER_REG_Write
3162:.\mem1.c      ****                             				while (!(Timer_ReadStatusRegister()&Timer_STATUS_TC)){
 6689              		.loc 1 3162 0
 6690 0a1a 1FE0     		b	.L650
 6691              	.L843:
 6692              		.align	2
 6693              	.L842:
 6694 0a1c 10500040 		.word	1073762320
 6695 0a20 11500040 		.word	1073762321
 6696 0a24 12500040 		.word	1073762322
 6697 0a28 13500040 		.word	1073762323
 6698 0a2c 14500040 		.word	1073762324
 6699 0a30 15500040 		.word	1073762325
 6700 0a34 16500040 		.word	1073762326
 6701              	.L652:
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cc7rr7YM.s 			page 175


3163:.\mem1.c      ****                             				if (!(*(reg8 *)(CYREG_PRT2_PC6)&CY_PINS_PC_PIN_STATE)){us_count = T
 6702              		.loc 1 3163 0
 6703 0a38 C34B     		ldr	r3, .L844
 6704 0a3a 1B78     		ldrb	r3, [r3]
 6705 0a3c DBB2     		uxtb	r3, r3
 6706 0a3e 03F01003 		and	r3, r3, #16
 6707 0a42 002B     		cmp	r3, #0
 6708 0a44 0AD1     		bne	.L650
 6709              		.loc 1 3163 0 is_stmt 0 discriminator 1
 6710 0a46 FFF7FEFF 		bl	Timer_ReadPeriod
 6711 0a4a 0346     		mov	r3, r0
 6712 0a4c 1C46     		mov	r4, r3
 6713 0a4e FFF7FEFF 		bl	Timer_ReadCounter
 6714 0a52 0346     		mov	r3, r0
 6715 0a54 E31A     		subs	r3, r4, r3
 6716 0a56 0233     		adds	r3, r3, #2
 6717 0a58 FB60     		str	r3, [r7, #12]
 6718 0a5a 06E0     		b	.L651
 6719              	.L650:
3162:.\mem1.c      ****                             				while (!(Timer_ReadStatusRegister()&Timer_STATUS_TC)){
 6720              		.loc 1 3162 0 is_stmt 1
 6721 0a5c FFF7FEFF 		bl	Timer_ReadStatusRegister
 6722 0a60 0346     		mov	r3, r0
 6723 0a62 DBB2     		uxtb	r3, r3
 6724 0a64 5BB2     		sxtb	r3, r3
 6725 0a66 002B     		cmp	r3, #0
 6726 0a68 E6DA     		bge	.L652
 6727              	.L651:
3164:.\mem1.c      ****                             				}
3165:.\mem1.c      ****                             			#endif
3166:.\mem1.c      ****                             		break; //0x06
 6728              		.loc 1 3166 0 discriminator 55
 6729 0a6a 39E0     		b	.L601
 6730              	.L610:
3167:.\mem1.c      ****                             		case 0x07:
3168:.\mem1.c      ****                             			#ifdef CY_PINS_GPIO_2_7_H 
3169:.\mem1.c      ****                             				TIMER_REG_Write(0);
 6731              		.loc 1 3169 0
 6732 0a6c 0020     		movs	r0, #0
 6733 0a6e FFF7FEFF 		bl	TIMER_REG_Write
3170:.\mem1.c      ****                             				GPIO_2_7_SetDriveMode(PIN_DM_DIG_HIZ);
 6734              		.loc 1 3170 0
 6735 0a72 0220     		movs	r0, #2
 6736 0a74 FFF7FEFF 		bl	GPIO_2_7_SetDriveMode
3171:.\mem1.c      ****                             				while (!(Timer_ReadStatusRegister()&Timer_STATUS_TC)){
 6737              		.loc 1 3171 0
 6738 0a78 07E0     		b	.L653
 6739              	.L655:
3172:.\mem1.c      ****                             				if(*(reg8 *)(CYREG_PRT2_PC7)&CY_PINS_PC_PIN_STATE){break;}
 6740              		.loc 1 3172 0
 6741 0a7a B44B     		ldr	r3, .L844+4
 6742 0a7c 1B78     		ldrb	r3, [r3]
 6743 0a7e DBB2     		uxtb	r3, r3
 6744 0a80 03F01003 		and	r3, r3, #16
 6745 0a84 002B     		cmp	r3, #0
 6746 0a86 00D0     		beq	.L653
 6747 0a88 06E0     		b	.L654
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cc7rr7YM.s 			page 176


 6748              	.L653:
3171:.\mem1.c      ****                             				while (!(Timer_ReadStatusRegister()&Timer_STATUS_TC)){
 6749              		.loc 1 3171 0
 6750 0a8a FFF7FEFF 		bl	Timer_ReadStatusRegister
 6751 0a8e 0346     		mov	r3, r0
 6752 0a90 DBB2     		uxtb	r3, r3
 6753 0a92 5BB2     		sxtb	r3, r3
 6754 0a94 002B     		cmp	r3, #0
 6755 0a96 F0DA     		bge	.L655
 6756              	.L654:
3173:.\mem1.c      ****                             				}
3174:.\mem1.c      ****                             				TIMER_REG_Write(1); CyDelayUs(1); TIMER_REG_Write(0);
 6757              		.loc 1 3174 0
 6758 0a98 0120     		movs	r0, #1
 6759 0a9a FFF7FEFF 		bl	TIMER_REG_Write
 6760 0a9e 0120     		movs	r0, #1
 6761 0aa0 FFF7FEFF 		bl	CyDelayUs
 6762 0aa4 0020     		movs	r0, #0
 6763 0aa6 FFF7FEFF 		bl	TIMER_REG_Write
3175:.\mem1.c      ****                             				while (!(Timer_ReadStatusRegister()&Timer_STATUS_TC)){
 6764              		.loc 1 3175 0
 6765 0aaa 11E0     		b	.L656
 6766              	.L658:
3176:.\mem1.c      ****                             				if (!(*(reg8 *)(CYREG_PRT2_PC7)&CY_PINS_PC_PIN_STATE)){us_count = T
 6767              		.loc 1 3176 0
 6768 0aac A74B     		ldr	r3, .L844+4
 6769 0aae 1B78     		ldrb	r3, [r3]
 6770 0ab0 DBB2     		uxtb	r3, r3
 6771 0ab2 03F01003 		and	r3, r3, #16
 6772 0ab6 002B     		cmp	r3, #0
 6773 0ab8 0AD1     		bne	.L656
 6774              		.loc 1 3176 0 is_stmt 0 discriminator 1
 6775 0aba FFF7FEFF 		bl	Timer_ReadPeriod
 6776 0abe 0346     		mov	r3, r0
 6777 0ac0 1C46     		mov	r4, r3
 6778 0ac2 FFF7FEFF 		bl	Timer_ReadCounter
 6779 0ac6 0346     		mov	r3, r0
 6780 0ac8 E31A     		subs	r3, r4, r3
 6781 0aca 0233     		adds	r3, r3, #2
 6782 0acc FB60     		str	r3, [r7, #12]
 6783 0ace 06E0     		b	.L657
 6784              	.L656:
3175:.\mem1.c      ****                             				while (!(Timer_ReadStatusRegister()&Timer_STATUS_TC)){
 6785              		.loc 1 3175 0 is_stmt 1
 6786 0ad0 FFF7FEFF 		bl	Timer_ReadStatusRegister
 6787 0ad4 0346     		mov	r3, r0
 6788 0ad6 DBB2     		uxtb	r3, r3
 6789 0ad8 5BB2     		sxtb	r3, r3
 6790 0ada 002B     		cmp	r3, #0
 6791 0adc E6DA     		bge	.L658
 6792              	.L657:
3177:.\mem1.c      ****                             				}
3178:.\mem1.c      ****                             			#endif
3179:.\mem1.c      ****                             		break; //0x07
 6793              		.loc 1 3179 0 discriminator 56
 6794 0ade 00BF     		nop
 6795              	.L601:
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cc7rr7YM.s 			page 177


3180:.\mem1.c      ****                             	}
3181:.\mem1.c      ****                             break; //0x02
 6796              		.loc 1 3181 0 discriminator 49
 6797 0ae0 00F050BC 		b	.L831
 6798              	.L585:
3182:.\mem1.c      ****                             case 0x03:
3183:.\mem1.c      ****                             	switch(pin)
 6799              		.loc 1 3183 0
 6800 0ae4 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 6801 0ae6 072B     		cmp	r3, #7
 6802 0ae8 00F24E84 		bhi	.L832
 6803 0aec 01A2     		adr	r2, .L661
 6804 0aee 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 6805 0af2 00BF     		.p2align 2
 6806              	.L661:
 6807 0af4 150B0000 		.word	.L833+1
 6808 0af8 150B0000 		.word	.L833+1
 6809 0afc 150B0000 		.word	.L833+1
 6810 0b00 150B0000 		.word	.L833+1
 6811 0b04 150B0000 		.word	.L833+1
 6812 0b08 150B0000 		.word	.L833+1
 6813 0b0c 150B0000 		.word	.L833+1
 6814 0b10 150B0000 		.word	.L833+1
 6815              		.p2align 1
 6816              	.L833:
3184:.\mem1.c      ****                             	{
3185:.\mem1.c      ****                             		case 0x00:
3186:.\mem1.c      ****                             			#ifdef CY_PINS_GPIO_3_0_H 
3187:.\mem1.c      ****                             				TIMER_REG_Write(0);
3188:.\mem1.c      ****                             				GPIO_3_0_SetDriveMode(PIN_DM_DIG_HIZ);
3189:.\mem1.c      ****                             				while (!(Timer_ReadStatusRegister()&Timer_STATUS_TC)){
3190:.\mem1.c      ****                             				if(*(reg8 *)(CYREG_PRT3_PC0)&CY_PINS_PC_PIN_STATE){break;}
3191:.\mem1.c      ****                             				}
3192:.\mem1.c      ****                             				TIMER_REG_Write(1); CyDelayUs(1); TIMER_REG_Write(0);
3193:.\mem1.c      ****                             				while (!(Timer_ReadStatusRegister()&Timer_STATUS_TC)){
3194:.\mem1.c      ****                             				if (!(*(reg8 *)(CYREG_PRT3_PC0)&CY_PINS_PC_PIN_STATE)){us_count = T
3195:.\mem1.c      ****                             				}
3196:.\mem1.c      ****                             			#endif
3197:.\mem1.c      ****                             		break; //0x00
 6817              		.loc 1 3197 0
 6818 0b14 00BF     		nop
3198:.\mem1.c      ****                             		case 0x01:
3199:.\mem1.c      ****                             			#ifdef CY_PINS_GPIO_3_1_H 
3200:.\mem1.c      ****                             				TIMER_REG_Write(0);
3201:.\mem1.c      ****                             				GPIO_3_1_SetDriveMode(PIN_DM_DIG_HIZ);
3202:.\mem1.c      ****                             				while (!(Timer_ReadStatusRegister()&Timer_STATUS_TC)){
3203:.\mem1.c      ****                             				if(*(reg8 *)(CYREG_PRT3_PC1)&CY_PINS_PC_PIN_STATE){break;}
3204:.\mem1.c      ****                             				}
3205:.\mem1.c      ****                             				TIMER_REG_Write(1); CyDelayUs(1); TIMER_REG_Write(0);
3206:.\mem1.c      ****                             				while (!(Timer_ReadStatusRegister()&Timer_STATUS_TC)){
3207:.\mem1.c      ****                             				if (!(*(reg8 *)(CYREG_PRT3_PC1)&CY_PINS_PC_PIN_STATE)){us_count = T
3208:.\mem1.c      ****                             				}
3209:.\mem1.c      ****                             			#endif
3210:.\mem1.c      ****                             		break; //0x01
3211:.\mem1.c      ****                             		case 0x02:
3212:.\mem1.c      ****                             			#ifdef CY_PINS_GPIO_3_2_H 
3213:.\mem1.c      ****                             				TIMER_REG_Write(0);
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cc7rr7YM.s 			page 178


3214:.\mem1.c      ****                             				GPIO_3_2_SetDriveMode(PIN_DM_DIG_HIZ);
3215:.\mem1.c      ****                             				while (!(Timer_ReadStatusRegister()&Timer_STATUS_TC)){
3216:.\mem1.c      ****                             				if(*(reg8 *)(CYREG_PRT3_PC2)&CY_PINS_PC_PIN_STATE){break;}
3217:.\mem1.c      ****                             				}
3218:.\mem1.c      ****                             				TIMER_REG_Write(1); CyDelayUs(1); TIMER_REG_Write(0);
3219:.\mem1.c      ****                             				while (!(Timer_ReadStatusRegister()&Timer_STATUS_TC)){
3220:.\mem1.c      ****                             				if (!(*(reg8 *)(CYREG_PRT3_PC2)&CY_PINS_PC_PIN_STATE)){us_count = T
3221:.\mem1.c      ****                             				}
3222:.\mem1.c      ****                             			#endif
3223:.\mem1.c      ****                             		break; //0x02
3224:.\mem1.c      ****                             		case 0x03:
3225:.\mem1.c      ****                             			#ifdef CY_PINS_GPIO_3_3_H 
3226:.\mem1.c      ****                             				TIMER_REG_Write(0);
3227:.\mem1.c      ****                             				GPIO_3_3_SetDriveMode(PIN_DM_DIG_HIZ);
3228:.\mem1.c      ****                             				while (!(Timer_ReadStatusRegister()&Timer_STATUS_TC)){
3229:.\mem1.c      ****                             				if(*(reg8 *)(CYREG_PRT3_PC3)&CY_PINS_PC_PIN_STATE){break;}
3230:.\mem1.c      ****                             				}
3231:.\mem1.c      ****                             				TIMER_REG_Write(1); CyDelayUs(1); TIMER_REG_Write(0);
3232:.\mem1.c      ****                             				while (!(Timer_ReadStatusRegister()&Timer_STATUS_TC)){
3233:.\mem1.c      ****                             				if (!(*(reg8 *)(CYREG_PRT3_PC3)&CY_PINS_PC_PIN_STATE)){us_count = T
3234:.\mem1.c      ****                             				}
3235:.\mem1.c      ****                             			#endif
3236:.\mem1.c      ****                             		break; //0x03
3237:.\mem1.c      ****                             		case 0x04:
3238:.\mem1.c      ****                             			#ifdef CY_PINS_GPIO_3_4_H 
3239:.\mem1.c      ****                             				TIMER_REG_Write(0);
3240:.\mem1.c      ****                             				GPIO_3_4_SetDriveMode(PIN_DM_DIG_HIZ);
3241:.\mem1.c      ****                             				while (!(Timer_ReadStatusRegister()&Timer_STATUS_TC)){
3242:.\mem1.c      ****                             				if(*(reg8 *)(CYREG_PRT3_PC4)&CY_PINS_PC_PIN_STATE){break;}
3243:.\mem1.c      ****                             				}
3244:.\mem1.c      ****                             				TIMER_REG_Write(1); CyDelayUs(1); TIMER_REG_Write(0);
3245:.\mem1.c      ****                             				while (!(Timer_ReadStatusRegister()&Timer_STATUS_TC)){
3246:.\mem1.c      ****                             				if (!(*(reg8 *)(CYREG_PRT3_PC4)&CY_PINS_PC_PIN_STATE)){us_count = T
3247:.\mem1.c      ****                             				}
3248:.\mem1.c      ****                             			#endif
3249:.\mem1.c      ****                             		break; //0x04
3250:.\mem1.c      ****                             		case 0x05:
3251:.\mem1.c      ****                             			#ifdef CY_PINS_GPIO_3_5_H 
3252:.\mem1.c      ****                             				TIMER_REG_Write(0);
3253:.\mem1.c      ****                             				GPIO_3_5_SetDriveMode(PIN_DM_DIG_HIZ);
3254:.\mem1.c      ****                             				while (!(Timer_ReadStatusRegister()&Timer_STATUS_TC)){
3255:.\mem1.c      ****                             				if(*(reg8 *)(CYREG_PRT3_PC5)&CY_PINS_PC_PIN_STATE){break;}
3256:.\mem1.c      ****                             				}
3257:.\mem1.c      ****                             				TIMER_REG_Write(1); CyDelayUs(1); TIMER_REG_Write(0);
3258:.\mem1.c      ****                             				while (!(Timer_ReadStatusRegister()&Timer_STATUS_TC)){
3259:.\mem1.c      ****                             				if (!(*(reg8 *)(CYREG_PRT3_PC5)&CY_PINS_PC_PIN_STATE)){us_count = T
3260:.\mem1.c      ****                             				}
3261:.\mem1.c      ****                             			#endif
3262:.\mem1.c      ****                             		break; //0x05
3263:.\mem1.c      ****                             		case 0x06:
3264:.\mem1.c      ****                             			#ifdef CY_PINS_GPIO_3_6_H 
3265:.\mem1.c      ****                             				TIMER_REG_Write(0);
3266:.\mem1.c      ****                             				GPIO_3_6_SetDriveMode(PIN_DM_DIG_HIZ);
3267:.\mem1.c      ****                             				while (!(Timer_ReadStatusRegister()&Timer_STATUS_TC)){
3268:.\mem1.c      ****                             				if(*(reg8 *)(CYREG_PRT3_PC6)&CY_PINS_PC_PIN_STATE){break;}
3269:.\mem1.c      ****                             				}
3270:.\mem1.c      ****                             				TIMER_REG_Write(1); CyDelayUs(1); TIMER_REG_Write(0);
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cc7rr7YM.s 			page 179


3271:.\mem1.c      ****                             				while (!(Timer_ReadStatusRegister()&Timer_STATUS_TC)){
3272:.\mem1.c      ****                             				if (!(*(reg8 *)(CYREG_PRT3_PC6)&CY_PINS_PC_PIN_STATE)){us_count = T
3273:.\mem1.c      ****                             				}
3274:.\mem1.c      ****                             			#endif
3275:.\mem1.c      ****                             		break; //0x06
3276:.\mem1.c      ****                             		case 0x07:
3277:.\mem1.c      ****                             			#ifdef CY_PINS_GPIO_3_7_H 
3278:.\mem1.c      ****                             				TIMER_REG_Write(0);
3279:.\mem1.c      ****                             				GPIO_3_7_SetDriveMode(PIN_DM_DIG_HIZ);
3280:.\mem1.c      ****                             				while (!(Timer_ReadStatusRegister()&Timer_STATUS_TC)){
3281:.\mem1.c      ****                             				if(*(reg8 *)(CYREG_PRT3_PC7)&CY_PINS_PC_PIN_STATE){break;}
3282:.\mem1.c      ****                             				}
3283:.\mem1.c      ****                             				TIMER_REG_Write(1); CyDelayUs(1); TIMER_REG_Write(0);
3284:.\mem1.c      ****                             				while (!(Timer_ReadStatusRegister()&Timer_STATUS_TC)){
3285:.\mem1.c      ****                             				if (!(*(reg8 *)(CYREG_PRT3_PC7)&CY_PINS_PC_PIN_STATE)){us_count = T
3286:.\mem1.c      ****                             				}
3287:.\mem1.c      ****                             			#endif
3288:.\mem1.c      ****                             		break; //0x07
3289:.\mem1.c      ****                             	}
3290:.\mem1.c      ****                             break; //0x03
 6819              		.loc 1 3290 0
 6820 0b16 00F037BC 		b	.L832
 6821              	.L586:
3291:.\mem1.c      ****                             case 0x04:
3292:.\mem1.c      ****                             	switch(pin)
 6822              		.loc 1 3292 0
 6823 0b1a 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 6824 0b1c 062B     		cmp	r3, #6
 6825 0b1e 00F23584 		bhi	.L834
 6826 0b22 01A2     		adr	r2, .L671
 6827 0b24 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 6828              		.p2align 2
 6829              	.L671:
 6830 0b28 450B0000 		.word	.L835+1
 6831 0b2c 450B0000 		.word	.L835+1
 6832 0b30 450B0000 		.word	.L835+1
 6833 0b34 450B0000 		.word	.L835+1
 6834 0b38 450B0000 		.word	.L835+1
 6835 0b3c 450B0000 		.word	.L835+1
 6836 0b40 450B0000 		.word	.L835+1
 6837              		.p2align 1
 6838              	.L835:
3293:.\mem1.c      ****                             	{
3294:.\mem1.c      ****                             		case 0x00:
3295:.\mem1.c      ****                             			#ifdef CY_PINS_GPIO_4_0_H 
3296:.\mem1.c      ****                             				TIMER_REG_Write(0);
3297:.\mem1.c      ****                             				GPIO_4_0_SetDriveMode(PIN_DM_DIG_HIZ);
3298:.\mem1.c      ****                             				while (!(Timer_ReadStatusRegister()&Timer_STATUS_TC)){
3299:.\mem1.c      ****                             				if(*(reg8 *)(CYREG_PRT4_PC0)&CY_PINS_PC_PIN_STATE){break;}
3300:.\mem1.c      ****                             				}
3301:.\mem1.c      ****                             				TIMER_REG_Write(1); CyDelayUs(1); TIMER_REG_Write(0);
3302:.\mem1.c      ****                             				while (!(Timer_ReadStatusRegister()&Timer_STATUS_TC)){
3303:.\mem1.c      ****                             				if (!(*(reg8 *)(CYREG_PRT4_PC0)&CY_PINS_PC_PIN_STATE)){us_count = T
3304:.\mem1.c      ****                             				}
3305:.\mem1.c      ****                             			#endif
3306:.\mem1.c      ****                             		break; //0x00
 6839              		.loc 1 3306 0
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cc7rr7YM.s 			page 180


 6840 0b44 00BF     		nop
3307:.\mem1.c      ****                             		case 0x01:
3308:.\mem1.c      ****                             			#ifdef CY_PINS_GPIO_4_1_H 
3309:.\mem1.c      ****                             				TIMER_REG_Write(0);
3310:.\mem1.c      ****                             				GPIO_4_1_SetDriveMode(PIN_DM_DIG_HIZ);
3311:.\mem1.c      ****                             				while (!(Timer_ReadStatusRegister()&Timer_STATUS_TC)){
3312:.\mem1.c      ****                             				if(*(reg8 *)(CYREG_PRT4_PC1)&CY_PINS_PC_PIN_STATE){break;}
3313:.\mem1.c      ****                             				}
3314:.\mem1.c      ****                             				TIMER_REG_Write(1); CyDelayUs(1); TIMER_REG_Write(0);
3315:.\mem1.c      ****                             				while (!(Timer_ReadStatusRegister()&Timer_STATUS_TC)){
3316:.\mem1.c      ****                             				if (!(*(reg8 *)(CYREG_PRT4_PC1)&CY_PINS_PC_PIN_STATE)){us_count = T
3317:.\mem1.c      ****                             				}
3318:.\mem1.c      ****                             			#endif
3319:.\mem1.c      ****                             		break; //0x01
3320:.\mem1.c      ****                             		case 0x02:
3321:.\mem1.c      ****                             			#ifdef CY_PINS_GPIO_4_2_H 
3322:.\mem1.c      ****                             				TIMER_REG_Write(0);
3323:.\mem1.c      ****                             				GPIO_4_2_SetDriveMode(PIN_DM_DIG_HIZ);
3324:.\mem1.c      ****                             				while (!(Timer_ReadStatusRegister()&Timer_STATUS_TC)){
3325:.\mem1.c      ****                             				if(*(reg8 *)(CYREG_PRT4_PC2)&CY_PINS_PC_PIN_STATE){break;}
3326:.\mem1.c      ****                             				}
3327:.\mem1.c      ****                             				TIMER_REG_Write(1); CyDelayUs(1); TIMER_REG_Write(0);
3328:.\mem1.c      ****                             				while (!(Timer_ReadStatusRegister()&Timer_STATUS_TC)){
3329:.\mem1.c      ****                             				if (!(*(reg8 *)(CYREG_PRT4_PC2)&CY_PINS_PC_PIN_STATE)){us_count = T
3330:.\mem1.c      ****                             				}
3331:.\mem1.c      ****                             			#endif
3332:.\mem1.c      ****                             		break; //0x02
3333:.\mem1.c      ****                             		case 0x03:
3334:.\mem1.c      ****                             			#ifdef CY_PINS_GPIO_4_3_H 
3335:.\mem1.c      ****                             				TIMER_REG_Write(0);
3336:.\mem1.c      ****                             				GPIO_4_3_SetDriveMode(PIN_DM_DIG_HIZ);
3337:.\mem1.c      ****                             				while (!(Timer_ReadStatusRegister()&Timer_STATUS_TC)){
3338:.\mem1.c      ****                             				if(*(reg8 *)(CYREG_PRT4_PC3)&CY_PINS_PC_PIN_STATE){break;}
3339:.\mem1.c      ****                             				}
3340:.\mem1.c      ****                             				TIMER_REG_Write(1); CyDelayUs(1); TIMER_REG_Write(0);
3341:.\mem1.c      ****                             				while (!(Timer_ReadStatusRegister()&Timer_STATUS_TC)){
3342:.\mem1.c      ****                             				if (!(*(reg8 *)(CYREG_PRT4_PC3)&CY_PINS_PC_PIN_STATE)){us_count = T
3343:.\mem1.c      ****                             				}
3344:.\mem1.c      ****                             			#endif
3345:.\mem1.c      ****                             		break; //0x03
3346:.\mem1.c      ****                             		case 0x04:
3347:.\mem1.c      ****                             			#ifdef CY_PINS_GPIO_4_4_H 
3348:.\mem1.c      ****                             				TIMER_REG_Write(0);
3349:.\mem1.c      ****                             				GPIO_4_4_SetDriveMode(PIN_DM_DIG_HIZ);
3350:.\mem1.c      ****                             				while (!(Timer_ReadStatusRegister()&Timer_STATUS_TC)){
3351:.\mem1.c      ****                             				if(*(reg8 *)(CYREG_PRT4_PC4)&CY_PINS_PC_PIN_STATE){break;}
3352:.\mem1.c      ****                             				}
3353:.\mem1.c      ****                             				TIMER_REG_Write(1); CyDelayUs(1); TIMER_REG_Write(0);
3354:.\mem1.c      ****                             				while (!(Timer_ReadStatusRegister()&Timer_STATUS_TC)){
3355:.\mem1.c      ****                             				if (!(*(reg8 *)(CYREG_PRT4_PC4)&CY_PINS_PC_PIN_STATE)){us_count = T
3356:.\mem1.c      ****                             				}
3357:.\mem1.c      ****                             			#endif
3358:.\mem1.c      ****                             		break; //0x04
3359:.\mem1.c      ****                             		case 0x05:
3360:.\mem1.c      ****                             			#ifdef CY_PINS_GPIO_4_5_H 
3361:.\mem1.c      ****                             				TIMER_REG_Write(0);
3362:.\mem1.c      ****                             				GPIO_4_5_SetDriveMode(PIN_DM_DIG_HIZ);
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cc7rr7YM.s 			page 181


3363:.\mem1.c      ****                             				while (!(Timer_ReadStatusRegister()&Timer_STATUS_TC)){
3364:.\mem1.c      ****                             				if(*(reg8 *)(CYREG_PRT4_PC5)&CY_PINS_PC_PIN_STATE){break;}
3365:.\mem1.c      ****                             				}
3366:.\mem1.c      ****                             				TIMER_REG_Write(1); CyDelayUs(1); TIMER_REG_Write(0);
3367:.\mem1.c      ****                             				while (!(Timer_ReadStatusRegister()&Timer_STATUS_TC)){
3368:.\mem1.c      ****                             				if (!(*(reg8 *)(CYREG_PRT4_PC5)&CY_PINS_PC_PIN_STATE)){us_count = T
3369:.\mem1.c      ****                             				}
3370:.\mem1.c      ****                             			#endif
3371:.\mem1.c      ****                             		break; //0x05
3372:.\mem1.c      ****                             		case 0x06:
3373:.\mem1.c      ****                             			#ifdef CY_PINS_GPIO_4_6_H 
3374:.\mem1.c      ****                             				TIMER_REG_Write(0);
3375:.\mem1.c      ****                             				GPIO_4_6_SetDriveMode(PIN_DM_DIG_HIZ);
3376:.\mem1.c      ****                             				while (!(Timer_ReadStatusRegister()&Timer_STATUS_TC)){
3377:.\mem1.c      ****                             				if(*(reg8 *)(CYREG_PRT4_PC6)&CY_PINS_PC_PIN_STATE){break;}
3378:.\mem1.c      ****                             				}
3379:.\mem1.c      ****                             				TIMER_REG_Write(1); CyDelayUs(1); TIMER_REG_Write(0);
3380:.\mem1.c      ****                             				while (!(Timer_ReadStatusRegister()&Timer_STATUS_TC)){
3381:.\mem1.c      ****                             				if (!(*(reg8 *)(CYREG_PRT4_PC6)&CY_PINS_PC_PIN_STATE)){us_count = T
3382:.\mem1.c      ****                             				}
3383:.\mem1.c      ****                             			#endif
3384:.\mem1.c      ****                             		break; //0x06
3385:.\mem1.c      ****                             	}
3386:.\mem1.c      ****                             break; //0x04
 6841              		.loc 1 3386 0
 6842 0b46 00F021BC 		b	.L834
 6843              	.L587:
3387:.\mem1.c      ****                             case 0x05:
3388:.\mem1.c      ****                             	switch(pin)
 6844              		.loc 1 3388 0
 6845 0b4a 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 6846 0b4c 072B     		cmp	r3, #7
 6847 0b4e 00F21F84 		bhi	.L836
 6848 0b52 01A2     		adr	r2, .L680
 6849 0b54 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 6850              		.p2align 2
 6851              	.L680:
 6852 0b58 790B0000 		.word	.L679+1
 6853 0b5c ED0B0000 		.word	.L681+1
 6854 0b60 610C0000 		.word	.L682+1
 6855 0b64 D50C0000 		.word	.L683+1
 6856 0b68 610D0000 		.word	.L684+1
 6857 0b6c D50D0000 		.word	.L685+1
 6858 0b70 490E0000 		.word	.L686+1
 6859 0b74 BD0E0000 		.word	.L687+1
 6860              		.p2align 1
 6861              	.L679:
3389:.\mem1.c      ****                             	{
3390:.\mem1.c      ****                             		case 0x00:
3391:.\mem1.c      ****                             			#ifdef CY_PINS_GPIO_5_0_H 
3392:.\mem1.c      ****                             				TIMER_REG_Write(0);
 6862              		.loc 1 3392 0
 6863 0b78 0020     		movs	r0, #0
 6864 0b7a FFF7FEFF 		bl	TIMER_REG_Write
3393:.\mem1.c      ****                             				GPIO_5_0_SetDriveMode(PIN_DM_DIG_HIZ);
 6865              		.loc 1 3393 0
 6866 0b7e 0220     		movs	r0, #2
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cc7rr7YM.s 			page 182


 6867 0b80 FFF7FEFF 		bl	GPIO_5_0_SetDriveMode
3394:.\mem1.c      ****                             				while (!(Timer_ReadStatusRegister()&Timer_STATUS_TC)){
 6868              		.loc 1 3394 0
 6869 0b84 07E0     		b	.L688
 6870              	.L690:
3395:.\mem1.c      ****                             				if(*(reg8 *)(CYREG_PRT5_PC0)&CY_PINS_PC_PIN_STATE){break;}
 6871              		.loc 1 3395 0
 6872 0b86 724B     		ldr	r3, .L844+8
 6873 0b88 1B78     		ldrb	r3, [r3]
 6874 0b8a DBB2     		uxtb	r3, r3
 6875 0b8c 03F01003 		and	r3, r3, #16
 6876 0b90 002B     		cmp	r3, #0
 6877 0b92 00D0     		beq	.L688
 6878 0b94 06E0     		b	.L689
 6879              	.L688:
3394:.\mem1.c      ****                             				while (!(Timer_ReadStatusRegister()&Timer_STATUS_TC)){
 6880              		.loc 1 3394 0
 6881 0b96 FFF7FEFF 		bl	Timer_ReadStatusRegister
 6882 0b9a 0346     		mov	r3, r0
 6883 0b9c DBB2     		uxtb	r3, r3
 6884 0b9e 5BB2     		sxtb	r3, r3
 6885 0ba0 002B     		cmp	r3, #0
 6886 0ba2 F0DA     		bge	.L690
 6887              	.L689:
3396:.\mem1.c      ****                             				}
3397:.\mem1.c      ****                             				TIMER_REG_Write(1); CyDelayUs(1); TIMER_REG_Write(0);
 6888              		.loc 1 3397 0
 6889 0ba4 0120     		movs	r0, #1
 6890 0ba6 FFF7FEFF 		bl	TIMER_REG_Write
 6891 0baa 0120     		movs	r0, #1
 6892 0bac FFF7FEFF 		bl	CyDelayUs
 6893 0bb0 0020     		movs	r0, #0
 6894 0bb2 FFF7FEFF 		bl	TIMER_REG_Write
3398:.\mem1.c      ****                             				while (!(Timer_ReadStatusRegister()&Timer_STATUS_TC)){
 6895              		.loc 1 3398 0
 6896 0bb6 11E0     		b	.L691
 6897              	.L693:
3399:.\mem1.c      ****                             				if (!(*(reg8 *)(CYREG_PRT5_PC0)&CY_PINS_PC_PIN_STATE)){us_count = T
 6898              		.loc 1 3399 0
 6899 0bb8 654B     		ldr	r3, .L844+8
 6900 0bba 1B78     		ldrb	r3, [r3]
 6901 0bbc DBB2     		uxtb	r3, r3
 6902 0bbe 03F01003 		and	r3, r3, #16
 6903 0bc2 002B     		cmp	r3, #0
 6904 0bc4 0AD1     		bne	.L691
 6905              		.loc 1 3399 0 is_stmt 0 discriminator 1
 6906 0bc6 FFF7FEFF 		bl	Timer_ReadPeriod
 6907 0bca 0346     		mov	r3, r0
 6908 0bcc 1C46     		mov	r4, r3
 6909 0bce FFF7FEFF 		bl	Timer_ReadCounter
 6910 0bd2 0346     		mov	r3, r0
 6911 0bd4 E31A     		subs	r3, r4, r3
 6912 0bd6 0233     		adds	r3, r3, #2
 6913 0bd8 FB60     		str	r3, [r7, #12]
 6914 0bda 06E0     		b	.L692
 6915              	.L691:
3398:.\mem1.c      ****                             				while (!(Timer_ReadStatusRegister()&Timer_STATUS_TC)){
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cc7rr7YM.s 			page 183


 6916              		.loc 1 3398 0 is_stmt 1
 6917 0bdc FFF7FEFF 		bl	Timer_ReadStatusRegister
 6918 0be0 0346     		mov	r3, r0
 6919 0be2 DBB2     		uxtb	r3, r3
 6920 0be4 5BB2     		sxtb	r3, r3
 6921 0be6 002B     		cmp	r3, #0
 6922 0be8 E6DA     		bge	.L693
 6923              	.L692:
3400:.\mem1.c      ****                             				}
3401:.\mem1.c      ****                             			#endif
3402:.\mem1.c      ****                             		break; //0x00
 6924              		.loc 1 3402 0
 6925 0bea A1E1     		b	.L678
 6926              	.L681:
3403:.\mem1.c      ****                             		case 0x01:
3404:.\mem1.c      ****                             			#ifdef CY_PINS_GPIO_5_1_H 
3405:.\mem1.c      ****                             				TIMER_REG_Write(0);
 6927              		.loc 1 3405 0
 6928 0bec 0020     		movs	r0, #0
 6929 0bee FFF7FEFF 		bl	TIMER_REG_Write
3406:.\mem1.c      ****                             				GPIO_5_1_SetDriveMode(PIN_DM_DIG_HIZ);
 6930              		.loc 1 3406 0
 6931 0bf2 0220     		movs	r0, #2
 6932 0bf4 FFF7FEFF 		bl	GPIO_5_1_SetDriveMode
3407:.\mem1.c      ****                             				while (!(Timer_ReadStatusRegister()&Timer_STATUS_TC)){
 6933              		.loc 1 3407 0
 6934 0bf8 07E0     		b	.L694
 6935              	.L696:
3408:.\mem1.c      ****                             				if(*(reg8 *)(CYREG_PRT5_PC1)&CY_PINS_PC_PIN_STATE){break;}
 6936              		.loc 1 3408 0
 6937 0bfa 564B     		ldr	r3, .L844+12
 6938 0bfc 1B78     		ldrb	r3, [r3]
 6939 0bfe DBB2     		uxtb	r3, r3
 6940 0c00 03F01003 		and	r3, r3, #16
 6941 0c04 002B     		cmp	r3, #0
 6942 0c06 00D0     		beq	.L694
 6943 0c08 06E0     		b	.L695
 6944              	.L694:
3407:.\mem1.c      ****                             				while (!(Timer_ReadStatusRegister()&Timer_STATUS_TC)){
 6945              		.loc 1 3407 0
 6946 0c0a FFF7FEFF 		bl	Timer_ReadStatusRegister
 6947 0c0e 0346     		mov	r3, r0
 6948 0c10 DBB2     		uxtb	r3, r3
 6949 0c12 5BB2     		sxtb	r3, r3
 6950 0c14 002B     		cmp	r3, #0
 6951 0c16 F0DA     		bge	.L696
 6952              	.L695:
3409:.\mem1.c      ****                             				}
3410:.\mem1.c      ****                             				TIMER_REG_Write(1); CyDelayUs(1); TIMER_REG_Write(0);
 6953              		.loc 1 3410 0
 6954 0c18 0120     		movs	r0, #1
 6955 0c1a FFF7FEFF 		bl	TIMER_REG_Write
 6956 0c1e 0120     		movs	r0, #1
 6957 0c20 FFF7FEFF 		bl	CyDelayUs
 6958 0c24 0020     		movs	r0, #0
 6959 0c26 FFF7FEFF 		bl	TIMER_REG_Write
3411:.\mem1.c      ****                             				while (!(Timer_ReadStatusRegister()&Timer_STATUS_TC)){
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cc7rr7YM.s 			page 184


 6960              		.loc 1 3411 0
 6961 0c2a 11E0     		b	.L697
 6962              	.L699:
3412:.\mem1.c      ****                             				if (!(*(reg8 *)(CYREG_PRT5_PC1)&CY_PINS_PC_PIN_STATE)){us_count = T
 6963              		.loc 1 3412 0
 6964 0c2c 494B     		ldr	r3, .L844+12
 6965 0c2e 1B78     		ldrb	r3, [r3]
 6966 0c30 DBB2     		uxtb	r3, r3
 6967 0c32 03F01003 		and	r3, r3, #16
 6968 0c36 002B     		cmp	r3, #0
 6969 0c38 0AD1     		bne	.L697
 6970              		.loc 1 3412 0 is_stmt 0 discriminator 1
 6971 0c3a FFF7FEFF 		bl	Timer_ReadPeriod
 6972 0c3e 0346     		mov	r3, r0
 6973 0c40 1C46     		mov	r4, r3
 6974 0c42 FFF7FEFF 		bl	Timer_ReadCounter
 6975 0c46 0346     		mov	r3, r0
 6976 0c48 E31A     		subs	r3, r4, r3
 6977 0c4a 0233     		adds	r3, r3, #2
 6978 0c4c FB60     		str	r3, [r7, #12]
 6979 0c4e 06E0     		b	.L698
 6980              	.L697:
3411:.\mem1.c      ****                             				while (!(Timer_ReadStatusRegister()&Timer_STATUS_TC)){
 6981              		.loc 1 3411 0 is_stmt 1
 6982 0c50 FFF7FEFF 		bl	Timer_ReadStatusRegister
 6983 0c54 0346     		mov	r3, r0
 6984 0c56 DBB2     		uxtb	r3, r3
 6985 0c58 5BB2     		sxtb	r3, r3
 6986 0c5a 002B     		cmp	r3, #0
 6987 0c5c E6DA     		bge	.L699
 6988              	.L698:
3413:.\mem1.c      ****                             				}
3414:.\mem1.c      ****                             			#endif
3415:.\mem1.c      ****                             		break; //0x01
 6989              		.loc 1 3415 0 discriminator 76
 6990 0c5e 67E1     		b	.L678
 6991              	.L682:
3416:.\mem1.c      ****                             		case 0x02:
3417:.\mem1.c      ****                             			#ifdef CY_PINS_GPIO_5_2_H 
3418:.\mem1.c      ****                             				TIMER_REG_Write(0);
 6992              		.loc 1 3418 0
 6993 0c60 0020     		movs	r0, #0
 6994 0c62 FFF7FEFF 		bl	TIMER_REG_Write
3419:.\mem1.c      ****                             				GPIO_5_2_SetDriveMode(PIN_DM_DIG_HIZ);
 6995              		.loc 1 3419 0
 6996 0c66 0220     		movs	r0, #2
 6997 0c68 FFF7FEFF 		bl	GPIO_5_2_SetDriveMode
3420:.\mem1.c      ****                             				while (!(Timer_ReadStatusRegister()&Timer_STATUS_TC)){
 6998              		.loc 1 3420 0
 6999 0c6c 07E0     		b	.L700
 7000              	.L702:
3421:.\mem1.c      ****                             				if(*(reg8 *)(CYREG_PRT5_PC2)&CY_PINS_PC_PIN_STATE){break;}
 7001              		.loc 1 3421 0
 7002 0c6e 3A4B     		ldr	r3, .L844+16
 7003 0c70 1B78     		ldrb	r3, [r3]
 7004 0c72 DBB2     		uxtb	r3, r3
 7005 0c74 03F01003 		and	r3, r3, #16
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cc7rr7YM.s 			page 185


 7006 0c78 002B     		cmp	r3, #0
 7007 0c7a 00D0     		beq	.L700
 7008 0c7c 06E0     		b	.L701
 7009              	.L700:
3420:.\mem1.c      ****                             				while (!(Timer_ReadStatusRegister()&Timer_STATUS_TC)){
 7010              		.loc 1 3420 0
 7011 0c7e FFF7FEFF 		bl	Timer_ReadStatusRegister
 7012 0c82 0346     		mov	r3, r0
 7013 0c84 DBB2     		uxtb	r3, r3
 7014 0c86 5BB2     		sxtb	r3, r3
 7015 0c88 002B     		cmp	r3, #0
 7016 0c8a F0DA     		bge	.L702
 7017              	.L701:
3422:.\mem1.c      ****                             				}
3423:.\mem1.c      ****                             				TIMER_REG_Write(1); CyDelayUs(1); TIMER_REG_Write(0);
 7018              		.loc 1 3423 0
 7019 0c8c 0120     		movs	r0, #1
 7020 0c8e FFF7FEFF 		bl	TIMER_REG_Write
 7021 0c92 0120     		movs	r0, #1
 7022 0c94 FFF7FEFF 		bl	CyDelayUs
 7023 0c98 0020     		movs	r0, #0
 7024 0c9a FFF7FEFF 		bl	TIMER_REG_Write
3424:.\mem1.c      ****                             				while (!(Timer_ReadStatusRegister()&Timer_STATUS_TC)){
 7025              		.loc 1 3424 0
 7026 0c9e 11E0     		b	.L703
 7027              	.L705:
3425:.\mem1.c      ****                             				if (!(*(reg8 *)(CYREG_PRT5_PC2)&CY_PINS_PC_PIN_STATE)){us_count = T
 7028              		.loc 1 3425 0
 7029 0ca0 2D4B     		ldr	r3, .L844+16
 7030 0ca2 1B78     		ldrb	r3, [r3]
 7031 0ca4 DBB2     		uxtb	r3, r3
 7032 0ca6 03F01003 		and	r3, r3, #16
 7033 0caa 002B     		cmp	r3, #0
 7034 0cac 0AD1     		bne	.L703
 7035              		.loc 1 3425 0 is_stmt 0 discriminator 1
 7036 0cae FFF7FEFF 		bl	Timer_ReadPeriod
 7037 0cb2 0346     		mov	r3, r0
 7038 0cb4 1C46     		mov	r4, r3
 7039 0cb6 FFF7FEFF 		bl	Timer_ReadCounter
 7040 0cba 0346     		mov	r3, r0
 7041 0cbc E31A     		subs	r3, r4, r3
 7042 0cbe 0233     		adds	r3, r3, #2
 7043 0cc0 FB60     		str	r3, [r7, #12]
 7044 0cc2 06E0     		b	.L704
 7045              	.L703:
3424:.\mem1.c      ****                             				while (!(Timer_ReadStatusRegister()&Timer_STATUS_TC)){
 7046              		.loc 1 3424 0 is_stmt 1
 7047 0cc4 FFF7FEFF 		bl	Timer_ReadStatusRegister
 7048 0cc8 0346     		mov	r3, r0
 7049 0cca DBB2     		uxtb	r3, r3
 7050 0ccc 5BB2     		sxtb	r3, r3
 7051 0cce 002B     		cmp	r3, #0
 7052 0cd0 E6DA     		bge	.L705
 7053              	.L704:
3426:.\mem1.c      ****                             				}
3427:.\mem1.c      ****                             			#endif
3428:.\mem1.c      ****                             		break; //0x02
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cc7rr7YM.s 			page 186


 7054              		.loc 1 3428 0 discriminator 77
 7055 0cd2 2DE1     		b	.L678
 7056              	.L683:
3429:.\mem1.c      ****                             		case 0x03:
3430:.\mem1.c      ****                             			#ifdef CY_PINS_GPIO_5_3_H 
3431:.\mem1.c      ****                             				TIMER_REG_Write(0);
 7057              		.loc 1 3431 0
 7058 0cd4 0020     		movs	r0, #0
 7059 0cd6 FFF7FEFF 		bl	TIMER_REG_Write
3432:.\mem1.c      ****                             				GPIO_5_3_SetDriveMode(PIN_DM_DIG_HIZ);
 7060              		.loc 1 3432 0
 7061 0cda 0220     		movs	r0, #2
 7062 0cdc FFF7FEFF 		bl	GPIO_5_3_SetDriveMode
3433:.\mem1.c      ****                             				while (!(Timer_ReadStatusRegister()&Timer_STATUS_TC)){
 7063              		.loc 1 3433 0
 7064 0ce0 07E0     		b	.L706
 7065              	.L708:
3434:.\mem1.c      ****                             				if(*(reg8 *)(CYREG_PRT5_PC3)&CY_PINS_PC_PIN_STATE){break;}
 7066              		.loc 1 3434 0
 7067 0ce2 1E4B     		ldr	r3, .L844+20
 7068 0ce4 1B78     		ldrb	r3, [r3]
 7069 0ce6 DBB2     		uxtb	r3, r3
 7070 0ce8 03F01003 		and	r3, r3, #16
 7071 0cec 002B     		cmp	r3, #0
 7072 0cee 00D0     		beq	.L706
 7073 0cf0 06E0     		b	.L707
 7074              	.L706:
3433:.\mem1.c      ****                             				while (!(Timer_ReadStatusRegister()&Timer_STATUS_TC)){
 7075              		.loc 1 3433 0
 7076 0cf2 FFF7FEFF 		bl	Timer_ReadStatusRegister
 7077 0cf6 0346     		mov	r3, r0
 7078 0cf8 DBB2     		uxtb	r3, r3
 7079 0cfa 5BB2     		sxtb	r3, r3
 7080 0cfc 002B     		cmp	r3, #0
 7081 0cfe F0DA     		bge	.L708
 7082              	.L707:
3435:.\mem1.c      ****                             				}
3436:.\mem1.c      ****                             				TIMER_REG_Write(1); CyDelayUs(1); TIMER_REG_Write(0);
 7083              		.loc 1 3436 0
 7084 0d00 0120     		movs	r0, #1
 7085 0d02 FFF7FEFF 		bl	TIMER_REG_Write
 7086 0d06 0120     		movs	r0, #1
 7087 0d08 FFF7FEFF 		bl	CyDelayUs
 7088 0d0c 0020     		movs	r0, #0
 7089 0d0e FFF7FEFF 		bl	TIMER_REG_Write
3437:.\mem1.c      ****                             				while (!(Timer_ReadStatusRegister()&Timer_STATUS_TC)){
 7090              		.loc 1 3437 0
 7091 0d12 11E0     		b	.L709
 7092              	.L711:
3438:.\mem1.c      ****                             				if (!(*(reg8 *)(CYREG_PRT5_PC3)&CY_PINS_PC_PIN_STATE)){us_count = T
 7093              		.loc 1 3438 0
 7094 0d14 114B     		ldr	r3, .L844+20
 7095 0d16 1B78     		ldrb	r3, [r3]
 7096 0d18 DBB2     		uxtb	r3, r3
 7097 0d1a 03F01003 		and	r3, r3, #16
 7098 0d1e 002B     		cmp	r3, #0
 7099 0d20 0AD1     		bne	.L709
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cc7rr7YM.s 			page 187


 7100              		.loc 1 3438 0 is_stmt 0 discriminator 1
 7101 0d22 FFF7FEFF 		bl	Timer_ReadPeriod
 7102 0d26 0346     		mov	r3, r0
 7103 0d28 1C46     		mov	r4, r3
 7104 0d2a FFF7FEFF 		bl	Timer_ReadCounter
 7105 0d2e 0346     		mov	r3, r0
 7106 0d30 E31A     		subs	r3, r4, r3
 7107 0d32 0233     		adds	r3, r3, #2
 7108 0d34 FB60     		str	r3, [r7, #12]
 7109 0d36 06E0     		b	.L710
 7110              	.L709:
3437:.\mem1.c      ****                             				while (!(Timer_ReadStatusRegister()&Timer_STATUS_TC)){
 7111              		.loc 1 3437 0 is_stmt 1
 7112 0d38 FFF7FEFF 		bl	Timer_ReadStatusRegister
 7113 0d3c 0346     		mov	r3, r0
 7114 0d3e DBB2     		uxtb	r3, r3
 7115 0d40 5BB2     		sxtb	r3, r3
 7116 0d42 002B     		cmp	r3, #0
 7117 0d44 E6DA     		bge	.L711
 7118              	.L710:
3439:.\mem1.c      ****                             				}
3440:.\mem1.c      ****                             			#endif
3441:.\mem1.c      ****                             		break; //0x03
 7119              		.loc 1 3441 0 discriminator 78
 7120 0d46 F3E0     		b	.L678
 7121              	.L845:
 7122              		.align	2
 7123              	.L844:
 7124 0d48 16500040 		.word	1073762326
 7125 0d4c 17500040 		.word	1073762327
 7126 0d50 28500040 		.word	1073762344
 7127 0d54 29500040 		.word	1073762345
 7128 0d58 2A500040 		.word	1073762346
 7129 0d5c 2B500040 		.word	1073762347
 7130              	.L684:
3442:.\mem1.c      ****                             		case 0x04:
3443:.\mem1.c      ****                             			#ifdef CY_PINS_GPIO_5_4_H 
3444:.\mem1.c      ****                             				TIMER_REG_Write(0);
 7131              		.loc 1 3444 0
 7132 0d60 0020     		movs	r0, #0
 7133 0d62 FFF7FEFF 		bl	TIMER_REG_Write
3445:.\mem1.c      ****                             				GPIO_5_4_SetDriveMode(PIN_DM_DIG_HIZ);
 7134              		.loc 1 3445 0
 7135 0d66 0220     		movs	r0, #2
 7136 0d68 FFF7FEFF 		bl	GPIO_5_4_SetDriveMode
3446:.\mem1.c      ****                             				while (!(Timer_ReadStatusRegister()&Timer_STATUS_TC)){
 7137              		.loc 1 3446 0
 7138 0d6c 07E0     		b	.L712
 7139              	.L714:
3447:.\mem1.c      ****                             				if(*(reg8 *)(CYREG_PRT5_PC4)&CY_PINS_PC_PIN_STATE){break;}
 7140              		.loc 1 3447 0
 7141 0d6e C34B     		ldr	r3, .L846
 7142 0d70 1B78     		ldrb	r3, [r3]
 7143 0d72 DBB2     		uxtb	r3, r3
 7144 0d74 03F01003 		and	r3, r3, #16
 7145 0d78 002B     		cmp	r3, #0
 7146 0d7a 00D0     		beq	.L712
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cc7rr7YM.s 			page 188


 7147 0d7c 06E0     		b	.L713
 7148              	.L712:
3446:.\mem1.c      ****                             				while (!(Timer_ReadStatusRegister()&Timer_STATUS_TC)){
 7149              		.loc 1 3446 0
 7150 0d7e FFF7FEFF 		bl	Timer_ReadStatusRegister
 7151 0d82 0346     		mov	r3, r0
 7152 0d84 DBB2     		uxtb	r3, r3
 7153 0d86 5BB2     		sxtb	r3, r3
 7154 0d88 002B     		cmp	r3, #0
 7155 0d8a F0DA     		bge	.L714
 7156              	.L713:
3448:.\mem1.c      ****                             				}
3449:.\mem1.c      ****                             				TIMER_REG_Write(1); CyDelayUs(1); TIMER_REG_Write(0);
 7157              		.loc 1 3449 0
 7158 0d8c 0120     		movs	r0, #1
 7159 0d8e FFF7FEFF 		bl	TIMER_REG_Write
 7160 0d92 0120     		movs	r0, #1
 7161 0d94 FFF7FEFF 		bl	CyDelayUs
 7162 0d98 0020     		movs	r0, #0
 7163 0d9a FFF7FEFF 		bl	TIMER_REG_Write
3450:.\mem1.c      ****                             				while (!(Timer_ReadStatusRegister()&Timer_STATUS_TC)){
 7164              		.loc 1 3450 0
 7165 0d9e 11E0     		b	.L715
 7166              	.L717:
3451:.\mem1.c      ****                             				if (!(*(reg8 *)(CYREG_PRT5_PC4)&CY_PINS_PC_PIN_STATE)){us_count = T
 7167              		.loc 1 3451 0
 7168 0da0 B64B     		ldr	r3, .L846
 7169 0da2 1B78     		ldrb	r3, [r3]
 7170 0da4 DBB2     		uxtb	r3, r3
 7171 0da6 03F01003 		and	r3, r3, #16
 7172 0daa 002B     		cmp	r3, #0
 7173 0dac 0AD1     		bne	.L715
 7174              		.loc 1 3451 0 is_stmt 0 discriminator 1
 7175 0dae FFF7FEFF 		bl	Timer_ReadPeriod
 7176 0db2 0346     		mov	r3, r0
 7177 0db4 1C46     		mov	r4, r3
 7178 0db6 FFF7FEFF 		bl	Timer_ReadCounter
 7179 0dba 0346     		mov	r3, r0
 7180 0dbc E31A     		subs	r3, r4, r3
 7181 0dbe 0233     		adds	r3, r3, #2
 7182 0dc0 FB60     		str	r3, [r7, #12]
 7183 0dc2 06E0     		b	.L716
 7184              	.L715:
3450:.\mem1.c      ****                             				while (!(Timer_ReadStatusRegister()&Timer_STATUS_TC)){
 7185              		.loc 1 3450 0 is_stmt 1
 7186 0dc4 FFF7FEFF 		bl	Timer_ReadStatusRegister
 7187 0dc8 0346     		mov	r3, r0
 7188 0dca DBB2     		uxtb	r3, r3
 7189 0dcc 5BB2     		sxtb	r3, r3
 7190 0dce 002B     		cmp	r3, #0
 7191 0dd0 E6DA     		bge	.L717
 7192              	.L716:
3452:.\mem1.c      ****                             				}
3453:.\mem1.c      ****                             			#endif
3454:.\mem1.c      ****                             		break; //0x04
 7193              		.loc 1 3454 0 discriminator 79
 7194 0dd2 ADE0     		b	.L678
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cc7rr7YM.s 			page 189


 7195              	.L685:
3455:.\mem1.c      ****                             		case 0x05:
3456:.\mem1.c      ****                             			#ifdef CY_PINS_GPIO_5_5_H 
3457:.\mem1.c      ****                             				TIMER_REG_Write(0);
 7196              		.loc 1 3457 0
 7197 0dd4 0020     		movs	r0, #0
 7198 0dd6 FFF7FEFF 		bl	TIMER_REG_Write
3458:.\mem1.c      ****                             				GPIO_5_5_SetDriveMode(PIN_DM_DIG_HIZ);
 7199              		.loc 1 3458 0
 7200 0dda 0220     		movs	r0, #2
 7201 0ddc FFF7FEFF 		bl	GPIO_5_5_SetDriveMode
3459:.\mem1.c      ****                             				while (!(Timer_ReadStatusRegister()&Timer_STATUS_TC)){
 7202              		.loc 1 3459 0
 7203 0de0 07E0     		b	.L718
 7204              	.L720:
3460:.\mem1.c      ****                             				if(*(reg8 *)(CYREG_PRT5_PC5)&CY_PINS_PC_PIN_STATE){break;}
 7205              		.loc 1 3460 0
 7206 0de2 A74B     		ldr	r3, .L846+4
 7207 0de4 1B78     		ldrb	r3, [r3]
 7208 0de6 DBB2     		uxtb	r3, r3
 7209 0de8 03F01003 		and	r3, r3, #16
 7210 0dec 002B     		cmp	r3, #0
 7211 0dee 00D0     		beq	.L718
 7212 0df0 06E0     		b	.L719
 7213              	.L718:
3459:.\mem1.c      ****                             				while (!(Timer_ReadStatusRegister()&Timer_STATUS_TC)){
 7214              		.loc 1 3459 0
 7215 0df2 FFF7FEFF 		bl	Timer_ReadStatusRegister
 7216 0df6 0346     		mov	r3, r0
 7217 0df8 DBB2     		uxtb	r3, r3
 7218 0dfa 5BB2     		sxtb	r3, r3
 7219 0dfc 002B     		cmp	r3, #0
 7220 0dfe F0DA     		bge	.L720
 7221              	.L719:
3461:.\mem1.c      ****                             				}
3462:.\mem1.c      ****                             				TIMER_REG_Write(1); CyDelayUs(1); TIMER_REG_Write(0);
 7222              		.loc 1 3462 0
 7223 0e00 0120     		movs	r0, #1
 7224 0e02 FFF7FEFF 		bl	TIMER_REG_Write
 7225 0e06 0120     		movs	r0, #1
 7226 0e08 FFF7FEFF 		bl	CyDelayUs
 7227 0e0c 0020     		movs	r0, #0
 7228 0e0e FFF7FEFF 		bl	TIMER_REG_Write
3463:.\mem1.c      ****                             				while (!(Timer_ReadStatusRegister()&Timer_STATUS_TC)){
 7229              		.loc 1 3463 0
 7230 0e12 11E0     		b	.L721
 7231              	.L723:
3464:.\mem1.c      ****                             				if (!(*(reg8 *)(CYREG_PRT5_PC5)&CY_PINS_PC_PIN_STATE)){us_count = T
 7232              		.loc 1 3464 0
 7233 0e14 9A4B     		ldr	r3, .L846+4
 7234 0e16 1B78     		ldrb	r3, [r3]
 7235 0e18 DBB2     		uxtb	r3, r3
 7236 0e1a 03F01003 		and	r3, r3, #16
 7237 0e1e 002B     		cmp	r3, #0
 7238 0e20 0AD1     		bne	.L721
 7239              		.loc 1 3464 0 is_stmt 0 discriminator 1
 7240 0e22 FFF7FEFF 		bl	Timer_ReadPeriod
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cc7rr7YM.s 			page 190


 7241 0e26 0346     		mov	r3, r0
 7242 0e28 1C46     		mov	r4, r3
 7243 0e2a FFF7FEFF 		bl	Timer_ReadCounter
 7244 0e2e 0346     		mov	r3, r0
 7245 0e30 E31A     		subs	r3, r4, r3
 7246 0e32 0233     		adds	r3, r3, #2
 7247 0e34 FB60     		str	r3, [r7, #12]
 7248 0e36 06E0     		b	.L722
 7249              	.L721:
3463:.\mem1.c      ****                             				while (!(Timer_ReadStatusRegister()&Timer_STATUS_TC)){
 7250              		.loc 1 3463 0 is_stmt 1
 7251 0e38 FFF7FEFF 		bl	Timer_ReadStatusRegister
 7252 0e3c 0346     		mov	r3, r0
 7253 0e3e DBB2     		uxtb	r3, r3
 7254 0e40 5BB2     		sxtb	r3, r3
 7255 0e42 002B     		cmp	r3, #0
 7256 0e44 E6DA     		bge	.L723
 7257              	.L722:
3465:.\mem1.c      ****                             				}
3466:.\mem1.c      ****                             			#endif
3467:.\mem1.c      ****                             		break; //0x05
 7258              		.loc 1 3467 0 discriminator 80
 7259 0e46 73E0     		b	.L678
 7260              	.L686:
3468:.\mem1.c      ****                             		case 0x06:
3469:.\mem1.c      ****                             			#ifdef CY_PINS_GPIO_5_6_H 
3470:.\mem1.c      ****                             				TIMER_REG_Write(0);
 7261              		.loc 1 3470 0
 7262 0e48 0020     		movs	r0, #0
 7263 0e4a FFF7FEFF 		bl	TIMER_REG_Write
3471:.\mem1.c      ****                             				GPIO_5_6_SetDriveMode(PIN_DM_DIG_HIZ);
 7264              		.loc 1 3471 0
 7265 0e4e 0220     		movs	r0, #2
 7266 0e50 FFF7FEFF 		bl	GPIO_5_6_SetDriveMode
3472:.\mem1.c      ****                             				while (!(Timer_ReadStatusRegister()&Timer_STATUS_TC)){
 7267              		.loc 1 3472 0
 7268 0e54 07E0     		b	.L724
 7269              	.L726:
3473:.\mem1.c      ****                             				if(*(reg8 *)(CYREG_PRT5_PC6)&CY_PINS_PC_PIN_STATE){break;}
 7270              		.loc 1 3473 0
 7271 0e56 8B4B     		ldr	r3, .L846+8
 7272 0e58 1B78     		ldrb	r3, [r3]
 7273 0e5a DBB2     		uxtb	r3, r3
 7274 0e5c 03F01003 		and	r3, r3, #16
 7275 0e60 002B     		cmp	r3, #0
 7276 0e62 00D0     		beq	.L724
 7277 0e64 06E0     		b	.L725
 7278              	.L724:
3472:.\mem1.c      ****                             				while (!(Timer_ReadStatusRegister()&Timer_STATUS_TC)){
 7279              		.loc 1 3472 0
 7280 0e66 FFF7FEFF 		bl	Timer_ReadStatusRegister
 7281 0e6a 0346     		mov	r3, r0
 7282 0e6c DBB2     		uxtb	r3, r3
 7283 0e6e 5BB2     		sxtb	r3, r3
 7284 0e70 002B     		cmp	r3, #0
 7285 0e72 F0DA     		bge	.L726
 7286              	.L725:
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cc7rr7YM.s 			page 191


3474:.\mem1.c      ****                             				}
3475:.\mem1.c      ****                             				TIMER_REG_Write(1); CyDelayUs(1); TIMER_REG_Write(0);
 7287              		.loc 1 3475 0
 7288 0e74 0120     		movs	r0, #1
 7289 0e76 FFF7FEFF 		bl	TIMER_REG_Write
 7290 0e7a 0120     		movs	r0, #1
 7291 0e7c FFF7FEFF 		bl	CyDelayUs
 7292 0e80 0020     		movs	r0, #0
 7293 0e82 FFF7FEFF 		bl	TIMER_REG_Write
3476:.\mem1.c      ****                             				while (!(Timer_ReadStatusRegister()&Timer_STATUS_TC)){
 7294              		.loc 1 3476 0
 7295 0e86 11E0     		b	.L727
 7296              	.L729:
3477:.\mem1.c      ****                             				if (!(*(reg8 *)(CYREG_PRT5_PC6)&CY_PINS_PC_PIN_STATE)){us_count = T
 7297              		.loc 1 3477 0
 7298 0e88 7E4B     		ldr	r3, .L846+8
 7299 0e8a 1B78     		ldrb	r3, [r3]
 7300 0e8c DBB2     		uxtb	r3, r3
 7301 0e8e 03F01003 		and	r3, r3, #16
 7302 0e92 002B     		cmp	r3, #0
 7303 0e94 0AD1     		bne	.L727
 7304              		.loc 1 3477 0 is_stmt 0 discriminator 1
 7305 0e96 FFF7FEFF 		bl	Timer_ReadPeriod
 7306 0e9a 0346     		mov	r3, r0
 7307 0e9c 1C46     		mov	r4, r3
 7308 0e9e FFF7FEFF 		bl	Timer_ReadCounter
 7309 0ea2 0346     		mov	r3, r0
 7310 0ea4 E31A     		subs	r3, r4, r3
 7311 0ea6 0233     		adds	r3, r3, #2
 7312 0ea8 FB60     		str	r3, [r7, #12]
 7313 0eaa 06E0     		b	.L728
 7314              	.L727:
3476:.\mem1.c      ****                             				while (!(Timer_ReadStatusRegister()&Timer_STATUS_TC)){
 7315              		.loc 1 3476 0 is_stmt 1
 7316 0eac FFF7FEFF 		bl	Timer_ReadStatusRegister
 7317 0eb0 0346     		mov	r3, r0
 7318 0eb2 DBB2     		uxtb	r3, r3
 7319 0eb4 5BB2     		sxtb	r3, r3
 7320 0eb6 002B     		cmp	r3, #0
 7321 0eb8 E6DA     		bge	.L729
 7322              	.L728:
3478:.\mem1.c      ****                             				}
3479:.\mem1.c      ****                             			#endif
3480:.\mem1.c      ****                             		break; //0x06
 7323              		.loc 1 3480 0 discriminator 81
 7324 0eba 39E0     		b	.L678
 7325              	.L687:
3481:.\mem1.c      ****                             		case 0x07:
3482:.\mem1.c      ****                             			#ifdef CY_PINS_GPIO_5_7_H 
3483:.\mem1.c      ****                             				TIMER_REG_Write(0);
 7326              		.loc 1 3483 0
 7327 0ebc 0020     		movs	r0, #0
 7328 0ebe FFF7FEFF 		bl	TIMER_REG_Write
3484:.\mem1.c      ****                             				GPIO_5_7_SetDriveMode(PIN_DM_DIG_HIZ);
 7329              		.loc 1 3484 0
 7330 0ec2 0220     		movs	r0, #2
 7331 0ec4 FFF7FEFF 		bl	GPIO_5_7_SetDriveMode
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cc7rr7YM.s 			page 192


3485:.\mem1.c      ****                             				while (!(Timer_ReadStatusRegister()&Timer_STATUS_TC)){
 7332              		.loc 1 3485 0
 7333 0ec8 07E0     		b	.L730
 7334              	.L732:
3486:.\mem1.c      ****                             				if(*(reg8 *)(CYREG_PRT5_PC7)&CY_PINS_PC_PIN_STATE){break;}
 7335              		.loc 1 3486 0
 7336 0eca 6F4B     		ldr	r3, .L846+12
 7337 0ecc 1B78     		ldrb	r3, [r3]
 7338 0ece DBB2     		uxtb	r3, r3
 7339 0ed0 03F01003 		and	r3, r3, #16
 7340 0ed4 002B     		cmp	r3, #0
 7341 0ed6 00D0     		beq	.L730
 7342 0ed8 06E0     		b	.L731
 7343              	.L730:
3485:.\mem1.c      ****                             				while (!(Timer_ReadStatusRegister()&Timer_STATUS_TC)){
 7344              		.loc 1 3485 0
 7345 0eda FFF7FEFF 		bl	Timer_ReadStatusRegister
 7346 0ede 0346     		mov	r3, r0
 7347 0ee0 DBB2     		uxtb	r3, r3
 7348 0ee2 5BB2     		sxtb	r3, r3
 7349 0ee4 002B     		cmp	r3, #0
 7350 0ee6 F0DA     		bge	.L732
 7351              	.L731:
3487:.\mem1.c      ****                             				}
3488:.\mem1.c      ****                             				TIMER_REG_Write(1); CyDelayUs(1); TIMER_REG_Write(0);
 7352              		.loc 1 3488 0
 7353 0ee8 0120     		movs	r0, #1
 7354 0eea FFF7FEFF 		bl	TIMER_REG_Write
 7355 0eee 0120     		movs	r0, #1
 7356 0ef0 FFF7FEFF 		bl	CyDelayUs
 7357 0ef4 0020     		movs	r0, #0
 7358 0ef6 FFF7FEFF 		bl	TIMER_REG_Write
3489:.\mem1.c      ****                             				while (!(Timer_ReadStatusRegister()&Timer_STATUS_TC)){
 7359              		.loc 1 3489 0
 7360 0efa 11E0     		b	.L733
 7361              	.L735:
3490:.\mem1.c      ****                             				if (!(*(reg8 *)(CYREG_PRT5_PC7)&CY_PINS_PC_PIN_STATE)){us_count = T
 7362              		.loc 1 3490 0
 7363 0efc 624B     		ldr	r3, .L846+12
 7364 0efe 1B78     		ldrb	r3, [r3]
 7365 0f00 DBB2     		uxtb	r3, r3
 7366 0f02 03F01003 		and	r3, r3, #16
 7367 0f06 002B     		cmp	r3, #0
 7368 0f08 0AD1     		bne	.L733
 7369              		.loc 1 3490 0 is_stmt 0 discriminator 1
 7370 0f0a FFF7FEFF 		bl	Timer_ReadPeriod
 7371 0f0e 0346     		mov	r3, r0
 7372 0f10 1C46     		mov	r4, r3
 7373 0f12 FFF7FEFF 		bl	Timer_ReadCounter
 7374 0f16 0346     		mov	r3, r0
 7375 0f18 E31A     		subs	r3, r4, r3
 7376 0f1a 0233     		adds	r3, r3, #2
 7377 0f1c FB60     		str	r3, [r7, #12]
 7378 0f1e 06E0     		b	.L734
 7379              	.L733:
3489:.\mem1.c      ****                             				while (!(Timer_ReadStatusRegister()&Timer_STATUS_TC)){
 7380              		.loc 1 3489 0 is_stmt 1
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cc7rr7YM.s 			page 193


 7381 0f20 FFF7FEFF 		bl	Timer_ReadStatusRegister
 7382 0f24 0346     		mov	r3, r0
 7383 0f26 DBB2     		uxtb	r3, r3
 7384 0f28 5BB2     		sxtb	r3, r3
 7385 0f2a 002B     		cmp	r3, #0
 7386 0f2c E6DA     		bge	.L735
 7387              	.L734:
3491:.\mem1.c      ****                             				}
3492:.\mem1.c      ****                             			#endif
3493:.\mem1.c      ****                             		break; //0x07
 7388              		.loc 1 3493 0 discriminator 82
 7389 0f2e 00BF     		nop
 7390              	.L678:
3494:.\mem1.c      ****                             	}
3495:.\mem1.c      ****                             break; //0x05
 7391              		.loc 1 3495 0 discriminator 75
 7392 0f30 2EE2     		b	.L836
 7393              	.L588:
3496:.\mem1.c      ****                             case 0x06:
3497:.\mem1.c      ****                             	switch(pin)
 7394              		.loc 1 3497 0
 7395 0f32 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 7396 0f34 072B     		cmp	r3, #7
 7397 0f36 00F22D82 		bhi	.L837
 7398 0f3a 01A2     		adr	r2, .L738
 7399 0f3c 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 7400              		.p2align 2
 7401              	.L738:
 7402 0f40 610F0000 		.word	.L838+1
 7403 0f44 610F0000 		.word	.L838+1
 7404 0f48 610F0000 		.word	.L838+1
 7405 0f4c 610F0000 		.word	.L838+1
 7406 0f50 610F0000 		.word	.L838+1
 7407 0f54 610F0000 		.word	.L838+1
 7408 0f58 610F0000 		.word	.L838+1
 7409 0f5c 610F0000 		.word	.L838+1
 7410              		.p2align 1
 7411              	.L838:
3498:.\mem1.c      ****                             	{
3499:.\mem1.c      ****                             		case 0x00:
3500:.\mem1.c      ****                             			#ifdef CY_PINS_GPIO_6_0_H 
3501:.\mem1.c      ****                             				TIMER_REG_Write(0);
3502:.\mem1.c      ****                             				GPIO_6_0_SetDriveMode(PIN_DM_DIG_HIZ);
3503:.\mem1.c      ****                             				while (!(Timer_ReadStatusRegister()&Timer_STATUS_TC)){
3504:.\mem1.c      ****                             				if(*(reg8 *)(CYREG_PRT6_PC0)&CY_PINS_PC_PIN_STATE){break;}
3505:.\mem1.c      ****                             				}
3506:.\mem1.c      ****                             				TIMER_REG_Write(1); CyDelayUs(1); TIMER_REG_Write(0);
3507:.\mem1.c      ****                             				while (!(Timer_ReadStatusRegister()&Timer_STATUS_TC)){
3508:.\mem1.c      ****                             				if (!(*(reg8 *)(CYREG_PRT6_PC0)&CY_PINS_PC_PIN_STATE)){us_count = T
3509:.\mem1.c      ****                             				}
3510:.\mem1.c      ****                             			#endif
3511:.\mem1.c      ****                             		break; //0x00
 7412              		.loc 1 3511 0
 7413 0f60 00BF     		nop
3512:.\mem1.c      ****                             		case 0x01:
3513:.\mem1.c      ****                             			#ifdef CY_PINS_GPIO_6_1_H 
3514:.\mem1.c      ****                             				TIMER_REG_Write(0);
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cc7rr7YM.s 			page 194


3515:.\mem1.c      ****                             				GPIO_6_1_SetDriveMode(PIN_DM_DIG_HIZ);
3516:.\mem1.c      ****                             				while (!(Timer_ReadStatusRegister()&Timer_STATUS_TC)){
3517:.\mem1.c      ****                             				if(*(reg8 *)(CYREG_PRT6_PC1)&CY_PINS_PC_PIN_STATE){break;}
3518:.\mem1.c      ****                             				}
3519:.\mem1.c      ****                             				TIMER_REG_Write(1); CyDelayUs(1); TIMER_REG_Write(0);
3520:.\mem1.c      ****                             				while (!(Timer_ReadStatusRegister()&Timer_STATUS_TC)){
3521:.\mem1.c      ****                             				if (!(*(reg8 *)(CYREG_PRT6_PC1)&CY_PINS_PC_PIN_STATE)){us_count = T
3522:.\mem1.c      ****                             				}
3523:.\mem1.c      ****                             			#endif
3524:.\mem1.c      ****                             		break; //0x01
3525:.\mem1.c      ****                             		case 0x02:
3526:.\mem1.c      ****                             			#ifdef CY_PINS_GPIO_6_2_H 
3527:.\mem1.c      ****                             				TIMER_REG_Write(0);
3528:.\mem1.c      ****                             				GPIO_6_2_SetDriveMode(PIN_DM_DIG_HIZ);
3529:.\mem1.c      ****                             				while (!(Timer_ReadStatusRegister()&Timer_STATUS_TC)){
3530:.\mem1.c      ****                             				if(*(reg8 *)(CYREG_PRT6_PC2)&CY_PINS_PC_PIN_STATE){break;}
3531:.\mem1.c      ****                             				}
3532:.\mem1.c      ****                             				TIMER_REG_Write(1); CyDelayUs(1); TIMER_REG_Write(0);
3533:.\mem1.c      ****                             				while (!(Timer_ReadStatusRegister()&Timer_STATUS_TC)){
3534:.\mem1.c      ****                             				if (!(*(reg8 *)(CYREG_PRT6_PC2)&CY_PINS_PC_PIN_STATE)){us_count = T
3535:.\mem1.c      ****                             				}
3536:.\mem1.c      ****                             			#endif
3537:.\mem1.c      ****                             		break; //0x02
3538:.\mem1.c      ****                             		case 0x03:
3539:.\mem1.c      ****                             			#ifdef CY_PINS_GPIO_6_3_H 
3540:.\mem1.c      ****                             				TIMER_REG_Write(0);
3541:.\mem1.c      ****                             				GPIO_6_3_SetDriveMode(PIN_DM_DIG_HIZ);
3542:.\mem1.c      ****                             				while (!(Timer_ReadStatusRegister()&Timer_STATUS_TC)){
3543:.\mem1.c      ****                             				if(*(reg8 *)(CYREG_PRT6_PC3)&CY_PINS_PC_PIN_STATE){break;}
3544:.\mem1.c      ****                             				}
3545:.\mem1.c      ****                             				TIMER_REG_Write(1); CyDelayUs(1); TIMER_REG_Write(0);
3546:.\mem1.c      ****                             				while (!(Timer_ReadStatusRegister()&Timer_STATUS_TC)){
3547:.\mem1.c      ****                             				if (!(*(reg8 *)(CYREG_PRT6_PC3)&CY_PINS_PC_PIN_STATE)){us_count = T
3548:.\mem1.c      ****                             				}
3549:.\mem1.c      ****                             			#endif
3550:.\mem1.c      ****                             		break; //0x03
3551:.\mem1.c      ****                             		case 0x04:
3552:.\mem1.c      ****                             			#ifdef CY_PINS_GPIO_6_4_H 
3553:.\mem1.c      ****                             				TIMER_REG_Write(0);
3554:.\mem1.c      ****                             				GPIO_6_4_SetDriveMode(PIN_DM_DIG_HIZ);
3555:.\mem1.c      ****                             				while (!(Timer_ReadStatusRegister()&Timer_STATUS_TC)){
3556:.\mem1.c      ****                             				if(*(reg8 *)(CYREG_PRT6_PC4)&CY_PINS_PC_PIN_STATE){break;}
3557:.\mem1.c      ****                             				}
3558:.\mem1.c      ****                             				TIMER_REG_Write(1); CyDelayUs(1); TIMER_REG_Write(0);
3559:.\mem1.c      ****                             				while (!(Timer_ReadStatusRegister()&Timer_STATUS_TC)){
3560:.\mem1.c      ****                             				if (!(*(reg8 *)(CYREG_PRT6_PC4)&CY_PINS_PC_PIN_STATE)){us_count = T
3561:.\mem1.c      ****                             				}
3562:.\mem1.c      ****                             			#endif
3563:.\mem1.c      ****                             		break; //0x04
3564:.\mem1.c      ****                             		case 0x05:
3565:.\mem1.c      ****                             			#ifdef CY_PINS_GPIO_6_5_H 
3566:.\mem1.c      ****                             				TIMER_REG_Write(0);
3567:.\mem1.c      ****                             				GPIO_6_5_SetDriveMode(PIN_DM_DIG_HIZ);
3568:.\mem1.c      ****                             				while (!(Timer_ReadStatusRegister()&Timer_STATUS_TC)){
3569:.\mem1.c      ****                             				if(*(reg8 *)(CYREG_PRT6_PC5)&CY_PINS_PC_PIN_STATE){break;}
3570:.\mem1.c      ****                             				}
3571:.\mem1.c      ****                             				TIMER_REG_Write(1); CyDelayUs(1); TIMER_REG_Write(0);
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cc7rr7YM.s 			page 195


3572:.\mem1.c      ****                             				while (!(Timer_ReadStatusRegister()&Timer_STATUS_TC)){
3573:.\mem1.c      ****                             				if (!(*(reg8 *)(CYREG_PRT6_PC5)&CY_PINS_PC_PIN_STATE)){us_count = T
3574:.\mem1.c      ****                             				}
3575:.\mem1.c      ****                             			#endif
3576:.\mem1.c      ****                             		break; //0x05
3577:.\mem1.c      ****                             		case 0x06:
3578:.\mem1.c      ****                             			#ifdef CY_PINS_GPIO_6_6_H 
3579:.\mem1.c      ****                             				TIMER_REG_Write(0);
3580:.\mem1.c      ****                             				GPIO_6_6_SetDriveMode(PIN_DM_DIG_HIZ);
3581:.\mem1.c      ****                             				while (!(Timer_ReadStatusRegister()&Timer_STATUS_TC)){
3582:.\mem1.c      ****                             				if(*(reg8 *)(CYREG_PRT6_PC6)&CY_PINS_PC_PIN_STATE){break;}
3583:.\mem1.c      ****                             				}
3584:.\mem1.c      ****                             				TIMER_REG_Write(1); CyDelayUs(1); TIMER_REG_Write(0);
3585:.\mem1.c      ****                             				while (!(Timer_ReadStatusRegister()&Timer_STATUS_TC)){
3586:.\mem1.c      ****                             				if (!(*(reg8 *)(CYREG_PRT6_PC6)&CY_PINS_PC_PIN_STATE)){us_count = T
3587:.\mem1.c      ****                             				}
3588:.\mem1.c      ****                             			#endif
3589:.\mem1.c      ****                             		break; //0x06
3590:.\mem1.c      ****                             		case 0x07:
3591:.\mem1.c      ****                             			#ifdef CY_PINS_GPIO_6_7_H 
3592:.\mem1.c      ****                             				TIMER_REG_Write(0);
3593:.\mem1.c      ****                             				GPIO_6_7_SetDriveMode(PIN_DM_DIG_HIZ);
3594:.\mem1.c      ****                             				while (!(Timer_ReadStatusRegister()&Timer_STATUS_TC)){
3595:.\mem1.c      ****                             				if(*(reg8 *)(CYREG_PRT6_PC7)&CY_PINS_PC_PIN_STATE){break;}
3596:.\mem1.c      ****                             				}
3597:.\mem1.c      ****                             				TIMER_REG_Write(1); CyDelayUs(1); TIMER_REG_Write(0);
3598:.\mem1.c      ****                             				while (!(Timer_ReadStatusRegister()&Timer_STATUS_TC)){
3599:.\mem1.c      ****                             				if (!(*(reg8 *)(CYREG_PRT6_PC7)&CY_PINS_PC_PIN_STATE)){us_count = T
3600:.\mem1.c      ****                             				}
3601:.\mem1.c      ****                             			#endif
3602:.\mem1.c      ****                             		break; //0x07
3603:.\mem1.c      ****                             	}
3604:.\mem1.c      ****                             break; //0x06
 7414              		.loc 1 3604 0
 7415 0f62 17E2     		b	.L837
 7416              	.L589:
3605:.\mem1.c      ****                             case 0x0C:
3606:.\mem1.c      ****                             	switch(pin)
 7417              		.loc 1 3606 0
 7418 0f64 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 7419 0f66 072B     		cmp	r3, #7
 7420 0f68 00F21682 		bhi	.L839
 7421 0f6c 01A2     		adr	r2, .L748
 7422 0f6e 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 7423 0f72 00BF     		.p2align 2
 7424              	.L748:
 7425 0f74 950F0000 		.word	.L747+1
 7426 0f78 09100000 		.word	.L749+1
 7427 0f7c 95100000 		.word	.L750+1
 7428 0f80 09110000 		.word	.L751+1
 7429 0f84 7D110000 		.word	.L752+1
 7430 0f88 F1110000 		.word	.L753+1
 7431 0f8c 65120000 		.word	.L754+1
 7432 0f90 D9120000 		.word	.L755+1
 7433              		.p2align 1
 7434              	.L747:
3607:.\mem1.c      ****                             	{
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cc7rr7YM.s 			page 196


3608:.\mem1.c      ****                             		case 0x00:
3609:.\mem1.c      ****                             			#ifdef CY_PINS_GPIO_12_0_H 
3610:.\mem1.c      ****                             				TIMER_REG_Write(0);
 7435              		.loc 1 3610 0
 7436 0f94 0020     		movs	r0, #0
 7437 0f96 FFF7FEFF 		bl	TIMER_REG_Write
3611:.\mem1.c      ****                             				GPIO_12_0_SetDriveMode(PIN_DM_DIG_HIZ);
 7438              		.loc 1 3611 0
 7439 0f9a 0220     		movs	r0, #2
 7440 0f9c FFF7FEFF 		bl	GPIO_12_0_SetDriveMode
3612:.\mem1.c      ****                             				while (!(Timer_ReadStatusRegister()&Timer_STATUS_TC)){
 7441              		.loc 1 3612 0
 7442 0fa0 07E0     		b	.L756
 7443              	.L758:
3613:.\mem1.c      ****                             				if(*(reg8 *)(CYREG_PRT12_PC0)&CY_PINS_PC_PIN_STATE){break;}
 7444              		.loc 1 3613 0
 7445 0fa2 3A4B     		ldr	r3, .L846+16
 7446 0fa4 1B78     		ldrb	r3, [r3]
 7447 0fa6 DBB2     		uxtb	r3, r3
 7448 0fa8 03F01003 		and	r3, r3, #16
 7449 0fac 002B     		cmp	r3, #0
 7450 0fae 00D0     		beq	.L756
 7451 0fb0 06E0     		b	.L757
 7452              	.L756:
3612:.\mem1.c      ****                             				while (!(Timer_ReadStatusRegister()&Timer_STATUS_TC)){
 7453              		.loc 1 3612 0
 7454 0fb2 FFF7FEFF 		bl	Timer_ReadStatusRegister
 7455 0fb6 0346     		mov	r3, r0
 7456 0fb8 DBB2     		uxtb	r3, r3
 7457 0fba 5BB2     		sxtb	r3, r3
 7458 0fbc 002B     		cmp	r3, #0
 7459 0fbe F0DA     		bge	.L758
 7460              	.L757:
3614:.\mem1.c      ****                             				}
3615:.\mem1.c      ****                             				TIMER_REG_Write(1); CyDelayUs(1); TIMER_REG_Write(0);
 7461              		.loc 1 3615 0
 7462 0fc0 0120     		movs	r0, #1
 7463 0fc2 FFF7FEFF 		bl	TIMER_REG_Write
 7464 0fc6 0120     		movs	r0, #1
 7465 0fc8 FFF7FEFF 		bl	CyDelayUs
 7466 0fcc 0020     		movs	r0, #0
 7467 0fce FFF7FEFF 		bl	TIMER_REG_Write
3616:.\mem1.c      ****                             				while (!(Timer_ReadStatusRegister()&Timer_STATUS_TC)){
 7468              		.loc 1 3616 0
 7469 0fd2 11E0     		b	.L759
 7470              	.L761:
3617:.\mem1.c      ****                             				if (!(*(reg8 *)(CYREG_PRT12_PC0)&CY_PINS_PC_PIN_STATE)){us_count = 
 7471              		.loc 1 3617 0
 7472 0fd4 2D4B     		ldr	r3, .L846+16
 7473 0fd6 1B78     		ldrb	r3, [r3]
 7474 0fd8 DBB2     		uxtb	r3, r3
 7475 0fda 03F01003 		and	r3, r3, #16
 7476 0fde 002B     		cmp	r3, #0
 7477 0fe0 0AD1     		bne	.L759
 7478              		.loc 1 3617 0 is_stmt 0 discriminator 1
 7479 0fe2 FFF7FEFF 		bl	Timer_ReadPeriod
 7480 0fe6 0346     		mov	r3, r0
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cc7rr7YM.s 			page 197


 7481 0fe8 1C46     		mov	r4, r3
 7482 0fea FFF7FEFF 		bl	Timer_ReadCounter
 7483 0fee 0346     		mov	r3, r0
 7484 0ff0 E31A     		subs	r3, r4, r3
 7485 0ff2 0233     		adds	r3, r3, #2
 7486 0ff4 FB60     		str	r3, [r7, #12]
 7487 0ff6 06E0     		b	.L760
 7488              	.L759:
3616:.\mem1.c      ****                             				while (!(Timer_ReadStatusRegister()&Timer_STATUS_TC)){
 7489              		.loc 1 3616 0 is_stmt 1
 7490 0ff8 FFF7FEFF 		bl	Timer_ReadStatusRegister
 7491 0ffc 0346     		mov	r3, r0
 7492 0ffe DBB2     		uxtb	r3, r3
 7493 1000 5BB2     		sxtb	r3, r3
 7494 1002 002B     		cmp	r3, #0
 7495 1004 E6DA     		bge	.L761
 7496              	.L760:
3618:.\mem1.c      ****                             				}
3619:.\mem1.c      ****                             			#endif
3620:.\mem1.c      ****                             		break; //0x00
 7497              		.loc 1 3620 0
 7498 1006 A1E1     		b	.L746
 7499              	.L749:
3621:.\mem1.c      ****                             		case 0x01:
3622:.\mem1.c      ****                             			#ifdef CY_PINS_GPIO_12_1_H 
3623:.\mem1.c      ****                             				TIMER_REG_Write(0);
 7500              		.loc 1 3623 0
 7501 1008 0020     		movs	r0, #0
 7502 100a FFF7FEFF 		bl	TIMER_REG_Write
3624:.\mem1.c      ****                             				GPIO_12_1_SetDriveMode(PIN_DM_DIG_HIZ);
 7503              		.loc 1 3624 0
 7504 100e 0220     		movs	r0, #2
 7505 1010 FFF7FEFF 		bl	GPIO_12_1_SetDriveMode
3625:.\mem1.c      ****                             				while (!(Timer_ReadStatusRegister()&Timer_STATUS_TC)){
 7506              		.loc 1 3625 0
 7507 1014 07E0     		b	.L762
 7508              	.L764:
3626:.\mem1.c      ****                             				if(*(reg8 *)(CYREG_PRT12_PC1)&CY_PINS_PC_PIN_STATE){break;}
 7509              		.loc 1 3626 0
 7510 1016 1E4B     		ldr	r3, .L846+20
 7511 1018 1B78     		ldrb	r3, [r3]
 7512 101a DBB2     		uxtb	r3, r3
 7513 101c 03F01003 		and	r3, r3, #16
 7514 1020 002B     		cmp	r3, #0
 7515 1022 00D0     		beq	.L762
 7516 1024 06E0     		b	.L763
 7517              	.L762:
3625:.\mem1.c      ****                             				while (!(Timer_ReadStatusRegister()&Timer_STATUS_TC)){
 7518              		.loc 1 3625 0
 7519 1026 FFF7FEFF 		bl	Timer_ReadStatusRegister
 7520 102a 0346     		mov	r3, r0
 7521 102c DBB2     		uxtb	r3, r3
 7522 102e 5BB2     		sxtb	r3, r3
 7523 1030 002B     		cmp	r3, #0
 7524 1032 F0DA     		bge	.L764
 7525              	.L763:
3627:.\mem1.c      ****                             				}
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cc7rr7YM.s 			page 198


3628:.\mem1.c      ****                             				TIMER_REG_Write(1); CyDelayUs(1); TIMER_REG_Write(0);
 7526              		.loc 1 3628 0
 7527 1034 0120     		movs	r0, #1
 7528 1036 FFF7FEFF 		bl	TIMER_REG_Write
 7529 103a 0120     		movs	r0, #1
 7530 103c FFF7FEFF 		bl	CyDelayUs
 7531 1040 0020     		movs	r0, #0
 7532 1042 FFF7FEFF 		bl	TIMER_REG_Write
3629:.\mem1.c      ****                             				while (!(Timer_ReadStatusRegister()&Timer_STATUS_TC)){
 7533              		.loc 1 3629 0
 7534 1046 11E0     		b	.L765
 7535              	.L767:
3630:.\mem1.c      ****                             				if (!(*(reg8 *)(CYREG_PRT12_PC1)&CY_PINS_PC_PIN_STATE)){us_count = 
 7536              		.loc 1 3630 0
 7537 1048 114B     		ldr	r3, .L846+20
 7538 104a 1B78     		ldrb	r3, [r3]
 7539 104c DBB2     		uxtb	r3, r3
 7540 104e 03F01003 		and	r3, r3, #16
 7541 1052 002B     		cmp	r3, #0
 7542 1054 0AD1     		bne	.L765
 7543              		.loc 1 3630 0 is_stmt 0 discriminator 1
 7544 1056 FFF7FEFF 		bl	Timer_ReadPeriod
 7545 105a 0346     		mov	r3, r0
 7546 105c 1C46     		mov	r4, r3
 7547 105e FFF7FEFF 		bl	Timer_ReadCounter
 7548 1062 0346     		mov	r3, r0
 7549 1064 E31A     		subs	r3, r4, r3
 7550 1066 0233     		adds	r3, r3, #2
 7551 1068 FB60     		str	r3, [r7, #12]
 7552 106a 06E0     		b	.L766
 7553              	.L765:
3629:.\mem1.c      ****                             				while (!(Timer_ReadStatusRegister()&Timer_STATUS_TC)){
 7554              		.loc 1 3629 0 is_stmt 1
 7555 106c FFF7FEFF 		bl	Timer_ReadStatusRegister
 7556 1070 0346     		mov	r3, r0
 7557 1072 DBB2     		uxtb	r3, r3
 7558 1074 5BB2     		sxtb	r3, r3
 7559 1076 002B     		cmp	r3, #0
 7560 1078 E6DA     		bge	.L767
 7561              	.L766:
3631:.\mem1.c      ****                             				}
3632:.\mem1.c      ****                             			#endif
3633:.\mem1.c      ****                             		break; //0x01
 7562              		.loc 1 3633 0 discriminator 94
 7563 107a 67E1     		b	.L746
 7564              	.L847:
 7565              		.align	2
 7566              	.L846:
 7567 107c 2C500040 		.word	1073762348
 7568 1080 2D500040 		.word	1073762349
 7569 1084 2E500040 		.word	1073762350
 7570 1088 2F500040 		.word	1073762351
 7571 108c 60500040 		.word	1073762400
 7572 1090 61500040 		.word	1073762401
 7573              	.L750:
3634:.\mem1.c      ****                             		case 0x02:
3635:.\mem1.c      ****                             			#ifdef CY_PINS_GPIO_12_2_H 
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cc7rr7YM.s 			page 199


3636:.\mem1.c      ****                             				TIMER_REG_Write(0);
 7574              		.loc 1 3636 0
 7575 1094 0020     		movs	r0, #0
 7576 1096 FFF7FEFF 		bl	TIMER_REG_Write
3637:.\mem1.c      ****                             				GPIO_12_2_SetDriveMode(PIN_DM_DIG_HIZ);
 7577              		.loc 1 3637 0
 7578 109a 0220     		movs	r0, #2
 7579 109c FFF7FEFF 		bl	GPIO_12_2_SetDriveMode
3638:.\mem1.c      ****                             				while (!(Timer_ReadStatusRegister()&Timer_STATUS_TC)){
 7580              		.loc 1 3638 0
 7581 10a0 07E0     		b	.L768
 7582              	.L770:
3639:.\mem1.c      ****                             				if(*(reg8 *)(CYREG_PRT12_PC2)&CY_PINS_PC_PIN_STATE){break;}
 7583              		.loc 1 3639 0
 7584 10a2 BF4B     		ldr	r3, .L848
 7585 10a4 1B78     		ldrb	r3, [r3]
 7586 10a6 DBB2     		uxtb	r3, r3
 7587 10a8 03F01003 		and	r3, r3, #16
 7588 10ac 002B     		cmp	r3, #0
 7589 10ae 00D0     		beq	.L768
 7590 10b0 06E0     		b	.L769
 7591              	.L768:
3638:.\mem1.c      ****                             				while (!(Timer_ReadStatusRegister()&Timer_STATUS_TC)){
 7592              		.loc 1 3638 0
 7593 10b2 FFF7FEFF 		bl	Timer_ReadStatusRegister
 7594 10b6 0346     		mov	r3, r0
 7595 10b8 DBB2     		uxtb	r3, r3
 7596 10ba 5BB2     		sxtb	r3, r3
 7597 10bc 002B     		cmp	r3, #0
 7598 10be F0DA     		bge	.L770
 7599              	.L769:
3640:.\mem1.c      ****                             				}
3641:.\mem1.c      ****                             				TIMER_REG_Write(1); CyDelayUs(1); TIMER_REG_Write(0);
 7600              		.loc 1 3641 0
 7601 10c0 0120     		movs	r0, #1
 7602 10c2 FFF7FEFF 		bl	TIMER_REG_Write
 7603 10c6 0120     		movs	r0, #1
 7604 10c8 FFF7FEFF 		bl	CyDelayUs
 7605 10cc 0020     		movs	r0, #0
 7606 10ce FFF7FEFF 		bl	TIMER_REG_Write
3642:.\mem1.c      ****                             				while (!(Timer_ReadStatusRegister()&Timer_STATUS_TC)){
 7607              		.loc 1 3642 0
 7608 10d2 11E0     		b	.L771
 7609              	.L773:
3643:.\mem1.c      ****                             				if (!(*(reg8 *)(CYREG_PRT12_PC2)&CY_PINS_PC_PIN_STATE)){us_count = 
 7610              		.loc 1 3643 0
 7611 10d4 B24B     		ldr	r3, .L848
 7612 10d6 1B78     		ldrb	r3, [r3]
 7613 10d8 DBB2     		uxtb	r3, r3
 7614 10da 03F01003 		and	r3, r3, #16
 7615 10de 002B     		cmp	r3, #0
 7616 10e0 0AD1     		bne	.L771
 7617              		.loc 1 3643 0 is_stmt 0 discriminator 1
 7618 10e2 FFF7FEFF 		bl	Timer_ReadPeriod
 7619 10e6 0346     		mov	r3, r0
 7620 10e8 1C46     		mov	r4, r3
 7621 10ea FFF7FEFF 		bl	Timer_ReadCounter
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cc7rr7YM.s 			page 200


 7622 10ee 0346     		mov	r3, r0
 7623 10f0 E31A     		subs	r3, r4, r3
 7624 10f2 0233     		adds	r3, r3, #2
 7625 10f4 FB60     		str	r3, [r7, #12]
 7626 10f6 06E0     		b	.L772
 7627              	.L771:
3642:.\mem1.c      ****                             				while (!(Timer_ReadStatusRegister()&Timer_STATUS_TC)){
 7628              		.loc 1 3642 0 is_stmt 1
 7629 10f8 FFF7FEFF 		bl	Timer_ReadStatusRegister
 7630 10fc 0346     		mov	r3, r0
 7631 10fe DBB2     		uxtb	r3, r3
 7632 1100 5BB2     		sxtb	r3, r3
 7633 1102 002B     		cmp	r3, #0
 7634 1104 E6DA     		bge	.L773
 7635              	.L772:
3644:.\mem1.c      ****                             				}
3645:.\mem1.c      ****                             			#endif
3646:.\mem1.c      ****                             		break; //0x02
 7636              		.loc 1 3646 0 discriminator 95
 7637 1106 21E1     		b	.L746
 7638              	.L751:
3647:.\mem1.c      ****                             		case 0x03:
3648:.\mem1.c      ****                             			#ifdef CY_PINS_GPIO_12_3_H 
3649:.\mem1.c      ****                             				TIMER_REG_Write(0);
 7639              		.loc 1 3649 0
 7640 1108 0020     		movs	r0, #0
 7641 110a FFF7FEFF 		bl	TIMER_REG_Write
3650:.\mem1.c      ****                             				GPIO_12_3_SetDriveMode(PIN_DM_DIG_HIZ);
 7642              		.loc 1 3650 0
 7643 110e 0220     		movs	r0, #2
 7644 1110 FFF7FEFF 		bl	GPIO_12_3_SetDriveMode
3651:.\mem1.c      ****                             				while (!(Timer_ReadStatusRegister()&Timer_STATUS_TC)){
 7645              		.loc 1 3651 0
 7646 1114 07E0     		b	.L774
 7647              	.L776:
3652:.\mem1.c      ****                             				if(*(reg8 *)(CYREG_PRT12_PC3)&CY_PINS_PC_PIN_STATE){break;}
 7648              		.loc 1 3652 0
 7649 1116 A34B     		ldr	r3, .L848+4
 7650 1118 1B78     		ldrb	r3, [r3]
 7651 111a DBB2     		uxtb	r3, r3
 7652 111c 03F01003 		and	r3, r3, #16
 7653 1120 002B     		cmp	r3, #0
 7654 1122 00D0     		beq	.L774
 7655 1124 06E0     		b	.L775
 7656              	.L774:
3651:.\mem1.c      ****                             				while (!(Timer_ReadStatusRegister()&Timer_STATUS_TC)){
 7657              		.loc 1 3651 0
 7658 1126 FFF7FEFF 		bl	Timer_ReadStatusRegister
 7659 112a 0346     		mov	r3, r0
 7660 112c DBB2     		uxtb	r3, r3
 7661 112e 5BB2     		sxtb	r3, r3
 7662 1130 002B     		cmp	r3, #0
 7663 1132 F0DA     		bge	.L776
 7664              	.L775:
3653:.\mem1.c      ****                             				}
3654:.\mem1.c      ****                             				TIMER_REG_Write(1); CyDelayUs(1); TIMER_REG_Write(0);
 7665              		.loc 1 3654 0
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cc7rr7YM.s 			page 201


 7666 1134 0120     		movs	r0, #1
 7667 1136 FFF7FEFF 		bl	TIMER_REG_Write
 7668 113a 0120     		movs	r0, #1
 7669 113c FFF7FEFF 		bl	CyDelayUs
 7670 1140 0020     		movs	r0, #0
 7671 1142 FFF7FEFF 		bl	TIMER_REG_Write
3655:.\mem1.c      ****                             				while (!(Timer_ReadStatusRegister()&Timer_STATUS_TC)){
 7672              		.loc 1 3655 0
 7673 1146 11E0     		b	.L777
 7674              	.L779:
3656:.\mem1.c      ****                             				if (!(*(reg8 *)(CYREG_PRT12_PC3)&CY_PINS_PC_PIN_STATE)){us_count = 
 7675              		.loc 1 3656 0
 7676 1148 964B     		ldr	r3, .L848+4
 7677 114a 1B78     		ldrb	r3, [r3]
 7678 114c DBB2     		uxtb	r3, r3
 7679 114e 03F01003 		and	r3, r3, #16
 7680 1152 002B     		cmp	r3, #0
 7681 1154 0AD1     		bne	.L777
 7682              		.loc 1 3656 0 is_stmt 0 discriminator 1
 7683 1156 FFF7FEFF 		bl	Timer_ReadPeriod
 7684 115a 0346     		mov	r3, r0
 7685 115c 1C46     		mov	r4, r3
 7686 115e FFF7FEFF 		bl	Timer_ReadCounter
 7687 1162 0346     		mov	r3, r0
 7688 1164 E31A     		subs	r3, r4, r3
 7689 1166 0233     		adds	r3, r3, #2
 7690 1168 FB60     		str	r3, [r7, #12]
 7691 116a 06E0     		b	.L778
 7692              	.L777:
3655:.\mem1.c      ****                             				while (!(Timer_ReadStatusRegister()&Timer_STATUS_TC)){
 7693              		.loc 1 3655 0 is_stmt 1
 7694 116c FFF7FEFF 		bl	Timer_ReadStatusRegister
 7695 1170 0346     		mov	r3, r0
 7696 1172 DBB2     		uxtb	r3, r3
 7697 1174 5BB2     		sxtb	r3, r3
 7698 1176 002B     		cmp	r3, #0
 7699 1178 E6DA     		bge	.L779
 7700              	.L778:
3657:.\mem1.c      ****                             				}
3658:.\mem1.c      ****                             			#endif
3659:.\mem1.c      ****                             		break; //0x03
 7701              		.loc 1 3659 0 discriminator 96
 7702 117a E7E0     		b	.L746
 7703              	.L752:
3660:.\mem1.c      ****                             		case 0x04:
3661:.\mem1.c      ****                             			#ifdef CY_PINS_GPIO_12_4_H 
3662:.\mem1.c      ****                             				TIMER_REG_Write(0);
 7704              		.loc 1 3662 0
 7705 117c 0020     		movs	r0, #0
 7706 117e FFF7FEFF 		bl	TIMER_REG_Write
3663:.\mem1.c      ****                             				GPIO_12_4_SetDriveMode(PIN_DM_DIG_HIZ);
 7707              		.loc 1 3663 0
 7708 1182 0220     		movs	r0, #2
 7709 1184 FFF7FEFF 		bl	GPIO_12_4_SetDriveMode
3664:.\mem1.c      ****                             				while (!(Timer_ReadStatusRegister()&Timer_STATUS_TC)){
 7710              		.loc 1 3664 0
 7711 1188 07E0     		b	.L780
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cc7rr7YM.s 			page 202


 7712              	.L782:
3665:.\mem1.c      ****                             				if(*(reg8 *)(CYREG_PRT12_PC4)&CY_PINS_PC_PIN_STATE){break;}
 7713              		.loc 1 3665 0
 7714 118a 874B     		ldr	r3, .L848+8
 7715 118c 1B78     		ldrb	r3, [r3]
 7716 118e DBB2     		uxtb	r3, r3
 7717 1190 03F01003 		and	r3, r3, #16
 7718 1194 002B     		cmp	r3, #0
 7719 1196 00D0     		beq	.L780
 7720 1198 06E0     		b	.L781
 7721              	.L780:
3664:.\mem1.c      ****                             				while (!(Timer_ReadStatusRegister()&Timer_STATUS_TC)){
 7722              		.loc 1 3664 0
 7723 119a FFF7FEFF 		bl	Timer_ReadStatusRegister
 7724 119e 0346     		mov	r3, r0
 7725 11a0 DBB2     		uxtb	r3, r3
 7726 11a2 5BB2     		sxtb	r3, r3
 7727 11a4 002B     		cmp	r3, #0
 7728 11a6 F0DA     		bge	.L782
 7729              	.L781:
3666:.\mem1.c      ****                             				}
3667:.\mem1.c      ****                             				TIMER_REG_Write(1); CyDelayUs(1); TIMER_REG_Write(0);
 7730              		.loc 1 3667 0
 7731 11a8 0120     		movs	r0, #1
 7732 11aa FFF7FEFF 		bl	TIMER_REG_Write
 7733 11ae 0120     		movs	r0, #1
 7734 11b0 FFF7FEFF 		bl	CyDelayUs
 7735 11b4 0020     		movs	r0, #0
 7736 11b6 FFF7FEFF 		bl	TIMER_REG_Write
3668:.\mem1.c      ****                             				while (!(Timer_ReadStatusRegister()&Timer_STATUS_TC)){
 7737              		.loc 1 3668 0
 7738 11ba 11E0     		b	.L783
 7739              	.L785:
3669:.\mem1.c      ****                             				if (!(*(reg8 *)(CYREG_PRT12_PC4)&CY_PINS_PC_PIN_STATE)){us_count = 
 7740              		.loc 1 3669 0
 7741 11bc 7A4B     		ldr	r3, .L848+8
 7742 11be 1B78     		ldrb	r3, [r3]
 7743 11c0 DBB2     		uxtb	r3, r3
 7744 11c2 03F01003 		and	r3, r3, #16
 7745 11c6 002B     		cmp	r3, #0
 7746 11c8 0AD1     		bne	.L783
 7747              		.loc 1 3669 0 is_stmt 0 discriminator 1
 7748 11ca FFF7FEFF 		bl	Timer_ReadPeriod
 7749 11ce 0346     		mov	r3, r0
 7750 11d0 1C46     		mov	r4, r3
 7751 11d2 FFF7FEFF 		bl	Timer_ReadCounter
 7752 11d6 0346     		mov	r3, r0
 7753 11d8 E31A     		subs	r3, r4, r3
 7754 11da 0233     		adds	r3, r3, #2
 7755 11dc FB60     		str	r3, [r7, #12]
 7756 11de 06E0     		b	.L784
 7757              	.L783:
3668:.\mem1.c      ****                             				while (!(Timer_ReadStatusRegister()&Timer_STATUS_TC)){
 7758              		.loc 1 3668 0 is_stmt 1
 7759 11e0 FFF7FEFF 		bl	Timer_ReadStatusRegister
 7760 11e4 0346     		mov	r3, r0
 7761 11e6 DBB2     		uxtb	r3, r3
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cc7rr7YM.s 			page 203


 7762 11e8 5BB2     		sxtb	r3, r3
 7763 11ea 002B     		cmp	r3, #0
 7764 11ec E6DA     		bge	.L785
 7765              	.L784:
3670:.\mem1.c      ****                             				}
3671:.\mem1.c      ****                             			#endif
3672:.\mem1.c      ****                             		break; //0x04
 7766              		.loc 1 3672 0 discriminator 97
 7767 11ee ADE0     		b	.L746
 7768              	.L753:
3673:.\mem1.c      ****                             		case 0x05:
3674:.\mem1.c      ****                             			#ifdef CY_PINS_GPIO_12_5_H 
3675:.\mem1.c      ****                             				TIMER_REG_Write(0);
 7769              		.loc 1 3675 0
 7770 11f0 0020     		movs	r0, #0
 7771 11f2 FFF7FEFF 		bl	TIMER_REG_Write
3676:.\mem1.c      ****                             				GPIO_12_5_SetDriveMode(PIN_DM_DIG_HIZ);
 7772              		.loc 1 3676 0
 7773 11f6 0220     		movs	r0, #2
 7774 11f8 FFF7FEFF 		bl	GPIO_12_5_SetDriveMode
3677:.\mem1.c      ****                             				while (!(Timer_ReadStatusRegister()&Timer_STATUS_TC)){
 7775              		.loc 1 3677 0
 7776 11fc 07E0     		b	.L786
 7777              	.L788:
3678:.\mem1.c      ****                             				if(*(reg8 *)(CYREG_PRT12_PC5)&CY_PINS_PC_PIN_STATE){break;}
 7778              		.loc 1 3678 0
 7779 11fe 6B4B     		ldr	r3, .L848+12
 7780 1200 1B78     		ldrb	r3, [r3]
 7781 1202 DBB2     		uxtb	r3, r3
 7782 1204 03F01003 		and	r3, r3, #16
 7783 1208 002B     		cmp	r3, #0
 7784 120a 00D0     		beq	.L786
 7785 120c 06E0     		b	.L787
 7786              	.L786:
3677:.\mem1.c      ****                             				while (!(Timer_ReadStatusRegister()&Timer_STATUS_TC)){
 7787              		.loc 1 3677 0
 7788 120e FFF7FEFF 		bl	Timer_ReadStatusRegister
 7789 1212 0346     		mov	r3, r0
 7790 1214 DBB2     		uxtb	r3, r3
 7791 1216 5BB2     		sxtb	r3, r3
 7792 1218 002B     		cmp	r3, #0
 7793 121a F0DA     		bge	.L788
 7794              	.L787:
3679:.\mem1.c      ****                             				}
3680:.\mem1.c      ****                             				TIMER_REG_Write(1); CyDelayUs(1); TIMER_REG_Write(0);
 7795              		.loc 1 3680 0
 7796 121c 0120     		movs	r0, #1
 7797 121e FFF7FEFF 		bl	TIMER_REG_Write
 7798 1222 0120     		movs	r0, #1
 7799 1224 FFF7FEFF 		bl	CyDelayUs
 7800 1228 0020     		movs	r0, #0
 7801 122a FFF7FEFF 		bl	TIMER_REG_Write
3681:.\mem1.c      ****                             				while (!(Timer_ReadStatusRegister()&Timer_STATUS_TC)){
 7802              		.loc 1 3681 0
 7803 122e 11E0     		b	.L789
 7804              	.L791:
3682:.\mem1.c      ****                             				if (!(*(reg8 *)(CYREG_PRT12_PC5)&CY_PINS_PC_PIN_STATE)){us_count = 
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cc7rr7YM.s 			page 204


 7805              		.loc 1 3682 0
 7806 1230 5E4B     		ldr	r3, .L848+12
 7807 1232 1B78     		ldrb	r3, [r3]
 7808 1234 DBB2     		uxtb	r3, r3
 7809 1236 03F01003 		and	r3, r3, #16
 7810 123a 002B     		cmp	r3, #0
 7811 123c 0AD1     		bne	.L789
 7812              		.loc 1 3682 0 is_stmt 0 discriminator 1
 7813 123e FFF7FEFF 		bl	Timer_ReadPeriod
 7814 1242 0346     		mov	r3, r0
 7815 1244 1C46     		mov	r4, r3
 7816 1246 FFF7FEFF 		bl	Timer_ReadCounter
 7817 124a 0346     		mov	r3, r0
 7818 124c E31A     		subs	r3, r4, r3
 7819 124e 0233     		adds	r3, r3, #2
 7820 1250 FB60     		str	r3, [r7, #12]
 7821 1252 06E0     		b	.L790
 7822              	.L789:
3681:.\mem1.c      ****                             				while (!(Timer_ReadStatusRegister()&Timer_STATUS_TC)){
 7823              		.loc 1 3681 0 is_stmt 1
 7824 1254 FFF7FEFF 		bl	Timer_ReadStatusRegister
 7825 1258 0346     		mov	r3, r0
 7826 125a DBB2     		uxtb	r3, r3
 7827 125c 5BB2     		sxtb	r3, r3
 7828 125e 002B     		cmp	r3, #0
 7829 1260 E6DA     		bge	.L791
 7830              	.L790:
3683:.\mem1.c      ****                             				}
3684:.\mem1.c      ****                             			#endif
3685:.\mem1.c      ****                             		break; //0x05
 7831              		.loc 1 3685 0 discriminator 98
 7832 1262 73E0     		b	.L746
 7833              	.L754:
3686:.\mem1.c      ****                             		case 0x06:
3687:.\mem1.c      ****                             			#ifdef CY_PINS_GPIO_12_6_H 
3688:.\mem1.c      ****                             				TIMER_REG_Write(0);
 7834              		.loc 1 3688 0
 7835 1264 0020     		movs	r0, #0
 7836 1266 FFF7FEFF 		bl	TIMER_REG_Write
3689:.\mem1.c      ****                             				GPIO_12_6_SetDriveMode(PIN_DM_DIG_HIZ);
 7837              		.loc 1 3689 0
 7838 126a 0220     		movs	r0, #2
 7839 126c FFF7FEFF 		bl	GPIO_12_6_SetDriveMode
3690:.\mem1.c      ****                             				while (!(Timer_ReadStatusRegister()&Timer_STATUS_TC)){
 7840              		.loc 1 3690 0
 7841 1270 07E0     		b	.L792
 7842              	.L794:
3691:.\mem1.c      ****                             				if(*(reg8 *)(CYREG_PRT12_PC6)&CY_PINS_PC_PIN_STATE){break;}
 7843              		.loc 1 3691 0
 7844 1272 4F4B     		ldr	r3, .L848+16
 7845 1274 1B78     		ldrb	r3, [r3]
 7846 1276 DBB2     		uxtb	r3, r3
 7847 1278 03F01003 		and	r3, r3, #16
 7848 127c 002B     		cmp	r3, #0
 7849 127e 00D0     		beq	.L792
 7850 1280 06E0     		b	.L793
 7851              	.L792:
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cc7rr7YM.s 			page 205


3690:.\mem1.c      ****                             				while (!(Timer_ReadStatusRegister()&Timer_STATUS_TC)){
 7852              		.loc 1 3690 0
 7853 1282 FFF7FEFF 		bl	Timer_ReadStatusRegister
 7854 1286 0346     		mov	r3, r0
 7855 1288 DBB2     		uxtb	r3, r3
 7856 128a 5BB2     		sxtb	r3, r3
 7857 128c 002B     		cmp	r3, #0
 7858 128e F0DA     		bge	.L794
 7859              	.L793:
3692:.\mem1.c      ****                             				}
3693:.\mem1.c      ****                             				TIMER_REG_Write(1); CyDelayUs(1); TIMER_REG_Write(0);
 7860              		.loc 1 3693 0
 7861 1290 0120     		movs	r0, #1
 7862 1292 FFF7FEFF 		bl	TIMER_REG_Write
 7863 1296 0120     		movs	r0, #1
 7864 1298 FFF7FEFF 		bl	CyDelayUs
 7865 129c 0020     		movs	r0, #0
 7866 129e FFF7FEFF 		bl	TIMER_REG_Write
3694:.\mem1.c      ****                             				while (!(Timer_ReadStatusRegister()&Timer_STATUS_TC)){
 7867              		.loc 1 3694 0
 7868 12a2 11E0     		b	.L795
 7869              	.L797:
3695:.\mem1.c      ****                             				if (!(*(reg8 *)(CYREG_PRT12_PC6)&CY_PINS_PC_PIN_STATE)){us_count = 
 7870              		.loc 1 3695 0
 7871 12a4 424B     		ldr	r3, .L848+16
 7872 12a6 1B78     		ldrb	r3, [r3]
 7873 12a8 DBB2     		uxtb	r3, r3
 7874 12aa 03F01003 		and	r3, r3, #16
 7875 12ae 002B     		cmp	r3, #0
 7876 12b0 0AD1     		bne	.L795
 7877              		.loc 1 3695 0 is_stmt 0 discriminator 1
 7878 12b2 FFF7FEFF 		bl	Timer_ReadPeriod
 7879 12b6 0346     		mov	r3, r0
 7880 12b8 1C46     		mov	r4, r3
 7881 12ba FFF7FEFF 		bl	Timer_ReadCounter
 7882 12be 0346     		mov	r3, r0
 7883 12c0 E31A     		subs	r3, r4, r3
 7884 12c2 0233     		adds	r3, r3, #2
 7885 12c4 FB60     		str	r3, [r7, #12]
 7886 12c6 06E0     		b	.L796
 7887              	.L795:
3694:.\mem1.c      ****                             				while (!(Timer_ReadStatusRegister()&Timer_STATUS_TC)){
 7888              		.loc 1 3694 0 is_stmt 1
 7889 12c8 FFF7FEFF 		bl	Timer_ReadStatusRegister
 7890 12cc 0346     		mov	r3, r0
 7891 12ce DBB2     		uxtb	r3, r3
 7892 12d0 5BB2     		sxtb	r3, r3
 7893 12d2 002B     		cmp	r3, #0
 7894 12d4 E6DA     		bge	.L797
 7895              	.L796:
3696:.\mem1.c      ****                             				}
3697:.\mem1.c      ****                             			#endif
3698:.\mem1.c      ****                             		break; //0x06
 7896              		.loc 1 3698 0 discriminator 99
 7897 12d6 39E0     		b	.L746
 7898              	.L755:
3699:.\mem1.c      ****                             		case 0x07:
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cc7rr7YM.s 			page 206


3700:.\mem1.c      ****                             			#ifdef CY_PINS_GPIO_12_7_H 
3701:.\mem1.c      ****                             				TIMER_REG_Write(0);
 7899              		.loc 1 3701 0
 7900 12d8 0020     		movs	r0, #0
 7901 12da FFF7FEFF 		bl	TIMER_REG_Write
3702:.\mem1.c      ****                             				GPIO_12_7_SetDriveMode(PIN_DM_DIG_HIZ);
 7902              		.loc 1 3702 0
 7903 12de 0220     		movs	r0, #2
 7904 12e0 FFF7FEFF 		bl	GPIO_12_7_SetDriveMode
3703:.\mem1.c      ****                             				while (!(Timer_ReadStatusRegister()&Timer_STATUS_TC)){
 7905              		.loc 1 3703 0
 7906 12e4 07E0     		b	.L798
 7907              	.L800:
3704:.\mem1.c      ****                             				if(*(reg8 *)(CYREG_PRT12_PC7)&CY_PINS_PC_PIN_STATE){break;}
 7908              		.loc 1 3704 0
 7909 12e6 334B     		ldr	r3, .L848+20
 7910 12e8 1B78     		ldrb	r3, [r3]
 7911 12ea DBB2     		uxtb	r3, r3
 7912 12ec 03F01003 		and	r3, r3, #16
 7913 12f0 002B     		cmp	r3, #0
 7914 12f2 00D0     		beq	.L798
 7915 12f4 06E0     		b	.L799
 7916              	.L798:
3703:.\mem1.c      ****                             				while (!(Timer_ReadStatusRegister()&Timer_STATUS_TC)){
 7917              		.loc 1 3703 0
 7918 12f6 FFF7FEFF 		bl	Timer_ReadStatusRegister
 7919 12fa 0346     		mov	r3, r0
 7920 12fc DBB2     		uxtb	r3, r3
 7921 12fe 5BB2     		sxtb	r3, r3
 7922 1300 002B     		cmp	r3, #0
 7923 1302 F0DA     		bge	.L800
 7924              	.L799:
3705:.\mem1.c      ****                             				}
3706:.\mem1.c      ****                             				TIMER_REG_Write(1); CyDelayUs(1); TIMER_REG_Write(0);
 7925              		.loc 1 3706 0
 7926 1304 0120     		movs	r0, #1
 7927 1306 FFF7FEFF 		bl	TIMER_REG_Write
 7928 130a 0120     		movs	r0, #1
 7929 130c FFF7FEFF 		bl	CyDelayUs
 7930 1310 0020     		movs	r0, #0
 7931 1312 FFF7FEFF 		bl	TIMER_REG_Write
3707:.\mem1.c      ****                             				while (!(Timer_ReadStatusRegister()&Timer_STATUS_TC)){
 7932              		.loc 1 3707 0
 7933 1316 11E0     		b	.L801
 7934              	.L803:
3708:.\mem1.c      ****                             				if (!(*(reg8 *)(CYREG_PRT12_PC7)&CY_PINS_PC_PIN_STATE)){us_count = 
 7935              		.loc 1 3708 0
 7936 1318 264B     		ldr	r3, .L848+20
 7937 131a 1B78     		ldrb	r3, [r3]
 7938 131c DBB2     		uxtb	r3, r3
 7939 131e 03F01003 		and	r3, r3, #16
 7940 1322 002B     		cmp	r3, #0
 7941 1324 0AD1     		bne	.L801
 7942              		.loc 1 3708 0 is_stmt 0 discriminator 1
 7943 1326 FFF7FEFF 		bl	Timer_ReadPeriod
 7944 132a 0346     		mov	r3, r0
 7945 132c 1C46     		mov	r4, r3
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cc7rr7YM.s 			page 207


 7946 132e FFF7FEFF 		bl	Timer_ReadCounter
 7947 1332 0346     		mov	r3, r0
 7948 1334 E31A     		subs	r3, r4, r3
 7949 1336 0233     		adds	r3, r3, #2
 7950 1338 FB60     		str	r3, [r7, #12]
 7951 133a 06E0     		b	.L802
 7952              	.L801:
3707:.\mem1.c      ****                             				while (!(Timer_ReadStatusRegister()&Timer_STATUS_TC)){
 7953              		.loc 1 3707 0 is_stmt 1
 7954 133c FFF7FEFF 		bl	Timer_ReadStatusRegister
 7955 1340 0346     		mov	r3, r0
 7956 1342 DBB2     		uxtb	r3, r3
 7957 1344 5BB2     		sxtb	r3, r3
 7958 1346 002B     		cmp	r3, #0
 7959 1348 E6DA     		bge	.L803
 7960              	.L802:
3709:.\mem1.c      ****                             				}
3710:.\mem1.c      ****                             			#endif
3711:.\mem1.c      ****                             		break; //0x07
 7961              		.loc 1 3711 0 discriminator 100
 7962 134a 00BF     		nop
 7963              	.L746:
3712:.\mem1.c      ****                             	}
3713:.\mem1.c      ****                             break; //0x0C
 7964              		.loc 1 3713 0 discriminator 93
 7965 134c 24E0     		b	.L839
 7966              	.L590:
3714:.\mem1.c      ****                             case 0x0F:
3715:.\mem1.c      ****                             	switch(pin)
 7967              		.loc 1 3715 0
 7968 134e 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 7969 1350 072B     		cmp	r3, #7
 7970 1352 23D8     		bhi	.L840
 7971 1354 01A2     		adr	r2, .L806
 7972 1356 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 7973 135a 00BF     		.p2align 2
 7974              	.L806:
 7975 135c 7D130000 		.word	.L841+1
 7976 1360 7D130000 		.word	.L841+1
 7977 1364 7D130000 		.word	.L841+1
 7978 1368 7D130000 		.word	.L841+1
 7979 136c 7D130000 		.word	.L841+1
 7980 1370 7D130000 		.word	.L841+1
 7981 1374 7D130000 		.word	.L841+1
 7982 1378 7D130000 		.word	.L841+1
 7983              		.p2align 1
 7984              	.L841:
3716:.\mem1.c      ****                             	{
3717:.\mem1.c      ****                             		case 0x00:
3718:.\mem1.c      ****                             			#ifdef CY_PINS_GPIO_15_0_H 
3719:.\mem1.c      ****                             				TIMER_REG_Write(0);
3720:.\mem1.c      ****                             				GPIO_15_0_SetDriveMode(PIN_DM_DIG_HIZ);
3721:.\mem1.c      ****                             				while (!(Timer_ReadStatusRegister()&Timer_STATUS_TC)){
3722:.\mem1.c      ****                             				if(*(reg8 *)(CYREG_PRT15_PC0)&CY_PINS_PC_PIN_STATE){break;}
3723:.\mem1.c      ****                             				}
3724:.\mem1.c      ****                             				TIMER_REG_Write(1); CyDelayUs(1); TIMER_REG_Write(0);
3725:.\mem1.c      ****                             				while (!(Timer_ReadStatusRegister()&Timer_STATUS_TC)){
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cc7rr7YM.s 			page 208


3726:.\mem1.c      ****                             				if (!(*(reg8 *)(CYREG_PRT15_PC0)&CY_PINS_PC_PIN_STATE)){us_count = 
3727:.\mem1.c      ****                             				}
3728:.\mem1.c      ****                             			#endif
3729:.\mem1.c      ****                             		break; //0x00
 7985              		.loc 1 3729 0
 7986 137c 00BF     		nop
3730:.\mem1.c      ****                             		case 0x01:
3731:.\mem1.c      ****                             			#ifdef CY_PINS_GPIO_15_1_H 
3732:.\mem1.c      ****                             				TIMER_REG_Write(0);
3733:.\mem1.c      ****                             				GPIO_15_1_SetDriveMode(PIN_DM_DIG_HIZ);
3734:.\mem1.c      ****                             				while (!(Timer_ReadStatusRegister()&Timer_STATUS_TC)){
3735:.\mem1.c      ****                             				if(*(reg8 *)(CYREG_PRT15_PC1)&CY_PINS_PC_PIN_STATE){break;}
3736:.\mem1.c      ****                             				}
3737:.\mem1.c      ****                             				TIMER_REG_Write(1); CyDelayUs(1); TIMER_REG_Write(0);
3738:.\mem1.c      ****                             				while (!(Timer_ReadStatusRegister()&Timer_STATUS_TC)){
3739:.\mem1.c      ****                             				if (!(*(reg8 *)(CYREG_PRT15_PC1)&CY_PINS_PC_PIN_STATE)){us_count = 
3740:.\mem1.c      ****                             				}
3741:.\mem1.c      ****                             			#endif
3742:.\mem1.c      ****                             		break; //0x01
3743:.\mem1.c      ****                             		case 0x02:
3744:.\mem1.c      ****                             			#ifdef CY_PINS_GPIO_15_2_H 
3745:.\mem1.c      ****                             				TIMER_REG_Write(0);
3746:.\mem1.c      ****                             				GPIO_15_2_SetDriveMode(PIN_DM_DIG_HIZ);
3747:.\mem1.c      ****                             				while (!(Timer_ReadStatusRegister()&Timer_STATUS_TC)){
3748:.\mem1.c      ****                             				if(*(reg8 *)(CYREG_PRT15_PC2)&CY_PINS_PC_PIN_STATE){break;}
3749:.\mem1.c      ****                             				}
3750:.\mem1.c      ****                             				TIMER_REG_Write(1); CyDelayUs(1); TIMER_REG_Write(0);
3751:.\mem1.c      ****                             				while (!(Timer_ReadStatusRegister()&Timer_STATUS_TC)){
3752:.\mem1.c      ****                             				if (!(*(reg8 *)(CYREG_PRT15_PC2)&CY_PINS_PC_PIN_STATE)){us_count = 
3753:.\mem1.c      ****                             				}
3754:.\mem1.c      ****                             			#endif
3755:.\mem1.c      ****                             		break; //0x02
3756:.\mem1.c      ****                             		case 0x03:
3757:.\mem1.c      ****                             			#ifdef CY_PINS_GPIO_15_3_H 
3758:.\mem1.c      ****                             				TIMER_REG_Write(0);
3759:.\mem1.c      ****                             				GPIO_15_3_SetDriveMode(PIN_DM_DIG_HIZ);
3760:.\mem1.c      ****                             				while (!(Timer_ReadStatusRegister()&Timer_STATUS_TC)){
3761:.\mem1.c      ****                             				if(*(reg8 *)(CYREG_PRT15_PC3)&CY_PINS_PC_PIN_STATE){break;}
3762:.\mem1.c      ****                             				}
3763:.\mem1.c      ****                             				TIMER_REG_Write(1); CyDelayUs(1); TIMER_REG_Write(0);
3764:.\mem1.c      ****                             				while (!(Timer_ReadStatusRegister()&Timer_STATUS_TC)){
3765:.\mem1.c      ****                             				if (!(*(reg8 *)(CYREG_PRT15_PC3)&CY_PINS_PC_PIN_STATE)){us_count = 
3766:.\mem1.c      ****                             				}
3767:.\mem1.c      ****                             			#endif
3768:.\mem1.c      ****                             		break; //0x03
3769:.\mem1.c      ****                             		case 0x04:
3770:.\mem1.c      ****                             			#ifdef CY_PINS_GPIO_15_4_H 
3771:.\mem1.c      ****                             				TIMER_REG_Write(0);
3772:.\mem1.c      ****                             				GPIO_15_4_SetDriveMode(PIN_DM_DIG_HIZ);
3773:.\mem1.c      ****                             				while (!(Timer_ReadStatusRegister()&Timer_STATUS_TC)){
3774:.\mem1.c      ****                             				if(*(reg8 *)(CYREG_PRT15_PC4)&CY_PINS_PC_PIN_STATE){break;}
3775:.\mem1.c      ****                             				}
3776:.\mem1.c      ****                             				TIMER_REG_Write(1); CyDelayUs(1); TIMER_REG_Write(0);
3777:.\mem1.c      ****                             				while (!(Timer_ReadStatusRegister()&Timer_STATUS_TC)){
3778:.\mem1.c      ****                             				if (!(*(reg8 *)(CYREG_PRT15_PC4)&CY_PINS_PC_PIN_STATE)){us_count = 
3779:.\mem1.c      ****                             				}
3780:.\mem1.c      ****                             			#endif
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cc7rr7YM.s 			page 209


3781:.\mem1.c      ****                             		break; //0x04
3782:.\mem1.c      ****                             		case 0x05:
3783:.\mem1.c      ****                             			#ifdef CY_PINS_GPIO_15_5_H 
3784:.\mem1.c      ****                             				TIMER_REG_Write(0);
3785:.\mem1.c      ****                             				GPIO_15_5_SetDriveMode(PIN_DM_DIG_HIZ);
3786:.\mem1.c      ****                             				while (!(Timer_ReadStatusRegister()&Timer_STATUS_TC)){
3787:.\mem1.c      ****                             				if(*(reg8 *)(CYREG_PRT15_PC5)&CY_PINS_PC_PIN_STATE){break;}
3788:.\mem1.c      ****                             				}
3789:.\mem1.c      ****                             				TIMER_REG_Write(1); CyDelayUs(1); TIMER_REG_Write(0);
3790:.\mem1.c      ****                             				while (!(Timer_ReadStatusRegister()&Timer_STATUS_TC)){
3791:.\mem1.c      ****                             				if (!(*(reg8 *)(CYREG_PRT15_PC5)&CY_PINS_PC_PIN_STATE)){us_count = 
3792:.\mem1.c      ****                             				}
3793:.\mem1.c      ****                             			#endif
3794:.\mem1.c      ****                             		break; //0x05
3795:.\mem1.c      ****                             		case 0x06:
3796:.\mem1.c      ****                             			#ifdef CY_PINS_GPIO_15_6_H 
3797:.\mem1.c      ****                             				TIMER_REG_Write(0);
3798:.\mem1.c      ****                             				GPIO_15_6_SetDriveMode(PIN_DM_DIG_HIZ);
3799:.\mem1.c      ****                             				while (!(Timer_ReadStatusRegister()&Timer_STATUS_TC)){
3800:.\mem1.c      ****                             				if(*(reg8 *)(CYREG_PRT15_PC6)&CY_PINS_PC_PIN_STATE){break;}
3801:.\mem1.c      ****                             				}
3802:.\mem1.c      ****                             				TIMER_REG_Write(1); CyDelayUs(1); TIMER_REG_Write(0);
3803:.\mem1.c      ****                             				while (!(Timer_ReadStatusRegister()&Timer_STATUS_TC)){
3804:.\mem1.c      ****                             				if (!(*(reg8 *)(CYREG_PRT15_PC6)&CY_PINS_PC_PIN_STATE)){us_count = 
3805:.\mem1.c      ****                             				}
3806:.\mem1.c      ****                             			#endif
3807:.\mem1.c      ****                             		break; //0x06
3808:.\mem1.c      ****                             		case 0x07:
3809:.\mem1.c      ****                             			#ifdef CY_PINS_GPIO_15_7_H 
3810:.\mem1.c      ****                             				TIMER_REG_Write(0);
3811:.\mem1.c      ****                             				GPIO_15_7_SetDriveMode(PIN_DM_DIG_HIZ);
3812:.\mem1.c      ****                             				while (!(Timer_ReadStatusRegister()&Timer_STATUS_TC)){
3813:.\mem1.c      ****                             				if(*(reg8 *)(CYREG_PRT15_PC7)&CY_PINS_PC_PIN_STATE){break;}
3814:.\mem1.c      ****                             				}
3815:.\mem1.c      ****                             				TIMER_REG_Write(1); CyDelayUs(1); TIMER_REG_Write(0);
3816:.\mem1.c      ****                             				while (!(Timer_ReadStatusRegister()&Timer_STATUS_TC)){
3817:.\mem1.c      ****                             				if (!(*(reg8 *)(CYREG_PRT15_PC7)&CY_PINS_PC_PIN_STATE)){us_count = 
3818:.\mem1.c      ****                             				}
3819:.\mem1.c      ****                             			#endif
3820:.\mem1.c      ****                             		break; //0x07
3821:.\mem1.c      ****                             	}
3822:.\mem1.c      ****                             break; //0x0F
 7987              		.loc 1 3822 0
 7988 137e 0DE0     		b	.L840
 7989              	.L829:
3072:.\mem1.c      ****                             case 0x02:
 7990              		.loc 1 3072 0
 7991 1380 00BF     		nop
 7992 1382 1EE0     		b	.L828
 7993              	.L831:
3181:.\mem1.c      ****                             case 0x03:
 7994              		.loc 1 3181 0
 7995 1384 00BF     		nop
 7996 1386 1CE0     		b	.L828
 7997              	.L832:
3290:.\mem1.c      ****                             case 0x04:
 7998              		.loc 1 3290 0
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cc7rr7YM.s 			page 210


 7999 1388 00BF     		nop
 8000 138a 1AE0     		b	.L828
 8001              	.L834:
3386:.\mem1.c      ****                             case 0x05:
 8002              		.loc 1 3386 0
 8003 138c 00BF     		nop
 8004 138e 18E0     		b	.L828
 8005              	.L836:
3495:.\mem1.c      ****                             case 0x06:
 8006              		.loc 1 3495 0
 8007 1390 00BF     		nop
 8008 1392 16E0     		b	.L828
 8009              	.L837:
3604:.\mem1.c      ****                             case 0x0C:
 8010              		.loc 1 3604 0
 8011 1394 00BF     		nop
 8012 1396 14E0     		b	.L828
 8013              	.L839:
3713:.\mem1.c      ****                             case 0x0F:
 8014              		.loc 1 3713 0
 8015 1398 00BF     		nop
 8016 139a 12E0     		b	.L828
 8017              	.L840:
 8018              		.loc 1 3822 0
 8019 139c 00BF     		nop
3823:.\mem1.c      ****  
3824:.\mem1.c      ****                     }
3825:.\mem1.c      ****                 break; //cmd 0x00
 8020              		.loc 1 3825 0
 8021 139e 10E0     		b	.L828
 8022              	.L849:
 8023              		.align	2
 8024              	.L848:
 8025 13a0 62500040 		.word	1073762402
 8026 13a4 63500040 		.word	1073762403
 8027 13a8 64500040 		.word	1073762404
 8028 13ac 65500040 		.word	1073762405
 8029 13b0 66500040 		.word	1073762406
 8030 13b4 67500040 		.word	1073762407
 8031              	.L491:
3826:.\mem1.c      ****                 
3827:.\mem1.c      ****                 case 0x01: Timer_WritePeriod(timeout); break;
 8032              		.loc 1 3827 0
 8033 13b8 3B8D     		ldrh	r3, [r7, #40]
 8034 13ba 1846     		mov	r0, r3
 8035 13bc FFF7FEFF 		bl	Timer_WritePeriod
 8036 13c0 00E0     		b	.L489
 8037              	.L828:
3825:.\mem1.c      ****                 
 8038              		.loc 1 3825 0
 8039 13c2 00BF     		nop
 8040              	.L489:
3828:.\mem1.c      ****                 
3829:.\mem1.c      ****             }
3830:.\mem1.c      ****             TIMER_REG_Write(1);
 8041              		.loc 1 3830 0
 8042 13c4 0120     		movs	r0, #1
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cc7rr7YM.s 			page 211


 8043 13c6 FFF7FEFF 		bl	TIMER_REG_Write
3831:.\mem1.c      ****             Timer_Stop();
 8044              		.loc 1 3831 0
 8045 13ca FFF7FEFF 		bl	Timer_Stop
3832:.\mem1.c      ****             *result = us_count;
 8046              		.loc 1 3832 0
 8047 13ce FB6A     		ldr	r3, [r7, #44]
 8048 13d0 FA68     		ldr	r2, [r7, #12]
 8049 13d2 1A60     		str	r2, [r3]
3833:.\mem1.c      ****             return return_flag;
 8050              		.loc 1 3833 0
 8051 13d4 FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
3834:.\mem1.c      ****         }
 8052              		.loc 1 3834 0
 8053 13d6 1846     		mov	r0, r3
 8054 13d8 1437     		adds	r7, r7, #20
 8055              		.cfi_def_cfa_offset 12
 8056 13da BD46     		mov	sp, r7
 8057              		.cfi_def_cfa_register 13
 8058              		@ sp needed
 8059 13dc 90BD     		pop	{r4, r7, pc}
 8060              		.cfi_endproc
 8061              	.LFE73:
 8062              		.size	Range_Finder, .-Range_Finder
 8063 13de 00BF     		.section	.text.test_read,"ax",%progbits
 8064              		.align	2
 8065              		.global	test_read
 8066              		.thumb
 8067              		.thumb_func
 8068              		.type	test_read, %function
 8069              	test_read:
 8070              	.LFB74:
3835:.\mem1.c      **** #endif
3836:.\mem1.c      **** 
3837:.\mem1.c      **** bool test_read(uint16 dat, uint32 *result)
3838:.\mem1.c      ****     {
 8071              		.loc 1 3838 0
 8072              		.cfi_startproc
 8073              		@ args = 0, pretend = 0, frame = 8
 8074              		@ frame_needed = 1, uses_anonymous_args = 0
 8075              		@ link register save eliminated.
 8076 0000 80B4     		push	{r7}
 8077              		.cfi_def_cfa_offset 4
 8078              		.cfi_offset 7, -4
 8079 0002 83B0     		sub	sp, sp, #12
 8080              		.cfi_def_cfa_offset 16
 8081 0004 00AF     		add	r7, sp, #0
 8082              		.cfi_def_cfa_register 7
 8083 0006 0346     		mov	r3, r0
 8084 0008 3960     		str	r1, [r7]
 8085 000a FB80     		strh	r3, [r7, #6]	@ movhi
3839:.\mem1.c      ****         *result = dat;
 8086              		.loc 1 3839 0
 8087 000c FA88     		ldrh	r2, [r7, #6]
 8088 000e 3B68     		ldr	r3, [r7]
 8089 0010 1A60     		str	r2, [r3]
3840:.\mem1.c      ****         return true;
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cc7rr7YM.s 			page 212


 8090              		.loc 1 3840 0
 8091 0012 0123     		movs	r3, #1
3841:.\mem1.c      ****     }
 8092              		.loc 1 3841 0
 8093 0014 1846     		mov	r0, r3
 8094 0016 0C37     		adds	r7, r7, #12
 8095              		.cfi_def_cfa_offset 4
 8096 0018 BD46     		mov	sp, r7
 8097              		.cfi_def_cfa_register 13
 8098              		@ sp needed
 8099 001a 5DF8047B 		ldr	r7, [sp], #4
 8100              		.cfi_restore 7
 8101              		.cfi_def_cfa_offset 0
 8102 001e 7047     		bx	lr
 8103              		.cfi_endproc
 8104              	.LFE74:
 8105              		.size	test_read, .-test_read
 8106              		.section	.text.StripLightsControl,"ax",%progbits
 8107              		.align	2
 8108              		.global	StripLightsControl
 8109              		.thumb
 8110              		.thumb_func
 8111              		.type	StripLightsControl, %function
 8112              	StripLightsControl:
 8113              	.LFB75:
3842:.\mem1.c      **** 
3843:.\mem1.c      **** #ifdef CY_SLIGHTS_StripLights_H
3844:.\mem1.c      ****     bool StripLightsControl(uint8 cmd, uint16 dat, uint8 row, uint8 column, uint32 color)
3845:.\mem1.c      ****         {
 8114              		.loc 1 3845 0
 8115              		.cfi_startproc
 8116              		@ args = 4, pretend = 0, frame = 8
 8117              		@ frame_needed = 1, uses_anonymous_args = 0
 8118 0000 90B5     		push	{r4, r7, lr}
 8119              		.cfi_def_cfa_offset 12
 8120              		.cfi_offset 4, -12
 8121              		.cfi_offset 7, -8
 8122              		.cfi_offset 14, -4
 8123 0002 83B0     		sub	sp, sp, #12
 8124              		.cfi_def_cfa_offset 24
 8125 0004 00AF     		add	r7, sp, #0
 8126              		.cfi_def_cfa_register 7
 8127 0006 0446     		mov	r4, r0
 8128 0008 0846     		mov	r0, r1
 8129 000a 1146     		mov	r1, r2
 8130 000c 1A46     		mov	r2, r3
 8131 000e 2346     		mov	r3, r4
 8132 0010 FB71     		strb	r3, [r7, #7]
 8133 0012 0346     		mov	r3, r0	@ movhi
 8134 0014 BB80     		strh	r3, [r7, #4]	@ movhi
 8135 0016 0B46     		mov	r3, r1
 8136 0018 BB71     		strb	r3, [r7, #6]
 8137 001a 1346     		mov	r3, r2
 8138 001c FB70     		strb	r3, [r7, #3]
3846:.\mem1.c      ****             switch(cmd)
 8139              		.loc 1 3846 0
 8140 001e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cc7rr7YM.s 			page 213


 8141 0020 062B     		cmp	r3, #6
 8142 0022 36D8     		bhi	.L853
 8143 0024 01A2     		adr	r2, .L855
 8144 0026 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 8145 002a 00BF     		.p2align 2
 8146              	.L855:
 8147 002c 49000000 		.word	.L854+1
 8148 0030 4F000000 		.word	.L856+1
 8149 0034 55000000 		.word	.L857+1
 8150 0038 65000000 		.word	.L858+1
 8151 003c 71000000 		.word	.L859+1
 8152 0040 7B000000 		.word	.L860+1
 8153 0044 87000000 		.word	.L861+1
 8154              		.p2align 1
 8155              	.L854:
3847:.\mem1.c      ****             {
3848:.\mem1.c      ****                 case 0x00: StripLights_Start(); break;
 8156              		.loc 1 3848 0
 8157 0048 FFF7FEFF 		bl	StripLights_Start
 8158 004c 21E0     		b	.L853
 8159              	.L856:
3849:.\mem1.c      ****                 case 0x01: StripLights_Stop(); break;
 8160              		.loc 1 3849 0
 8161 004e FFF7FEFF 		bl	StripLights_Stop
 8162 0052 1EE0     		b	.L853
 8163              	.L857:
3850:.\mem1.c      ****                 case 0x02: SetNeoPixel(row, column, color); break;
 8164              		.loc 1 3850 0
 8165 0054 BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
 8166 0056 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 8167 0058 1046     		mov	r0, r2
 8168 005a 1946     		mov	r1, r3
 8169 005c BA69     		ldr	r2, [r7, #24]
 8170 005e FFF7FEFF 		bl	SetNeoPixel
 8171 0062 16E0     		b	.L853
 8172              	.L858:
3851:.\mem1.c      ****                 case 0x03: Stripe(dat, color); break;
 8173              		.loc 1 3851 0
 8174 0064 BB88     		ldrh	r3, [r7, #4]
 8175 0066 1846     		mov	r0, r3
 8176 0068 B969     		ldr	r1, [r7, #24]
 8177 006a FFF7FEFF 		bl	Stripe
 8178 006e 10E0     		b	.L853
 8179              	.L859:
3852:.\mem1.c      ****                 case 0x04: StripLights_Dim(dat); break; 
 8180              		.loc 1 3852 0
 8181 0070 BB88     		ldrh	r3, [r7, #4]
 8182 0072 1846     		mov	r0, r3
 8183 0074 FFF7FEFF 		bl	StripLights_Dim
 8184 0078 0BE0     		b	.L853
 8185              	.L860:
3853:.\mem1.c      ****                 case 0x05: NeoPixel_DrawRow(row, color); break;
 8186              		.loc 1 3853 0
 8187 007a BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 8188 007c 1846     		mov	r0, r3
 8189 007e B969     		ldr	r1, [r7, #24]
 8190 0080 FFF7FEFF 		bl	NeoPixel_DrawRow
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cc7rr7YM.s 			page 214


 8191 0084 05E0     		b	.L853
 8192              	.L861:
3854:.\mem1.c      ****                 case 0x06: NeoPixel_DrawColumn(column, color); break;
 8193              		.loc 1 3854 0
 8194 0086 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 8195 0088 1846     		mov	r0, r3
 8196 008a B969     		ldr	r1, [r7, #24]
 8197 008c FFF7FEFF 		bl	NeoPixel_DrawColumn
 8198 0090 00BF     		nop
 8199              	.L853:
3855:.\mem1.c      ****                 
3856:.\mem1.c      ****             }
3857:.\mem1.c      ****             
3858:.\mem1.c      ****             return false;
 8200              		.loc 1 3858 0
 8201 0092 0023     		movs	r3, #0
3859:.\mem1.c      ****         }
 8202              		.loc 1 3859 0
 8203 0094 1846     		mov	r0, r3
 8204 0096 0C37     		adds	r7, r7, #12
 8205              		.cfi_def_cfa_offset 12
 8206 0098 BD46     		mov	sp, r7
 8207              		.cfi_def_cfa_register 13
 8208              		@ sp needed
 8209 009a 90BD     		pop	{r4, r7, pc}
 8210              		.cfi_endproc
 8211              	.LFE75:
 8212              		.size	StripLightsControl, .-StripLightsControl
 8213              		.section	.text.Stripe,"ax",%progbits
 8214              		.align	2
 8215              		.global	Stripe
 8216              		.thumb
 8217              		.thumb_func
 8218              		.type	Stripe, %function
 8219              	Stripe:
 8220              	.LFB76:
3860:.\mem1.c      ****         
3861:.\mem1.c      ****     void Stripe(uint16 MAX, uint32 color)
3862:.\mem1.c      ****     {
 8221              		.loc 1 3862 0
 8222              		.cfi_startproc
 8223              		@ args = 0, pretend = 0, frame = 16
 8224              		@ frame_needed = 1, uses_anonymous_args = 0
 8225 0000 80B5     		push	{r7, lr}
 8226              		.cfi_def_cfa_offset 8
 8227              		.cfi_offset 7, -8
 8228              		.cfi_offset 14, -4
 8229 0002 84B0     		sub	sp, sp, #16
 8230              		.cfi_def_cfa_offset 24
 8231 0004 00AF     		add	r7, sp, #0
 8232              		.cfi_def_cfa_register 7
 8233 0006 0346     		mov	r3, r0
 8234 0008 3960     		str	r1, [r7]
 8235 000a FB80     		strh	r3, [r7, #6]	@ movhi
3863:.\mem1.c      ****        uint32 x;
3864:.\mem1.c      ****         
3865:.\mem1.c      ****            for(x = 0; x <= MAX; x++)
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cc7rr7YM.s 			page 215


 8236              		.loc 1 3865 0
 8237 000c 0023     		movs	r3, #0
 8238 000e FB60     		str	r3, [r7, #12]
 8239 0010 11E0     		b	.L864
 8240              	.L866:
3866:.\mem1.c      ****            {
3867:.\mem1.c      ****      //          color = getColor((lp+x) % StripLights_COLOR_WHEEL_SIZE);
3868:.\mem1.c      ****                //StripLights_DrawLine(x, StripLights_MIN_Y, x, StripLights_MAX_Y, color);
3869:.\mem1.c      ****                 StripLights_Pixel(x, 0, color);
 8241              		.loc 1 3869 0
 8242 0012 FB68     		ldr	r3, [r7, #12]
 8243 0014 1846     		mov	r0, r3
 8244 0016 0021     		movs	r1, #0
 8245 0018 3A68     		ldr	r2, [r7]
 8246 001a FFF7FEFF 		bl	StripLights_Pixel
3870:.\mem1.c      ****                 while( StripLights_Ready() == 0);
 8247              		.loc 1 3870 0
 8248 001e 00BF     		nop
 8249              	.L865:
 8250              		.loc 1 3870 0 is_stmt 0 discriminator 1
 8251 0020 FFF7FEFF 		bl	StripLights_Ready
 8252 0024 0346     		mov	r3, r0
 8253 0026 002B     		cmp	r3, #0
 8254 0028 FAD0     		beq	.L865
3871:.\mem1.c      ****                 StripLights_Trigger(1);
 8255              		.loc 1 3871 0 is_stmt 1 discriminator 2
 8256 002a 0120     		movs	r0, #1
 8257 002c FFF7FEFF 		bl	StripLights_Trigger
3865:.\mem1.c      ****            {
 8258              		.loc 1 3865 0 discriminator 2
 8259 0030 FB68     		ldr	r3, [r7, #12]
 8260 0032 0133     		adds	r3, r3, #1
 8261 0034 FB60     		str	r3, [r7, #12]
 8262              	.L864:
3865:.\mem1.c      ****            {
 8263              		.loc 1 3865 0 is_stmt 0 discriminator 1
 8264 0036 FA88     		ldrh	r2, [r7, #6]
 8265 0038 FB68     		ldr	r3, [r7, #12]
 8266 003a 9A42     		cmp	r2, r3
 8267 003c E9D2     		bcs	.L866
3872:.\mem1.c      ****                 
3873:.\mem1.c      ****            }
3874:.\mem1.c      ****            
3875:.\mem1.c      ****         
3876:.\mem1.c      **** 
3877:.\mem1.c      ****     }
 8268              		.loc 1 3877 0 is_stmt 1
 8269 003e 1037     		adds	r7, r7, #16
 8270              		.cfi_def_cfa_offset 8
 8271 0040 BD46     		mov	sp, r7
 8272              		.cfi_def_cfa_register 13
 8273              		@ sp needed
 8274 0042 80BD     		pop	{r7, pc}
 8275              		.cfi_endproc
 8276              	.LFE76:
 8277              		.size	Stripe, .-Stripe
 8278              		.section	.text.NeoPixel_DrawRow,"ax",%progbits
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cc7rr7YM.s 			page 216


 8279              		.align	2
 8280              		.global	NeoPixel_DrawRow
 8281              		.thumb
 8282              		.thumb_func
 8283              		.type	NeoPixel_DrawRow, %function
 8284              	NeoPixel_DrawRow:
 8285              	.LFB77:
3878:.\mem1.c      ****     void NeoPixel_DrawRow(uint8 row, uint32 color)
3879:.\mem1.c      ****     {
 8286              		.loc 1 3879 0
 8287              		.cfi_startproc
 8288              		@ args = 0, pretend = 0, frame = 16
 8289              		@ frame_needed = 1, uses_anonymous_args = 0
 8290 0000 80B5     		push	{r7, lr}
 8291              		.cfi_def_cfa_offset 8
 8292              		.cfi_offset 7, -8
 8293              		.cfi_offset 14, -4
 8294 0002 84B0     		sub	sp, sp, #16
 8295              		.cfi_def_cfa_offset 24
 8296 0004 00AF     		add	r7, sp, #0
 8297              		.cfi_def_cfa_register 7
 8298 0006 0346     		mov	r3, r0
 8299 0008 3960     		str	r1, [r7]
 8300 000a FB71     		strb	r3, [r7, #7]
3880:.\mem1.c      ****         int x = 0;
 8301              		.loc 1 3880 0
 8302 000c 0023     		movs	r3, #0
 8303 000e FB60     		str	r3, [r7, #12]
3881:.\mem1.c      ****         for (x = 0; x<8 ; x++)
 8304              		.loc 1 3881 0
 8305 0010 0023     		movs	r3, #0
 8306 0012 FB60     		str	r3, [r7, #12]
 8307 0014 14E0     		b	.L868
 8308              	.L870:
3882:.\mem1.c      ****         {
3883:.\mem1.c      ****             StripLights_Pixel(8*row + x, 0, color);
 8309              		.loc 1 3883 0
 8310 0016 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 8311 0018 DA00     		lsls	r2, r3, #3
 8312 001a FB68     		ldr	r3, [r7, #12]
 8313 001c 1344     		add	r3, r3, r2
 8314 001e 1846     		mov	r0, r3
 8315 0020 0021     		movs	r1, #0
 8316 0022 3A68     		ldr	r2, [r7]
 8317 0024 FFF7FEFF 		bl	StripLights_Pixel
3884:.\mem1.c      ****             while( StripLights_Ready() == 0);
 8318              		.loc 1 3884 0
 8319 0028 00BF     		nop
 8320              	.L869:
 8321              		.loc 1 3884 0 is_stmt 0 discriminator 1
 8322 002a FFF7FEFF 		bl	StripLights_Ready
 8323 002e 0346     		mov	r3, r0
 8324 0030 002B     		cmp	r3, #0
 8325 0032 FAD0     		beq	.L869
3885:.\mem1.c      ****             StripLights_Trigger(1);
 8326              		.loc 1 3885 0 is_stmt 1 discriminator 2
 8327 0034 0120     		movs	r0, #1
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cc7rr7YM.s 			page 217


 8328 0036 FFF7FEFF 		bl	StripLights_Trigger
3881:.\mem1.c      ****         {
 8329              		.loc 1 3881 0 discriminator 2
 8330 003a FB68     		ldr	r3, [r7, #12]
 8331 003c 0133     		adds	r3, r3, #1
 8332 003e FB60     		str	r3, [r7, #12]
 8333              	.L868:
3881:.\mem1.c      ****         {
 8334              		.loc 1 3881 0 is_stmt 0 discriminator 1
 8335 0040 FB68     		ldr	r3, [r7, #12]
 8336 0042 072B     		cmp	r3, #7
 8337 0044 E7DD     		ble	.L870
3886:.\mem1.c      ****         }
3887:.\mem1.c      ****         
3888:.\mem1.c      ****     }
 8338              		.loc 1 3888 0 is_stmt 1
 8339 0046 1037     		adds	r7, r7, #16
 8340              		.cfi_def_cfa_offset 8
 8341 0048 BD46     		mov	sp, r7
 8342              		.cfi_def_cfa_register 13
 8343              		@ sp needed
 8344 004a 80BD     		pop	{r7, pc}
 8345              		.cfi_endproc
 8346              	.LFE77:
 8347              		.size	NeoPixel_DrawRow, .-NeoPixel_DrawRow
 8348              		.section	.text.NeoPixel_DrawColumn,"ax",%progbits
 8349              		.align	2
 8350              		.global	NeoPixel_DrawColumn
 8351              		.thumb
 8352              		.thumb_func
 8353              		.type	NeoPixel_DrawColumn, %function
 8354              	NeoPixel_DrawColumn:
 8355              	.LFB78:
3889:.\mem1.c      ****     void NeoPixel_DrawColumn(uint8 column, uint32 color)
3890:.\mem1.c      ****     {
 8356              		.loc 1 3890 0
 8357              		.cfi_startproc
 8358              		@ args = 0, pretend = 0, frame = 16
 8359              		@ frame_needed = 1, uses_anonymous_args = 0
 8360 0000 80B5     		push	{r7, lr}
 8361              		.cfi_def_cfa_offset 8
 8362              		.cfi_offset 7, -8
 8363              		.cfi_offset 14, -4
 8364 0002 84B0     		sub	sp, sp, #16
 8365              		.cfi_def_cfa_offset 24
 8366 0004 00AF     		add	r7, sp, #0
 8367              		.cfi_def_cfa_register 7
 8368 0006 0346     		mov	r3, r0
 8369 0008 3960     		str	r1, [r7]
 8370 000a FB71     		strb	r3, [r7, #7]
3891:.\mem1.c      ****         int x = 0;
 8371              		.loc 1 3891 0
 8372 000c 0023     		movs	r3, #0
 8373 000e FB60     		str	r3, [r7, #12]
3892:.\mem1.c      ****         for (x = 0; x<5 ; x++)
 8374              		.loc 1 3892 0
 8375 0010 0023     		movs	r3, #0
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cc7rr7YM.s 			page 218


 8376 0012 FB60     		str	r3, [r7, #12]
 8377 0014 14E0     		b	.L872
 8378              	.L874:
3893:.\mem1.c      ****         {
3894:.\mem1.c      ****             StripLights_Pixel(column + 8*x, 0, color);
 8379              		.loc 1 3894 0
 8380 0016 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 8381 0018 FB68     		ldr	r3, [r7, #12]
 8382 001a DB00     		lsls	r3, r3, #3
 8383 001c 1344     		add	r3, r3, r2
 8384 001e 1846     		mov	r0, r3
 8385 0020 0021     		movs	r1, #0
 8386 0022 3A68     		ldr	r2, [r7]
 8387 0024 FFF7FEFF 		bl	StripLights_Pixel
3895:.\mem1.c      ****             while( StripLights_Ready() == 0);
 8388              		.loc 1 3895 0
 8389 0028 00BF     		nop
 8390              	.L873:
 8391              		.loc 1 3895 0 is_stmt 0 discriminator 1
 8392 002a FFF7FEFF 		bl	StripLights_Ready
 8393 002e 0346     		mov	r3, r0
 8394 0030 002B     		cmp	r3, #0
 8395 0032 FAD0     		beq	.L873
3896:.\mem1.c      ****             StripLights_Trigger(1);
 8396              		.loc 1 3896 0 is_stmt 1 discriminator 2
 8397 0034 0120     		movs	r0, #1
 8398 0036 FFF7FEFF 		bl	StripLights_Trigger
3892:.\mem1.c      ****         {
 8399              		.loc 1 3892 0 discriminator 2
 8400 003a FB68     		ldr	r3, [r7, #12]
 8401 003c 0133     		adds	r3, r3, #1
 8402 003e FB60     		str	r3, [r7, #12]
 8403              	.L872:
3892:.\mem1.c      ****         {
 8404              		.loc 1 3892 0 is_stmt 0 discriminator 1
 8405 0040 FB68     		ldr	r3, [r7, #12]
 8406 0042 042B     		cmp	r3, #4
 8407 0044 E7DD     		ble	.L874
3897:.\mem1.c      ****         }
3898:.\mem1.c      ****         
3899:.\mem1.c      ****     }
 8408              		.loc 1 3899 0 is_stmt 1
 8409 0046 1037     		adds	r7, r7, #16
 8410              		.cfi_def_cfa_offset 8
 8411 0048 BD46     		mov	sp, r7
 8412              		.cfi_def_cfa_register 13
 8413              		@ sp needed
 8414 004a 80BD     		pop	{r7, pc}
 8415              		.cfi_endproc
 8416              	.LFE78:
 8417              		.size	NeoPixel_DrawColumn, .-NeoPixel_DrawColumn
 8418              		.section	.text.SetNeoPixel,"ax",%progbits
 8419              		.align	2
 8420              		.global	SetNeoPixel
 8421              		.thumb
 8422              		.thumb_func
 8423              		.type	SetNeoPixel, %function
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cc7rr7YM.s 			page 219


 8424              	SetNeoPixel:
 8425              	.LFB79:
3900:.\mem1.c      ****     void SetNeoPixel(uint8 row, uint8 column, uint32 color)
3901:.\mem1.c      ****     {
 8426              		.loc 1 3901 0
 8427              		.cfi_startproc
 8428              		@ args = 0, pretend = 0, frame = 8
 8429              		@ frame_needed = 1, uses_anonymous_args = 0
 8430 0000 80B5     		push	{r7, lr}
 8431              		.cfi_def_cfa_offset 8
 8432              		.cfi_offset 7, -8
 8433              		.cfi_offset 14, -4
 8434 0002 82B0     		sub	sp, sp, #8
 8435              		.cfi_def_cfa_offset 16
 8436 0004 00AF     		add	r7, sp, #0
 8437              		.cfi_def_cfa_register 7
 8438 0006 0346     		mov	r3, r0
 8439 0008 3A60     		str	r2, [r7]
 8440 000a FB71     		strb	r3, [r7, #7]
 8441 000c 0B46     		mov	r3, r1
 8442 000e BB71     		strb	r3, [r7, #6]
3902:.\mem1.c      ****         StripLights_Pixel(8*row + column, 0, color);
 8443              		.loc 1 3902 0
 8444 0010 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 8445 0012 DA00     		lsls	r2, r3, #3
 8446 0014 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 8447 0016 1344     		add	r3, r3, r2
 8448 0018 1846     		mov	r0, r3
 8449 001a 0021     		movs	r1, #0
 8450 001c 3A68     		ldr	r2, [r7]
 8451 001e FFF7FEFF 		bl	StripLights_Pixel
3903:.\mem1.c      ****         while( StripLights_Ready() == 0);
 8452              		.loc 1 3903 0
 8453 0022 00BF     		nop
 8454              	.L876:
 8455              		.loc 1 3903 0 is_stmt 0 discriminator 1
 8456 0024 FFF7FEFF 		bl	StripLights_Ready
 8457 0028 0346     		mov	r3, r0
 8458 002a 002B     		cmp	r3, #0
 8459 002c FAD0     		beq	.L876
3904:.\mem1.c      ****         StripLights_Trigger(1);
 8460              		.loc 1 3904 0 is_stmt 1
 8461 002e 0120     		movs	r0, #1
 8462 0030 FFF7FEFF 		bl	StripLights_Trigger
3905:.\mem1.c      ****     }
 8463              		.loc 1 3905 0
 8464 0034 0837     		adds	r7, r7, #8
 8465              		.cfi_def_cfa_offset 8
 8466 0036 BD46     		mov	sp, r7
 8467              		.cfi_def_cfa_register 13
 8468              		@ sp needed
 8469 0038 80BD     		pop	{r7, pc}
 8470              		.cfi_endproc
 8471              	.LFE79:
 8472              		.size	SetNeoPixel, .-SetNeoPixel
 8473 003a 00BF     		.text
 8474              	.Letext0:
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cc7rr7YM.s 			page 220


 8475              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\3.3\\psoc creator\\import\\gnu\\arm\\4.9.
 8476              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\3.3\\psoc creator\\import\\gnu\\arm\\4.9.
 8477              		.file 4 "Generated_Source\\PSoC5/cytypes.h"
 8478              		.file 5 ".\\mem1.h"
 8479              		.file 6 "Generated_Source\\PSoC5/core_cm3.h"
 8480              		.section	.debug_info,"",%progbits
 8481              	.Ldebug_info0:
 8482 0000 EE0B0000 		.4byte	0xbee
 8483 0004 0400     		.2byte	0x4
 8484 0006 00000000 		.4byte	.Ldebug_abbrev0
 8485 000a 04       		.byte	0x4
 8486 000b 01       		.uleb128 0x1
 8487 000c 12010000 		.4byte	.LASF78
 8488 0010 01       		.byte	0x1
 8489 0011 C0000000 		.4byte	.LASF79
 8490 0015 B0020000 		.4byte	.LASF80
 8491 0019 00000000 		.4byte	.Ldebug_ranges0+0
 8492 001d 00000000 		.4byte	0
 8493 0021 00000000 		.4byte	.Ldebug_line0
 8494 0025 02       		.uleb128 0x2
 8495 0026 01       		.byte	0x1
 8496 0027 06       		.byte	0x6
 8497 0028 39020000 		.4byte	.LASF0
 8498 002c 02       		.uleb128 0x2
 8499 002d 01       		.byte	0x1
 8500 002e 08       		.byte	0x8
 8501 002f 2B020000 		.4byte	.LASF1
 8502 0033 02       		.uleb128 0x2
 8503 0034 02       		.byte	0x2
 8504 0035 05       		.byte	0x5
 8505 0036 2A000000 		.4byte	.LASF2
 8506 003a 02       		.uleb128 0x2
 8507 003b 02       		.byte	0x2
 8508 003c 07       		.byte	0x7
 8509 003d 9D020000 		.4byte	.LASF3
 8510 0041 03       		.uleb128 0x3
 8511 0042 C3030000 		.4byte	.LASF9
 8512 0046 02       		.byte	0x2
 8513 0047 3F       		.byte	0x3f
 8514 0048 4C000000 		.4byte	0x4c
 8515 004c 02       		.uleb128 0x2
 8516 004d 04       		.byte	0x4
 8517 004e 05       		.byte	0x5
 8518 004f 15030000 		.4byte	.LASF4
 8519 0053 02       		.uleb128 0x2
 8520 0054 04       		.byte	0x4
 8521 0055 07       		.byte	0x7
 8522 0056 8E030000 		.4byte	.LASF5
 8523 005a 02       		.uleb128 0x2
 8524 005b 08       		.byte	0x8
 8525 005c 05       		.byte	0x5
 8526 005d DD000000 		.4byte	.LASF6
 8527 0061 02       		.uleb128 0x2
 8528 0062 08       		.byte	0x8
 8529 0063 07       		.byte	0x7
 8530 0064 45020000 		.4byte	.LASF7
 8531 0068 04       		.uleb128 0x4
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cc7rr7YM.s 			page 221


 8532 0069 04       		.byte	0x4
 8533 006a 05       		.byte	0x5
 8534 006b 696E7400 		.ascii	"int\000"
 8535 006f 02       		.uleb128 0x2
 8536 0070 04       		.byte	0x4
 8537 0071 07       		.byte	0x7
 8538 0072 6A020000 		.4byte	.LASF8
 8539 0076 03       		.uleb128 0x3
 8540 0077 28030000 		.4byte	.LASF10
 8541 007b 03       		.byte	0x3
 8542 007c 2C       		.byte	0x2c
 8543 007d 41000000 		.4byte	0x41
 8544 0081 03       		.uleb128 0x3
 8545 0082 AC000000 		.4byte	.LASF11
 8546 0086 04       		.byte	0x4
 8547 0087 A1       		.byte	0xa1
 8548 0088 2C000000 		.4byte	0x2c
 8549 008c 03       		.uleb128 0x3
 8550 008d 94000000 		.4byte	.LASF12
 8551 0091 04       		.byte	0x4
 8552 0092 A2       		.byte	0xa2
 8553 0093 3A000000 		.4byte	0x3a
 8554 0097 03       		.uleb128 0x3
 8555 0098 82030000 		.4byte	.LASF13
 8556 009c 04       		.byte	0x4
 8557 009d A3       		.byte	0xa3
 8558 009e 53000000 		.4byte	0x53
 8559 00a2 02       		.uleb128 0x2
 8560 00a3 04       		.byte	0x4
 8561 00a4 04       		.byte	0x4
 8562 00a5 C9000000 		.4byte	.LASF14
 8563 00a9 02       		.uleb128 0x2
 8564 00aa 08       		.byte	0x8
 8565 00ab 04       		.byte	0x4
 8566 00ac A0030000 		.4byte	.LASF15
 8567 00b0 02       		.uleb128 0x2
 8568 00b1 01       		.byte	0x1
 8569 00b2 08       		.byte	0x8
 8570 00b3 02010000 		.4byte	.LASF16
 8571 00b7 05       		.uleb128 0x5
 8572 00b8 89030000 		.4byte	.LASF17
 8573 00bc 04       		.byte	0x4
 8574 00bd 4B01     		.2byte	0x14b
 8575 00bf C3000000 		.4byte	0xc3
 8576 00c3 06       		.uleb128 0x6
 8577 00c4 81000000 		.4byte	0x81
 8578 00c8 02       		.uleb128 0x2
 8579 00c9 04       		.byte	0x4
 8580 00ca 07       		.byte	0x7
 8581 00cb D6030000 		.4byte	.LASF18
 8582 00cf 07       		.uleb128 0x7
 8583 00d0 07010000 		.4byte	.LASF81
 8584 00d4 10       		.byte	0x10
 8585 00d5 05       		.byte	0x5
 8586 00d6 1A       		.byte	0x1a
 8587 00d7 AE010000 		.4byte	0x1ae
 8588 00db 08       		.uleb128 0x8
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cc7rr7YM.s 			page 222


 8589 00dc A0010000 		.4byte	.LASF19
 8590 00e0 05       		.byte	0x5
 8591 00e1 1B       		.byte	0x1b
 8592 00e2 81000000 		.4byte	0x81
 8593 00e6 01       		.byte	0x1
 8594 00e7 08       		.byte	0x8
 8595 00e8 00       		.byte	0
 8596 00e9 00       		.byte	0
 8597 00ea 09       		.uleb128 0x9
 8598 00eb 636D6400 		.ascii	"cmd\000"
 8599 00ef 05       		.byte	0x5
 8600 00f0 1C       		.byte	0x1c
 8601 00f1 81000000 		.4byte	0x81
 8602 00f5 01       		.byte	0x1
 8603 00f6 08       		.byte	0x8
 8604 00f7 00       		.byte	0
 8605 00f8 01       		.byte	0x1
 8606 00f9 09       		.uleb128 0x9
 8607 00fa 64617400 		.ascii	"dat\000"
 8608 00fe 05       		.byte	0x5
 8609 00ff 1D       		.byte	0x1d
 8610 0100 8C000000 		.4byte	0x8c
 8611 0104 02       		.byte	0x2
 8612 0105 10       		.byte	0x10
 8613 0106 00       		.byte	0
 8614 0107 02       		.byte	0x2
 8615 0108 08       		.uleb128 0x8
 8616 0109 4D030000 		.4byte	.LASF20
 8617 010d 05       		.byte	0x5
 8618 010e 1E       		.byte	0x1e
 8619 010f 81000000 		.4byte	0x81
 8620 0113 01       		.byte	0x1
 8621 0114 04       		.byte	0x4
 8622 0115 04       		.byte	0x4
 8623 0116 04       		.byte	0x4
 8624 0117 09       		.uleb128 0x9
 8625 0118 70696E00 		.ascii	"pin\000"
 8626 011c 05       		.byte	0x5
 8627 011d 1F       		.byte	0x1f
 8628 011e 81000000 		.4byte	0x81
 8629 0122 01       		.byte	0x1
 8630 0123 03       		.byte	0x3
 8631 0124 01       		.byte	0x1
 8632 0125 04       		.byte	0x4
 8633 0126 08       		.uleb128 0x8
 8634 0127 CD030000 		.4byte	.LASF21
 8635 012b 05       		.byte	0x5
 8636 012c 20       		.byte	0x20
 8637 012d 81000000 		.4byte	0x81
 8638 0131 01       		.byte	0x1
 8639 0132 04       		.byte	0x4
 8640 0133 04       		.byte	0x4
 8641 0134 05       		.byte	0x5
 8642 0135 08       		.uleb128 0x8
 8643 0136 36030000 		.4byte	.LASF22
 8644 013a 05       		.byte	0x5
 8645 013b 21       		.byte	0x21
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cc7rr7YM.s 			page 223


 8646 013c 81000000 		.4byte	0x81
 8647 0140 01       		.byte	0x1
 8648 0141 03       		.byte	0x3
 8649 0142 01       		.byte	0x1
 8650 0143 05       		.byte	0x5
 8651 0144 08       		.uleb128 0x8
 8652 0145 A5010000 		.4byte	.LASF23
 8653 0149 05       		.byte	0x5
 8654 014a 22       		.byte	0x22
 8655 014b 81000000 		.4byte	0x81
 8656 014f 01       		.byte	0x1
 8657 0150 03       		.byte	0x3
 8658 0151 05       		.byte	0x5
 8659 0152 06       		.byte	0x6
 8660 0153 09       		.uleb128 0x9
 8661 0154 616D7000 		.ascii	"amp\000"
 8662 0158 05       		.byte	0x5
 8663 0159 23       		.byte	0x23
 8664 015a 81000000 		.4byte	0x81
 8665 015e 01       		.byte	0x1
 8666 015f 08       		.byte	0x8
 8667 0160 00       		.byte	0
 8668 0161 07       		.byte	0x7
 8669 0162 09       		.uleb128 0x9
 8670 0163 64634200 		.ascii	"dcB\000"
 8671 0167 05       		.byte	0x5
 8672 0168 24       		.byte	0x24
 8673 0169 81000000 		.4byte	0x81
 8674 016d 01       		.byte	0x1
 8675 016e 08       		.byte	0x8
 8676 016f 00       		.byte	0
 8677 0170 08       		.byte	0x8
 8678 0171 08       		.uleb128 0x8
 8679 0172 DF030000 		.4byte	.LASF24
 8680 0176 05       		.byte	0x5
 8681 0177 25       		.byte	0x25
 8682 0178 81000000 		.4byte	0x81
 8683 017c 01       		.byte	0x1
 8684 017d 03       		.byte	0x3
 8685 017e 05       		.byte	0x5
 8686 017f 09       		.byte	0x9
 8687 0180 09       		.uleb128 0x9
 8688 0181 726F7700 		.ascii	"row\000"
 8689 0185 05       		.byte	0x5
 8690 0186 26       		.byte	0x26
 8691 0187 81000000 		.4byte	0x81
 8692 018b 01       		.byte	0x1
 8693 018c 03       		.byte	0x3
 8694 018d 02       		.byte	0x2
 8695 018e 09       		.byte	0x9
 8696 018f 08       		.uleb128 0x8
 8697 0190 A7030000 		.4byte	.LASF25
 8698 0194 05       		.byte	0x5
 8699 0195 27       		.byte	0x27
 8700 0196 81000000 		.4byte	0x81
 8701 019a 01       		.byte	0x1
 8702 019b 06       		.byte	0x6
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cc7rr7YM.s 			page 224


 8703 019c 02       		.byte	0x2
 8704 019d 0A       		.byte	0xa
 8705 019e 08       		.uleb128 0x8
 8706 019f 34000000 		.4byte	.LASF26
 8707 01a3 05       		.byte	0x5
 8708 01a4 28       		.byte	0x28
 8709 01a5 97000000 		.4byte	0x97
 8710 01a9 04       		.byte	0x4
 8711 01aa 18       		.byte	0x18
 8712 01ab 08       		.byte	0x8
 8713 01ac 0C       		.byte	0xc
 8714 01ad 00       		.byte	0
 8715 01ae 03       		.uleb128 0x3
 8716 01af 52030000 		.4byte	.LASF27
 8717 01b3 05       		.byte	0x5
 8718 01b4 29       		.byte	0x29
 8719 01b5 CF000000 		.4byte	0xcf
 8720 01b9 0A       		.uleb128 0xa
 8721 01ba CF000000 		.4byte	.LASF32
 8722 01be 01       		.byte	0x1
 8723 01bf 26       		.byte	0x26
 8724 01c0 27020000 		.4byte	0x227
 8725 01c4 00000000 		.4byte	.LFB56
 8726 01c8 9C020000 		.4byte	.LFE56-.LFB56
 8727 01cc 01       		.uleb128 0x1
 8728 01cd 9C       		.byte	0x9c
 8729 01ce 27020000 		.4byte	0x227
 8730 01d2 0B       		.uleb128 0xb
 8731 01d3 BC030000 		.4byte	.LASF28
 8732 01d7 01       		.byte	0x1
 8733 01d8 26       		.byte	0x26
 8734 01d9 AE010000 		.4byte	0x1ae
 8735 01dd 02       		.uleb128 0x2
 8736 01de 91       		.byte	0x91
 8737 01df 50       		.sleb128 -48
 8738 01e0 0B       		.uleb128 0xb
 8739 01e1 10000000 		.4byte	.LASF29
 8740 01e5 01       		.byte	0x1
 8741 01e6 26       		.byte	0x26
 8742 01e7 2E020000 		.4byte	0x22e
 8743 01eb 02       		.uleb128 0x2
 8744 01ec 91       		.byte	0x91
 8745 01ed 00       		.sleb128 0
 8746 01ee 0C       		.uleb128 0xc
 8747 01ef 76030000 		.4byte	.LASF30
 8748 01f3 01       		.byte	0x1
 8749 01f4 28       		.byte	0x28
 8750 01f5 27020000 		.4byte	0x227
 8751 01f9 02       		.uleb128 0x2
 8752 01fa 91       		.byte	0x91
 8753 01fb 67       		.sleb128 -25
 8754 01fc 0D       		.uleb128 0xd
 8755 01fd 636D6400 		.ascii	"cmd\000"
 8756 0201 01       		.byte	0x1
 8757 0202 29       		.byte	0x29
 8758 0203 81000000 		.4byte	0x81
 8759 0207 02       		.uleb128 0x2
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cc7rr7YM.s 			page 225


 8760 0208 91       		.byte	0x91
 8761 0209 66       		.sleb128 -26
 8762 020a 0D       		.uleb128 0xd
 8763 020b 64617400 		.ascii	"dat\000"
 8764 020f 01       		.byte	0x1
 8765 0210 2A       		.byte	0x2a
 8766 0211 8C000000 		.4byte	0x8c
 8767 0215 02       		.uleb128 0x2
 8768 0216 91       		.byte	0x91
 8769 0217 64       		.sleb128 -28
 8770 0218 0C       		.uleb128 0xc
 8771 0219 A0010000 		.4byte	.LASF19
 8772 021d 01       		.byte	0x1
 8773 021e 2B       		.byte	0x2b
 8774 021f 81000000 		.4byte	0x81
 8775 0223 02       		.uleb128 0x2
 8776 0224 91       		.byte	0x91
 8777 0225 63       		.sleb128 -29
 8778 0226 00       		.byte	0
 8779 0227 02       		.uleb128 0x2
 8780 0228 01       		.byte	0x1
 8781 0229 02       		.byte	0x2
 8782 022a 30030000 		.4byte	.LASF31
 8783 022e 0E       		.uleb128 0xe
 8784 022f 04       		.byte	0x4
 8785 0230 97000000 		.4byte	0x97
 8786 0234 0A       		.uleb128 0xa
 8787 0235 3A000000 		.4byte	.LASF33
 8788 0239 01       		.byte	0x1
 8789 023a AC       		.byte	0xac
 8790 023b 27020000 		.4byte	0x227
 8791 023f 00000000 		.4byte	.LFB57
 8792 0243 5C040000 		.4byte	.LFE57-.LFB57
 8793 0247 01       		.uleb128 0x1
 8794 0248 9C       		.byte	0x9c
 8795 0249 12030000 		.4byte	0x312
 8796 024d 0F       		.uleb128 0xf
 8797 024e 636D6400 		.ascii	"cmd\000"
 8798 0252 01       		.byte	0x1
 8799 0253 AC       		.byte	0xac
 8800 0254 81000000 		.4byte	0x81
 8801 0258 02       		.uleb128 0x2
 8802 0259 91       		.byte	0x91
 8803 025a 67       		.sleb128 -25
 8804 025b 0F       		.uleb128 0xf
 8805 025c 76616C00 		.ascii	"val\000"
 8806 0260 01       		.byte	0x1
 8807 0261 AC       		.byte	0xac
 8808 0262 8C000000 		.4byte	0x8c
 8809 0266 02       		.uleb128 0x2
 8810 0267 91       		.byte	0x91
 8811 0268 64       		.sleb128 -28
 8812 0269 0B       		.uleb128 0xb
 8813 026a 10000000 		.4byte	.LASF29
 8814 026e 01       		.byte	0x1
 8815 026f AC       		.byte	0xac
 8816 0270 2E020000 		.4byte	0x22e
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cc7rr7YM.s 			page 226


 8817 0274 02       		.uleb128 0x2
 8818 0275 91       		.byte	0x91
 8819 0276 60       		.sleb128 -32
 8820 0277 0C       		.uleb128 0xc
 8821 0278 47030000 		.4byte	.LASF34
 8822 027c 01       		.byte	0x1
 8823 027d B0       		.byte	0xb0
 8824 027e 81000000 		.4byte	0x81
 8825 0282 02       		.uleb128 0x2
 8826 0283 91       		.byte	0x91
 8827 0284 76       		.sleb128 -10
 8828 0285 0C       		.uleb128 0xc
 8829 0286 24000000 		.4byte	.LASF35
 8830 028a 01       		.byte	0x1
 8831 028b B1       		.byte	0xb1
 8832 028c 81000000 		.4byte	0x81
 8833 0290 02       		.uleb128 0x2
 8834 0291 91       		.byte	0x91
 8835 0292 75       		.sleb128 -11
 8836 0293 0C       		.uleb128 0xc
 8837 0294 5E030000 		.4byte	.LASF36
 8838 0298 01       		.byte	0x1
 8839 0299 B2       		.byte	0xb2
 8840 029a 81000000 		.4byte	0x81
 8841 029e 02       		.uleb128 0x2
 8842 029f 91       		.byte	0x91
 8843 02a0 74       		.sleb128 -12
 8844 02a1 0C       		.uleb128 0xc
 8845 02a2 64030000 		.4byte	.LASF37
 8846 02a6 01       		.byte	0x1
 8847 02a7 B3       		.byte	0xb3
 8848 02a8 81000000 		.4byte	0x81
 8849 02ac 02       		.uleb128 0x2
 8850 02ad 91       		.byte	0x91
 8851 02ae 73       		.sleb128 -13
 8852 02af 0C       		.uleb128 0xc
 8853 02b0 6A030000 		.4byte	.LASF38
 8854 02b4 01       		.byte	0x1
 8855 02b5 B4       		.byte	0xb4
 8856 02b6 81000000 		.4byte	0x81
 8857 02ba 02       		.uleb128 0x2
 8858 02bb 91       		.byte	0x91
 8859 02bc 72       		.sleb128 -14
 8860 02bd 0C       		.uleb128 0xc
 8861 02be 70030000 		.4byte	.LASF39
 8862 02c2 01       		.byte	0x1
 8863 02c3 B5       		.byte	0xb5
 8864 02c4 81000000 		.4byte	0x81
 8865 02c8 02       		.uleb128 0x2
 8866 02c9 91       		.byte	0x91
 8867 02ca 71       		.sleb128 -15
 8868 02cb 0C       		.uleb128 0xc
 8869 02cc B2000000 		.4byte	.LASF40
 8870 02d0 01       		.byte	0x1
 8871 02d1 B6       		.byte	0xb6
 8872 02d2 81000000 		.4byte	0x81
 8873 02d6 02       		.uleb128 0x2
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cc7rr7YM.s 			page 227


 8874 02d7 91       		.byte	0x91
 8875 02d8 70       		.sleb128 -16
 8876 02d9 0C       		.uleb128 0xc
 8877 02da B9000000 		.4byte	.LASF41
 8878 02de 01       		.byte	0x1
 8879 02df B7       		.byte	0xb7
 8880 02e0 81000000 		.4byte	0x81
 8881 02e4 02       		.uleb128 0x2
 8882 02e5 91       		.byte	0x91
 8883 02e6 6F       		.sleb128 -17
 8884 02e7 0C       		.uleb128 0xc
 8885 02e8 EB000000 		.4byte	.LASF42
 8886 02ec 01       		.byte	0x1
 8887 02ed B8       		.byte	0xb8
 8888 02ee 81000000 		.4byte	0x81
 8889 02f2 02       		.uleb128 0x2
 8890 02f3 91       		.byte	0x91
 8891 02f4 6E       		.sleb128 -18
 8892 02f5 0C       		.uleb128 0xc
 8893 02f6 F7000000 		.4byte	.LASF43
 8894 02fa 01       		.byte	0x1
 8895 02fb B9       		.byte	0xb9
 8896 02fc 81000000 		.4byte	0x81
 8897 0300 02       		.uleb128 0x2
 8898 0301 91       		.byte	0x91
 8899 0302 6D       		.sleb128 -19
 8900 0303 0C       		.uleb128 0xc
 8901 0304 D8000000 		.4byte	.LASF44
 8902 0308 01       		.byte	0x1
 8903 0309 BB       		.byte	0xbb
 8904 030a 81000000 		.4byte	0x81
 8905 030e 02       		.uleb128 0x2
 8906 030f 91       		.byte	0x91
 8907 0310 77       		.sleb128 -9
 8908 0311 00       		.byte	0
 8909 0312 10       		.uleb128 0x10
 8910 0313 5C020000 		.4byte	.LASF45
 8911 0317 01       		.byte	0x1
 8912 0318 F203     		.2byte	0x3f2
 8913 031a 27020000 		.4byte	0x227
 8914 031e 00000000 		.4byte	.LFB58
 8915 0322 A6000000 		.4byte	.LFE58-.LFB58
 8916 0326 01       		.uleb128 0x1
 8917 0327 9C       		.byte	0x9c
 8918 0328 69030000 		.4byte	0x369
 8919 032c 11       		.uleb128 0x11
 8920 032d 636D6400 		.ascii	"cmd\000"
 8921 0331 01       		.byte	0x1
 8922 0332 F203     		.2byte	0x3f2
 8923 0334 81000000 		.4byte	0x81
 8924 0338 02       		.uleb128 0x2
 8925 0339 91       		.byte	0x91
 8926 033a 6F       		.sleb128 -17
 8927 033b 11       		.uleb128 0x11
 8928 033c 76616C00 		.ascii	"val\000"
 8929 0340 01       		.byte	0x1
 8930 0341 F203     		.2byte	0x3f2
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cc7rr7YM.s 			page 228


 8931 0343 8C000000 		.4byte	0x8c
 8932 0347 02       		.uleb128 0x2
 8933 0348 91       		.byte	0x91
 8934 0349 6C       		.sleb128 -20
 8935 034a 12       		.uleb128 0x12
 8936 034b 10000000 		.4byte	.LASF29
 8937 034f 01       		.byte	0x1
 8938 0350 F203     		.2byte	0x3f2
 8939 0352 2E020000 		.4byte	0x22e
 8940 0356 02       		.uleb128 0x2
 8941 0357 91       		.byte	0x91
 8942 0358 68       		.sleb128 -24
 8943 0359 13       		.uleb128 0x13
 8944 035a 76030000 		.4byte	.LASF30
 8945 035e 01       		.byte	0x1
 8946 035f F403     		.2byte	0x3f4
 8947 0361 27020000 		.4byte	0x227
 8948 0365 02       		.uleb128 0x2
 8949 0366 91       		.byte	0x91
 8950 0367 77       		.sleb128 -9
 8951 0368 00       		.byte	0
 8952 0369 10       		.uleb128 0x10
 8953 036a 77020000 		.4byte	.LASF46
 8954 036e 01       		.byte	0x1
 8955 036f 4404     		.2byte	0x444
 8956 0371 27020000 		.4byte	0x227
 8957 0375 00000000 		.4byte	.LFB59
 8958 0379 D4000000 		.4byte	.LFE59-.LFB59
 8959 037d 01       		.uleb128 0x1
 8960 037e 9C       		.byte	0x9c
 8961 037f C0030000 		.4byte	0x3c0
 8962 0383 11       		.uleb128 0x11
 8963 0384 636D6400 		.ascii	"cmd\000"
 8964 0388 01       		.byte	0x1
 8965 0389 4404     		.2byte	0x444
 8966 038b 81000000 		.4byte	0x81
 8967 038f 02       		.uleb128 0x2
 8968 0390 91       		.byte	0x91
 8969 0391 6F       		.sleb128 -17
 8970 0392 11       		.uleb128 0x11
 8971 0393 76616C00 		.ascii	"val\000"
 8972 0397 01       		.byte	0x1
 8973 0398 4404     		.2byte	0x444
 8974 039a 8C000000 		.4byte	0x8c
 8975 039e 02       		.uleb128 0x2
 8976 039f 91       		.byte	0x91
 8977 03a0 6C       		.sleb128 -20
 8978 03a1 12       		.uleb128 0x12
 8979 03a2 10000000 		.4byte	.LASF29
 8980 03a6 01       		.byte	0x1
 8981 03a7 4404     		.2byte	0x444
 8982 03a9 2E020000 		.4byte	0x22e
 8983 03ad 02       		.uleb128 0x2
 8984 03ae 91       		.byte	0x91
 8985 03af 68       		.sleb128 -24
 8986 03b0 13       		.uleb128 0x13
 8987 03b1 76030000 		.4byte	.LASF30
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cc7rr7YM.s 			page 229


 8988 03b5 01       		.byte	0x1
 8989 03b6 4604     		.2byte	0x446
 8990 03b8 27020000 		.4byte	0x227
 8991 03bc 02       		.uleb128 0x2
 8992 03bd 91       		.byte	0x91
 8993 03be 77       		.sleb128 -9
 8994 03bf 00       		.byte	0
 8995 03c0 10       		.uleb128 0x10
 8996 03c1 00000000 		.4byte	.LASF47
 8997 03c5 01       		.byte	0x1
 8998 03c6 A604     		.2byte	0x4a6
 8999 03c8 27020000 		.4byte	0x227
 9000 03cc 00000000 		.4byte	.LFB60
 9001 03d0 EC000000 		.4byte	.LFE60-.LFB60
 9002 03d4 01       		.uleb128 0x1
 9003 03d5 9C       		.byte	0x9c
 9004 03d6 44040000 		.4byte	0x444
 9005 03da 11       		.uleb128 0x11
 9006 03db 636D6400 		.ascii	"cmd\000"
 9007 03df 01       		.byte	0x1
 9008 03e0 A604     		.2byte	0x4a6
 9009 03e2 81000000 		.4byte	0x81
 9010 03e6 02       		.uleb128 0x2
 9011 03e7 91       		.byte	0x91
 9012 03e8 67       		.sleb128 -25
 9013 03e9 11       		.uleb128 0x11
 9014 03ea 76616C00 		.ascii	"val\000"
 9015 03ee 01       		.byte	0x1
 9016 03ef A604     		.2byte	0x4a6
 9017 03f1 8C000000 		.4byte	0x8c
 9018 03f5 02       		.uleb128 0x2
 9019 03f6 91       		.byte	0x91
 9020 03f7 64       		.sleb128 -28
 9021 03f8 12       		.uleb128 0x12
 9022 03f9 A5010000 		.4byte	.LASF23
 9023 03fd 01       		.byte	0x1
 9024 03fe A604     		.2byte	0x4a6
 9025 0400 81000000 		.4byte	0x81
 9026 0404 02       		.uleb128 0x2
 9027 0405 91       		.byte	0x91
 9028 0406 66       		.sleb128 -26
 9029 0407 11       		.uleb128 0x11
 9030 0408 616D7000 		.ascii	"amp\000"
 9031 040c 01       		.byte	0x1
 9032 040d A604     		.2byte	0x4a6
 9033 040f 81000000 		.4byte	0x81
 9034 0413 02       		.uleb128 0x2
 9035 0414 91       		.byte	0x91
 9036 0415 63       		.sleb128 -29
 9037 0416 11       		.uleb128 0x11
 9038 0417 64634200 		.ascii	"dcB\000"
 9039 041b 01       		.byte	0x1
 9040 041c A604     		.2byte	0x4a6
 9041 041e 81000000 		.4byte	0x81
 9042 0422 02       		.uleb128 0x2
 9043 0423 91       		.byte	0x91
 9044 0424 00       		.sleb128 0
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cc7rr7YM.s 			page 230


 9045 0425 12       		.uleb128 0x12
 9046 0426 10000000 		.4byte	.LASF29
 9047 042a 01       		.byte	0x1
 9048 042b A604     		.2byte	0x4a6
 9049 042d 2E020000 		.4byte	0x22e
 9050 0431 02       		.uleb128 0x2
 9051 0432 91       		.byte	0x91
 9052 0433 04       		.sleb128 4
 9053 0434 13       		.uleb128 0x13
 9054 0435 76030000 		.4byte	.LASF30
 9055 0439 01       		.byte	0x1
 9056 043a A804     		.2byte	0x4a8
 9057 043c 27020000 		.4byte	0x227
 9058 0440 02       		.uleb128 0x2
 9059 0441 91       		.byte	0x91
 9060 0442 6F       		.sleb128 -17
 9061 0443 00       		.byte	0
 9062 0444 14       		.uleb128 0x14
 9063 0445 79000000 		.4byte	.LASF73
 9064 0449 01       		.byte	0x1
 9065 044a CC04     		.2byte	0x4cc
 9066 044c 00000000 		.4byte	.LFB61
 9067 0450 08040000 		.4byte	.LFE61-.LFB61
 9068 0454 01       		.uleb128 0x1
 9069 0455 9C       		.byte	0x9c
 9070 0456 61050000 		.4byte	0x561
 9071 045a 12       		.uleb128 0x12
 9072 045b A5010000 		.4byte	.LASF23
 9073 045f 01       		.byte	0x1
 9074 0460 CC04     		.2byte	0x4cc
 9075 0462 81000000 		.4byte	0x81
 9076 0466 03       		.uleb128 0x3
 9077 0467 91       		.byte	0x91
 9078 0468 D775     		.sleb128 -1321
 9079 046a 11       		.uleb128 0x11
 9080 046b 616D7000 		.ascii	"amp\000"
 9081 046f 01       		.byte	0x1
 9082 0470 CC04     		.2byte	0x4cc
 9083 0472 81000000 		.4byte	0x81
 9084 0476 03       		.uleb128 0x3
 9085 0477 91       		.byte	0x91
 9086 0478 D675     		.sleb128 -1322
 9087 047a 11       		.uleb128 0x11
 9088 047b 64634200 		.ascii	"dcB\000"
 9089 047f 01       		.byte	0x1
 9090 0480 CC04     		.2byte	0x4cc
 9091 0482 81000000 		.4byte	0x81
 9092 0486 03       		.uleb128 0x3
 9093 0487 91       		.byte	0x91
 9094 0488 D575     		.sleb128 -1323
 9095 048a 13       		.uleb128 0x13
 9096 048b 3E030000 		.4byte	.LASF48
 9097 048f 01       		.byte	0x1
 9098 0490 D604     		.2byte	0x4d6
 9099 0492 61050000 		.4byte	0x561
 9100 0496 03       		.uleb128 0x3
 9101 0497 91       		.byte	0x91
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cc7rr7YM.s 			page 231


 9102 0498 D87D     		.sleb128 -296
 9103 049a 13       		.uleb128 0x13
 9104 049b 92020000 		.4byte	.LASF49
 9105 049f 01       		.byte	0x1
 9106 04a0 E804     		.2byte	0x4e8
 9107 04a2 61050000 		.4byte	0x561
 9108 04a6 03       		.uleb128 0x3
 9109 04a7 91       		.byte	0x91
 9110 04a8 D87B     		.sleb128 -552
 9111 04aa 13       		.uleb128 0x13
 9112 04ab AF030000 		.4byte	.LASF50
 9113 04af 01       		.byte	0x1
 9114 04b0 F704     		.2byte	0x4f7
 9115 04b2 61050000 		.4byte	0x561
 9116 04b6 03       		.uleb128 0x3
 9117 04b7 91       		.byte	0x91
 9118 04b8 D879     		.sleb128 -808
 9119 04ba 13       		.uleb128 0x13
 9120 04bb 87000000 		.4byte	.LASF51
 9121 04bf 01       		.byte	0x1
 9122 04c0 0705     		.2byte	0x507
 9123 04c2 61050000 		.4byte	0x561
 9124 04c6 03       		.uleb128 0x3
 9125 04c7 91       		.byte	0x91
 9126 04c8 D877     		.sleb128 -1064
 9127 04ca 13       		.uleb128 0x13
 9128 04cb FC030000 		.4byte	.LASF52
 9129 04cf 01       		.byte	0x1
 9130 04d0 1B05     		.2byte	0x51b
 9131 04d2 61050000 		.4byte	0x561
 9132 04d6 03       		.uleb128 0x3
 9133 04d7 91       		.byte	0x91
 9134 04d8 D875     		.sleb128 -1320
 9135 04da 15       		.uleb128 0x15
 9136 04db 76616C00 		.ascii	"val\000"
 9137 04df 01       		.byte	0x1
 9138 04e0 1D05     		.2byte	0x51d
 9139 04e2 A9000000 		.4byte	0xa9
 9140 04e6 02       		.uleb128 0x2
 9141 04e7 91       		.byte	0x91
 9142 04e8 68       		.sleb128 -24
 9143 04e9 13       		.uleb128 0x13
 9144 04ea 72000000 		.4byte	.LASF53
 9145 04ee 01       		.byte	0x1
 9146 04ef 1E05     		.2byte	0x51e
 9147 04f1 81000000 		.4byte	0x81
 9148 04f5 02       		.uleb128 0x2
 9149 04f6 91       		.byte	0x91
 9150 04f7 57       		.sleb128 -41
 9151 04f8 16       		.uleb128 0x16
 9152 04f9 8C000000 		.4byte	.LBB2
 9153 04fd CA000000 		.4byte	.LBE2-.LBB2
 9154 0501 13050000 		.4byte	0x513
 9155 0505 15       		.uleb128 0x15
 9156 0506 6900     		.ascii	"i\000"
 9157 0508 01       		.byte	0x1
 9158 0509 2205     		.2byte	0x522
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cc7rr7YM.s 			page 232


 9159 050b 68000000 		.4byte	0x68
 9160 050f 02       		.uleb128 0x2
 9161 0510 91       		.byte	0x91
 9162 0511 64       		.sleb128 -28
 9163 0512 00       		.byte	0
 9164 0513 16       		.uleb128 0x16
 9165 0514 60010000 		.4byte	.LBB3
 9166 0518 CA000000 		.4byte	.LBE3-.LBB3
 9167 051c 2E050000 		.4byte	0x52e
 9168 0520 15       		.uleb128 0x15
 9169 0521 6900     		.ascii	"i\000"
 9170 0523 01       		.byte	0x1
 9171 0524 2F05     		.2byte	0x52f
 9172 0526 68000000 		.4byte	0x68
 9173 052a 02       		.uleb128 0x2
 9174 052b 91       		.byte	0x91
 9175 052c 60       		.sleb128 -32
 9176 052d 00       		.byte	0
 9177 052e 16       		.uleb128 0x16
 9178 052f 32020000 		.4byte	.LBB4
 9179 0533 CA000000 		.4byte	.LBE4-.LBB4
 9180 0537 49050000 		.4byte	0x549
 9181 053b 15       		.uleb128 0x15
 9182 053c 6900     		.ascii	"i\000"
 9183 053e 01       		.byte	0x1
 9184 053f 3C05     		.2byte	0x53c
 9185 0541 68000000 		.4byte	0x68
 9186 0545 02       		.uleb128 0x2
 9187 0546 91       		.byte	0x91
 9188 0547 5C       		.sleb128 -36
 9189 0548 00       		.byte	0
 9190 0549 17       		.uleb128 0x17
 9191 054a 04030000 		.4byte	.LBB5
 9192 054e E6000000 		.4byte	.LBE5-.LBB5
 9193 0552 15       		.uleb128 0x15
 9194 0553 6900     		.ascii	"i\000"
 9195 0555 01       		.byte	0x1
 9196 0556 4905     		.2byte	0x549
 9197 0558 68000000 		.4byte	0x68
 9198 055c 02       		.uleb128 0x2
 9199 055d 91       		.byte	0x91
 9200 055e 58       		.sleb128 -40
 9201 055f 00       		.byte	0
 9202 0560 00       		.byte	0
 9203 0561 18       		.uleb128 0x18
 9204 0562 81000000 		.4byte	0x81
 9205 0566 71050000 		.4byte	0x571
 9206 056a 19       		.uleb128 0x19
 9207 056b C8000000 		.4byte	0xc8
 9208 056f FE       		.byte	0xfe
 9209 0570 00       		.byte	0
 9210 0571 10       		.uleb128 0x10
 9211 0572 BB010000 		.4byte	.LASF54
 9212 0576 01       		.byte	0x1
 9213 0577 6605     		.2byte	0x566
 9214 0579 27020000 		.4byte	0x227
 9215 057d 00000000 		.4byte	.LFB62
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cc7rr7YM.s 			page 233


 9216 0581 D2000000 		.4byte	.LFE62-.LFB62
 9217 0585 01       		.uleb128 0x1
 9218 0586 9C       		.byte	0x9c
 9219 0587 C8050000 		.4byte	0x5c8
 9220 058b 11       		.uleb128 0x11
 9221 058c 636D6400 		.ascii	"cmd\000"
 9222 0590 01       		.byte	0x1
 9223 0591 6605     		.2byte	0x566
 9224 0593 81000000 		.4byte	0x81
 9225 0597 02       		.uleb128 0x2
 9226 0598 91       		.byte	0x91
 9227 0599 6F       		.sleb128 -17
 9228 059a 11       		.uleb128 0x11
 9229 059b 76616C00 		.ascii	"val\000"
 9230 059f 01       		.byte	0x1
 9231 05a0 6605     		.2byte	0x566
 9232 05a2 8C000000 		.4byte	0x8c
 9233 05a6 02       		.uleb128 0x2
 9234 05a7 91       		.byte	0x91
 9235 05a8 6C       		.sleb128 -20
 9236 05a9 12       		.uleb128 0x12
 9237 05aa 10000000 		.4byte	.LASF29
 9238 05ae 01       		.byte	0x1
 9239 05af 6605     		.2byte	0x566
 9240 05b1 2E020000 		.4byte	0x22e
 9241 05b5 02       		.uleb128 0x2
 9242 05b6 91       		.byte	0x91
 9243 05b7 68       		.sleb128 -24
 9244 05b8 13       		.uleb128 0x13
 9245 05b9 76030000 		.4byte	.LASF30
 9246 05bd 01       		.byte	0x1
 9247 05be 6805     		.2byte	0x568
 9248 05c0 27020000 		.4byte	0x227
 9249 05c4 02       		.uleb128 0x2
 9250 05c5 91       		.byte	0x91
 9251 05c6 77       		.sleb128 -9
 9252 05c7 00       		.byte	0
 9253 05c8 10       		.uleb128 0x10
 9254 05c9 C9010000 		.4byte	.LASF55
 9255 05cd 01       		.byte	0x1
 9256 05ce 8705     		.2byte	0x587
 9257 05d0 27020000 		.4byte	0x227
 9258 05d4 00000000 		.4byte	.LFB63
 9259 05d8 D2000000 		.4byte	.LFE63-.LFB63
 9260 05dc 01       		.uleb128 0x1
 9261 05dd 9C       		.byte	0x9c
 9262 05de 1F060000 		.4byte	0x61f
 9263 05e2 11       		.uleb128 0x11
 9264 05e3 636D6400 		.ascii	"cmd\000"
 9265 05e7 01       		.byte	0x1
 9266 05e8 8705     		.2byte	0x587
 9267 05ea 81000000 		.4byte	0x81
 9268 05ee 02       		.uleb128 0x2
 9269 05ef 91       		.byte	0x91
 9270 05f0 6F       		.sleb128 -17
 9271 05f1 11       		.uleb128 0x11
 9272 05f2 76616C00 		.ascii	"val\000"
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cc7rr7YM.s 			page 234


 9273 05f6 01       		.byte	0x1
 9274 05f7 8705     		.2byte	0x587
 9275 05f9 8C000000 		.4byte	0x8c
 9276 05fd 02       		.uleb128 0x2
 9277 05fe 91       		.byte	0x91
 9278 05ff 6C       		.sleb128 -20
 9279 0600 12       		.uleb128 0x12
 9280 0601 10000000 		.4byte	.LASF29
 9281 0605 01       		.byte	0x1
 9282 0606 8705     		.2byte	0x587
 9283 0608 2E020000 		.4byte	0x22e
 9284 060c 02       		.uleb128 0x2
 9285 060d 91       		.byte	0x91
 9286 060e 68       		.sleb128 -24
 9287 060f 13       		.uleb128 0x13
 9288 0610 76030000 		.4byte	.LASF30
 9289 0614 01       		.byte	0x1
 9290 0615 8905     		.2byte	0x589
 9291 0617 27020000 		.4byte	0x227
 9292 061b 02       		.uleb128 0x2
 9293 061c 91       		.byte	0x91
 9294 061d 77       		.sleb128 -9
 9295 061e 00       		.byte	0
 9296 061f 10       		.uleb128 0x10
 9297 0620 D7010000 		.4byte	.LASF56
 9298 0624 01       		.byte	0x1
 9299 0625 A705     		.2byte	0x5a7
 9300 0627 27020000 		.4byte	0x227
 9301 062b 00000000 		.4byte	.LFB64
 9302 062f D2000000 		.4byte	.LFE64-.LFB64
 9303 0633 01       		.uleb128 0x1
 9304 0634 9C       		.byte	0x9c
 9305 0635 76060000 		.4byte	0x676
 9306 0639 11       		.uleb128 0x11
 9307 063a 636D6400 		.ascii	"cmd\000"
 9308 063e 01       		.byte	0x1
 9309 063f A705     		.2byte	0x5a7
 9310 0641 81000000 		.4byte	0x81
 9311 0645 02       		.uleb128 0x2
 9312 0646 91       		.byte	0x91
 9313 0647 6F       		.sleb128 -17
 9314 0648 11       		.uleb128 0x11
 9315 0649 76616C00 		.ascii	"val\000"
 9316 064d 01       		.byte	0x1
 9317 064e A705     		.2byte	0x5a7
 9318 0650 8C000000 		.4byte	0x8c
 9319 0654 02       		.uleb128 0x2
 9320 0655 91       		.byte	0x91
 9321 0656 6C       		.sleb128 -20
 9322 0657 12       		.uleb128 0x12
 9323 0658 10000000 		.4byte	.LASF29
 9324 065c 01       		.byte	0x1
 9325 065d A705     		.2byte	0x5a7
 9326 065f 2E020000 		.4byte	0x22e
 9327 0663 02       		.uleb128 0x2
 9328 0664 91       		.byte	0x91
 9329 0665 68       		.sleb128 -24
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cc7rr7YM.s 			page 235


 9330 0666 13       		.uleb128 0x13
 9331 0667 76030000 		.4byte	.LASF30
 9332 066b 01       		.byte	0x1
 9333 066c A905     		.2byte	0x5a9
 9334 066e 27020000 		.4byte	0x227
 9335 0672 02       		.uleb128 0x2
 9336 0673 91       		.byte	0x91
 9337 0674 77       		.sleb128 -9
 9338 0675 00       		.byte	0
 9339 0676 10       		.uleb128 0x10
 9340 0677 E5010000 		.4byte	.LASF57
 9341 067b 01       		.byte	0x1
 9342 067c C705     		.2byte	0x5c7
 9343 067e 27020000 		.4byte	0x227
 9344 0682 00000000 		.4byte	.LFB65
 9345 0686 D2000000 		.4byte	.LFE65-.LFB65
 9346 068a 01       		.uleb128 0x1
 9347 068b 9C       		.byte	0x9c
 9348 068c CD060000 		.4byte	0x6cd
 9349 0690 11       		.uleb128 0x11
 9350 0691 636D6400 		.ascii	"cmd\000"
 9351 0695 01       		.byte	0x1
 9352 0696 C705     		.2byte	0x5c7
 9353 0698 81000000 		.4byte	0x81
 9354 069c 02       		.uleb128 0x2
 9355 069d 91       		.byte	0x91
 9356 069e 6F       		.sleb128 -17
 9357 069f 11       		.uleb128 0x11
 9358 06a0 76616C00 		.ascii	"val\000"
 9359 06a4 01       		.byte	0x1
 9360 06a5 C705     		.2byte	0x5c7
 9361 06a7 8C000000 		.4byte	0x8c
 9362 06ab 02       		.uleb128 0x2
 9363 06ac 91       		.byte	0x91
 9364 06ad 6C       		.sleb128 -20
 9365 06ae 12       		.uleb128 0x12
 9366 06af 10000000 		.4byte	.LASF29
 9367 06b3 01       		.byte	0x1
 9368 06b4 C705     		.2byte	0x5c7
 9369 06b6 2E020000 		.4byte	0x22e
 9370 06ba 02       		.uleb128 0x2
 9371 06bb 91       		.byte	0x91
 9372 06bc 68       		.sleb128 -24
 9373 06bd 13       		.uleb128 0x13
 9374 06be 76030000 		.4byte	.LASF30
 9375 06c2 01       		.byte	0x1
 9376 06c3 C905     		.2byte	0x5c9
 9377 06c5 27020000 		.4byte	0x227
 9378 06c9 02       		.uleb128 0x2
 9379 06ca 91       		.byte	0x91
 9380 06cb 77       		.sleb128 -9
 9381 06cc 00       		.byte	0
 9382 06cd 10       		.uleb128 0x10
 9383 06ce F3010000 		.4byte	.LASF58
 9384 06d2 01       		.byte	0x1
 9385 06d3 E905     		.2byte	0x5e9
 9386 06d5 27020000 		.4byte	0x227
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cc7rr7YM.s 			page 236


 9387 06d9 00000000 		.4byte	.LFB66
 9388 06dd D2000000 		.4byte	.LFE66-.LFB66
 9389 06e1 01       		.uleb128 0x1
 9390 06e2 9C       		.byte	0x9c
 9391 06e3 24070000 		.4byte	0x724
 9392 06e7 11       		.uleb128 0x11
 9393 06e8 636D6400 		.ascii	"cmd\000"
 9394 06ec 01       		.byte	0x1
 9395 06ed E905     		.2byte	0x5e9
 9396 06ef 81000000 		.4byte	0x81
 9397 06f3 02       		.uleb128 0x2
 9398 06f4 91       		.byte	0x91
 9399 06f5 6F       		.sleb128 -17
 9400 06f6 11       		.uleb128 0x11
 9401 06f7 76616C00 		.ascii	"val\000"
 9402 06fb 01       		.byte	0x1
 9403 06fc E905     		.2byte	0x5e9
 9404 06fe 8C000000 		.4byte	0x8c
 9405 0702 02       		.uleb128 0x2
 9406 0703 91       		.byte	0x91
 9407 0704 6C       		.sleb128 -20
 9408 0705 12       		.uleb128 0x12
 9409 0706 10000000 		.4byte	.LASF29
 9410 070a 01       		.byte	0x1
 9411 070b E905     		.2byte	0x5e9
 9412 070d 2E020000 		.4byte	0x22e
 9413 0711 02       		.uleb128 0x2
 9414 0712 91       		.byte	0x91
 9415 0713 68       		.sleb128 -24
 9416 0714 13       		.uleb128 0x13
 9417 0715 76030000 		.4byte	.LASF30
 9418 0719 01       		.byte	0x1
 9419 071a EB05     		.2byte	0x5eb
 9420 071c 27020000 		.4byte	0x227
 9421 0720 02       		.uleb128 0x2
 9422 0721 91       		.byte	0x91
 9423 0722 77       		.sleb128 -9
 9424 0723 00       		.byte	0
 9425 0724 10       		.uleb128 0x10
 9426 0725 01020000 		.4byte	.LASF59
 9427 0729 01       		.byte	0x1
 9428 072a 0B06     		.2byte	0x60b
 9429 072c 27020000 		.4byte	0x227
 9430 0730 00000000 		.4byte	.LFB67
 9431 0734 D2000000 		.4byte	.LFE67-.LFB67
 9432 0738 01       		.uleb128 0x1
 9433 0739 9C       		.byte	0x9c
 9434 073a 7B070000 		.4byte	0x77b
 9435 073e 11       		.uleb128 0x11
 9436 073f 636D6400 		.ascii	"cmd\000"
 9437 0743 01       		.byte	0x1
 9438 0744 0B06     		.2byte	0x60b
 9439 0746 81000000 		.4byte	0x81
 9440 074a 02       		.uleb128 0x2
 9441 074b 91       		.byte	0x91
 9442 074c 6F       		.sleb128 -17
 9443 074d 11       		.uleb128 0x11
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cc7rr7YM.s 			page 237


 9444 074e 76616C00 		.ascii	"val\000"
 9445 0752 01       		.byte	0x1
 9446 0753 0B06     		.2byte	0x60b
 9447 0755 8C000000 		.4byte	0x8c
 9448 0759 02       		.uleb128 0x2
 9449 075a 91       		.byte	0x91
 9450 075b 6C       		.sleb128 -20
 9451 075c 12       		.uleb128 0x12
 9452 075d 10000000 		.4byte	.LASF29
 9453 0761 01       		.byte	0x1
 9454 0762 0B06     		.2byte	0x60b
 9455 0764 2E020000 		.4byte	0x22e
 9456 0768 02       		.uleb128 0x2
 9457 0769 91       		.byte	0x91
 9458 076a 68       		.sleb128 -24
 9459 076b 13       		.uleb128 0x13
 9460 076c 76030000 		.4byte	.LASF30
 9461 0770 01       		.byte	0x1
 9462 0771 0D06     		.2byte	0x60d
 9463 0773 27020000 		.4byte	0x227
 9464 0777 02       		.uleb128 0x2
 9465 0778 91       		.byte	0x91
 9466 0779 77       		.sleb128 -9
 9467 077a 00       		.byte	0
 9468 077b 10       		.uleb128 0x10
 9469 077c 0F020000 		.4byte	.LASF60
 9470 0780 01       		.byte	0x1
 9471 0781 2C06     		.2byte	0x62c
 9472 0783 27020000 		.4byte	0x227
 9473 0787 00000000 		.4byte	.LFB68
 9474 078b D2000000 		.4byte	.LFE68-.LFB68
 9475 078f 01       		.uleb128 0x1
 9476 0790 9C       		.byte	0x9c
 9477 0791 D2070000 		.4byte	0x7d2
 9478 0795 11       		.uleb128 0x11
 9479 0796 636D6400 		.ascii	"cmd\000"
 9480 079a 01       		.byte	0x1
 9481 079b 2C06     		.2byte	0x62c
 9482 079d 81000000 		.4byte	0x81
 9483 07a1 02       		.uleb128 0x2
 9484 07a2 91       		.byte	0x91
 9485 07a3 6F       		.sleb128 -17
 9486 07a4 11       		.uleb128 0x11
 9487 07a5 76616C00 		.ascii	"val\000"
 9488 07a9 01       		.byte	0x1
 9489 07aa 2C06     		.2byte	0x62c
 9490 07ac 8C000000 		.4byte	0x8c
 9491 07b0 02       		.uleb128 0x2
 9492 07b1 91       		.byte	0x91
 9493 07b2 6C       		.sleb128 -20
 9494 07b3 12       		.uleb128 0x12
 9495 07b4 10000000 		.4byte	.LASF29
 9496 07b8 01       		.byte	0x1
 9497 07b9 2C06     		.2byte	0x62c
 9498 07bb 2E020000 		.4byte	0x22e
 9499 07bf 02       		.uleb128 0x2
 9500 07c0 91       		.byte	0x91
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cc7rr7YM.s 			page 238


 9501 07c1 68       		.sleb128 -24
 9502 07c2 13       		.uleb128 0x13
 9503 07c3 76030000 		.4byte	.LASF30
 9504 07c7 01       		.byte	0x1
 9505 07c8 2E06     		.2byte	0x62e
 9506 07ca 27020000 		.4byte	0x227
 9507 07ce 02       		.uleb128 0x2
 9508 07cf 91       		.byte	0x91
 9509 07d0 77       		.sleb128 -9
 9510 07d1 00       		.byte	0
 9511 07d2 10       		.uleb128 0x10
 9512 07d3 04040000 		.4byte	.LASF61
 9513 07d7 01       		.byte	0x1
 9514 07d8 4B06     		.2byte	0x64b
 9515 07da 27020000 		.4byte	0x227
 9516 07de 00000000 		.4byte	.LFB69
 9517 07e2 D2000000 		.4byte	.LFE69-.LFB69
 9518 07e6 01       		.uleb128 0x1
 9519 07e7 9C       		.byte	0x9c
 9520 07e8 29080000 		.4byte	0x829
 9521 07ec 11       		.uleb128 0x11
 9522 07ed 636D6400 		.ascii	"cmd\000"
 9523 07f1 01       		.byte	0x1
 9524 07f2 4B06     		.2byte	0x64b
 9525 07f4 81000000 		.4byte	0x81
 9526 07f8 02       		.uleb128 0x2
 9527 07f9 91       		.byte	0x91
 9528 07fa 6F       		.sleb128 -17
 9529 07fb 11       		.uleb128 0x11
 9530 07fc 76616C00 		.ascii	"val\000"
 9531 0800 01       		.byte	0x1
 9532 0801 4B06     		.2byte	0x64b
 9533 0803 8C000000 		.4byte	0x8c
 9534 0807 02       		.uleb128 0x2
 9535 0808 91       		.byte	0x91
 9536 0809 6C       		.sleb128 -20
 9537 080a 12       		.uleb128 0x12
 9538 080b 10000000 		.4byte	.LASF29
 9539 080f 01       		.byte	0x1
 9540 0810 4B06     		.2byte	0x64b
 9541 0812 2E020000 		.4byte	0x22e
 9542 0816 02       		.uleb128 0x2
 9543 0817 91       		.byte	0x91
 9544 0818 68       		.sleb128 -24
 9545 0819 13       		.uleb128 0x13
 9546 081a 76030000 		.4byte	.LASF30
 9547 081e 01       		.byte	0x1
 9548 081f 4D06     		.2byte	0x64d
 9549 0821 27020000 		.4byte	0x227
 9550 0825 02       		.uleb128 0x2
 9551 0826 91       		.byte	0x91
 9552 0827 77       		.sleb128 -9
 9553 0828 00       		.byte	0
 9554 0829 10       		.uleb128 0x10
 9555 082a AE010000 		.4byte	.LASF62
 9556 082e 01       		.byte	0x1
 9557 082f BE06     		.2byte	0x6be
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cc7rr7YM.s 			page 239


 9558 0831 27020000 		.4byte	0x227
 9559 0835 00000000 		.4byte	.LFB70
 9560 0839 7E070000 		.4byte	.LFE70-.LFB70
 9561 083d 01       		.uleb128 0x1
 9562 083e 9C       		.byte	0x9c
 9563 083f AD080000 		.4byte	0x8ad
 9564 0843 11       		.uleb128 0x11
 9565 0844 636D6400 		.ascii	"cmd\000"
 9566 0848 01       		.byte	0x1
 9567 0849 BE06     		.2byte	0x6be
 9568 084b 81000000 		.4byte	0x81
 9569 084f 02       		.uleb128 0x2
 9570 0850 91       		.byte	0x91
 9571 0851 67       		.sleb128 -25
 9572 0852 12       		.uleb128 0x12
 9573 0853 4D030000 		.4byte	.LASF20
 9574 0857 01       		.byte	0x1
 9575 0858 BE06     		.2byte	0x6be
 9576 085a 81000000 		.4byte	0x81
 9577 085e 02       		.uleb128 0x2
 9578 085f 91       		.byte	0x91
 9579 0860 66       		.sleb128 -26
 9580 0861 11       		.uleb128 0x11
 9581 0862 70696E00 		.ascii	"pin\000"
 9582 0866 01       		.byte	0x1
 9583 0867 BE06     		.2byte	0x6be
 9584 0869 81000000 		.4byte	0x81
 9585 086d 02       		.uleb128 0x2
 9586 086e 91       		.byte	0x91
 9587 086f 65       		.sleb128 -27
 9588 0870 11       		.uleb128 0x11
 9589 0871 76616C00 		.ascii	"val\000"
 9590 0875 01       		.byte	0x1
 9591 0876 BE06     		.2byte	0x6be
 9592 0878 8C000000 		.4byte	0x8c
 9593 087c 02       		.uleb128 0x2
 9594 087d 91       		.byte	0x91
 9595 087e 62       		.sleb128 -30
 9596 087f 12       		.uleb128 0x12
 9597 0880 10000000 		.4byte	.LASF29
 9598 0884 01       		.byte	0x1
 9599 0885 BE06     		.2byte	0x6be
 9600 0887 2E020000 		.4byte	0x22e
 9601 088b 02       		.uleb128 0x2
 9602 088c 91       		.byte	0x91
 9603 088d 00       		.sleb128 0
 9604 088e 13       		.uleb128 0x13
 9605 088f 4C000000 		.4byte	.LASF63
 9606 0893 01       		.byte	0x1
 9607 0894 C106     		.2byte	0x6c1
 9608 0896 8C000000 		.4byte	0x8c
 9609 089a 02       		.uleb128 0x2
 9610 089b 91       		.byte	0x91
 9611 089c 6E       		.sleb128 -18
 9612 089d 13       		.uleb128 0x13
 9613 089e 76030000 		.4byte	.LASF30
 9614 08a2 01       		.byte	0x1
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cc7rr7YM.s 			page 240


 9615 08a3 C306     		.2byte	0x6c3
 9616 08a5 27020000 		.4byte	0x227
 9617 08a9 02       		.uleb128 0x2
 9618 08aa 91       		.byte	0x91
 9619 08ab 6D       		.sleb128 -19
 9620 08ac 00       		.byte	0
 9621 08ad 10       		.uleb128 0x10
 9622 08ae 58000000 		.4byte	.LASF64
 9623 08b2 01       		.byte	0x1
 9624 08b3 C309     		.2byte	0x9c3
 9625 08b5 27020000 		.4byte	0x227
 9626 08b9 00000000 		.4byte	.LFB71
 9627 08bd CA000000 		.4byte	.LFE71-.LFB71
 9628 08c1 01       		.uleb128 0x1
 9629 08c2 9C       		.byte	0x9c
 9630 08c3 04090000 		.4byte	0x904
 9631 08c7 11       		.uleb128 0x11
 9632 08c8 636D6400 		.ascii	"cmd\000"
 9633 08cc 01       		.byte	0x1
 9634 08cd C309     		.2byte	0x9c3
 9635 08cf 81000000 		.4byte	0x81
 9636 08d3 02       		.uleb128 0x2
 9637 08d4 91       		.byte	0x91
 9638 08d5 6F       		.sleb128 -17
 9639 08d6 11       		.uleb128 0x11
 9640 08d7 64617400 		.ascii	"dat\000"
 9641 08db 01       		.byte	0x1
 9642 08dc C309     		.2byte	0x9c3
 9643 08de 8C000000 		.4byte	0x8c
 9644 08e2 02       		.uleb128 0x2
 9645 08e3 91       		.byte	0x91
 9646 08e4 6C       		.sleb128 -20
 9647 08e5 12       		.uleb128 0x12
 9648 08e6 10000000 		.4byte	.LASF29
 9649 08ea 01       		.byte	0x1
 9650 08eb C309     		.2byte	0x9c3
 9651 08ed 2E020000 		.4byte	0x22e
 9652 08f1 02       		.uleb128 0x2
 9653 08f2 91       		.byte	0x91
 9654 08f3 68       		.sleb128 -24
 9655 08f4 13       		.uleb128 0x13
 9656 08f5 76030000 		.4byte	.LASF30
 9657 08f9 01       		.byte	0x1
 9658 08fa C509     		.2byte	0x9c5
 9659 08fc 27020000 		.4byte	0x227
 9660 0900 02       		.uleb128 0x2
 9661 0901 91       		.byte	0x91
 9662 0902 77       		.sleb128 -9
 9663 0903 00       		.byte	0
 9664 0904 10       		.uleb128 0x10
 9665 0905 64000000 		.4byte	.LASF65
 9666 0909 01       		.byte	0x1
 9667 090a E709     		.2byte	0x9e7
 9668 090c 27020000 		.4byte	0x227
 9669 0910 00000000 		.4byte	.LFB72
 9670 0914 0C010000 		.4byte	.LFE72-.LFB72
 9671 0918 01       		.uleb128 0x1
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cc7rr7YM.s 			page 241


 9672 0919 9C       		.byte	0x9c
 9673 091a 68090000 		.4byte	0x968
 9674 091e 11       		.uleb128 0x11
 9675 091f 636D6400 		.ascii	"cmd\000"
 9676 0923 01       		.byte	0x1
 9677 0924 E709     		.2byte	0x9e7
 9678 0926 81000000 		.4byte	0x81
 9679 092a 02       		.uleb128 0x2
 9680 092b 91       		.byte	0x91
 9681 092c 6F       		.sleb128 -17
 9682 092d 11       		.uleb128 0x11
 9683 092e 64617400 		.ascii	"dat\000"
 9684 0932 01       		.byte	0x1
 9685 0933 E709     		.2byte	0x9e7
 9686 0935 8C000000 		.4byte	0x8c
 9687 0939 02       		.uleb128 0x2
 9688 093a 91       		.byte	0x91
 9689 093b 6C       		.sleb128 -20
 9690 093c 12       		.uleb128 0x12
 9691 093d 10000000 		.4byte	.LASF29
 9692 0941 01       		.byte	0x1
 9693 0942 E709     		.2byte	0x9e7
 9694 0944 2E020000 		.4byte	0x22e
 9695 0948 02       		.uleb128 0x2
 9696 0949 91       		.byte	0x91
 9697 094a 68       		.sleb128 -24
 9698 094b 13       		.uleb128 0x13
 9699 094c 76030000 		.4byte	.LASF30
 9700 0950 01       		.byte	0x1
 9701 0951 E909     		.2byte	0x9e9
 9702 0953 27020000 		.4byte	0x227
 9703 0957 02       		.uleb128 0x2
 9704 0958 91       		.byte	0x91
 9705 0959 77       		.sleb128 -9
 9706 095a 15       		.uleb128 0x15
 9707 095b 6A00     		.ascii	"j\000"
 9708 095d 01       		.byte	0x1
 9709 095e EA09     		.2byte	0x9ea
 9710 0960 6F000000 		.4byte	0x6f
 9711 0964 02       		.uleb128 0x2
 9712 0965 91       		.byte	0x91
 9713 0966 70       		.sleb128 -16
 9714 0967 00       		.byte	0
 9715 0968 10       		.uleb128 0x10
 9716 0969 17000000 		.4byte	.LASF66
 9717 096d 01       		.byte	0x1
 9718 096e 1E0A     		.2byte	0xa1e
 9719 0970 27020000 		.4byte	0x227
 9720 0974 00000000 		.4byte	.LFB73
 9721 0978 DE130000 		.4byte	.LFE73-.LFB73
 9722 097c 01       		.uleb128 0x1
 9723 097d 9C       		.byte	0x9c
 9724 097e 370A0000 		.4byte	0xa37
 9725 0982 11       		.uleb128 0x11
 9726 0983 636D6400 		.ascii	"cmd\000"
 9727 0987 01       		.byte	0x1
 9728 0988 1E0A     		.2byte	0xa1e
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cc7rr7YM.s 			page 242


 9729 098a 81000000 		.4byte	0x81
 9730 098e 02       		.uleb128 0x2
 9731 098f 91       		.byte	0x91
 9732 0990 67       		.sleb128 -25
 9733 0991 12       		.uleb128 0x12
 9734 0992 4D030000 		.4byte	.LASF20
 9735 0996 01       		.byte	0x1
 9736 0997 1E0A     		.2byte	0xa1e
 9737 0999 81000000 		.4byte	0x81
 9738 099d 02       		.uleb128 0x2
 9739 099e 91       		.byte	0x91
 9740 099f 66       		.sleb128 -26
 9741 09a0 11       		.uleb128 0x11
 9742 09a1 70696E00 		.ascii	"pin\000"
 9743 09a5 01       		.byte	0x1
 9744 09a6 1E0A     		.2byte	0xa1e
 9745 09a8 81000000 		.4byte	0x81
 9746 09ac 02       		.uleb128 0x2
 9747 09ad 91       		.byte	0x91
 9748 09ae 65       		.sleb128 -27
 9749 09af 12       		.uleb128 0x12
 9750 09b0 CD030000 		.4byte	.LASF21
 9751 09b4 01       		.byte	0x1
 9752 09b5 1E0A     		.2byte	0xa1e
 9753 09b7 81000000 		.4byte	0x81
 9754 09bb 02       		.uleb128 0x2
 9755 09bc 91       		.byte	0x91
 9756 09bd 64       		.sleb128 -28
 9757 09be 12       		.uleb128 0x12
 9758 09bf 36030000 		.4byte	.LASF22
 9759 09c3 01       		.byte	0x1
 9760 09c4 1E0A     		.2byte	0xa1e
 9761 09c6 81000000 		.4byte	0x81
 9762 09ca 02       		.uleb128 0x2
 9763 09cb 91       		.byte	0x91
 9764 09cc 00       		.sleb128 0
 9765 09cd 12       		.uleb128 0x12
 9766 09ce A7030000 		.4byte	.LASF25
 9767 09d2 01       		.byte	0x1
 9768 09d3 1E0A     		.2byte	0xa1e
 9769 09d5 81000000 		.4byte	0x81
 9770 09d9 02       		.uleb128 0x2
 9771 09da 91       		.byte	0x91
 9772 09db 04       		.sleb128 4
 9773 09dc 12       		.uleb128 0x12
 9774 09dd 39040000 		.4byte	.LASF67
 9775 09e1 01       		.byte	0x1
 9776 09e2 1E0A     		.2byte	0xa1e
 9777 09e4 8C000000 		.4byte	0x8c
 9778 09e8 02       		.uleb128 0x2
 9779 09e9 91       		.byte	0x91
 9780 09ea 08       		.sleb128 8
 9781 09eb 12       		.uleb128 0x12
 9782 09ec 10000000 		.4byte	.LASF29
 9783 09f0 01       		.byte	0x1
 9784 09f1 1E0A     		.2byte	0xa1e
 9785 09f3 2E020000 		.4byte	0x22e
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cc7rr7YM.s 			page 243


 9786 09f7 02       		.uleb128 0x2
 9787 09f8 91       		.byte	0x91
 9788 09f9 0C       		.sleb128 12
 9789 09fa 13       		.uleb128 0x13
 9790 09fb E6030000 		.4byte	.LASF68
 9791 09ff 01       		.byte	0x1
 9792 0a00 200A     		.2byte	0xa20
 9793 0a02 97000000 		.4byte	0x97
 9794 0a06 02       		.uleb128 0x2
 9795 0a07 91       		.byte	0x91
 9796 0a08 6C       		.sleb128 -20
 9797 0a09 13       		.uleb128 0x13
 9798 0a0a 85020000 		.4byte	.LASF69
 9799 0a0e 01       		.byte	0x1
 9800 0a0f 210A     		.2byte	0xa21
 9801 0a11 27020000 		.4byte	0x227
 9802 0a15 02       		.uleb128 0x2
 9803 0a16 91       		.byte	0x91
 9804 0a17 6A       		.sleb128 -22
 9805 0a18 13       		.uleb128 0x13
 9806 0a19 1D020000 		.4byte	.LASF70
 9807 0a1d 01       		.byte	0x1
 9808 0a1e 220A     		.2byte	0xa22
 9809 0a20 27020000 		.4byte	0x227
 9810 0a24 02       		.uleb128 0x2
 9811 0a25 91       		.byte	0x91
 9812 0a26 69       		.sleb128 -23
 9813 0a27 13       		.uleb128 0x13
 9814 0a28 76030000 		.4byte	.LASF30
 9815 0a2c 01       		.byte	0x1
 9816 0a2d 250A     		.2byte	0xa25
 9817 0a2f 27020000 		.4byte	0x227
 9818 0a33 02       		.uleb128 0x2
 9819 0a34 91       		.byte	0x91
 9820 0a35 6B       		.sleb128 -21
 9821 0a36 00       		.byte	0
 9822 0a37 1A       		.uleb128 0x1a
 9823 0a38 1E030000 		.4byte	.LASF71
 9824 0a3c 01       		.byte	0x1
 9825 0a3d FD0E     		.2byte	0xefd
 9826 0a3f 27020000 		.4byte	0x227
 9827 0a43 00000000 		.4byte	.LFB74
 9828 0a47 20000000 		.4byte	.LFE74-.LFB74
 9829 0a4b 01       		.uleb128 0x1
 9830 0a4c 9C       		.byte	0x9c
 9831 0a4d 700A0000 		.4byte	0xa70
 9832 0a51 11       		.uleb128 0x11
 9833 0a52 64617400 		.ascii	"dat\000"
 9834 0a56 01       		.byte	0x1
 9835 0a57 FD0E     		.2byte	0xefd
 9836 0a59 8C000000 		.4byte	0x8c
 9837 0a5d 02       		.uleb128 0x2
 9838 0a5e 91       		.byte	0x91
 9839 0a5f 76       		.sleb128 -10
 9840 0a60 12       		.uleb128 0x12
 9841 0a61 10000000 		.4byte	.LASF29
 9842 0a65 01       		.byte	0x1
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cc7rr7YM.s 			page 244


 9843 0a66 FD0E     		.2byte	0xefd
 9844 0a68 2E020000 		.4byte	0x22e
 9845 0a6c 02       		.uleb128 0x2
 9846 0a6d 91       		.byte	0x91
 9847 0a6e 70       		.sleb128 -16
 9848 0a6f 00       		.byte	0
 9849 0a70 10       		.uleb128 0x10
 9850 0a71 26040000 		.4byte	.LASF72
 9851 0a75 01       		.byte	0x1
 9852 0a76 040F     		.2byte	0xf04
 9853 0a78 27020000 		.4byte	0x227
 9854 0a7c 00000000 		.4byte	.LFB75
 9855 0a80 9C000000 		.4byte	.LFE75-.LFB75
 9856 0a84 01       		.uleb128 0x1
 9857 0a85 9C       		.byte	0x9c
 9858 0a86 D60A0000 		.4byte	0xad6
 9859 0a8a 11       		.uleb128 0x11
 9860 0a8b 636D6400 		.ascii	"cmd\000"
 9861 0a8f 01       		.byte	0x1
 9862 0a90 040F     		.2byte	0xf04
 9863 0a92 81000000 		.4byte	0x81
 9864 0a96 02       		.uleb128 0x2
 9865 0a97 91       		.byte	0x91
 9866 0a98 6F       		.sleb128 -17
 9867 0a99 11       		.uleb128 0x11
 9868 0a9a 64617400 		.ascii	"dat\000"
 9869 0a9e 01       		.byte	0x1
 9870 0a9f 040F     		.2byte	0xf04
 9871 0aa1 8C000000 		.4byte	0x8c
 9872 0aa5 02       		.uleb128 0x2
 9873 0aa6 91       		.byte	0x91
 9874 0aa7 6C       		.sleb128 -20
 9875 0aa8 11       		.uleb128 0x11
 9876 0aa9 726F7700 		.ascii	"row\000"
 9877 0aad 01       		.byte	0x1
 9878 0aae 040F     		.2byte	0xf04
 9879 0ab0 81000000 		.4byte	0x81
 9880 0ab4 02       		.uleb128 0x2
 9881 0ab5 91       		.byte	0x91
 9882 0ab6 6E       		.sleb128 -18
 9883 0ab7 12       		.uleb128 0x12
 9884 0ab8 DF030000 		.4byte	.LASF24
 9885 0abc 01       		.byte	0x1
 9886 0abd 040F     		.2byte	0xf04
 9887 0abf 81000000 		.4byte	0x81
 9888 0ac3 02       		.uleb128 0x2
 9889 0ac4 91       		.byte	0x91
 9890 0ac5 6B       		.sleb128 -21
 9891 0ac6 12       		.uleb128 0x12
 9892 0ac7 34000000 		.4byte	.LASF26
 9893 0acb 01       		.byte	0x1
 9894 0acc 040F     		.2byte	0xf04
 9895 0ace 97000000 		.4byte	0x97
 9896 0ad2 02       		.uleb128 0x2
 9897 0ad3 91       		.byte	0x91
 9898 0ad4 00       		.sleb128 0
 9899 0ad5 00       		.byte	0
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cc7rr7YM.s 			page 245


 9900 0ad6 14       		.uleb128 0x14
 9901 0ad7 45000000 		.4byte	.LASF74
 9902 0adb 01       		.byte	0x1
 9903 0adc 150F     		.2byte	0xf15
 9904 0ade 00000000 		.4byte	.LFB76
 9905 0ae2 44000000 		.4byte	.LFE76-.LFB76
 9906 0ae6 01       		.uleb128 0x1
 9907 0ae7 9C       		.byte	0x9c
 9908 0ae8 180B0000 		.4byte	0xb18
 9909 0aec 11       		.uleb128 0x11
 9910 0aed 4D415800 		.ascii	"MAX\000"
 9911 0af1 01       		.byte	0x1
 9912 0af2 150F     		.2byte	0xf15
 9913 0af4 8C000000 		.4byte	0x8c
 9914 0af8 02       		.uleb128 0x2
 9915 0af9 91       		.byte	0x91
 9916 0afa 6E       		.sleb128 -18
 9917 0afb 12       		.uleb128 0x12
 9918 0afc 34000000 		.4byte	.LASF26
 9919 0b00 01       		.byte	0x1
 9920 0b01 150F     		.2byte	0xf15
 9921 0b03 97000000 		.4byte	0x97
 9922 0b07 02       		.uleb128 0x2
 9923 0b08 91       		.byte	0x91
 9924 0b09 68       		.sleb128 -24
 9925 0b0a 15       		.uleb128 0x15
 9926 0b0b 7800     		.ascii	"x\000"
 9927 0b0d 01       		.byte	0x1
 9928 0b0e 170F     		.2byte	0xf17
 9929 0b10 97000000 		.4byte	0x97
 9930 0b14 02       		.uleb128 0x2
 9931 0b15 91       		.byte	0x91
 9932 0b16 74       		.sleb128 -12
 9933 0b17 00       		.byte	0
 9934 0b18 14       		.uleb128 0x14
 9935 0b19 9B000000 		.4byte	.LASF75
 9936 0b1d 01       		.byte	0x1
 9937 0b1e 260F     		.2byte	0xf26
 9938 0b20 00000000 		.4byte	.LFB77
 9939 0b24 4C000000 		.4byte	.LFE77-.LFB77
 9940 0b28 01       		.uleb128 0x1
 9941 0b29 9C       		.byte	0x9c
 9942 0b2a 5A0B0000 		.4byte	0xb5a
 9943 0b2e 11       		.uleb128 0x11
 9944 0b2f 726F7700 		.ascii	"row\000"
 9945 0b33 01       		.byte	0x1
 9946 0b34 260F     		.2byte	0xf26
 9947 0b36 81000000 		.4byte	0x81
 9948 0b3a 02       		.uleb128 0x2
 9949 0b3b 91       		.byte	0x91
 9950 0b3c 6F       		.sleb128 -17
 9951 0b3d 12       		.uleb128 0x12
 9952 0b3e 34000000 		.4byte	.LASF26
 9953 0b42 01       		.byte	0x1
 9954 0b43 260F     		.2byte	0xf26
 9955 0b45 97000000 		.4byte	0x97
 9956 0b49 02       		.uleb128 0x2
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cc7rr7YM.s 			page 246


 9957 0b4a 91       		.byte	0x91
 9958 0b4b 68       		.sleb128 -24
 9959 0b4c 15       		.uleb128 0x15
 9960 0b4d 7800     		.ascii	"x\000"
 9961 0b4f 01       		.byte	0x1
 9962 0b50 280F     		.2byte	0xf28
 9963 0b52 68000000 		.4byte	0x68
 9964 0b56 02       		.uleb128 0x2
 9965 0b57 91       		.byte	0x91
 9966 0b58 74       		.sleb128 -12
 9967 0b59 00       		.byte	0
 9968 0b5a 14       		.uleb128 0x14
 9969 0b5b 12040000 		.4byte	.LASF76
 9970 0b5f 01       		.byte	0x1
 9971 0b60 310F     		.2byte	0xf31
 9972 0b62 00000000 		.4byte	.LFB78
 9973 0b66 4C000000 		.4byte	.LFE78-.LFB78
 9974 0b6a 01       		.uleb128 0x1
 9975 0b6b 9C       		.byte	0x9c
 9976 0b6c 9C0B0000 		.4byte	0xb9c
 9977 0b70 12       		.uleb128 0x12
 9978 0b71 DF030000 		.4byte	.LASF24
 9979 0b75 01       		.byte	0x1
 9980 0b76 310F     		.2byte	0xf31
 9981 0b78 81000000 		.4byte	0x81
 9982 0b7c 02       		.uleb128 0x2
 9983 0b7d 91       		.byte	0x91
 9984 0b7e 6F       		.sleb128 -17
 9985 0b7f 12       		.uleb128 0x12
 9986 0b80 34000000 		.4byte	.LASF26
 9987 0b84 01       		.byte	0x1
 9988 0b85 310F     		.2byte	0xf31
 9989 0b87 97000000 		.4byte	0x97
 9990 0b8b 02       		.uleb128 0x2
 9991 0b8c 91       		.byte	0x91
 9992 0b8d 68       		.sleb128 -24
 9993 0b8e 15       		.uleb128 0x15
 9994 0b8f 7800     		.ascii	"x\000"
 9995 0b91 01       		.byte	0x1
 9996 0b92 330F     		.2byte	0xf33
 9997 0b94 68000000 		.4byte	0x68
 9998 0b98 02       		.uleb128 0x2
 9999 0b99 91       		.byte	0x91
 10000 0b9a 74       		.sleb128 -12
 10001 0b9b 00       		.byte	0
 10002 0b9c 14       		.uleb128 0x14
 10003 0b9d 41040000 		.4byte	.LASF77
 10004 0ba1 01       		.byte	0x1
 10005 0ba2 3C0F     		.2byte	0xf3c
 10006 0ba4 00000000 		.4byte	.LFB79
 10007 0ba8 3A000000 		.4byte	.LFE79-.LFB79
 10008 0bac 01       		.uleb128 0x1
 10009 0bad 9C       		.byte	0x9c
 10010 0bae E00B0000 		.4byte	0xbe0
 10011 0bb2 11       		.uleb128 0x11
 10012 0bb3 726F7700 		.ascii	"row\000"
 10013 0bb7 01       		.byte	0x1
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cc7rr7YM.s 			page 247


 10014 0bb8 3C0F     		.2byte	0xf3c
 10015 0bba 81000000 		.4byte	0x81
 10016 0bbe 02       		.uleb128 0x2
 10017 0bbf 91       		.byte	0x91
 10018 0bc0 77       		.sleb128 -9
 10019 0bc1 12       		.uleb128 0x12
 10020 0bc2 DF030000 		.4byte	.LASF24
 10021 0bc6 01       		.byte	0x1
 10022 0bc7 3C0F     		.2byte	0xf3c
 10023 0bc9 81000000 		.4byte	0x81
 10024 0bcd 02       		.uleb128 0x2
 10025 0bce 91       		.byte	0x91
 10026 0bcf 76       		.sleb128 -10
 10027 0bd0 12       		.uleb128 0x12
 10028 0bd1 34000000 		.4byte	.LASF26
 10029 0bd5 01       		.byte	0x1
 10030 0bd6 3C0F     		.2byte	0xf3c
 10031 0bd8 97000000 		.4byte	0x97
 10032 0bdc 02       		.uleb128 0x2
 10033 0bdd 91       		.byte	0x91
 10034 0bde 70       		.sleb128 -16
 10035 0bdf 00       		.byte	0
 10036 0be0 1B       		.uleb128 0x1b
 10037 0be1 EF030000 		.4byte	.LASF82
 10038 0be5 06       		.byte	0x6
 10039 0be6 1606     		.2byte	0x616
 10040 0be8 EC0B0000 		.4byte	0xbec
 10041 0bec 06       		.uleb128 0x6
 10042 0bed 76000000 		.4byte	0x76
 10043 0bf1 00       		.byte	0
 10044              		.section	.debug_abbrev,"",%progbits
 10045              	.Ldebug_abbrev0:
 10046 0000 01       		.uleb128 0x1
 10047 0001 11       		.uleb128 0x11
 10048 0002 01       		.byte	0x1
 10049 0003 25       		.uleb128 0x25
 10050 0004 0E       		.uleb128 0xe
 10051 0005 13       		.uleb128 0x13
 10052 0006 0B       		.uleb128 0xb
 10053 0007 03       		.uleb128 0x3
 10054 0008 0E       		.uleb128 0xe
 10055 0009 1B       		.uleb128 0x1b
 10056 000a 0E       		.uleb128 0xe
 10057 000b 55       		.uleb128 0x55
 10058 000c 17       		.uleb128 0x17
 10059 000d 11       		.uleb128 0x11
 10060 000e 01       		.uleb128 0x1
 10061 000f 10       		.uleb128 0x10
 10062 0010 17       		.uleb128 0x17
 10063 0011 00       		.byte	0
 10064 0012 00       		.byte	0
 10065 0013 02       		.uleb128 0x2
 10066 0014 24       		.uleb128 0x24
 10067 0015 00       		.byte	0
 10068 0016 0B       		.uleb128 0xb
 10069 0017 0B       		.uleb128 0xb
 10070 0018 3E       		.uleb128 0x3e
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cc7rr7YM.s 			page 248


 10071 0019 0B       		.uleb128 0xb
 10072 001a 03       		.uleb128 0x3
 10073 001b 0E       		.uleb128 0xe
 10074 001c 00       		.byte	0
 10075 001d 00       		.byte	0
 10076 001e 03       		.uleb128 0x3
 10077 001f 16       		.uleb128 0x16
 10078 0020 00       		.byte	0
 10079 0021 03       		.uleb128 0x3
 10080 0022 0E       		.uleb128 0xe
 10081 0023 3A       		.uleb128 0x3a
 10082 0024 0B       		.uleb128 0xb
 10083 0025 3B       		.uleb128 0x3b
 10084 0026 0B       		.uleb128 0xb
 10085 0027 49       		.uleb128 0x49
 10086 0028 13       		.uleb128 0x13
 10087 0029 00       		.byte	0
 10088 002a 00       		.byte	0
 10089 002b 04       		.uleb128 0x4
 10090 002c 24       		.uleb128 0x24
 10091 002d 00       		.byte	0
 10092 002e 0B       		.uleb128 0xb
 10093 002f 0B       		.uleb128 0xb
 10094 0030 3E       		.uleb128 0x3e
 10095 0031 0B       		.uleb128 0xb
 10096 0032 03       		.uleb128 0x3
 10097 0033 08       		.uleb128 0x8
 10098 0034 00       		.byte	0
 10099 0035 00       		.byte	0
 10100 0036 05       		.uleb128 0x5
 10101 0037 16       		.uleb128 0x16
 10102 0038 00       		.byte	0
 10103 0039 03       		.uleb128 0x3
 10104 003a 0E       		.uleb128 0xe
 10105 003b 3A       		.uleb128 0x3a
 10106 003c 0B       		.uleb128 0xb
 10107 003d 3B       		.uleb128 0x3b
 10108 003e 05       		.uleb128 0x5
 10109 003f 49       		.uleb128 0x49
 10110 0040 13       		.uleb128 0x13
 10111 0041 00       		.byte	0
 10112 0042 00       		.byte	0
 10113 0043 06       		.uleb128 0x6
 10114 0044 35       		.uleb128 0x35
 10115 0045 00       		.byte	0
 10116 0046 49       		.uleb128 0x49
 10117 0047 13       		.uleb128 0x13
 10118 0048 00       		.byte	0
 10119 0049 00       		.byte	0
 10120 004a 07       		.uleb128 0x7
 10121 004b 13       		.uleb128 0x13
 10122 004c 01       		.byte	0x1
 10123 004d 03       		.uleb128 0x3
 10124 004e 0E       		.uleb128 0xe
 10125 004f 0B       		.uleb128 0xb
 10126 0050 0B       		.uleb128 0xb
 10127 0051 3A       		.uleb128 0x3a
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cc7rr7YM.s 			page 249


 10128 0052 0B       		.uleb128 0xb
 10129 0053 3B       		.uleb128 0x3b
 10130 0054 0B       		.uleb128 0xb
 10131 0055 01       		.uleb128 0x1
 10132 0056 13       		.uleb128 0x13
 10133 0057 00       		.byte	0
 10134 0058 00       		.byte	0
 10135 0059 08       		.uleb128 0x8
 10136 005a 0D       		.uleb128 0xd
 10137 005b 00       		.byte	0
 10138 005c 03       		.uleb128 0x3
 10139 005d 0E       		.uleb128 0xe
 10140 005e 3A       		.uleb128 0x3a
 10141 005f 0B       		.uleb128 0xb
 10142 0060 3B       		.uleb128 0x3b
 10143 0061 0B       		.uleb128 0xb
 10144 0062 49       		.uleb128 0x49
 10145 0063 13       		.uleb128 0x13
 10146 0064 0B       		.uleb128 0xb
 10147 0065 0B       		.uleb128 0xb
 10148 0066 0D       		.uleb128 0xd
 10149 0067 0B       		.uleb128 0xb
 10150 0068 0C       		.uleb128 0xc
 10151 0069 0B       		.uleb128 0xb
 10152 006a 38       		.uleb128 0x38
 10153 006b 0B       		.uleb128 0xb
 10154 006c 00       		.byte	0
 10155 006d 00       		.byte	0
 10156 006e 09       		.uleb128 0x9
 10157 006f 0D       		.uleb128 0xd
 10158 0070 00       		.byte	0
 10159 0071 03       		.uleb128 0x3
 10160 0072 08       		.uleb128 0x8
 10161 0073 3A       		.uleb128 0x3a
 10162 0074 0B       		.uleb128 0xb
 10163 0075 3B       		.uleb128 0x3b
 10164 0076 0B       		.uleb128 0xb
 10165 0077 49       		.uleb128 0x49
 10166 0078 13       		.uleb128 0x13
 10167 0079 0B       		.uleb128 0xb
 10168 007a 0B       		.uleb128 0xb
 10169 007b 0D       		.uleb128 0xd
 10170 007c 0B       		.uleb128 0xb
 10171 007d 0C       		.uleb128 0xc
 10172 007e 0B       		.uleb128 0xb
 10173 007f 38       		.uleb128 0x38
 10174 0080 0B       		.uleb128 0xb
 10175 0081 00       		.byte	0
 10176 0082 00       		.byte	0
 10177 0083 0A       		.uleb128 0xa
 10178 0084 2E       		.uleb128 0x2e
 10179 0085 01       		.byte	0x1
 10180 0086 3F       		.uleb128 0x3f
 10181 0087 19       		.uleb128 0x19
 10182 0088 03       		.uleb128 0x3
 10183 0089 0E       		.uleb128 0xe
 10184 008a 3A       		.uleb128 0x3a
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cc7rr7YM.s 			page 250


 10185 008b 0B       		.uleb128 0xb
 10186 008c 3B       		.uleb128 0x3b
 10187 008d 0B       		.uleb128 0xb
 10188 008e 27       		.uleb128 0x27
 10189 008f 19       		.uleb128 0x19
 10190 0090 49       		.uleb128 0x49
 10191 0091 13       		.uleb128 0x13
 10192 0092 11       		.uleb128 0x11
 10193 0093 01       		.uleb128 0x1
 10194 0094 12       		.uleb128 0x12
 10195 0095 06       		.uleb128 0x6
 10196 0096 40       		.uleb128 0x40
 10197 0097 18       		.uleb128 0x18
 10198 0098 9642     		.uleb128 0x2116
 10199 009a 19       		.uleb128 0x19
 10200 009b 01       		.uleb128 0x1
 10201 009c 13       		.uleb128 0x13
 10202 009d 00       		.byte	0
 10203 009e 00       		.byte	0
 10204 009f 0B       		.uleb128 0xb
 10205 00a0 05       		.uleb128 0x5
 10206 00a1 00       		.byte	0
 10207 00a2 03       		.uleb128 0x3
 10208 00a3 0E       		.uleb128 0xe
 10209 00a4 3A       		.uleb128 0x3a
 10210 00a5 0B       		.uleb128 0xb
 10211 00a6 3B       		.uleb128 0x3b
 10212 00a7 0B       		.uleb128 0xb
 10213 00a8 49       		.uleb128 0x49
 10214 00a9 13       		.uleb128 0x13
 10215 00aa 02       		.uleb128 0x2
 10216 00ab 18       		.uleb128 0x18
 10217 00ac 00       		.byte	0
 10218 00ad 00       		.byte	0
 10219 00ae 0C       		.uleb128 0xc
 10220 00af 34       		.uleb128 0x34
 10221 00b0 00       		.byte	0
 10222 00b1 03       		.uleb128 0x3
 10223 00b2 0E       		.uleb128 0xe
 10224 00b3 3A       		.uleb128 0x3a
 10225 00b4 0B       		.uleb128 0xb
 10226 00b5 3B       		.uleb128 0x3b
 10227 00b6 0B       		.uleb128 0xb
 10228 00b7 49       		.uleb128 0x49
 10229 00b8 13       		.uleb128 0x13
 10230 00b9 02       		.uleb128 0x2
 10231 00ba 18       		.uleb128 0x18
 10232 00bb 00       		.byte	0
 10233 00bc 00       		.byte	0
 10234 00bd 0D       		.uleb128 0xd
 10235 00be 34       		.uleb128 0x34
 10236 00bf 00       		.byte	0
 10237 00c0 03       		.uleb128 0x3
 10238 00c1 08       		.uleb128 0x8
 10239 00c2 3A       		.uleb128 0x3a
 10240 00c3 0B       		.uleb128 0xb
 10241 00c4 3B       		.uleb128 0x3b
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cc7rr7YM.s 			page 251


 10242 00c5 0B       		.uleb128 0xb
 10243 00c6 49       		.uleb128 0x49
 10244 00c7 13       		.uleb128 0x13
 10245 00c8 02       		.uleb128 0x2
 10246 00c9 18       		.uleb128 0x18
 10247 00ca 00       		.byte	0
 10248 00cb 00       		.byte	0
 10249 00cc 0E       		.uleb128 0xe
 10250 00cd 0F       		.uleb128 0xf
 10251 00ce 00       		.byte	0
 10252 00cf 0B       		.uleb128 0xb
 10253 00d0 0B       		.uleb128 0xb
 10254 00d1 49       		.uleb128 0x49
 10255 00d2 13       		.uleb128 0x13
 10256 00d3 00       		.byte	0
 10257 00d4 00       		.byte	0
 10258 00d5 0F       		.uleb128 0xf
 10259 00d6 05       		.uleb128 0x5
 10260 00d7 00       		.byte	0
 10261 00d8 03       		.uleb128 0x3
 10262 00d9 08       		.uleb128 0x8
 10263 00da 3A       		.uleb128 0x3a
 10264 00db 0B       		.uleb128 0xb
 10265 00dc 3B       		.uleb128 0x3b
 10266 00dd 0B       		.uleb128 0xb
 10267 00de 49       		.uleb128 0x49
 10268 00df 13       		.uleb128 0x13
 10269 00e0 02       		.uleb128 0x2
 10270 00e1 18       		.uleb128 0x18
 10271 00e2 00       		.byte	0
 10272 00e3 00       		.byte	0
 10273 00e4 10       		.uleb128 0x10
 10274 00e5 2E       		.uleb128 0x2e
 10275 00e6 01       		.byte	0x1
 10276 00e7 3F       		.uleb128 0x3f
 10277 00e8 19       		.uleb128 0x19
 10278 00e9 03       		.uleb128 0x3
 10279 00ea 0E       		.uleb128 0xe
 10280 00eb 3A       		.uleb128 0x3a
 10281 00ec 0B       		.uleb128 0xb
 10282 00ed 3B       		.uleb128 0x3b
 10283 00ee 05       		.uleb128 0x5
 10284 00ef 27       		.uleb128 0x27
 10285 00f0 19       		.uleb128 0x19
 10286 00f1 49       		.uleb128 0x49
 10287 00f2 13       		.uleb128 0x13
 10288 00f3 11       		.uleb128 0x11
 10289 00f4 01       		.uleb128 0x1
 10290 00f5 12       		.uleb128 0x12
 10291 00f6 06       		.uleb128 0x6
 10292 00f7 40       		.uleb128 0x40
 10293 00f8 18       		.uleb128 0x18
 10294 00f9 9642     		.uleb128 0x2116
 10295 00fb 19       		.uleb128 0x19
 10296 00fc 01       		.uleb128 0x1
 10297 00fd 13       		.uleb128 0x13
 10298 00fe 00       		.byte	0
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cc7rr7YM.s 			page 252


 10299 00ff 00       		.byte	0
 10300 0100 11       		.uleb128 0x11
 10301 0101 05       		.uleb128 0x5
 10302 0102 00       		.byte	0
 10303 0103 03       		.uleb128 0x3
 10304 0104 08       		.uleb128 0x8
 10305 0105 3A       		.uleb128 0x3a
 10306 0106 0B       		.uleb128 0xb
 10307 0107 3B       		.uleb128 0x3b
 10308 0108 05       		.uleb128 0x5
 10309 0109 49       		.uleb128 0x49
 10310 010a 13       		.uleb128 0x13
 10311 010b 02       		.uleb128 0x2
 10312 010c 18       		.uleb128 0x18
 10313 010d 00       		.byte	0
 10314 010e 00       		.byte	0
 10315 010f 12       		.uleb128 0x12
 10316 0110 05       		.uleb128 0x5
 10317 0111 00       		.byte	0
 10318 0112 03       		.uleb128 0x3
 10319 0113 0E       		.uleb128 0xe
 10320 0114 3A       		.uleb128 0x3a
 10321 0115 0B       		.uleb128 0xb
 10322 0116 3B       		.uleb128 0x3b
 10323 0117 05       		.uleb128 0x5
 10324 0118 49       		.uleb128 0x49
 10325 0119 13       		.uleb128 0x13
 10326 011a 02       		.uleb128 0x2
 10327 011b 18       		.uleb128 0x18
 10328 011c 00       		.byte	0
 10329 011d 00       		.byte	0
 10330 011e 13       		.uleb128 0x13
 10331 011f 34       		.uleb128 0x34
 10332 0120 00       		.byte	0
 10333 0121 03       		.uleb128 0x3
 10334 0122 0E       		.uleb128 0xe
 10335 0123 3A       		.uleb128 0x3a
 10336 0124 0B       		.uleb128 0xb
 10337 0125 3B       		.uleb128 0x3b
 10338 0126 05       		.uleb128 0x5
 10339 0127 49       		.uleb128 0x49
 10340 0128 13       		.uleb128 0x13
 10341 0129 02       		.uleb128 0x2
 10342 012a 18       		.uleb128 0x18
 10343 012b 00       		.byte	0
 10344 012c 00       		.byte	0
 10345 012d 14       		.uleb128 0x14
 10346 012e 2E       		.uleb128 0x2e
 10347 012f 01       		.byte	0x1
 10348 0130 3F       		.uleb128 0x3f
 10349 0131 19       		.uleb128 0x19
 10350 0132 03       		.uleb128 0x3
 10351 0133 0E       		.uleb128 0xe
 10352 0134 3A       		.uleb128 0x3a
 10353 0135 0B       		.uleb128 0xb
 10354 0136 3B       		.uleb128 0x3b
 10355 0137 05       		.uleb128 0x5
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cc7rr7YM.s 			page 253


 10356 0138 27       		.uleb128 0x27
 10357 0139 19       		.uleb128 0x19
 10358 013a 11       		.uleb128 0x11
 10359 013b 01       		.uleb128 0x1
 10360 013c 12       		.uleb128 0x12
 10361 013d 06       		.uleb128 0x6
 10362 013e 40       		.uleb128 0x40
 10363 013f 18       		.uleb128 0x18
 10364 0140 9642     		.uleb128 0x2116
 10365 0142 19       		.uleb128 0x19
 10366 0143 01       		.uleb128 0x1
 10367 0144 13       		.uleb128 0x13
 10368 0145 00       		.byte	0
 10369 0146 00       		.byte	0
 10370 0147 15       		.uleb128 0x15
 10371 0148 34       		.uleb128 0x34
 10372 0149 00       		.byte	0
 10373 014a 03       		.uleb128 0x3
 10374 014b 08       		.uleb128 0x8
 10375 014c 3A       		.uleb128 0x3a
 10376 014d 0B       		.uleb128 0xb
 10377 014e 3B       		.uleb128 0x3b
 10378 014f 05       		.uleb128 0x5
 10379 0150 49       		.uleb128 0x49
 10380 0151 13       		.uleb128 0x13
 10381 0152 02       		.uleb128 0x2
 10382 0153 18       		.uleb128 0x18
 10383 0154 00       		.byte	0
 10384 0155 00       		.byte	0
 10385 0156 16       		.uleb128 0x16
 10386 0157 0B       		.uleb128 0xb
 10387 0158 01       		.byte	0x1
 10388 0159 11       		.uleb128 0x11
 10389 015a 01       		.uleb128 0x1
 10390 015b 12       		.uleb128 0x12
 10391 015c 06       		.uleb128 0x6
 10392 015d 01       		.uleb128 0x1
 10393 015e 13       		.uleb128 0x13
 10394 015f 00       		.byte	0
 10395 0160 00       		.byte	0
 10396 0161 17       		.uleb128 0x17
 10397 0162 0B       		.uleb128 0xb
 10398 0163 01       		.byte	0x1
 10399 0164 11       		.uleb128 0x11
 10400 0165 01       		.uleb128 0x1
 10401 0166 12       		.uleb128 0x12
 10402 0167 06       		.uleb128 0x6
 10403 0168 00       		.byte	0
 10404 0169 00       		.byte	0
 10405 016a 18       		.uleb128 0x18
 10406 016b 01       		.uleb128 0x1
 10407 016c 01       		.byte	0x1
 10408 016d 49       		.uleb128 0x49
 10409 016e 13       		.uleb128 0x13
 10410 016f 01       		.uleb128 0x1
 10411 0170 13       		.uleb128 0x13
 10412 0171 00       		.byte	0
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cc7rr7YM.s 			page 254


 10413 0172 00       		.byte	0
 10414 0173 19       		.uleb128 0x19
 10415 0174 21       		.uleb128 0x21
 10416 0175 00       		.byte	0
 10417 0176 49       		.uleb128 0x49
 10418 0177 13       		.uleb128 0x13
 10419 0178 2F       		.uleb128 0x2f
 10420 0179 0B       		.uleb128 0xb
 10421 017a 00       		.byte	0
 10422 017b 00       		.byte	0
 10423 017c 1A       		.uleb128 0x1a
 10424 017d 2E       		.uleb128 0x2e
 10425 017e 01       		.byte	0x1
 10426 017f 3F       		.uleb128 0x3f
 10427 0180 19       		.uleb128 0x19
 10428 0181 03       		.uleb128 0x3
 10429 0182 0E       		.uleb128 0xe
 10430 0183 3A       		.uleb128 0x3a
 10431 0184 0B       		.uleb128 0xb
 10432 0185 3B       		.uleb128 0x3b
 10433 0186 05       		.uleb128 0x5
 10434 0187 27       		.uleb128 0x27
 10435 0188 19       		.uleb128 0x19
 10436 0189 49       		.uleb128 0x49
 10437 018a 13       		.uleb128 0x13
 10438 018b 11       		.uleb128 0x11
 10439 018c 01       		.uleb128 0x1
 10440 018d 12       		.uleb128 0x12
 10441 018e 06       		.uleb128 0x6
 10442 018f 40       		.uleb128 0x40
 10443 0190 18       		.uleb128 0x18
 10444 0191 9742     		.uleb128 0x2117
 10445 0193 19       		.uleb128 0x19
 10446 0194 01       		.uleb128 0x1
 10447 0195 13       		.uleb128 0x13
 10448 0196 00       		.byte	0
 10449 0197 00       		.byte	0
 10450 0198 1B       		.uleb128 0x1b
 10451 0199 34       		.uleb128 0x34
 10452 019a 00       		.byte	0
 10453 019b 03       		.uleb128 0x3
 10454 019c 0E       		.uleb128 0xe
 10455 019d 3A       		.uleb128 0x3a
 10456 019e 0B       		.uleb128 0xb
 10457 019f 3B       		.uleb128 0x3b
 10458 01a0 05       		.uleb128 0x5
 10459 01a1 49       		.uleb128 0x49
 10460 01a2 13       		.uleb128 0x13
 10461 01a3 3F       		.uleb128 0x3f
 10462 01a4 19       		.uleb128 0x19
 10463 01a5 3C       		.uleb128 0x3c
 10464 01a6 19       		.uleb128 0x19
 10465 01a7 00       		.byte	0
 10466 01a8 00       		.byte	0
 10467 01a9 00       		.byte	0
 10468              		.section	.debug_aranges,"",%progbits
 10469 0000 D4000000 		.4byte	0xd4
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cc7rr7YM.s 			page 255


 10470 0004 0200     		.2byte	0x2
 10471 0006 00000000 		.4byte	.Ldebug_info0
 10472 000a 04       		.byte	0x4
 10473 000b 00       		.byte	0
 10474 000c 0000     		.2byte	0
 10475 000e 0000     		.2byte	0
 10476 0010 00000000 		.4byte	.LFB56
 10477 0014 9C020000 		.4byte	.LFE56-.LFB56
 10478 0018 00000000 		.4byte	.LFB57
 10479 001c 5C040000 		.4byte	.LFE57-.LFB57
 10480 0020 00000000 		.4byte	.LFB58
 10481 0024 A6000000 		.4byte	.LFE58-.LFB58
 10482 0028 00000000 		.4byte	.LFB59
 10483 002c D4000000 		.4byte	.LFE59-.LFB59
 10484 0030 00000000 		.4byte	.LFB60
 10485 0034 EC000000 		.4byte	.LFE60-.LFB60
 10486 0038 00000000 		.4byte	.LFB61
 10487 003c 08040000 		.4byte	.LFE61-.LFB61
 10488 0040 00000000 		.4byte	.LFB62
 10489 0044 D2000000 		.4byte	.LFE62-.LFB62
 10490 0048 00000000 		.4byte	.LFB63
 10491 004c D2000000 		.4byte	.LFE63-.LFB63
 10492 0050 00000000 		.4byte	.LFB64
 10493 0054 D2000000 		.4byte	.LFE64-.LFB64
 10494 0058 00000000 		.4byte	.LFB65
 10495 005c D2000000 		.4byte	.LFE65-.LFB65
 10496 0060 00000000 		.4byte	.LFB66
 10497 0064 D2000000 		.4byte	.LFE66-.LFB66
 10498 0068 00000000 		.4byte	.LFB67
 10499 006c D2000000 		.4byte	.LFE67-.LFB67
 10500 0070 00000000 		.4byte	.LFB68
 10501 0074 D2000000 		.4byte	.LFE68-.LFB68
 10502 0078 00000000 		.4byte	.LFB69
 10503 007c D2000000 		.4byte	.LFE69-.LFB69
 10504 0080 00000000 		.4byte	.LFB70
 10505 0084 7E070000 		.4byte	.LFE70-.LFB70
 10506 0088 00000000 		.4byte	.LFB71
 10507 008c CA000000 		.4byte	.LFE71-.LFB71
 10508 0090 00000000 		.4byte	.LFB72
 10509 0094 0C010000 		.4byte	.LFE72-.LFB72
 10510 0098 00000000 		.4byte	.LFB73
 10511 009c DE130000 		.4byte	.LFE73-.LFB73
 10512 00a0 00000000 		.4byte	.LFB74
 10513 00a4 20000000 		.4byte	.LFE74-.LFB74
 10514 00a8 00000000 		.4byte	.LFB75
 10515 00ac 9C000000 		.4byte	.LFE75-.LFB75
 10516 00b0 00000000 		.4byte	.LFB76
 10517 00b4 44000000 		.4byte	.LFE76-.LFB76
 10518 00b8 00000000 		.4byte	.LFB77
 10519 00bc 4C000000 		.4byte	.LFE77-.LFB77
 10520 00c0 00000000 		.4byte	.LFB78
 10521 00c4 4C000000 		.4byte	.LFE78-.LFB78
 10522 00c8 00000000 		.4byte	.LFB79
 10523 00cc 3A000000 		.4byte	.LFE79-.LFB79
 10524 00d0 00000000 		.4byte	0
 10525 00d4 00000000 		.4byte	0
 10526              		.section	.debug_ranges,"",%progbits
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cc7rr7YM.s 			page 256


 10527              	.Ldebug_ranges0:
 10528 0000 00000000 		.4byte	.LFB56
 10529 0004 9C020000 		.4byte	.LFE56
 10530 0008 00000000 		.4byte	.LFB57
 10531 000c 5C040000 		.4byte	.LFE57
 10532 0010 00000000 		.4byte	.LFB58
 10533 0014 A6000000 		.4byte	.LFE58
 10534 0018 00000000 		.4byte	.LFB59
 10535 001c D4000000 		.4byte	.LFE59
 10536 0020 00000000 		.4byte	.LFB60
 10537 0024 EC000000 		.4byte	.LFE60
 10538 0028 00000000 		.4byte	.LFB61
 10539 002c 08040000 		.4byte	.LFE61
 10540 0030 00000000 		.4byte	.LFB62
 10541 0034 D2000000 		.4byte	.LFE62
 10542 0038 00000000 		.4byte	.LFB63
 10543 003c D2000000 		.4byte	.LFE63
 10544 0040 00000000 		.4byte	.LFB64
 10545 0044 D2000000 		.4byte	.LFE64
 10546 0048 00000000 		.4byte	.LFB65
 10547 004c D2000000 		.4byte	.LFE65
 10548 0050 00000000 		.4byte	.LFB66
 10549 0054 D2000000 		.4byte	.LFE66
 10550 0058 00000000 		.4byte	.LFB67
 10551 005c D2000000 		.4byte	.LFE67
 10552 0060 00000000 		.4byte	.LFB68
 10553 0064 D2000000 		.4byte	.LFE68
 10554 0068 00000000 		.4byte	.LFB69
 10555 006c D2000000 		.4byte	.LFE69
 10556 0070 00000000 		.4byte	.LFB70
 10557 0074 7E070000 		.4byte	.LFE70
 10558 0078 00000000 		.4byte	.LFB71
 10559 007c CA000000 		.4byte	.LFE71
 10560 0080 00000000 		.4byte	.LFB72
 10561 0084 0C010000 		.4byte	.LFE72
 10562 0088 00000000 		.4byte	.LFB73
 10563 008c DE130000 		.4byte	.LFE73
 10564 0090 00000000 		.4byte	.LFB74
 10565 0094 20000000 		.4byte	.LFE74
 10566 0098 00000000 		.4byte	.LFB75
 10567 009c 9C000000 		.4byte	.LFE75
 10568 00a0 00000000 		.4byte	.LFB76
 10569 00a4 44000000 		.4byte	.LFE76
 10570 00a8 00000000 		.4byte	.LFB77
 10571 00ac 4C000000 		.4byte	.LFE77
 10572 00b0 00000000 		.4byte	.LFB78
 10573 00b4 4C000000 		.4byte	.LFE78
 10574 00b8 00000000 		.4byte	.LFB79
 10575 00bc 3A000000 		.4byte	.LFE79
 10576 00c0 00000000 		.4byte	0
 10577 00c4 00000000 		.4byte	0
 10578              		.section	.debug_line,"",%progbits
 10579              	.Ldebug_line0:
 10580 0000 94090000 		.section	.debug_str,"MS",%progbits,1
 10580      02005501 
 10580      00000201 
 10580      FB0E0D00 
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cc7rr7YM.s 			page 257


 10580      01010101 
 10581              	.LASF47:
 10582 0000 57415645 		.ascii	"WAVEDAC_Control\000"
 10582      4441435F 
 10582      436F6E74 
 10582      726F6C00 
 10583              	.LASF29:
 10584 0010 72657375 		.ascii	"result\000"
 10584      6C7400
 10585              	.LASF66:
 10586 0017 52616E67 		.ascii	"Range_Finder\000"
 10586      655F4669 
 10586      6E646572 
 10586      00
 10587              	.LASF35:
 10588 0024 504F5254 		.ascii	"PORT2\000"
 10588      3200
 10589              	.LASF2:
 10590 002a 73686F72 		.ascii	"short int\000"
 10590      7420696E 
 10590      7400
 10591              	.LASF26:
 10592 0034 636F6C6F 		.ascii	"color\000"
 10592      7200
 10593              	.LASF33:
 10594 003a 43686563 		.ascii	"CheckBuild\000"
 10594      6B427569 
 10594      6C6400
 10595              	.LASF74:
 10596 0045 53747269 		.ascii	"Stripe\000"
 10596      706500
 10597              	.LASF63:
 10598 004c 636F6E66 		.ascii	"config_MASK\000"
 10598      69675F4D 
 10598      41534B00 
 10599              	.LASF64:
 10600 0058 416E616C 		.ascii	"Analog_Read\000"
 10600      6F675F52 
 10600      65616400 
 10601              	.LASF65:
 10602 0064 43617053 		.ascii	"CapSense_Read\000"
 10602      656E7365 
 10602      5F526561 
 10602      6400
 10603              	.LASF53:
 10604 0072 6E657756 		.ascii	"newVal\000"
 10604      616C00
 10605              	.LASF73:
 10606 0079 47656E65 		.ascii	"Generate_Wave\000"
 10606      72617465 
 10606      5F576176 
 10606      6500
 10607              	.LASF51:
 10608 0087 53415754 		.ascii	"SAWTOOTHWave\000"
 10608      4F4F5448 
 10608      57617665 
 10608      00
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cc7rr7YM.s 			page 258


 10609              	.LASF12:
 10610 0094 75696E74 		.ascii	"uint16\000"
 10610      313600
 10611              	.LASF75:
 10612 009b 4E656F50 		.ascii	"NeoPixel_DrawRow\000"
 10612      6978656C 
 10612      5F447261 
 10612      77526F77 
 10612      00
 10613              	.LASF11:
 10614 00ac 75696E74 		.ascii	"uint8\000"
 10614      3800
 10615              	.LASF40:
 10616 00b2 504F5254 		.ascii	"PORT12\000"
 10616      313200
 10617              	.LASF41:
 10618 00b9 504F5254 		.ascii	"PORT15\000"
 10618      313500
 10619              	.LASF79:
 10620 00c0 2E5C6D65 		.ascii	".\\mem1.c\000"
 10620      6D312E63 
 10620      00
 10621              	.LASF14:
 10622 00c9 666C6F61 		.ascii	"float\000"
 10622      7400
 10623              	.LASF32:
 10624 00cf 72656164 		.ascii	"readData\000"
 10624      44617461 
 10624      00
 10625              	.LASF44:
 10626 00d8 66726571 		.ascii	"freq\000"
 10626      00
 10627              	.LASF6:
 10628 00dd 6C6F6E67 		.ascii	"long long int\000"
 10628      206C6F6E 
 10628      6720696E 
 10628      7400
 10629              	.LASF42:
 10630 00eb 6361705F 		.ascii	"cap_sensors\000"
 10630      73656E73 
 10630      6F727300 
 10631              	.LASF43:
 10632 00f7 616E616C 		.ascii	"analogPins\000"
 10632      6F675069 
 10632      6E7300
 10633              	.LASF16:
 10634 0102 63686172 		.ascii	"char\000"
 10634      00
 10635              	.LASF81:
 10636 0107 76657373 		.ascii	"vessel_tag\000"
 10636      656C5F74 
 10636      616700
 10637              	.LASF78:
 10638 0112 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 10638      4320342E 
 10638      392E3320 
 10638      32303135 
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cc7rr7YM.s 			page 259


 10638      30333033 
 10639 0145 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m3 -mthumb -g -O"
 10639      20726576 
 10639      6973696F 
 10639      6E203232 
 10639      31323230 
 10640 0178 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 10640      66756E63 
 10640      74696F6E 
 10640      2D736563 
 10640      74696F6E 
 10641              	.LASF19:
 10642 01a0 61646472 		.ascii	"addr\000"
 10642      00
 10643              	.LASF23:
 10644 01a5 77617665 		.ascii	"waveType\000"
 10644      54797065 
 10644      00
 10645              	.LASF62:
 10646 01ae 4750494F 		.ascii	"GPIO_Control\000"
 10646      5F436F6E 
 10646      74726F6C 
 10646      00
 10647              	.LASF54:
 10648 01bb 50574D5F 		.ascii	"PWM_Control_0\000"
 10648      436F6E74 
 10648      726F6C5F 
 10648      3000
 10649              	.LASF55:
 10650 01c9 50574D5F 		.ascii	"PWM_Control_1\000"
 10650      436F6E74 
 10650      726F6C5F 
 10650      3100
 10651              	.LASF56:
 10652 01d7 50574D5F 		.ascii	"PWM_Control_2\000"
 10652      436F6E74 
 10652      726F6C5F 
 10652      3200
 10653              	.LASF57:
 10654 01e5 50574D5F 		.ascii	"PWM_Control_3\000"
 10654      436F6E74 
 10654      726F6C5F 
 10654      3300
 10655              	.LASF58:
 10656 01f3 50574D5F 		.ascii	"PWM_Control_4\000"
 10656      436F6E74 
 10656      726F6C5F 
 10656      3400
 10657              	.LASF59:
 10658 0201 50574D5F 		.ascii	"PWM_Control_5\000"
 10658      436F6E74 
 10658      726F6C5F 
 10658      3500
 10659              	.LASF60:
 10660 020f 50574D5F 		.ascii	"PWM_Control_6\000"
 10660      436F6E74 
 10660      726F6C5F 
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cc7rr7YM.s 			page 260


 10660      3600
 10661              	.LASF70:
 10662 021d 77726974 		.ascii	"write_timeout\000"
 10662      655F7469 
 10662      6D656F75 
 10662      7400
 10663              	.LASF1:
 10664 022b 756E7369 		.ascii	"unsigned char\000"
 10664      676E6564 
 10664      20636861 
 10664      7200
 10665              	.LASF0:
 10666 0239 7369676E 		.ascii	"signed char\000"
 10666      65642063 
 10666      68617200 
 10667              	.LASF7:
 10668 0245 6C6F6E67 		.ascii	"long long unsigned int\000"
 10668      206C6F6E 
 10668      6720756E 
 10668      7369676E 
 10668      65642069 
 10669              	.LASF45:
 10670 025c 56444143 		.ascii	"VDAC0_Control\000"
 10670      305F436F 
 10670      6E74726F 
 10670      6C00
 10671              	.LASF8:
 10672 026a 756E7369 		.ascii	"unsigned int\000"
 10672      676E6564 
 10672      20696E74 
 10672      00
 10673              	.LASF46:
 10674 0277 49444143 		.ascii	"IDAC0_Control\000"
 10674      305F436F 
 10674      6E74726F 
 10674      6C00
 10675              	.LASF69:
 10676 0285 72656164 		.ascii	"read_timeout\000"
 10676      5F74696D 
 10676      656F7574 
 10676      00
 10677              	.LASF49:
 10678 0292 53515541 		.ascii	"SQUAREWave\000"
 10678      52455761 
 10678      766500
 10679              	.LASF3:
 10680 029d 73686F72 		.ascii	"short unsigned int\000"
 10680      7420756E 
 10680      7369676E 
 10680      65642069 
 10680      6E7400
 10681              	.LASF80:
 10682 02b0 433A5C55 		.ascii	"C:\\Users\\Robert\\workspace\\embedit\\linx\\PSoC_2"
 10682      73657273 
 10682      5C526F62 
 10682      6572745C 
 10682      776F726B 
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cc7rr7YM.s 			page 261


 10683 02dd 5F50692D 		.ascii	"_Pi-000.Bundle01\\PSoC_2_Pi-000.Bundle01\\PSoC_2_Pi"
 10683      3030302E 
 10683      42756E64 
 10683      6C653031 
 10683      5C50536F 
 10684 030e 2E637964 		.ascii	".cydsn\000"
 10684      736E00
 10685              	.LASF4:
 10686 0315 6C6F6E67 		.ascii	"long int\000"
 10686      20696E74 
 10686      00
 10687              	.LASF71:
 10688 031e 74657374 		.ascii	"test_read\000"
 10688      5F726561 
 10688      6400
 10689              	.LASF10:
 10690 0328 696E7433 		.ascii	"int32_t\000"
 10690      325F7400 
 10691              	.LASF31:
 10692 0330 5F426F6F 		.ascii	"_Bool\000"
 10692      6C00
 10693              	.LASF22:
 10694 0336 74726967 		.ascii	"trigpin\000"
 10694      70696E00 
 10695              	.LASF48:
 10696 033e 53494E45 		.ascii	"SINEWave\000"
 10696      57617665 
 10696      00
 10697              	.LASF34:
 10698 0347 504F5254 		.ascii	"PORT0\000"
 10698      3000
 10699              	.LASF20:
 10700 034d 706F7274 		.ascii	"port\000"
 10700      00
 10701              	.LASF27:
 10702 0352 76657373 		.ascii	"vessel_type\000"
 10702      656C5F74 
 10702      79706500 
 10703              	.LASF36:
 10704 035e 504F5254 		.ascii	"PORT3\000"
 10704      3300
 10705              	.LASF37:
 10706 0364 504F5254 		.ascii	"PORT4\000"
 10706      3400
 10707              	.LASF38:
 10708 036a 504F5254 		.ascii	"PORT5\000"
 10708      3500
 10709              	.LASF39:
 10710 0370 504F5254 		.ascii	"PORT6\000"
 10710      3600
 10711              	.LASF30:
 10712 0376 72657475 		.ascii	"return_flag\000"
 10712      726E5F66 
 10712      6C616700 
 10713              	.LASF13:
 10714 0382 75696E74 		.ascii	"uint32\000"
 10714      333200
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cc7rr7YM.s 			page 262


 10715              	.LASF17:
 10716 0389 72656738 		.ascii	"reg8\000"
 10716      00
 10717              	.LASF5:
 10718 038e 6C6F6E67 		.ascii	"long unsigned int\000"
 10718      20756E73 
 10718      69676E65 
 10718      6420696E 
 10718      7400
 10719              	.LASF15:
 10720 03a0 646F7562 		.ascii	"double\000"
 10720      6C6500
 10721              	.LASF25:
 10722 03a7 64656C61 		.ascii	"delayus\000"
 10722      79757300 
 10723              	.LASF50:
 10724 03af 54524941 		.ascii	"TRIANGLEWave\000"
 10724      4E474C45 
 10724      57617665 
 10724      00
 10725              	.LASF28:
 10726 03bc 76657373 		.ascii	"vessel\000"
 10726      656C00
 10727              	.LASF9:
 10728 03c3 5F5F696E 		.ascii	"__int32_t\000"
 10728      7433325F 
 10728      7400
 10729              	.LASF21:
 10730 03cd 74726967 		.ascii	"trigport\000"
 10730      706F7274 
 10730      00
 10731              	.LASF18:
 10732 03d6 73697A65 		.ascii	"sizetype\000"
 10732      74797065 
 10732      00
 10733              	.LASF24:
 10734 03df 636F6C75 		.ascii	"column\000"
 10734      6D6E00
 10735              	.LASF68:
 10736 03e6 75735F63 		.ascii	"us_count\000"
 10736      6F756E74 
 10736      00
 10737              	.LASF82:
 10738 03ef 49544D5F 		.ascii	"ITM_RxBuffer\000"
 10738      52784275 
 10738      66666572 
 10738      00
 10739              	.LASF52:
 10740 03fc 6E657757 		.ascii	"newWave\000"
 10740      61766500 
 10741              	.LASF61:
 10742 0404 50574D5F 		.ascii	"PWM_Control_7\000"
 10742      436F6E74 
 10742      726F6C5F 
 10742      3700
 10743              	.LASF76:
 10744 0412 4E656F50 		.ascii	"NeoPixel_DrawColumn\000"
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cc7rr7YM.s 			page 263


 10744      6978656C 
 10744      5F447261 
 10744      77436F6C 
 10744      756D6E00 
 10745              	.LASF72:
 10746 0426 53747269 		.ascii	"StripLightsControl\000"
 10746      704C6967 
 10746      68747343 
 10746      6F6E7472 
 10746      6F6C00
 10747              	.LASF67:
 10748 0439 74696D65 		.ascii	"timeout\000"
 10748      6F757400 
 10749              	.LASF77:
 10750 0441 5365744E 		.ascii	"SetNeoPixel\000"
 10750      656F5069 
 10750      78656C00 
 10751              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
